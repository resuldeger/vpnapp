{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./AxiosError.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":41,"index":56}}],"key":"Wp+hM5tr1USJ5BPzBfyeAqWqbkk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = settle;\n  var _AxiosError = _interopRequireDefault(require(_dependencyMap[1], \"./AxiosError.js\"));\n  /**\n   * Resolve or reject a Promise based on response status.\n   *\n   * @param {Function} resolve A function that resolves the promise.\n   * @param {Function} reject A function that rejects the promise.\n   * @param {object} response The response.\n   *\n   * @returns {object} The response.\n   */\n  function settle(resolve, reject, response) {\n    const validateStatus = response.config.validateStatus;\n    if (!response.status || !validateStatus || validateStatus(response.status)) {\n      resolve(response);\n    } else {\n      reject(new _AxiosError.default('Request failed with status code ' + response.status, [_AxiosError.default.ERR_BAD_REQUEST, _AxiosError.default.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4], response.config, response.request, response));\n    }\n  }\n});","lineCount":27,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[8,20,1,13,"settle"],[8,26,1,13],[9,2,3,0],[9,6,3,0,"_AxiosError"],[9,17,3,0],[9,20,3,0,"_interopRequireDefault"],[9,42,3,0],[9,43,3,0,"require"],[9,50,3,0],[9,51,3,0,"_dependencyMap"],[9,65,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,2,14,15],[19,11,14,24,"settle"],[19,17,14,30,"settle"],[19,18,14,31,"resolve"],[19,25,14,38],[19,27,14,40,"reject"],[19,33,14,46],[19,35,14,48,"response"],[19,43,14,56],[19,45,14,58],[20,4,15,2],[20,10,15,8,"validateStatus"],[20,24,15,22],[20,27,15,25,"response"],[20,35,15,33],[20,36,15,34,"config"],[20,42,15,40],[20,43,15,41,"validateStatus"],[20,57,15,55],[21,4,16,2],[21,8,16,6],[21,9,16,7,"response"],[21,17,16,15],[21,18,16,16,"status"],[21,24,16,22],[21,28,16,26],[21,29,16,27,"validateStatus"],[21,43,16,41],[21,47,16,45,"validateStatus"],[21,61,16,59],[21,62,16,60,"response"],[21,70,16,68],[21,71,16,69,"status"],[21,77,16,75],[21,78,16,76],[21,80,16,78],[22,6,17,4,"resolve"],[22,13,17,11],[22,14,17,12,"response"],[22,22,17,20],[22,23,17,21],[23,4,18,2],[23,5,18,3],[23,11,18,9],[24,6,19,4,"reject"],[24,12,19,10],[24,13,19,11],[24,17,19,15,"AxiosError"],[24,36,19,25],[24,37,20,6],[24,71,20,40],[24,74,20,43,"response"],[24,82,20,51],[24,83,20,52,"status"],[24,89,20,58],[24,91,21,6],[24,92,21,7,"AxiosError"],[24,111,21,17],[24,112,21,18,"ERR_BAD_REQUEST"],[24,127,21,33],[24,129,21,35,"AxiosError"],[24,148,21,45],[24,149,21,46,"ERR_BAD_RESPONSE"],[24,165,21,62],[24,166,21,63],[24,167,21,64,"Math"],[24,171,21,68],[24,172,21,69,"floor"],[24,177,21,74],[24,178,21,75,"response"],[24,186,21,83],[24,187,21,84,"status"],[24,193,21,90],[24,196,21,93],[24,199,21,96],[24,200,21,97],[24,203,21,100],[24,204,21,101],[24,205,21,102],[24,207,22,6,"response"],[24,215,22,14],[24,216,22,15,"config"],[24,222,22,21],[24,224,23,6,"response"],[24,232,23,14],[24,233,23,15,"request"],[24,240,23,22],[24,242,24,6,"response"],[24,250,25,4],[24,251,25,5],[24,252,25,6],[25,4,26,2],[26,2,27,0],[27,0,27,1],[27,3]],"functionMap":{"names":["<global>","settle"],"mappings":"AAA;eCa;CDa"}},"type":"js/module"}]}