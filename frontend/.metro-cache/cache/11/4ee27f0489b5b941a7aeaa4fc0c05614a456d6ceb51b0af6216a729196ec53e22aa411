{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"]}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":26,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useVPNStore = void 0;\n  var _env2 = require(_dependencyMap[1], \"expo/virtual/env\");\n  var _zustand = require(_dependencyMap[2], \"zustand\");\n  var _axios = _interopRequireDefault(require(_dependencyMap[3], \"axios\"));\n  const API_BASE_URL = _env2.env.EXPO_PUBLIC_BACKEND_URL + '/api';\n  const useVPNStore = exports.useVPNStore = (0, _zustand.create)((set, get) => ({\n    isConnected: false,\n    connectionStatus: 'disconnected',\n    selectedServer: null,\n    servers: [],\n    isLoadingServers: false,\n    connect: () => {\n      const {\n        selectedServer\n      } = get();\n      if (!selectedServer) return;\n      set({\n        connectionStatus: 'connecting'\n      });\n\n      // Simulate connection process\n      setTimeout(() => {\n        set({\n          isConnected: true,\n          connectionStatus: 'connected'\n        });\n      }, 2000);\n    },\n    disconnect: () => {\n      set({\n        connectionStatus: 'disconnecting'\n      });\n\n      // Simulate disconnection process\n      setTimeout(() => {\n        set({\n          isConnected: false,\n          connectionStatus: 'disconnected'\n        });\n      }, 1000);\n    },\n    selectServer: server => {\n      set({\n        selectedServer: server\n      });\n    },\n    fetchServers: async () => {\n      try {\n        set({\n          isLoadingServers: true\n        });\n\n        // Try guest endpoint first (no auth required), then fall back to authenticated endpoint\n        let response;\n        try {\n          response = await _axios.default.get(`${API_BASE_URL}/proxies/guest`);\n        } catch (error) {\n          // If guest endpoint fails, try authenticated endpoint\n          response = await _axios.default.get(`${API_BASE_URL}/proxies`);\n        }\n        const servers = response.data;\n        set({\n          servers,\n          isLoadingServers: false\n        });\n\n        // Auto-select first server if none selected\n        const {\n          selectedServer\n        } = get();\n        if (!selectedServer && servers.length > 0) {\n          set({\n            selectedServer: servers[0]\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch servers:', error);\n        set({\n          isLoadingServers: false\n        });\n      }\n    }\n  }));\n});","lineCount":89,"map":[[8,2,1,0],[8,6,1,0,"_zustand"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,2,0],[9,6,2,0,"_axios"],[9,12,2,0],[9,15,2,0,"_interopRequireDefault"],[9,37,2,0],[9,38,2,0,"require"],[9,45,2,0],[9,46,2,0,"_dependencyMap"],[9,60,2,0],[10,2,4,0],[10,8,4,6,"API_BASE_URL"],[10,20,4,18],[10,23,4,21,"_env2"],[10,28,4,21],[10,29,4,21,"env"],[10,32,4,21],[10,33,4,21,"EXPO_PUBLIC_BACKEND_URL"],[10,56,4,21],[10,59,4,59],[10,65,4,65],[11,2,35,7],[11,8,35,13,"useVPNStore"],[11,19,35,24],[11,22,35,24,"exports"],[11,29,35,24],[11,30,35,24,"useVPNStore"],[11,41,35,24],[11,44,35,27],[11,48,35,27,"create"],[11,63,35,33],[11,65,35,44],[11,66,35,45,"set"],[11,69,35,48],[11,71,35,50,"get"],[11,74,35,53],[11,80,35,59],[12,4,36,2,"isConnected"],[12,15,36,13],[12,17,36,15],[12,22,36,20],[13,4,37,2,"connectionStatus"],[13,20,37,18],[13,22,37,20],[13,36,37,34],[14,4,38,2,"selectedServer"],[14,18,38,16],[14,20,38,18],[14,24,38,22],[15,4,39,2,"servers"],[15,11,39,9],[15,13,39,11],[15,15,39,13],[16,4,40,2,"isLoadingServers"],[16,20,40,18],[16,22,40,20],[16,27,40,25],[17,4,42,2,"connect"],[17,11,42,9],[17,13,42,11,"connect"],[17,14,42,11],[17,19,42,17],[18,6,43,4],[18,12,43,10],[19,8,43,12,"selectedServer"],[20,6,43,27],[20,7,43,28],[20,10,43,31,"get"],[20,13,43,34],[20,14,43,35],[20,15,43,36],[21,6,44,4],[21,10,44,8],[21,11,44,9,"selectedServer"],[21,25,44,23],[21,27,44,25],[22,6,46,4,"set"],[22,9,46,7],[22,10,46,8],[23,8,46,10,"connectionStatus"],[23,24,46,26],[23,26,46,28],[24,6,46,41],[24,7,46,42],[24,8,46,43],[26,6,48,4],[27,6,49,4,"setTimeout"],[27,16,49,14],[27,17,49,15],[27,23,49,21],[28,8,50,6,"set"],[28,11,50,9],[28,12,50,10],[29,10,51,8,"isConnected"],[29,21,51,19],[29,23,51,21],[29,27,51,25],[30,10,52,8,"connectionStatus"],[30,26,52,24],[30,28,52,26],[31,8,53,6],[31,9,53,7],[31,10,53,8],[32,6,54,4],[32,7,54,5],[32,9,54,7],[32,13,54,11],[32,14,54,12],[33,4,55,2],[33,5,55,3],[34,4,57,2,"disconnect"],[34,14,57,12],[34,16,57,14,"disconnect"],[34,17,57,14],[34,22,57,20],[35,6,58,4,"set"],[35,9,58,7],[35,10,58,8],[36,8,58,10,"connectionStatus"],[36,24,58,26],[36,26,58,28],[37,6,58,44],[37,7,58,45],[37,8,58,46],[39,6,60,4],[40,6,61,4,"setTimeout"],[40,16,61,14],[40,17,61,15],[40,23,61,21],[41,8,62,6,"set"],[41,11,62,9],[41,12,62,10],[42,10,63,8,"isConnected"],[42,21,63,19],[42,23,63,21],[42,28,63,26],[43,10,64,8,"connectionStatus"],[43,26,64,24],[43,28,64,26],[44,8,65,6],[44,9,65,7],[44,10,65,8],[45,6,66,4],[45,7,66,5],[45,9,66,7],[45,13,66,11],[45,14,66,12],[46,4,67,2],[46,5,67,3],[47,4,69,2,"selectServer"],[47,16,69,14],[47,18,69,17,"server"],[47,24,69,36],[47,28,69,41],[48,6,70,4,"set"],[48,9,70,7],[48,10,70,8],[49,8,70,10,"selectedServer"],[49,22,70,24],[49,24,70,26,"server"],[50,6,70,33],[50,7,70,34],[50,8,70,35],[51,4,71,2],[51,5,71,3],[52,4,73,2,"fetchServers"],[52,16,73,14],[52,18,73,16],[52,24,73,16,"fetchServers"],[52,25,73,16],[52,30,73,28],[53,6,74,4],[53,10,74,8],[54,8,75,6,"set"],[54,11,75,9],[54,12,75,10],[55,10,75,12,"isLoadingServers"],[55,26,75,28],[55,28,75,30],[56,8,75,35],[56,9,75,36],[56,10,75,37],[58,8,77,6],[59,8,78,6],[59,12,78,10,"response"],[59,20,78,18],[60,8,79,6],[60,12,79,10],[61,10,80,8,"response"],[61,18,80,16],[61,21,80,19],[61,27,80,25,"axios"],[61,41,80,30],[61,42,80,31,"get"],[61,45,80,34],[61,46,80,35],[61,49,80,38,"API_BASE_URL"],[61,61,80,50],[61,77,80,66],[61,78,80,67],[62,8,81,6],[62,9,81,7],[62,10,81,8],[62,17,81,15,"error"],[62,22,81,20],[62,24,81,22],[63,10,82,8],[64,10,83,8,"response"],[64,18,83,16],[64,21,83,19],[64,27,83,25,"axios"],[64,41,83,30],[64,42,83,31,"get"],[64,45,83,34],[64,46,83,35],[64,49,83,38,"API_BASE_URL"],[64,61,83,50],[64,71,83,60],[64,72,83,61],[65,8,84,6],[66,8,86,6],[66,14,86,12,"servers"],[66,21,86,19],[66,24,86,22,"response"],[66,32,86,30],[66,33,86,31,"data"],[66,37,86,35],[67,8,88,6,"set"],[67,11,88,9],[67,12,88,10],[68,10,89,8,"servers"],[68,17,89,15],[69,10,90,8,"isLoadingServers"],[69,26,90,24],[69,28,90,26],[70,8,91,6],[70,9,91,7],[70,10,91,8],[72,8,93,6],[73,8,94,6],[73,14,94,12],[74,10,94,14,"selectedServer"],[75,8,94,29],[75,9,94,30],[75,12,94,33,"get"],[75,15,94,36],[75,16,94,37],[75,17,94,38],[76,8,95,6],[76,12,95,10],[76,13,95,11,"selectedServer"],[76,27,95,25],[76,31,95,29,"servers"],[76,38,95,36],[76,39,95,37,"length"],[76,45,95,43],[76,48,95,46],[76,49,95,47],[76,51,95,49],[77,10,96,8,"set"],[77,13,96,11],[77,14,96,12],[78,12,96,14,"selectedServer"],[78,26,96,28],[78,28,96,30,"servers"],[78,35,96,37],[78,36,96,38],[78,37,96,39],[79,10,96,41],[79,11,96,42],[79,12,96,43],[80,8,97,6],[81,6,98,4],[81,7,98,5],[81,8,98,6],[81,15,98,13,"error"],[81,20,98,18],[81,22,98,20],[82,8,99,6,"console"],[82,15,99,13],[82,16,99,14,"error"],[82,21,99,19],[82,22,99,20],[82,48,99,46],[82,50,99,48,"error"],[82,55,99,53],[82,56,99,54],[83,8,100,6,"set"],[83,11,100,9],[83,12,100,10],[84,10,100,12,"isLoadingServers"],[84,26,100,28],[84,28,100,30],[85,8,100,36],[85,9,100,37],[85,10,100,38],[86,6,101,4],[87,4,102,2],[88,2,103,0],[88,3,103,1],[88,4,103,2],[88,5,103,3],[89,0,103,4],[89,3]],"functionMap":{"names":["<global>","create$argument_0","connect","setTimeout$argument_0","disconnect","selectServer","fetchServers"],"mappings":"AAA;4CCkC;WCO;eCO;KDK;GDC;cGE;eDI;KCK;GHC;gBIE;GJE;gBKE;GL6B;EDC"}},"type":"js/module"}]}