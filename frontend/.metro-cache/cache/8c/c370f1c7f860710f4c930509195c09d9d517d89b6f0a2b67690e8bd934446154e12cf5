{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"html-parse-stringify","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":40,"index":129}}],"key":"Dz5mG5jCySHyZi3eazCTCPjnQDg=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":64,"index":194}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}},{"name":"./defaults.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":195},"end":{"line":4,"column":44,"index":239}}],"key":"XCWKIxVkGmzpUvwhJx9c42EufEI=","exportNames":["*"]}},{"name":"./i18nInstance.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":240},"end":{"line":5,"column":44,"index":284}}],"key":"2DjoKlYcMulm3L6r09aRNQJwnCE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Trans = Trans;\n  exports.nodesToString = void 0;\n  var _react = require(_dependencyMap[1], \"react\");\n  var _htmlParseStringify = _interopRequireDefault(require(_dependencyMap[2], \"html-parse-stringify\"));\n  var _utils = require(_dependencyMap[3], \"./utils.js\");\n  var _defaults = require(_dependencyMap[4], \"./defaults.js\");\n  var _i18nInstance = require(_dependencyMap[5], \"./i18nInstance.js\");\n  const hasChildren = (node, checkLength) => {\n    if (!node) return false;\n    const base = node.props?.children ?? node.children;\n    if (checkLength) return base.length > 0;\n    return !!base;\n  };\n  const getChildren = node => {\n    if (!node) return [];\n    const children = node.props?.children ?? node.children;\n    return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n  };\n  const hasValidReactChildren = children => Array.isArray(children) && children.every(_react.isValidElement);\n  const getAsArray = data => Array.isArray(data) ? data : [data];\n  const mergeProps = (source, target) => {\n    const newTarget = {\n      ...target\n    };\n    newTarget.props = Object.assign(source.props, target.props);\n    return newTarget;\n  };\n  const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n    if (!children) return '';\n    let stringNode = '';\n    const childrenArray = getAsArray(children);\n    const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n    childrenArray.forEach((child, childIndex) => {\n      if ((0, _utils.isString)(child)) {\n        stringNode += `${child}`;\n        return;\n      }\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) {\n        const {\n          props,\n          type\n        } = child;\n        const childPropsCount = Object.keys(props).length;\n        const shouldKeepChild = keepArray.indexOf(type) > -1;\n        const childChildren = props.children;\n        if (!childChildren && shouldKeepChild && !childPropsCount) {\n          stringNode += `<${type}/>`;\n          return;\n        }\n        if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n          stringNode += `<${childIndex}></${childIndex}>`;\n          return;\n        }\n        if (shouldKeepChild && childPropsCount === 1 && (0, _utils.isString)(childChildren)) {\n          stringNode += `<${type}>${childChildren}</${type}>`;\n          return;\n        }\n        const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n        return;\n      }\n      if (child === null) {\n        (0, _utils.warn)(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n          i18nKey\n        });\n        return;\n      }\n      if ((0, _utils.isObject)(child)) {\n        const {\n          format,\n          ...clone\n        } = child;\n        const keys = Object.keys(clone);\n        if (keys.length === 1) {\n          const value = format ? `${keys[0]}, ${format}` : keys[0];\n          stringNode += `{{${value}}}`;\n          return;\n        }\n        (0, _utils.warn)(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n          i18nKey,\n          child\n        });\n        return;\n      }\n      (0, _utils.warn)(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n        i18nKey,\n        child\n      });\n    });\n    return stringNode;\n  };\n  exports.nodesToString = nodesToString;\n  const renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n    if (targetString === '') return [];\n    const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n    const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n    if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n    const data = knownComponentsMap ?? {};\n    const getData = childs => {\n      const childrenArray = getAsArray(childs);\n      childrenArray.forEach(child => {\n        if ((0, _utils.isString)(child)) return;\n        if (hasChildren(child)) getData(getChildren(child));else if ((0, _utils.isObject)(child) && ! /*#__PURE__*/(0, _react.isValidElement)(child)) Object.assign(data, child);\n      });\n    };\n    getData(children);\n    const ast = _htmlParseStringify.default.parse(`<0>${targetString}</0>`);\n    const opts = {\n      ...data,\n      ...combinedTOpts\n    };\n    const renderInner = (child, node, rootReactNode) => {\n      const childs = getChildren(child);\n      const mappedChildren = mapAST(childs, node.children, rootReactNode);\n      return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n    };\n    const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n      if (child.dummy) {\n        child.children = inner;\n        mem.push(/*#__PURE__*/(0, _react.cloneElement)(child, {\n          key: i\n        }, isVoid ? undefined : inner));\n      } else {\n        mem.push(..._react.Children.map([child], c => {\n          const props = {\n            ...c.props\n          };\n          delete props.i18nIsDynamicList;\n          return /*#__PURE__*/(0, _react.createElement)(c.type, {\n            ...props,\n            key: i,\n            ref: c.props.ref ?? c.ref\n          }, isVoid ? null : inner);\n        }));\n      }\n    };\n    const mapAST = (reactNode, astNode, rootReactNode) => {\n      const reactNodes = getAsArray(reactNode);\n      const astNodes = getAsArray(astNode);\n      return astNodes.reduce((mem, node, i) => {\n        const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n        if (node.type === 'tag') {\n          let tmp = reactNodes[parseInt(node.name, 10)];\n          if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n          if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n          if (!tmp) tmp = {};\n          const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n            props: node.attrs\n          }, tmp) : tmp;\n          const isElement = /*#__PURE__*/(0, _react.isValidElement)(child);\n          const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n          const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0, _utils.isObject)(child) && child.dummy && !isElement;\n          const isKnownComponent = (0, _utils.isObject)(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n          if ((0, _utils.isString)(child)) {\n            const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n            mem.push(value);\n          } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (Number.isNaN(parseFloat(node.name))) {\n            if (isKnownComponent) {\n              const inner = renderInner(child, node, rootReactNode);\n              pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n            } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n              if (node.voidElement) {\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }));\n              } else {\n                const inner = mapAST(reactNodes, node.children, rootReactNode);\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }, inner));\n              }\n            } else if (node.voidElement) {\n              mem.push(`<${node.name} />`);\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(`<${node.name}>${inner}</${node.name}>`);\n            }\n          } else if ((0, _utils.isObject)(child) && !isElement) {\n            const content = node.children[0] ? translationContent : null;\n            if (content) mem.push(content);\n          } else {\n            pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n          }\n        } else if (node.type === 'text') {\n          const wrapTextNodes = i18nOptions.transWrapTextNodes;\n          const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n          if (wrapTextNodes) {\n            mem.push(/*#__PURE__*/(0, _react.createElement)(wrapTextNodes, {\n              key: `${node.name}-${i}`\n            }, content));\n          } else {\n            mem.push(content);\n          }\n        }\n        return mem;\n      }, []);\n    };\n    const result = mapAST([{\n      dummy: true,\n      children: children || []\n    }], ast, getAsArray(children || []));\n    return getChildren(result[0]);\n  };\n  const fixComponentProps = (component, index, translation) => {\n    const componentKey = component.key || index;\n    const comp = /*#__PURE__*/(0, _react.cloneElement)(component, {\n      key: componentKey\n    });\n    if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n      return comp;\n    }\n    function Componentized() {\n      return /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, comp);\n    }\n    return /*#__PURE__*/(0, _react.createElement)(Componentized, {\n      key: componentKey\n    });\n  };\n  const generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\n  const generateObjectComponents = (components, translation) => {\n    const componentMap = {};\n    Object.keys(components).forEach(c => {\n      Object.assign(componentMap, {\n        [c]: fixComponentProps(components[c], c, translation)\n      });\n    });\n    return componentMap;\n  };\n  const generateComponents = (components, translation, i18n, i18nKey) => {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      return generateArrayComponents(components, translation);\n    }\n    if ((0, _utils.isObject)(components)) {\n      return generateObjectComponents(components, translation);\n    }\n    (0, _utils.warnOnce)(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n      i18nKey\n    });\n    return null;\n  };\n  const isComponentsMap = object => {\n    if (!(0, _utils.isObject)(object)) return false;\n    if (Array.isArray(object)) return false;\n    return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n  };\n  function Trans({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  }) {\n    const i18n = i18nFromProps || (0, _i18nInstance.getI18n)();\n    if (!i18n) {\n      (0, _utils.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n        i18nKey\n      });\n      return children;\n    }\n    const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n    const reactI18nextOptions = {\n      ...(0, _defaults.getDefaults)(),\n      ...i18n.options?.react\n    };\n    let namespaces = ns || t.ns || i18n.options?.defaultNS;\n    namespaces = (0, _utils.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n    const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n    const {\n      hashTransKey\n    } = reactI18nextOptions;\n    const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n    if (i18n.options?.interpolation?.defaultVariables) {\n      values = values && Object.keys(values).length > 0 ? {\n        ...values,\n        ...i18n.options.interpolation.defaultVariables\n      } : {\n        ...i18n.options.interpolation.defaultVariables\n      };\n    }\n    const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n      interpolation: {\n        ...tOptions.interpolation,\n        prefix: '#$?',\n        suffix: '?$#'\n      }\n    };\n    const combinedTOpts = {\n      ...tOptions,\n      context: context || tOptions.context,\n      count,\n      ...values,\n      ...interpolationOverride,\n      defaultValue,\n      ns: namespaces\n    };\n    const translation = key ? t(key, combinedTOpts) : defaultValue;\n    const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n    let indexedChildren = generatedComponents || children;\n    let componentsMap = null;\n    if (isComponentsMap(generatedComponents)) {\n      componentsMap = generatedComponents;\n      indexedChildren = children;\n    }\n    const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n    const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n    return useAsParent ? /*#__PURE__*/(0, _react.createElement)(useAsParent, additionalProps, content) : content;\n  }\n});","lineCount":330,"map":[[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_htmlParseStringify"],[9,25,2,0],[9,28,2,0,"_interopRequireDefault"],[9,50,2,0],[9,51,2,0,"require"],[9,58,2,0],[9,59,2,0,"_dependencyMap"],[9,73,2,0],[10,2,3,0],[10,6,3,0,"_utils"],[10,12,3,0],[10,15,3,0,"require"],[10,22,3,0],[10,23,3,0,"_dependencyMap"],[10,37,3,0],[11,2,4,0],[11,6,4,0,"_defaults"],[11,15,4,0],[11,18,4,0,"require"],[11,25,4,0],[11,26,4,0,"_dependencyMap"],[11,40,4,0],[12,2,5,0],[12,6,5,0,"_i18nInstance"],[12,19,5,0],[12,22,5,0,"require"],[12,29,5,0],[12,30,5,0,"_dependencyMap"],[12,44,5,0],[13,2,6,0],[13,8,6,6,"hasChildren"],[13,19,6,17],[13,22,6,20,"hasChildren"],[13,23,6,21,"node"],[13,27,6,25],[13,29,6,27,"checkLength"],[13,40,6,38],[13,45,6,43],[14,4,7,2],[14,8,7,6],[14,9,7,7,"node"],[14,13,7,11],[14,15,7,13],[14,22,7,20],[14,27,7,25],[15,4,8,2],[15,10,8,8,"base"],[15,14,8,12],[15,17,8,15,"node"],[15,21,8,19],[15,22,8,20,"props"],[15,27,8,25],[15,29,8,27,"children"],[15,37,8,35],[15,41,8,39,"node"],[15,45,8,43],[15,46,8,44,"children"],[15,54,8,52],[16,4,9,2],[16,8,9,6,"checkLength"],[16,19,9,17],[16,21,9,19],[16,28,9,26,"base"],[16,32,9,30],[16,33,9,31,"length"],[16,39,9,37],[16,42,9,40],[16,43,9,41],[17,4,10,2],[17,11,10,9],[17,12,10,10],[17,13,10,11,"base"],[17,17,10,15],[18,2,11,0],[18,3,11,1],[19,2,12,0],[19,8,12,6,"getChildren"],[19,19,12,17],[19,22,12,20,"node"],[19,26,12,24],[19,30,12,28],[20,4,13,2],[20,8,13,6],[20,9,13,7,"node"],[20,13,13,11],[20,15,13,13],[20,22,13,20],[20,24,13,22],[21,4,14,2],[21,10,14,8,"children"],[21,18,14,16],[21,21,14,19,"node"],[21,25,14,23],[21,26,14,24,"props"],[21,31,14,29],[21,33,14,31,"children"],[21,41,14,39],[21,45,14,43,"node"],[21,49,14,47],[21,50,14,48,"children"],[21,58,14,56],[22,4,15,2],[22,11,15,9,"node"],[22,15,15,13],[22,16,15,14,"props"],[22,21,15,19],[22,23,15,21,"i18nIsDynamicList"],[22,40,15,38],[22,43,15,41,"getAsArray"],[22,53,15,51],[22,54,15,52,"children"],[22,62,15,60],[22,63,15,61],[22,66,15,64,"children"],[22,74,15,72],[23,2,16,0],[23,3,16,1],[24,2,17,0],[24,8,17,6,"hasValidReactChildren"],[24,29,17,27],[24,32,17,30,"children"],[24,40,17,38],[24,44,17,42,"Array"],[24,49,17,47],[24,50,17,48,"isArray"],[24,57,17,55],[24,58,17,56,"children"],[24,66,17,64],[24,67,17,65],[24,71,17,69,"children"],[24,79,17,77],[24,80,17,78,"every"],[24,85,17,83],[24,86,17,84,"isValidElement"],[24,107,17,98],[24,108,17,99],[25,2,18,0],[25,8,18,6,"getAsArray"],[25,18,18,16],[25,21,18,19,"data"],[25,25,18,23],[25,29,18,27,"Array"],[25,34,18,32],[25,35,18,33,"isArray"],[25,42,18,40],[25,43,18,41,"data"],[25,47,18,45],[25,48,18,46],[25,51,18,49,"data"],[25,55,18,53],[25,58,18,56],[25,59,18,57,"data"],[25,63,18,61],[25,64,18,62],[26,2,19,0],[26,8,19,6,"mergeProps"],[26,18,19,16],[26,21,19,19,"mergeProps"],[26,22,19,20,"source"],[26,28,19,26],[26,30,19,28,"target"],[26,36,19,34],[26,41,19,39],[27,4,20,2],[27,10,20,8,"newTarget"],[27,19,20,17],[27,22,20,20],[28,6,21,4],[28,9,21,7,"target"],[29,4,22,2],[29,5,22,3],[30,4,23,2,"newTarget"],[30,13,23,11],[30,14,23,12,"props"],[30,19,23,17],[30,22,23,20,"Object"],[30,28,23,26],[30,29,23,27,"assign"],[30,35,23,33],[30,36,23,34,"source"],[30,42,23,40],[30,43,23,41,"props"],[30,48,23,46],[30,50,23,48,"target"],[30,56,23,54],[30,57,23,55,"props"],[30,62,23,60],[30,63,23,61],[31,4,24,2],[31,11,24,9,"newTarget"],[31,20,24,18],[32,2,25,0],[32,3,25,1],[33,2,26,7],[33,8,26,13,"nodesToString"],[33,21,26,26],[33,24,26,29,"nodesToString"],[33,25,26,30,"children"],[33,33,26,38],[33,35,26,40,"i18nOptions"],[33,46,26,51],[33,48,26,53,"i18n"],[33,52,26,57],[33,54,26,59,"i18nKey"],[33,61,26,66],[33,66,26,71],[34,4,27,2],[34,8,27,6],[34,9,27,7,"children"],[34,17,27,15],[34,19,27,17],[34,26,27,24],[34,28,27,26],[35,4,28,2],[35,8,28,6,"stringNode"],[35,18,28,16],[35,21,28,19],[35,23,28,21],[36,4,29,2],[36,10,29,8,"childrenArray"],[36,23,29,21],[36,26,29,24,"getAsArray"],[36,36,29,34],[36,37,29,35,"children"],[36,45,29,43],[36,46,29,44],[37,4,30,2],[37,10,30,8,"keepArray"],[37,19,30,17],[37,22,30,20,"i18nOptions"],[37,33,30,31],[37,35,30,33,"transSupportBasicHtmlNodes"],[37,61,30,59],[37,64,30,62,"i18nOptions"],[37,75,30,73],[37,76,30,74,"transKeepBasicHtmlNodesFor"],[37,102,30,100],[37,106,30,104],[37,108,30,106],[37,111,30,109],[37,113,30,111],[38,4,31,2,"childrenArray"],[38,17,31,15],[38,18,31,16,"forEach"],[38,25,31,23],[38,26,31,24],[38,27,31,25,"child"],[38,32,31,30],[38,34,31,32,"childIndex"],[38,44,31,42],[38,49,31,47],[39,6,32,4],[39,10,32,8],[39,14,32,8,"isString"],[39,29,32,16],[39,31,32,17,"child"],[39,36,32,22],[39,37,32,23],[39,39,32,25],[40,8,33,6,"stringNode"],[40,18,33,16],[40,22,33,20],[40,25,33,23,"child"],[40,30,33,28],[40,32,33,30],[41,8,34,6],[42,6,35,4],[43,6,36,4],[43,23,36,8],[43,27,36,8,"isValidElement"],[43,48,36,22],[43,50,36,23,"child"],[43,55,36,28],[43,56,36,29],[43,58,36,31],[44,8,37,6],[44,14,37,12],[45,10,38,8,"props"],[45,15,38,13],[46,10,39,8,"type"],[47,8,40,6],[47,9,40,7],[47,12,40,10,"child"],[47,17,40,15],[48,8,41,6],[48,14,41,12,"childPropsCount"],[48,29,41,27],[48,32,41,30,"Object"],[48,38,41,36],[48,39,41,37,"keys"],[48,43,41,41],[48,44,41,42,"props"],[48,49,41,47],[48,50,41,48],[48,51,41,49,"length"],[48,57,41,55],[49,8,42,6],[49,14,42,12,"shouldKeepChild"],[49,29,42,27],[49,32,42,30,"keepArray"],[49,41,42,39],[49,42,42,40,"indexOf"],[49,49,42,47],[49,50,42,48,"type"],[49,54,42,52],[49,55,42,53],[49,58,42,56],[49,59,42,57],[49,60,42,58],[50,8,43,6],[50,14,43,12,"childChildren"],[50,27,43,25],[50,30,43,28,"props"],[50,35,43,33],[50,36,43,34,"children"],[50,44,43,42],[51,8,44,6],[51,12,44,10],[51,13,44,11,"childChildren"],[51,26,44,24],[51,30,44,28,"shouldKeepChild"],[51,45,44,43],[51,49,44,47],[51,50,44,48,"childPropsCount"],[51,65,44,63],[51,67,44,65],[52,10,45,8,"stringNode"],[52,20,45,18],[52,24,45,22],[52,28,45,26,"type"],[52,32,45,30],[52,36,45,34],[53,10,46,8],[54,8,47,6],[55,8,48,6],[55,12,48,10],[55,13,48,11,"childChildren"],[55,26,48,24],[55,31,48,29],[55,32,48,30,"shouldKeepChild"],[55,47,48,45],[55,51,48,49,"childPropsCount"],[55,66,48,64],[55,67,48,65],[55,71,48,69,"props"],[55,76,48,74],[55,77,48,75,"i18nIsDynamicList"],[55,94,48,92],[55,96,48,94],[56,10,49,8,"stringNode"],[56,20,49,18],[56,24,49,22],[56,28,49,26,"childIndex"],[56,38,49,36],[56,44,49,42,"childIndex"],[56,54,49,52],[56,57,49,55],[57,10,50,8],[58,8,51,6],[59,8,52,6],[59,12,52,10,"shouldKeepChild"],[59,27,52,25],[59,31,52,29,"childPropsCount"],[59,46,52,44],[59,51,52,49],[59,52,52,50],[59,56,52,54],[59,60,52,54,"isString"],[59,75,52,62],[59,77,52,63,"childChildren"],[59,90,52,76],[59,91,52,77],[59,93,52,79],[60,10,53,8,"stringNode"],[60,20,53,18],[60,24,53,22],[60,28,53,26,"type"],[60,32,53,30],[60,36,53,34,"childChildren"],[60,49,53,47],[60,54,53,52,"type"],[60,58,53,56],[60,61,53,59],[61,10,54,8],[62,8,55,6],[63,8,56,6],[63,14,56,12,"content"],[63,21,56,19],[63,24,56,22,"nodesToString"],[63,37,56,35],[63,38,56,36,"childChildren"],[63,51,56,49],[63,53,56,51,"i18nOptions"],[63,64,56,62],[63,66,56,64,"i18n"],[63,70,56,68],[63,72,56,70,"i18nKey"],[63,79,56,77],[63,80,56,78],[64,8,57,6,"stringNode"],[64,18,57,16],[64,22,57,20],[64,26,57,24,"childIndex"],[64,36,57,34],[64,40,57,38,"content"],[64,47,57,45],[64,52,57,50,"childIndex"],[64,62,57,60],[64,65,57,63],[65,8,58,6],[66,6,59,4],[67,6,60,4],[67,10,60,8,"child"],[67,15,60,13],[67,20,60,18],[67,24,60,22],[67,26,60,24],[68,8,61,6],[68,12,61,6,"warn"],[68,23,61,10],[68,25,61,11,"i18n"],[68,29,61,15],[68,31,61,17],[68,49,61,35],[68,51,61,37],[68,84,61,70],[68,86,61,72],[69,10,62,8,"i18nKey"],[70,8,63,6],[70,9,63,7],[70,10,63,8],[71,8,64,6],[72,6,65,4],[73,6,66,4],[73,10,66,8],[73,14,66,8,"isObject"],[73,29,66,16],[73,31,66,17,"child"],[73,36,66,22],[73,37,66,23],[73,39,66,25],[74,8,67,6],[74,14,67,12],[75,10,68,8,"format"],[75,16,68,14],[76,10,69,8],[76,13,69,11,"clone"],[77,8,70,6],[77,9,70,7],[77,12,70,10,"child"],[77,17,70,15],[78,8,71,6],[78,14,71,12,"keys"],[78,18,71,16],[78,21,71,19,"Object"],[78,27,71,25],[78,28,71,26,"keys"],[78,32,71,30],[78,33,71,31,"clone"],[78,38,71,36],[78,39,71,37],[79,8,72,6],[79,12,72,10,"keys"],[79,16,72,14],[79,17,72,15,"length"],[79,23,72,21],[79,28,72,26],[79,29,72,27],[79,31,72,29],[80,10,73,8],[80,16,73,14,"value"],[80,21,73,19],[80,24,73,22,"format"],[80,30,73,28],[80,33,73,31],[80,36,73,34,"keys"],[80,40,73,38],[80,41,73,39],[80,42,73,40],[80,43,73,41],[80,48,73,46,"format"],[80,54,73,52],[80,56,73,54],[80,59,73,57,"keys"],[80,63,73,61],[80,64,73,62],[80,65,73,63],[80,66,73,64],[81,10,74,8,"stringNode"],[81,20,74,18],[81,24,74,22],[81,29,74,27,"value"],[81,34,74,32],[81,38,74,36],[82,10,75,8],[83,8,76,6],[84,8,77,6],[84,12,77,6,"warn"],[84,23,77,10],[84,25,77,11,"i18n"],[84,29,77,15],[84,31,77,17],[84,50,77,36],[84,52,77,38],[84,140,77,126],[84,142,77,128],[85,10,78,8,"i18nKey"],[85,17,78,15],[86,10,79,8,"child"],[87,8,80,6],[87,9,80,7],[87,10,80,8],[88,8,81,6],[89,6,82,4],[90,6,83,4],[90,10,83,4,"warn"],[90,21,83,8],[90,23,83,9,"i18n"],[90,27,83,13],[90,29,83,15],[90,48,83,34],[90,50,83,36],[90,154,83,140],[90,156,83,142],[91,8,84,6,"i18nKey"],[91,15,84,13],[92,8,85,6,"child"],[93,6,86,4],[93,7,86,5],[93,8,86,6],[94,4,87,2],[94,5,87,3],[94,6,87,4],[95,4,88,2],[95,11,88,9,"stringNode"],[95,21,88,19],[96,2,89,0],[96,3,89,1],[97,2,89,2,"exports"],[97,9,89,2],[97,10,89,2,"nodesToString"],[97,23,89,2],[97,26,89,2,"nodesToString"],[97,39,89,2],[98,2,90,0],[98,8,90,6,"renderNodes"],[98,19,90,17],[98,22,90,20,"renderNodes"],[98,23,90,21,"children"],[98,31,90,29],[98,33,90,31,"knownComponentsMap"],[98,51,90,49],[98,53,90,51,"targetString"],[98,65,90,63],[98,67,90,65,"i18n"],[98,71,90,69],[98,73,90,71,"i18nOptions"],[98,84,90,82],[98,86,90,84,"combinedTOpts"],[98,99,90,97],[98,101,90,99,"shouldUnescape"],[98,115,90,113],[98,120,90,118],[99,4,91,2],[99,8,91,6,"targetString"],[99,20,91,18],[99,25,91,23],[99,27,91,25],[99,29,91,27],[99,36,91,34],[99,38,91,36],[100,4,92,2],[100,10,92,8,"keepArray"],[100,19,92,17],[100,22,92,20,"i18nOptions"],[100,33,92,31],[100,34,92,32,"transKeepBasicHtmlNodesFor"],[100,60,92,58],[100,64,92,62],[100,66,92,64],[101,4,93,2],[101,10,93,8,"emptyChildrenButNeedsHandling"],[101,39,93,37],[101,42,93,40,"targetString"],[101,54,93,52],[101,58,93,56],[101,62,93,60,"RegExp"],[101,68,93,66],[101,69,93,67,"keepArray"],[101,78,93,76],[101,79,93,77,"map"],[101,82,93,80],[101,83,93,81,"keep"],[101,87,93,85],[101,91,93,89],[101,95,93,93,"keep"],[101,99,93,97],[101,101,93,99],[101,102,93,100],[101,103,93,101,"join"],[101,107,93,105],[101,108,93,106],[101,111,93,109],[101,112,93,110],[101,113,93,111],[101,114,93,112,"test"],[101,118,93,116],[101,119,93,117,"targetString"],[101,131,93,129],[101,132,93,130],[102,4,94,2],[102,8,94,6],[102,9,94,7,"children"],[102,17,94,15],[102,21,94,19],[102,22,94,20,"knownComponentsMap"],[102,40,94,38],[102,44,94,42],[102,45,94,43,"emptyChildrenButNeedsHandling"],[102,74,94,72],[102,78,94,76],[102,79,94,77,"shouldUnescape"],[102,93,94,91],[102,95,94,93],[102,102,94,100],[102,103,94,101,"targetString"],[102,115,94,113],[102,116,94,114],[103,4,95,2],[103,10,95,8,"data"],[103,14,95,12],[103,17,95,15,"knownComponentsMap"],[103,35,95,33],[103,39,95,37],[103,40,95,38],[103,41,95,39],[104,4,96,2],[104,10,96,8,"getData"],[104,17,96,15],[104,20,96,18,"childs"],[104,26,96,24],[104,30,96,28],[105,6,97,4],[105,12,97,10,"childrenArray"],[105,25,97,23],[105,28,97,26,"getAsArray"],[105,38,97,36],[105,39,97,37,"childs"],[105,45,97,43],[105,46,97,44],[106,6,98,4,"childrenArray"],[106,19,98,17],[106,20,98,18,"forEach"],[106,27,98,25],[106,28,98,26,"child"],[106,33,98,31],[106,37,98,35],[107,8,99,6],[107,12,99,10],[107,16,99,10,"isString"],[107,31,99,18],[107,33,99,19,"child"],[107,38,99,24],[107,39,99,25],[107,41,99,27],[108,8,100,6],[108,12,100,10,"hasChildren"],[108,23,100,21],[108,24,100,22,"child"],[108,29,100,27],[108,30,100,28],[108,32,100,30,"getData"],[108,39,100,37],[108,40,100,38,"getChildren"],[108,51,100,49],[108,52,100,50,"child"],[108,57,100,55],[108,58,100,56],[108,59,100,57],[108,60,100,58],[108,65,100,63],[108,69,100,67],[108,73,100,67,"isObject"],[108,88,100,75],[108,90,100,76,"child"],[108,95,100,81],[108,96,100,82],[108,100,100,86],[108,115,100,87],[108,119,100,87,"isValidElement"],[108,140,100,101],[108,142,100,102,"child"],[108,147,100,107],[108,148,100,108],[108,150,100,110,"Object"],[108,156,100,116],[108,157,100,117,"assign"],[108,163,100,123],[108,164,100,124,"data"],[108,168,100,128],[108,170,100,130,"child"],[108,175,100,135],[108,176,100,136],[109,6,101,4],[109,7,101,5],[109,8,101,6],[110,4,102,2],[110,5,102,3],[111,4,103,2,"getData"],[111,11,103,9],[111,12,103,10,"children"],[111,20,103,18],[111,21,103,19],[112,4,104,2],[112,10,104,8,"ast"],[112,13,104,11],[112,16,104,14,"HTML"],[112,43,104,18],[112,44,104,19,"parse"],[112,49,104,24],[112,50,104,25],[112,56,104,31,"targetString"],[112,68,104,43],[112,74,104,49],[112,75,104,50],[113,4,105,2],[113,10,105,8,"opts"],[113,14,105,12],[113,17,105,15],[114,6,106,4],[114,9,106,7,"data"],[114,13,106,11],[115,6,107,4],[115,9,107,7,"combinedTOpts"],[116,4,108,2],[116,5,108,3],[117,4,109,2],[117,10,109,8,"renderInner"],[117,21,109,19],[117,24,109,22,"renderInner"],[117,25,109,23,"child"],[117,30,109,28],[117,32,109,30,"node"],[117,36,109,34],[117,38,109,36,"rootReactNode"],[117,51,109,49],[117,56,109,54],[118,6,110,4],[118,12,110,10,"childs"],[118,18,110,16],[118,21,110,19,"getChildren"],[118,32,110,30],[118,33,110,31,"child"],[118,38,110,36],[118,39,110,37],[119,6,111,4],[119,12,111,10,"mappedChildren"],[119,26,111,24],[119,29,111,27,"mapAST"],[119,35,111,33],[119,36,111,34,"childs"],[119,42,111,40],[119,44,111,42,"node"],[119,48,111,46],[119,49,111,47,"children"],[119,57,111,55],[119,59,111,57,"rootReactNode"],[119,72,111,70],[119,73,111,71],[120,6,112,4],[120,13,112,11,"hasValidReactChildren"],[120,34,112,32],[120,35,112,33,"childs"],[120,41,112,39],[120,42,112,40],[120,46,112,44,"mappedChildren"],[120,60,112,58],[120,61,112,59,"length"],[120,67,112,65],[120,72,112,70],[120,73,112,71],[120,77,112,75,"child"],[120,82,112,80],[120,83,112,81,"props"],[120,88,112,86],[120,90,112,88,"i18nIsDynamicList"],[120,107,112,105],[120,110,112,108,"childs"],[120,116,112,114],[120,119,112,117,"mappedChildren"],[120,133,112,131],[121,4,113,2],[121,5,113,3],[122,4,114,2],[122,10,114,8,"pushTranslatedJSX"],[122,27,114,25],[122,30,114,28,"pushTranslatedJSX"],[122,31,114,29,"child"],[122,36,114,34],[122,38,114,36,"inner"],[122,43,114,41],[122,45,114,43,"mem"],[122,48,114,46],[122,50,114,48,"i"],[122,51,114,49],[122,53,114,51,"isVoid"],[122,59,114,57],[122,64,114,62],[123,6,115,4],[123,10,115,8,"child"],[123,15,115,13],[123,16,115,14,"dummy"],[123,21,115,19],[123,23,115,21],[124,8,116,6,"child"],[124,13,116,11],[124,14,116,12,"children"],[124,22,116,20],[124,25,116,23,"inner"],[124,30,116,28],[125,8,117,6,"mem"],[125,11,117,9],[125,12,117,10,"push"],[125,16,117,14],[125,30,117,15],[125,34,117,15,"cloneElement"],[125,53,117,27],[125,55,117,28,"child"],[125,60,117,33],[125,62,117,35],[126,10,118,8,"key"],[126,13,118,11],[126,15,118,13,"i"],[127,8,119,6],[127,9,119,7],[127,11,119,9,"isVoid"],[127,17,119,15],[127,20,119,18,"undefined"],[127,29,119,27],[127,32,119,30,"inner"],[127,37,119,35],[127,38,119,36],[127,39,119,37],[128,6,120,4],[128,7,120,5],[128,13,120,11],[129,8,121,6,"mem"],[129,11,121,9],[129,12,121,10,"push"],[129,16,121,14],[129,17,121,15],[129,20,121,18,"Children"],[129,35,121,26],[129,36,121,27,"map"],[129,39,121,30],[129,40,121,31],[129,41,121,32,"child"],[129,46,121,37],[129,47,121,38],[129,49,121,40,"c"],[129,50,121,41],[129,54,121,45],[130,10,122,8],[130,16,122,14,"props"],[130,21,122,19],[130,24,122,22],[131,12,123,10],[131,15,123,13,"c"],[131,16,123,14],[131,17,123,15,"props"],[132,10,124,8],[132,11,124,9],[133,10,125,8],[133,17,125,15,"props"],[133,22,125,20],[133,23,125,21,"i18nIsDynamicList"],[133,40,125,38],[134,10,126,8],[134,30,126,15],[134,34,126,15,"createElement"],[134,54,126,28],[134,56,126,29,"c"],[134,57,126,30],[134,58,126,31,"type"],[134,62,126,35],[134,64,126,37],[135,12,127,10],[135,15,127,13,"props"],[135,20,127,18],[136,12,128,10,"key"],[136,15,128,13],[136,17,128,15,"i"],[136,18,128,16],[137,12,129,10,"ref"],[137,15,129,13],[137,17,129,15,"c"],[137,18,129,16],[137,19,129,17,"props"],[137,24,129,22],[137,25,129,23,"ref"],[137,28,129,26],[137,32,129,30,"c"],[137,33,129,31],[137,34,129,32,"ref"],[138,10,130,8],[138,11,130,9],[138,13,130,11,"isVoid"],[138,19,130,17],[138,22,130,20],[138,26,130,24],[138,29,130,27,"inner"],[138,34,130,32],[138,35,130,33],[139,8,131,6],[139,9,131,7],[139,10,131,8],[139,11,131,9],[140,6,132,4],[141,4,133,2],[141,5,133,3],[142,4,134,2],[142,10,134,8,"mapAST"],[142,16,134,14],[142,19,134,17,"mapAST"],[142,20,134,18,"reactNode"],[142,29,134,27],[142,31,134,29,"astNode"],[142,38,134,36],[142,40,134,38,"rootReactNode"],[142,53,134,51],[142,58,134,56],[143,6,135,4],[143,12,135,10,"reactNodes"],[143,22,135,20],[143,25,135,23,"getAsArray"],[143,35,135,33],[143,36,135,34,"reactNode"],[143,45,135,43],[143,46,135,44],[144,6,136,4],[144,12,136,10,"astNodes"],[144,20,136,18],[144,23,136,21,"getAsArray"],[144,33,136,31],[144,34,136,32,"astNode"],[144,41,136,39],[144,42,136,40],[145,6,137,4],[145,13,137,11,"astNodes"],[145,21,137,19],[145,22,137,20,"reduce"],[145,28,137,26],[145,29,137,27],[145,30,137,28,"mem"],[145,33,137,31],[145,35,137,33,"node"],[145,39,137,37],[145,41,137,39,"i"],[145,42,137,40],[145,47,137,45],[146,8,138,6],[146,14,138,12,"translationContent"],[146,32,138,30],[146,35,138,33,"node"],[146,39,138,37],[146,40,138,38,"children"],[146,48,138,46],[146,51,138,49],[146,52,138,50],[146,53,138,51],[146,55,138,53,"content"],[146,62,138,60],[146,66,138,64,"i18n"],[146,70,138,68],[146,71,138,69,"services"],[146,79,138,77],[146,80,138,78,"interpolator"],[146,92,138,90],[146,93,138,91,"interpolate"],[146,104,138,102],[146,105,138,103,"node"],[146,109,138,107],[146,110,138,108,"children"],[146,118,138,116],[146,119,138,117],[146,120,138,118],[146,121,138,119],[146,122,138,120,"content"],[146,129,138,127],[146,131,138,129,"opts"],[146,135,138,133],[146,137,138,135,"i18n"],[146,141,138,139],[146,142,138,140,"language"],[146,150,138,148],[146,151,138,149],[147,8,139,6],[147,12,139,10,"node"],[147,16,139,14],[147,17,139,15,"type"],[147,21,139,19],[147,26,139,24],[147,31,139,29],[147,33,139,31],[148,10,140,8],[148,14,140,12,"tmp"],[148,17,140,15],[148,20,140,18,"reactNodes"],[148,30,140,28],[148,31,140,29,"parseInt"],[148,39,140,37],[148,40,140,38,"node"],[148,44,140,42],[148,45,140,43,"name"],[148,49,140,47],[148,51,140,49],[148,53,140,51],[148,54,140,52],[148,55,140,53],[149,10,141,8],[149,14,141,12],[149,15,141,13,"tmp"],[149,18,141,16],[149,22,141,20,"knownComponentsMap"],[149,40,141,38],[149,42,141,40,"tmp"],[149,45,141,43],[149,48,141,46,"knownComponentsMap"],[149,66,141,64],[149,67,141,65,"node"],[149,71,141,69],[149,72,141,70,"name"],[149,76,141,74],[149,77,141,75],[150,10,142,8],[150,14,142,12,"rootReactNode"],[150,27,142,25],[150,28,142,26,"length"],[150,34,142,32],[150,39,142,37],[150,40,142,38],[150,44,142,42],[150,45,142,43,"tmp"],[150,48,142,46],[150,50,142,48,"tmp"],[150,53,142,51],[150,56,142,54,"rootReactNode"],[150,69,142,67],[150,70,142,68],[150,71,142,69],[150,72,142,70],[150,73,142,71,"node"],[150,77,142,75],[150,78,142,76,"name"],[150,82,142,80],[150,83,142,81],[151,10,143,8],[151,14,143,12],[151,15,143,13,"tmp"],[151,18,143,16],[151,20,143,18,"tmp"],[151,23,143,21],[151,26,143,24],[151,27,143,25],[151,28,143,26],[152,10,144,8],[152,16,144,14,"child"],[152,21,144,19],[152,24,144,22,"Object"],[152,30,144,28],[152,31,144,29,"keys"],[152,35,144,33],[152,36,144,34,"node"],[152,40,144,38],[152,41,144,39,"attrs"],[152,46,144,44],[152,47,144,45],[152,48,144,46,"length"],[152,54,144,52],[152,59,144,57],[152,60,144,58],[152,63,144,61,"mergeProps"],[152,73,144,71],[152,74,144,72],[153,12,145,10,"props"],[153,17,145,15],[153,19,145,17,"node"],[153,23,145,21],[153,24,145,22,"attrs"],[154,10,146,8],[154,11,146,9],[154,13,146,11,"tmp"],[154,16,146,14],[154,17,146,15],[154,20,146,18,"tmp"],[154,23,146,21],[155,10,147,8],[155,16,147,14,"isElement"],[155,25,147,23],[155,41,147,26],[155,45,147,26,"isValidElement"],[155,66,147,40],[155,68,147,41,"child"],[155,73,147,46],[155,74,147,47],[156,10,148,8],[156,16,148,14,"isValidTranslationWithChildren"],[156,46,148,44],[156,49,148,47,"isElement"],[156,58,148,56],[156,62,148,60,"hasChildren"],[156,73,148,71],[156,74,148,72,"node"],[156,78,148,76],[156,80,148,78],[156,84,148,82],[156,85,148,83],[156,89,148,87],[156,90,148,88,"node"],[156,94,148,92],[156,95,148,93,"voidElement"],[156,106,148,104],[157,10,149,8],[157,16,149,14,"isEmptyTransWithHTML"],[157,36,149,34],[157,39,149,37,"emptyChildrenButNeedsHandling"],[157,68,149,66],[157,72,149,70],[157,76,149,70,"isObject"],[157,91,149,78],[157,93,149,79,"child"],[157,98,149,84],[157,99,149,85],[157,103,149,89,"child"],[157,108,149,94],[157,109,149,95,"dummy"],[157,114,149,100],[157,118,149,104],[157,119,149,105,"isElement"],[157,128,149,114],[158,10,150,8],[158,16,150,14,"isKnownComponent"],[158,32,150,30],[158,35,150,33],[158,39,150,33,"isObject"],[158,54,150,41],[158,56,150,42,"knownComponentsMap"],[158,74,150,60],[158,75,150,61],[158,79,150,65,"Object"],[158,85,150,71],[158,86,150,72,"hasOwnProperty"],[158,100,150,86],[158,101,150,87,"call"],[158,105,150,91],[158,106,150,92,"knownComponentsMap"],[158,124,150,110],[158,126,150,112,"node"],[158,130,150,116],[158,131,150,117,"name"],[158,135,150,121],[158,136,150,122],[159,10,151,8],[159,14,151,12],[159,18,151,12,"isString"],[159,33,151,20],[159,35,151,21,"child"],[159,40,151,26],[159,41,151,27],[159,43,151,29],[160,12,152,10],[160,18,152,16,"value"],[160,23,152,21],[160,26,152,24,"i18n"],[160,30,152,28],[160,31,152,29,"services"],[160,39,152,37],[160,40,152,38,"interpolator"],[160,52,152,50],[160,53,152,51,"interpolate"],[160,64,152,62],[160,65,152,63,"child"],[160,70,152,68],[160,72,152,70,"opts"],[160,76,152,74],[160,78,152,76,"i18n"],[160,82,152,80],[160,83,152,81,"language"],[160,91,152,89],[160,92,152,90],[161,12,153,10,"mem"],[161,15,153,13],[161,16,153,14,"push"],[161,20,153,18],[161,21,153,19,"value"],[161,26,153,24],[161,27,153,25],[162,10,154,8],[162,11,154,9],[162,17,154,15],[162,21,154,19,"hasChildren"],[162,32,154,30],[162,33,154,31,"child"],[162,38,154,36],[162,39,154,37],[162,43,154,41,"isValidTranslationWithChildren"],[162,73,154,71],[162,75,154,73],[163,12,155,10],[163,18,155,16,"inner"],[163,23,155,21],[163,26,155,24,"renderInner"],[163,37,155,35],[163,38,155,36,"child"],[163,43,155,41],[163,45,155,43,"node"],[163,49,155,47],[163,51,155,49,"rootReactNode"],[163,64,155,62],[163,65,155,63],[164,12,156,10,"pushTranslatedJSX"],[164,29,156,27],[164,30,156,28,"child"],[164,35,156,33],[164,37,156,35,"inner"],[164,42,156,40],[164,44,156,42,"mem"],[164,47,156,45],[164,49,156,47,"i"],[164,50,156,48],[164,51,156,49],[165,10,157,8],[165,11,157,9],[165,17,157,15],[165,21,157,19,"isEmptyTransWithHTML"],[165,41,157,39],[165,43,157,41],[166,12,158,10],[166,18,158,16,"inner"],[166,23,158,21],[166,26,158,24,"mapAST"],[166,32,158,30],[166,33,158,31,"reactNodes"],[166,43,158,41],[166,45,158,43,"node"],[166,49,158,47],[166,50,158,48,"children"],[166,58,158,56],[166,60,158,58,"rootReactNode"],[166,73,158,71],[166,74,158,72],[167,12,159,10,"pushTranslatedJSX"],[167,29,159,27],[167,30,159,28,"child"],[167,35,159,33],[167,37,159,35,"inner"],[167,42,159,40],[167,44,159,42,"mem"],[167,47,159,45],[167,49,159,47,"i"],[167,50,159,48],[167,51,159,49],[168,10,160,8],[168,11,160,9],[168,17,160,15],[168,21,160,19,"Number"],[168,27,160,25],[168,28,160,26,"isNaN"],[168,33,160,31],[168,34,160,32,"parseFloat"],[168,44,160,42],[168,45,160,43,"node"],[168,49,160,47],[168,50,160,48,"name"],[168,54,160,52],[168,55,160,53],[168,56,160,54],[168,58,160,56],[169,12,161,10],[169,16,161,14,"isKnownComponent"],[169,32,161,30],[169,34,161,32],[170,14,162,12],[170,20,162,18,"inner"],[170,25,162,23],[170,28,162,26,"renderInner"],[170,39,162,37],[170,40,162,38,"child"],[170,45,162,43],[170,47,162,45,"node"],[170,51,162,49],[170,53,162,51,"rootReactNode"],[170,66,162,64],[170,67,162,65],[171,14,163,12,"pushTranslatedJSX"],[171,31,163,29],[171,32,163,30,"child"],[171,37,163,35],[171,39,163,37,"inner"],[171,44,163,42],[171,46,163,44,"mem"],[171,49,163,47],[171,51,163,49,"i"],[171,52,163,50],[171,54,163,52,"node"],[171,58,163,56],[171,59,163,57,"voidElement"],[171,70,163,68],[171,71,163,69],[172,12,164,10],[172,13,164,11],[172,19,164,17],[172,23,164,21,"i18nOptions"],[172,34,164,32],[172,35,164,33,"transSupportBasicHtmlNodes"],[172,61,164,59],[172,65,164,63,"keepArray"],[172,74,164,72],[172,75,164,73,"indexOf"],[172,82,164,80],[172,83,164,81,"node"],[172,87,164,85],[172,88,164,86,"name"],[172,92,164,90],[172,93,164,91],[172,96,164,94],[172,97,164,95],[172,98,164,96],[172,100,164,98],[173,14,165,12],[173,18,165,16,"node"],[173,22,165,20],[173,23,165,21,"voidElement"],[173,34,165,32],[173,36,165,34],[174,16,166,14,"mem"],[174,19,166,17],[174,20,166,18,"push"],[174,24,166,22],[174,38,166,23],[174,42,166,23,"createElement"],[174,62,166,36],[174,64,166,37,"node"],[174,68,166,41],[174,69,166,42,"name"],[174,73,166,46],[174,75,166,48],[175,18,167,16,"key"],[175,21,167,19],[175,23,167,21],[175,26,167,24,"node"],[175,30,167,28],[175,31,167,29,"name"],[175,35,167,33],[175,39,167,37,"i"],[175,40,167,38],[176,16,168,14],[176,17,168,15],[176,18,168,16],[176,19,168,17],[177,14,169,12],[177,15,169,13],[177,21,169,19],[178,16,170,14],[178,22,170,20,"inner"],[178,27,170,25],[178,30,170,28,"mapAST"],[178,36,170,34],[178,37,170,35,"reactNodes"],[178,47,170,45],[178,49,170,47,"node"],[178,53,170,51],[178,54,170,52,"children"],[178,62,170,60],[178,64,170,62,"rootReactNode"],[178,77,170,75],[178,78,170,76],[179,16,171,14,"mem"],[179,19,171,17],[179,20,171,18,"push"],[179,24,171,22],[179,38,171,23],[179,42,171,23,"createElement"],[179,62,171,36],[179,64,171,37,"node"],[179,68,171,41],[179,69,171,42,"name"],[179,73,171,46],[179,75,171,48],[180,18,172,16,"key"],[180,21,172,19],[180,23,172,21],[180,26,172,24,"node"],[180,30,172,28],[180,31,172,29,"name"],[180,35,172,33],[180,39,172,37,"i"],[180,40,172,38],[181,16,173,14],[181,17,173,15],[181,19,173,17,"inner"],[181,24,173,22],[181,25,173,23],[181,26,173,24],[182,14,174,12],[183,12,175,10],[183,13,175,11],[183,19,175,17],[183,23,175,21,"node"],[183,27,175,25],[183,28,175,26,"voidElement"],[183,39,175,37],[183,41,175,39],[184,14,176,12,"mem"],[184,17,176,15],[184,18,176,16,"push"],[184,22,176,20],[184,23,176,21],[184,27,176,25,"node"],[184,31,176,29],[184,32,176,30,"name"],[184,36,176,34],[184,41,176,39],[184,42,176,40],[185,12,177,10],[185,13,177,11],[185,19,177,17],[186,14,178,12],[186,20,178,18,"inner"],[186,25,178,23],[186,28,178,26,"mapAST"],[186,34,178,32],[186,35,178,33,"reactNodes"],[186,45,178,43],[186,47,178,45,"node"],[186,51,178,49],[186,52,178,50,"children"],[186,60,178,58],[186,62,178,60,"rootReactNode"],[186,75,178,73],[186,76,178,74],[187,14,179,12,"mem"],[187,17,179,15],[187,18,179,16,"push"],[187,22,179,20],[187,23,179,21],[187,27,179,25,"node"],[187,31,179,29],[187,32,179,30,"name"],[187,36,179,34],[187,40,179,38,"inner"],[187,45,179,43],[187,50,179,48,"node"],[187,54,179,52],[187,55,179,53,"name"],[187,59,179,57],[187,62,179,60],[187,63,179,61],[188,12,180,10],[189,10,181,8],[189,11,181,9],[189,17,181,15],[189,21,181,19],[189,25,181,19,"isObject"],[189,40,181,27],[189,42,181,28,"child"],[189,47,181,33],[189,48,181,34],[189,52,181,38],[189,53,181,39,"isElement"],[189,62,181,48],[189,64,181,50],[190,12,182,10],[190,18,182,16,"content"],[190,25,182,23],[190,28,182,26,"node"],[190,32,182,30],[190,33,182,31,"children"],[190,41,182,39],[190,42,182,40],[190,43,182,41],[190,44,182,42],[190,47,182,45,"translationContent"],[190,65,182,63],[190,68,182,66],[190,72,182,70],[191,12,183,10],[191,16,183,14,"content"],[191,23,183,21],[191,25,183,23,"mem"],[191,28,183,26],[191,29,183,27,"push"],[191,33,183,31],[191,34,183,32,"content"],[191,41,183,39],[191,42,183,40],[192,10,184,8],[192,11,184,9],[192,17,184,15],[193,12,185,10,"pushTranslatedJSX"],[193,29,185,27],[193,30,185,28,"child"],[193,35,185,33],[193,37,185,35,"translationContent"],[193,55,185,53],[193,57,185,55,"mem"],[193,60,185,58],[193,62,185,60,"i"],[193,63,185,61],[193,65,185,63,"node"],[193,69,185,67],[193,70,185,68,"children"],[193,78,185,76],[193,79,185,77,"length"],[193,85,185,83],[193,90,185,88],[193,91,185,89],[193,95,185,93],[193,96,185,94,"translationContent"],[193,114,185,112],[193,115,185,113],[194,10,186,8],[195,8,187,6],[195,9,187,7],[195,15,187,13],[195,19,187,17,"node"],[195,23,187,21],[195,24,187,22,"type"],[195,28,187,26],[195,33,187,31],[195,39,187,37],[195,41,187,39],[196,10,188,8],[196,16,188,14,"wrapTextNodes"],[196,29,188,27],[196,32,188,30,"i18nOptions"],[196,43,188,41],[196,44,188,42,"transWrapTextNodes"],[196,62,188,60],[197,10,189,8],[197,16,189,14,"content"],[197,23,189,21],[197,26,189,24,"shouldUnescape"],[197,40,189,38],[197,43,189,41,"i18nOptions"],[197,54,189,52],[197,55,189,53,"unescape"],[197,63,189,61],[197,64,189,62,"i18n"],[197,68,189,66],[197,69,189,67,"services"],[197,77,189,75],[197,78,189,76,"interpolator"],[197,90,189,88],[197,91,189,89,"interpolate"],[197,102,189,100],[197,103,189,101,"node"],[197,107,189,105],[197,108,189,106,"content"],[197,115,189,113],[197,117,189,115,"opts"],[197,121,189,119],[197,123,189,121,"i18n"],[197,127,189,125],[197,128,189,126,"language"],[197,136,189,134],[197,137,189,135],[197,138,189,136],[197,141,189,139,"i18n"],[197,145,189,143],[197,146,189,144,"services"],[197,154,189,152],[197,155,189,153,"interpolator"],[197,167,189,165],[197,168,189,166,"interpolate"],[197,179,189,177],[197,180,189,178,"node"],[197,184,189,182],[197,185,189,183,"content"],[197,192,189,190],[197,194,189,192,"opts"],[197,198,189,196],[197,200,189,198,"i18n"],[197,204,189,202],[197,205,189,203,"language"],[197,213,189,211],[197,214,189,212],[198,10,190,8],[198,14,190,12,"wrapTextNodes"],[198,27,190,25],[198,29,190,27],[199,12,191,10,"mem"],[199,15,191,13],[199,16,191,14,"push"],[199,20,191,18],[199,34,191,19],[199,38,191,19,"createElement"],[199,58,191,32],[199,60,191,33,"wrapTextNodes"],[199,73,191,46],[199,75,191,48],[200,14,192,12,"key"],[200,17,192,15],[200,19,192,17],[200,22,192,20,"node"],[200,26,192,24],[200,27,192,25,"name"],[200,31,192,29],[200,35,192,33,"i"],[200,36,192,34],[201,12,193,10],[201,13,193,11],[201,15,193,13,"content"],[201,22,193,20],[201,23,193,21],[201,24,193,22],[202,10,194,8],[202,11,194,9],[202,17,194,15],[203,12,195,10,"mem"],[203,15,195,13],[203,16,195,14,"push"],[203,20,195,18],[203,21,195,19,"content"],[203,28,195,26],[203,29,195,27],[204,10,196,8],[205,8,197,6],[206,8,198,6],[206,15,198,13,"mem"],[206,18,198,16],[207,6,199,4],[207,7,199,5],[207,9,199,7],[207,11,199,9],[207,12,199,10],[208,4,200,2],[208,5,200,3],[209,4,201,2],[209,10,201,8,"result"],[209,16,201,14],[209,19,201,17,"mapAST"],[209,25,201,23],[209,26,201,24],[209,27,201,25],[210,6,202,4,"dummy"],[210,11,202,9],[210,13,202,11],[210,17,202,15],[211,6,203,4,"children"],[211,14,203,12],[211,16,203,14,"children"],[211,24,203,22],[211,28,203,26],[212,4,204,2],[212,5,204,3],[212,6,204,4],[212,8,204,6,"ast"],[212,11,204,9],[212,13,204,11,"getAsArray"],[212,23,204,21],[212,24,204,22,"children"],[212,32,204,30],[212,36,204,34],[212,38,204,36],[212,39,204,37],[212,40,204,38],[213,4,205,2],[213,11,205,9,"getChildren"],[213,22,205,20],[213,23,205,21,"result"],[213,29,205,27],[213,30,205,28],[213,31,205,29],[213,32,205,30],[213,33,205,31],[214,2,206,0],[214,3,206,1],[215,2,207,0],[215,8,207,6,"fixComponentProps"],[215,25,207,23],[215,28,207,26,"fixComponentProps"],[215,29,207,27,"component"],[215,38,207,36],[215,40,207,38,"index"],[215,45,207,43],[215,47,207,45,"translation"],[215,58,207,56],[215,63,207,61],[216,4,208,2],[216,10,208,8,"componentKey"],[216,22,208,20],[216,25,208,23,"component"],[216,34,208,32],[216,35,208,33,"key"],[216,38,208,36],[216,42,208,40,"index"],[216,47,208,45],[217,4,209,2],[217,10,209,8,"comp"],[217,14,209,12],[217,30,209,15],[217,34,209,15,"cloneElement"],[217,53,209,27],[217,55,209,28,"component"],[217,64,209,37],[217,66,209,39],[218,6,210,4,"key"],[218,9,210,7],[218,11,210,9,"componentKey"],[219,4,211,2],[219,5,211,3],[219,6,211,4],[220,4,212,2],[220,8,212,6],[220,9,212,7,"comp"],[220,13,212,11],[220,14,212,12,"props"],[220,19,212,17],[220,23,212,21],[220,24,212,22,"comp"],[220,28,212,26],[220,29,212,27,"props"],[220,34,212,32],[220,35,212,33,"children"],[220,43,212,41],[220,47,212,45,"translation"],[220,58,212,56],[220,59,212,57,"indexOf"],[220,66,212,64],[220,67,212,65],[220,70,212,68,"index"],[220,75,212,73],[220,79,212,77],[220,80,212,78],[220,83,212,81],[220,84,212,82],[220,88,212,86,"translation"],[220,99,212,97],[220,100,212,98,"indexOf"],[220,107,212,105],[220,108,212,106],[220,111,212,109,"index"],[220,116,212,114],[220,121,212,119],[220,122,212,120],[220,125,212,123],[220,126,212,124],[220,128,212,126],[221,6,213,4],[221,13,213,11,"comp"],[221,17,213,15],[222,4,214,2],[223,4,215,2],[223,13,215,11,"Componentized"],[223,26,215,24,"Componentized"],[223,27,215,24],[223,29,215,27],[224,6,216,4],[224,26,216,11],[224,30,216,11,"createElement"],[224,50,216,24],[224,52,216,25,"Fragment"],[224,67,216,33],[224,69,216,35],[224,73,216,39],[224,75,216,41,"comp"],[224,79,216,45],[224,80,216,46],[225,4,217,2],[226,4,218,2],[226,24,218,9],[226,28,218,9,"createElement"],[226,48,218,22],[226,50,218,23,"Componentized"],[226,63,218,36],[226,65,218,38],[227,6,219,4,"key"],[227,9,219,7],[227,11,219,9,"componentKey"],[228,4,220,2],[228,5,220,3],[228,6,220,4],[229,2,221,0],[229,3,221,1],[230,2,222,0],[230,8,222,6,"generateArrayComponents"],[230,31,222,29],[230,34,222,32,"generateArrayComponents"],[230,35,222,33,"components"],[230,45,222,43],[230,47,222,45,"translation"],[230,58,222,56],[230,63,222,61,"components"],[230,73,222,71],[230,74,222,72,"map"],[230,77,222,75],[230,78,222,76],[230,79,222,77,"c"],[230,80,222,78],[230,82,222,80,"index"],[230,87,222,85],[230,92,222,90,"fixComponentProps"],[230,109,222,107],[230,110,222,108,"c"],[230,111,222,109],[230,113,222,111,"index"],[230,118,222,116],[230,120,222,118,"translation"],[230,131,222,129],[230,132,222,130],[230,133,222,131],[231,2,223,0],[231,8,223,6,"generateObjectComponents"],[231,32,223,30],[231,35,223,33,"generateObjectComponents"],[231,36,223,34,"components"],[231,46,223,44],[231,48,223,46,"translation"],[231,59,223,57],[231,64,223,62],[232,4,224,2],[232,10,224,8,"componentMap"],[232,22,224,20],[232,25,224,23],[232,26,224,24],[232,27,224,25],[233,4,225,2,"Object"],[233,10,225,8],[233,11,225,9,"keys"],[233,15,225,13],[233,16,225,14,"components"],[233,26,225,24],[233,27,225,25],[233,28,225,26,"forEach"],[233,35,225,33],[233,36,225,34,"c"],[233,37,225,35],[233,41,225,39],[234,6,226,4,"Object"],[234,12,226,10],[234,13,226,11,"assign"],[234,19,226,17],[234,20,226,18,"componentMap"],[234,32,226,30],[234,34,226,32],[235,8,227,6],[235,9,227,7,"c"],[235,10,227,8],[235,13,227,11,"fixComponentProps"],[235,30,227,28],[235,31,227,29,"components"],[235,41,227,39],[235,42,227,40,"c"],[235,43,227,41],[235,44,227,42],[235,46,227,44,"c"],[235,47,227,45],[235,49,227,47,"translation"],[235,60,227,58],[236,6,228,4],[236,7,228,5],[236,8,228,6],[237,4,229,2],[237,5,229,3],[237,6,229,4],[238,4,230,2],[238,11,230,9,"componentMap"],[238,23,230,21],[239,2,231,0],[239,3,231,1],[240,2,232,0],[240,8,232,6,"generateComponents"],[240,26,232,24],[240,29,232,27,"generateComponents"],[240,30,232,28,"components"],[240,40,232,38],[240,42,232,40,"translation"],[240,53,232,51],[240,55,232,53,"i18n"],[240,59,232,57],[240,61,232,59,"i18nKey"],[240,68,232,66],[240,73,232,71],[241,4,233,2],[241,8,233,6],[241,9,233,7,"components"],[241,19,233,17],[241,21,233,19],[241,28,233,26],[241,32,233,30],[242,4,234,2],[242,8,234,6,"Array"],[242,13,234,11],[242,14,234,12,"isArray"],[242,21,234,19],[242,22,234,20,"components"],[242,32,234,30],[242,33,234,31],[242,35,234,33],[243,6,235,4],[243,13,235,11,"generateArrayComponents"],[243,36,235,34],[243,37,235,35,"components"],[243,47,235,45],[243,49,235,47,"translation"],[243,60,235,58],[243,61,235,59],[244,4,236,2],[245,4,237,2],[245,8,237,6],[245,12,237,6,"isObject"],[245,27,237,14],[245,29,237,15,"components"],[245,39,237,25],[245,40,237,26],[245,42,237,28],[246,6,238,4],[246,13,238,11,"generateObjectComponents"],[246,37,238,35],[246,38,238,36,"components"],[246,48,238,46],[246,50,238,48,"translation"],[246,61,238,59],[246,62,238,60],[247,4,239,2],[248,4,240,2],[248,8,240,2,"warnOnce"],[248,23,240,10],[248,25,240,11,"i18n"],[248,29,240,15],[248,31,240,17],[248,57,240,43],[248,59,240,45],[248,115,240,101],[248,117,240,103],[249,6,241,4,"i18nKey"],[250,4,242,2],[250,5,242,3],[250,6,242,4],[251,4,243,2],[251,11,243,9],[251,15,243,13],[252,2,244,0],[252,3,244,1],[253,2,245,0],[253,8,245,6,"isComponentsMap"],[253,23,245,21],[253,26,245,24,"object"],[253,32,245,30],[253,36,245,34],[254,4,246,2],[254,8,246,6],[254,9,246,7],[254,13,246,7,"isObject"],[254,28,246,15],[254,30,246,16,"object"],[254,36,246,22],[254,37,246,23],[254,39,246,25],[254,46,246,32],[254,51,246,37],[255,4,247,2],[255,8,247,6,"Array"],[255,13,247,11],[255,14,247,12,"isArray"],[255,21,247,19],[255,22,247,20,"object"],[255,28,247,26],[255,29,247,27],[255,31,247,29],[255,38,247,36],[255,43,247,41],[256,4,248,2],[256,11,248,9,"Object"],[256,17,248,15],[256,18,248,16,"keys"],[256,22,248,20],[256,23,248,21,"object"],[256,29,248,27],[256,30,248,28],[256,31,248,29,"reduce"],[256,37,248,35],[256,38,248,36],[256,39,248,37,"acc"],[256,42,248,40],[256,44,248,42,"key"],[256,47,248,45],[256,52,248,50,"acc"],[256,55,248,53],[256,59,248,57,"Number"],[256,65,248,63],[256,66,248,64,"isNaN"],[256,71,248,69],[256,72,248,70,"Number"],[256,78,248,76],[256,79,248,77,"parseFloat"],[256,89,248,87],[256,90,248,88,"key"],[256,93,248,91],[256,94,248,92],[256,95,248,93],[256,97,248,95],[256,101,248,99],[256,102,248,100],[257,2,249,0],[257,3,249,1],[258,2,250,7],[258,11,250,16,"Trans"],[258,16,250,21,"Trans"],[258,17,250,22],[259,4,251,2,"children"],[259,12,251,10],[260,4,252,2,"count"],[260,9,252,7],[261,4,253,2,"parent"],[261,10,253,8],[262,4,254,2,"i18nKey"],[262,11,254,9],[263,4,255,2,"context"],[263,11,255,9],[264,4,256,2,"tOptions"],[264,12,256,10],[264,15,256,13],[264,16,256,14],[264,17,256,15],[265,4,257,2,"values"],[265,10,257,8],[266,4,258,2,"defaults"],[266,12,258,10],[267,4,259,2,"components"],[267,14,259,12],[268,4,260,2,"ns"],[268,6,260,4],[269,4,261,2,"i18n"],[269,8,261,6],[269,10,261,8,"i18nFromProps"],[269,23,261,21],[270,4,262,2,"t"],[270,5,262,3],[270,7,262,5,"tFromProps"],[270,17,262,15],[271,4,263,2,"shouldUnescape"],[271,18,263,16],[272,4,264,2],[272,7,264,5,"additionalProps"],[273,2,265,0],[273,3,265,1],[273,5,265,3],[274,4,266,2],[274,10,266,8,"i18n"],[274,14,266,12],[274,17,266,15,"i18nFromProps"],[274,30,266,28],[274,34,266,32],[274,38,266,32,"getI18n"],[274,59,266,39],[274,61,266,40],[274,62,266,41],[275,4,267,2],[275,8,267,6],[275,9,267,7,"i18n"],[275,13,267,11],[275,15,267,13],[276,6,268,4],[276,10,268,4,"warnOnce"],[276,25,268,12],[276,27,268,13,"i18n"],[276,31,268,17],[276,33,268,19],[276,54,268,40],[276,56,268,42],[276,129,268,115],[276,131,268,117],[277,8,269,6,"i18nKey"],[278,6,270,4],[278,7,270,5],[278,8,270,6],[279,6,271,4],[279,13,271,11,"children"],[279,21,271,19],[280,4,272,2],[281,4,273,2],[281,10,273,8,"t"],[281,11,273,9],[281,14,273,12,"tFromProps"],[281,24,273,22],[281,28,273,26,"i18n"],[281,32,273,30],[281,33,273,31,"t"],[281,34,273,32],[281,35,273,33,"bind"],[281,39,273,37],[281,40,273,38,"i18n"],[281,44,273,42],[281,45,273,43],[281,50,273,48,"k"],[281,51,273,49],[281,55,273,53,"k"],[281,56,273,54],[281,57,273,55],[282,4,274,2],[282,10,274,8,"reactI18nextOptions"],[282,29,274,27],[282,32,274,30],[283,6,275,4],[283,9,275,7],[283,13,275,7,"getDefaults"],[283,34,275,18],[283,36,275,19],[283,37,275,20],[284,6,276,4],[284,9,276,7,"i18n"],[284,13,276,11],[284,14,276,12,"options"],[284,21,276,19],[284,23,276,21,"react"],[285,4,277,2],[285,5,277,3],[286,4,278,2],[286,8,278,6,"namespaces"],[286,18,278,16],[286,21,278,19,"ns"],[286,23,278,21],[286,27,278,25,"t"],[286,28,278,26],[286,29,278,27,"ns"],[286,31,278,29],[286,35,278,33,"i18n"],[286,39,278,37],[286,40,278,38,"options"],[286,47,278,45],[286,49,278,47,"defaultNS"],[286,58,278,56],[287,4,279,2,"namespaces"],[287,14,279,12],[287,17,279,15],[287,21,279,15,"isString"],[287,36,279,23],[287,38,279,24,"namespaces"],[287,48,279,34],[287,49,279,35],[287,52,279,38],[287,53,279,39,"namespaces"],[287,63,279,49],[287,64,279,50],[287,67,279,53,"namespaces"],[287,77,279,63],[287,81,279,67],[287,82,279,68],[287,95,279,81],[287,96,279,82],[288,4,280,2],[288,10,280,8,"nodeAsString"],[288,22,280,20],[288,25,280,23,"nodesToString"],[288,38,280,36],[288,39,280,37,"children"],[288,47,280,45],[288,49,280,47,"reactI18nextOptions"],[288,68,280,66],[288,70,280,68,"i18n"],[288,74,280,72],[288,76,280,74,"i18nKey"],[288,83,280,81],[288,84,280,82],[289,4,281,2],[289,10,281,8,"defaultValue"],[289,22,281,20],[289,25,281,23,"defaults"],[289,33,281,31],[289,37,281,35,"nodeAsString"],[289,49,281,47],[289,53,281,51,"reactI18nextOptions"],[289,72,281,70],[289,73,281,71,"transEmptyNodeValue"],[289,92,281,90],[289,96,281,94,"i18nKey"],[289,103,281,101],[290,4,282,2],[290,10,282,8],[291,6,283,4,"hashTransKey"],[292,4,284,2],[292,5,284,3],[292,8,284,6,"reactI18nextOptions"],[292,27,284,25],[293,4,285,2],[293,10,285,8,"key"],[293,13,285,11],[293,16,285,14,"i18nKey"],[293,23,285,21],[293,28,285,26,"hashTransKey"],[293,40,285,38],[293,43,285,41,"hashTransKey"],[293,55,285,53],[293,56,285,54,"nodeAsString"],[293,68,285,66],[293,72,285,70,"defaultValue"],[293,84,285,82],[293,85,285,83],[293,88,285,86,"nodeAsString"],[293,100,285,98],[293,104,285,102,"defaultValue"],[293,116,285,114],[293,117,285,115],[294,4,286,2],[294,8,286,6,"i18n"],[294,12,286,10],[294,13,286,11,"options"],[294,20,286,18],[294,22,286,20,"interpolation"],[294,35,286,33],[294,37,286,35,"defaultVariables"],[294,53,286,51],[294,55,286,53],[295,6,287,4,"values"],[295,12,287,10],[295,15,287,13,"values"],[295,21,287,19],[295,25,287,23,"Object"],[295,31,287,29],[295,32,287,30,"keys"],[295,36,287,34],[295,37,287,35,"values"],[295,43,287,41],[295,44,287,42],[295,45,287,43,"length"],[295,51,287,49],[295,54,287,52],[295,55,287,53],[295,58,287,56],[296,8,288,6],[296,11,288,9,"values"],[296,17,288,15],[297,8,289,6],[297,11,289,9,"i18n"],[297,15,289,13],[297,16,289,14,"options"],[297,23,289,21],[297,24,289,22,"interpolation"],[297,37,289,35],[297,38,289,36,"defaultVariables"],[298,6,290,4],[298,7,290,5],[298,10,290,8],[299,8,291,6],[299,11,291,9,"i18n"],[299,15,291,13],[299,16,291,14,"options"],[299,23,291,21],[299,24,291,22,"interpolation"],[299,37,291,35],[299,38,291,36,"defaultVariables"],[300,6,292,4],[300,7,292,5],[301,4,293,2],[302,4,294,2],[302,10,294,8,"interpolationOverride"],[302,31,294,29],[302,34,294,32,"values"],[302,40,294,38],[302,44,294,42,"count"],[302,49,294,47],[302,54,294,52,"undefined"],[302,63,294,61],[302,67,294,65],[302,68,294,66,"i18n"],[302,72,294,70],[302,73,294,71,"options"],[302,80,294,78],[302,82,294,80,"interpolation"],[302,95,294,93],[302,97,294,95,"alwaysFormat"],[302,109,294,107],[302,113,294,111],[302,114,294,112,"children"],[302,122,294,120],[302,125,294,123,"tOptions"],[302,133,294,131],[302,134,294,132,"interpolation"],[302,147,294,145],[302,150,294,148],[303,6,295,4,"interpolation"],[303,19,295,17],[303,21,295,19],[304,8,296,6],[304,11,296,9,"tOptions"],[304,19,296,17],[304,20,296,18,"interpolation"],[304,33,296,31],[305,8,297,6,"prefix"],[305,14,297,12],[305,16,297,14],[305,21,297,19],[306,8,298,6,"suffix"],[306,14,298,12],[306,16,298,14],[307,6,299,4],[308,4,300,2],[308,5,300,3],[309,4,301,2],[309,10,301,8,"combinedTOpts"],[309,23,301,21],[309,26,301,24],[310,6,302,4],[310,9,302,7,"tOptions"],[310,17,302,15],[311,6,303,4,"context"],[311,13,303,11],[311,15,303,13,"context"],[311,22,303,20],[311,26,303,24,"tOptions"],[311,34,303,32],[311,35,303,33,"context"],[311,42,303,40],[312,6,304,4,"count"],[312,11,304,9],[313,6,305,4],[313,9,305,7,"values"],[313,15,305,13],[314,6,306,4],[314,9,306,7,"interpolationOverride"],[314,30,306,28],[315,6,307,4,"defaultValue"],[315,18,307,16],[316,6,308,4,"ns"],[316,8,308,6],[316,10,308,8,"namespaces"],[317,4,309,2],[317,5,309,3],[318,4,310,2],[318,10,310,8,"translation"],[318,21,310,19],[318,24,310,22,"key"],[318,27,310,25],[318,30,310,28,"t"],[318,31,310,29],[318,32,310,30,"key"],[318,35,310,33],[318,37,310,35,"combinedTOpts"],[318,50,310,48],[318,51,310,49],[318,54,310,52,"defaultValue"],[318,66,310,64],[319,4,311,2],[319,10,311,8,"generatedComponents"],[319,29,311,27],[319,32,311,30,"generateComponents"],[319,50,311,48],[319,51,311,49,"components"],[319,61,311,59],[319,63,311,61,"translation"],[319,74,311,72],[319,76,311,74,"i18n"],[319,80,311,78],[319,82,311,80,"i18nKey"],[319,89,311,87],[319,90,311,88],[320,4,312,2],[320,8,312,6,"indexedChildren"],[320,23,312,21],[320,26,312,24,"generatedComponents"],[320,45,312,43],[320,49,312,47,"children"],[320,57,312,55],[321,4,313,2],[321,8,313,6,"componentsMap"],[321,21,313,19],[321,24,313,22],[321,28,313,26],[322,4,314,2],[322,8,314,6,"isComponentsMap"],[322,23,314,21],[322,24,314,22,"generatedComponents"],[322,43,314,41],[322,44,314,42],[322,46,314,44],[323,6,315,4,"componentsMap"],[323,19,315,17],[323,22,315,20,"generatedComponents"],[323,41,315,39],[324,6,316,4,"indexedChildren"],[324,21,316,19],[324,24,316,22,"children"],[324,32,316,30],[325,4,317,2],[326,4,318,2],[326,10,318,8,"content"],[326,17,318,15],[326,20,318,18,"renderNodes"],[326,31,318,29],[326,32,318,30,"indexedChildren"],[326,47,318,45],[326,49,318,47,"componentsMap"],[326,62,318,60],[326,64,318,62,"translation"],[326,75,318,73],[326,77,318,75,"i18n"],[326,81,318,79],[326,83,318,81,"reactI18nextOptions"],[326,102,318,100],[326,104,318,102,"combinedTOpts"],[326,117,318,115],[326,119,318,117,"shouldUnescape"],[326,133,318,131],[326,134,318,132],[327,4,319,2],[327,10,319,8,"useAsParent"],[327,21,319,19],[327,24,319,22,"parent"],[327,30,319,28],[327,34,319,32,"reactI18nextOptions"],[327,53,319,51],[327,54,319,52,"defaultTransParent"],[327,72,319,70],[328,4,320,2],[328,11,320,9,"useAsParent"],[328,22,320,20],[328,38,320,23],[328,42,320,23,"createElement"],[328,62,320,36],[328,64,320,37,"useAsParent"],[328,75,320,48],[328,77,320,50,"additionalProps"],[328,92,320,65],[328,94,320,67,"content"],[328,101,320,74],[328,102,320,75],[328,105,320,78,"content"],[328,112,320,85],[329,2,321,0],[330,0,321,1],[330,3]],"functionMap":{"names":["<global>","hasChildren","getChildren","hasValidReactChildren","getAsArray","mergeProps","nodesToString","childrenArray.forEach$argument_0","renderNodes","keepArray.map$argument_0","getData","renderInner","pushTranslatedJSX","Children.map$argument_1","mapAST","astNodes.reduce$argument_0","fixComponentProps","Componentized","generateArrayComponents","components.map$argument_0","generateObjectComponents","Object.keys.forEach$argument_0","generateComponents","isComponentsMap","Object.keys.reduce$argument_0","Trans","<anonymous>"],"mappings":"AAA;oBCK;CDK;oBEC;CFI;8BGC,qEH;mBIC,2CJ;mBKC;CLM;6BMC;wBCK;GDwD;CNE;oBQC;iFCG,kBD;kBEG;0BHE;KGG;GFC;sBGO;GHI;4BIC;wCCO;ODU;GJE;iBMC;2BCG;KD8D;GNC;CRM;0BgBC;ECQ;GDE;ChBI;gCkBC,4CC,sDD,ClB;iCoBC;kCCE;GDI;CpBE;2BsBC;CtBY;wBuBC;oCCG,yDD;CvBC;OyBC;gDCuB,MD"}},"type":"js/module"}]}