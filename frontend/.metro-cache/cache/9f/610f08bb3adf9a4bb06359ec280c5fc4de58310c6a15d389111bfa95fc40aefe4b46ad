{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.init = exports.hasLoadedNamespace = exports.getFixedT = exports.exists = exports.dir = exports.default = exports.createInstance = exports.changeLanguage = void 0;\n  exports.keyFromSelector = keysFromSelector;\n  exports.use = exports.t = exports.setDefaultNamespace = exports.reloadResources = exports.loadResources = exports.loadNamespaces = exports.loadLanguages = void 0;\n  const isString = obj => typeof obj === 'string';\n  const defer = () => {\n    let res;\n    let rej;\n    const promise = new Promise((resolve, reject) => {\n      res = resolve;\n      rej = reject;\n    });\n    promise.resolve = res;\n    promise.reject = rej;\n    return promise;\n  };\n  const makeString = object => {\n    if (object == null) return '';\n    return '' + object;\n  };\n  const copy = (a, s, t) => {\n    a.forEach(m => {\n      if (s[m]) t[m] = s[m];\n    });\n  };\n  const lastOfPathSeparatorRegExp = /###/g;\n  const cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\n  const canNotTraverseDeeper = object => !object || isString(object);\n  const getLastOfPath = (object, path, Empty) => {\n    const stack = !isString(path) ? path : path.split('.');\n    let stackIndex = 0;\n    while (stackIndex < stack.length - 1) {\n      if (canNotTraverseDeeper(object)) return {};\n      const key = cleanKey(stack[stackIndex]);\n      if (!object[key] && Empty) object[key] = new Empty();\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        object = object[key];\n      } else {\n        object = {};\n      }\n      ++stackIndex;\n    }\n    if (canNotTraverseDeeper(object)) return {};\n    return {\n      obj: object,\n      k: cleanKey(stack[stackIndex])\n    };\n  };\n  const setPath = (object, path, newValue) => {\n    const {\n      obj,\n      k\n    } = getLastOfPath(object, path, Object);\n    if (obj !== undefined || path.length === 1) {\n      obj[k] = newValue;\n      return;\n    }\n    let e = path[path.length - 1];\n    let p = path.slice(0, path.length - 1);\n    let last = getLastOfPath(object, p, Object);\n    while (last.obj === undefined && p.length) {\n      e = `${p[p.length - 1]}.${e}`;\n      p = p.slice(0, p.length - 1);\n      last = getLastOfPath(object, p, Object);\n      if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n        last.obj = undefined;\n      }\n    }\n    last.obj[`${last.k}.${e}`] = newValue;\n  };\n  const pushPath = (object, path, newValue, concat) => {\n    const {\n      obj,\n      k\n    } = getLastOfPath(object, path, Object);\n    obj[k] = obj[k] || [];\n    obj[k].push(newValue);\n  };\n  const getPath = (object, path) => {\n    const {\n      obj,\n      k\n    } = getLastOfPath(object, path);\n    if (!obj) return undefined;\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n    return obj[k];\n  };\n  const getPathWithDefaults = (data, defaultData, key) => {\n    const value = getPath(data, key);\n    if (value !== undefined) {\n      return value;\n    }\n    return getPath(defaultData, key);\n  };\n  const deepExtend = (target, source, overwrite) => {\n    for (const prop in source) {\n      if (prop !== '__proto__' && prop !== 'constructor') {\n        if (prop in target) {\n          if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n            if (overwrite) target[prop] = source[prop];\n          } else {\n            deepExtend(target[prop], source[prop], overwrite);\n          }\n        } else {\n          target[prop] = source[prop];\n        }\n      }\n    }\n    return target;\n  };\n  const regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n  var _entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;'\n  };\n  const escape = data => {\n    if (isString(data)) {\n      return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n    }\n    return data;\n  };\n  class RegExpCache {\n    constructor(capacity) {\n      this.capacity = capacity;\n      this.regExpMap = new Map();\n      this.regExpQueue = [];\n    }\n    getRegExp(pattern) {\n      const regExpFromCache = this.regExpMap.get(pattern);\n      if (regExpFromCache !== undefined) {\n        return regExpFromCache;\n      }\n      const regExpNew = new RegExp(pattern);\n      if (this.regExpQueue.length === this.capacity) {\n        this.regExpMap.delete(this.regExpQueue.shift());\n      }\n      this.regExpMap.set(pattern, regExpNew);\n      this.regExpQueue.push(pattern);\n      return regExpNew;\n    }\n  }\n  const chars = [' ', ',', '?', '!', ';'];\n  const looksLikeObjectPathRegExpCache = new RegExpCache(20);\n  const looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n    nsSeparator = nsSeparator || '';\n    keySeparator = keySeparator || '';\n    const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n    if (possibleChars.length === 0) return true;\n    const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n    let matched = !r.test(key);\n    if (!matched) {\n      const ki = key.indexOf(keySeparator);\n      if (ki > 0 && !r.test(key.substring(0, ki))) {\n        matched = true;\n      }\n    }\n    return matched;\n  };\n  const deepFind = (obj, path, keySeparator = '.') => {\n    if (!obj) return undefined;\n    if (obj[path]) {\n      if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n      return obj[path];\n    }\n    const tokens = path.split(keySeparator);\n    let current = obj;\n    for (let i = 0; i < tokens.length;) {\n      if (!current || typeof current !== 'object') {\n        return undefined;\n      }\n      let next;\n      let nextPath = '';\n      for (let j = i; j < tokens.length; ++j) {\n        if (j !== i) {\n          nextPath += keySeparator;\n        }\n        nextPath += tokens[j];\n        next = current[nextPath];\n        if (next !== undefined) {\n          if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n            continue;\n          }\n          i += j - i + 1;\n          break;\n        }\n      }\n      current = next;\n    }\n    return current;\n  };\n  const getCleanedCode = code => code?.replace('_', '-');\n  const consoleLogger = {\n    type: 'logger',\n    log(args) {\n      this.output('log', args);\n    },\n    warn(args) {\n      this.output('warn', args);\n    },\n    error(args) {\n      this.output('error', args);\n    },\n    output(type, args) {\n      console?.[type]?.apply?.(console, args);\n    }\n  };\n  class Logger {\n    constructor(concreteLogger, options = {}) {\n      this.init(concreteLogger, options);\n    }\n    init(concreteLogger, options = {}) {\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n    log(...args) {\n      return this.forward(args, 'log', '', true);\n    }\n    warn(...args) {\n      return this.forward(args, 'warn', '', true);\n    }\n    error(...args) {\n      return this.forward(args, 'error', '');\n    }\n    deprecate(...args) {\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n    forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n      return this.logger[lvl](args);\n    }\n    create(moduleName) {\n      return new Logger(this.logger, {\n        ...{\n          prefix: `${this.prefix}:${moduleName}:`\n        },\n        ...this.options\n      });\n    }\n    clone(options) {\n      options = options || this.options;\n      options.prefix = options.prefix || this.prefix;\n      return new Logger(this.logger, options);\n    }\n  }\n  var baseLogger = new Logger();\n  class EventEmitter {\n    constructor() {\n      this.observers = {};\n    }\n    on(events, listener) {\n      events.split(' ').forEach(event => {\n        if (!this.observers[event]) this.observers[event] = new Map();\n        const numListeners = this.observers[event].get(listener) || 0;\n        this.observers[event].set(listener, numListeners + 1);\n      });\n      return this;\n    }\n    off(event, listener) {\n      if (!this.observers[event]) return;\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n      this.observers[event].delete(listener);\n    }\n    emit(event, ...args) {\n      if (this.observers[event]) {\n        const cloned = Array.from(this.observers[event].entries());\n        cloned.forEach(([observer, numTimesAdded]) => {\n          for (let i = 0; i < numTimesAdded; i++) {\n            observer(...args);\n          }\n        });\n      }\n      if (this.observers['*']) {\n        const cloned = Array.from(this.observers['*'].entries());\n        cloned.forEach(([observer, numTimesAdded]) => {\n          for (let i = 0; i < numTimesAdded; i++) {\n            observer.apply(observer, [event, ...args]);\n          }\n        });\n      }\n    }\n  }\n  class ResourceStore extends EventEmitter {\n    constructor(data, options = {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    }) {\n      super();\n      this.data = data || {};\n      this.options = options;\n      if (this.options.keySeparator === undefined) {\n        this.options.keySeparator = '.';\n      }\n      if (this.options.ignoreJSONStructure === undefined) {\n        this.options.ignoreJSONStructure = true;\n      }\n    }\n    addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n    removeNamespaces(ns) {\n      const index = this.options.ns.indexOf(ns);\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n    getResource(lng, ns, key, options = {}) {\n      const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      let path;\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      } else {\n        path = [lng, ns];\n        if (key) {\n          if (Array.isArray(key)) {\n            path.push(...key);\n          } else if (isString(key) && keySeparator) {\n            path.push(...key.split(keySeparator));\n          } else {\n            path.push(key);\n          }\n        }\n      }\n      const result = getPath(this.data, path);\n      if (!result && !ns && !key && lng.indexOf('.') > -1) {\n        lng = path[0];\n        ns = path[1];\n        key = path.slice(2).join('.');\n      }\n      if (result || !ignoreJSONStructure || !isString(key)) return result;\n      return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n    }\n    addResource(lng, ns, key, value, options = {\n      silent: false\n    }) {\n      const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      let path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n    addResources(lng, ns, resources, options = {\n      silent: false\n    }) {\n      for (const m in resources) {\n        if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n    addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n      silent: false,\n      skipCopy: false\n    }) {\n      let path = [lng, ns];\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      let pack = getPath(this.data, path) || {};\n      if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = {\n          ...pack,\n          ...resources\n        };\n      }\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n    removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n    hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n    getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      return this.getResource(lng, ns);\n    }\n    getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n    hasLanguageSomeTranslations(lng) {\n      const data = this.getDataByLanguage(lng);\n      const n = data && Object.keys(data) || [];\n      return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n    }\n    toJSON() {\n      return this.data;\n    }\n  }\n  var postProcessor = {\n    processors: {},\n    addPostProcessor(module) {\n      this.processors[module.name] = module;\n    },\n    handle(processors, value, key, options, translator) {\n      processors.forEach(processor => {\n        value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n      });\n      return value;\n    }\n  };\n  const PATH_KEY = Symbol('i18next/PATH_KEY');\n  function createProxy() {\n    const state = [];\n    const handler = Object.create(null);\n    let proxy;\n    handler.get = (target, key) => {\n      proxy?.revoke?.();\n      if (key === PATH_KEY) return state;\n      state.push(key);\n      proxy = Proxy.revocable(target, handler);\n      return proxy.proxy;\n    };\n    return Proxy.revocable(Object.create(null), handler).proxy;\n  }\n  function keysFromSelector(selector, opts) {\n    const {\n      [PATH_KEY]: path\n    } = selector(createProxy());\n    return path.join(opts?.keySeparator ?? '.');\n  }\n  const checkedLoadedFor = {};\n  const shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\n  class Translator extends EventEmitter {\n    constructor(services, options = {}) {\n      super();\n      copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n      this.options = options;\n      if (this.options.keySeparator === undefined) {\n        this.options.keySeparator = '.';\n      }\n      this.logger = baseLogger.create('translator');\n    }\n    changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n    exists(key, o = {\n      interpolation: {}\n    }) {\n      const opt = {\n        ...o\n      };\n      if (key == null) return false;\n      const resolved = this.resolve(key, opt);\n      return resolved?.res !== undefined;\n    }\n    extractFromKey(key, opt) {\n      let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n      let namespaces = opt.ns || this.options.defaultNS || [];\n      const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n      const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n      if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n        const m = key.match(this.interpolator.nestingRegexp);\n        if (m && m.length > 0) {\n          return {\n            key,\n            namespaces: isString(namespaces) ? [namespaces] : namespaces\n          };\n        }\n        const parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n      return {\n        key,\n        namespaces: isString(namespaces) ? [namespaces] : namespaces\n      };\n    }\n    translate(keys, o, lastKey) {\n      let opt = typeof o === 'object' ? {\n        ...o\n      } : o;\n      if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n        opt = this.options.overloadTranslationOptionHandler(arguments);\n      }\n      if (typeof opt === 'object') opt = {\n        ...opt\n      };\n      if (!opt) opt = {};\n      if (keys == null) return '';\n      if (typeof keys === 'function') keys = keysFromSelector(keys, {\n        ...this.options,\n        ...opt\n      });\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n      const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n      const {\n        key,\n        namespaces\n      } = this.extractFromKey(keys[keys.length - 1], opt);\n      const namespace = namespaces[namespaces.length - 1];\n      let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      const lng = opt.lng || this.language;\n      const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n      if (lng?.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          if (returnDetails) {\n            return {\n              res: `${namespace}${nsSeparator}${key}`,\n              usedKey: key,\n              exactUsedKey: key,\n              usedLng: lng,\n              usedNS: namespace,\n              usedParams: this.getUsedParamsDetails(opt)\n            };\n          }\n          return `${namespace}${nsSeparator}${key}`;\n        }\n        if (returnDetails) {\n          return {\n            res: key,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return key;\n      }\n      const resolved = this.resolve(keys, opt);\n      let res = resolved?.res;\n      const resUsedKey = resolved?.usedKey || key;\n      const resExactUsedKey = resolved?.exactUsedKey || key;\n      const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n      const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const hasDefaultValue = Translator.hasDefaultValue(opt);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n      const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n      let resForObjHndl = res;\n      if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n        resForObjHndl = defaultValue;\n      }\n      const handleAsObject = shouldHandleAsObject(resForObjHndl);\n      const resType = Object.prototype.toString.apply(resForObjHndl);\n      if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n        if (!opt.returnObjects && !this.options.returnObjects) {\n          if (!this.options.returnedObjectHandler) {\n            this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          }\n          const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n            ...opt,\n            ns: namespaces\n          }) : `key '${key} (${this.language})' returned an object instead of string.`;\n          if (returnDetails) {\n            resolved.res = r;\n            resolved.usedParams = this.getUsedParamsDetails(opt);\n            return resolved;\n          }\n          return r;\n        }\n        if (keySeparator) {\n          const resTypeIsArray = Array.isArray(resForObjHndl);\n          const copy = resTypeIsArray ? [] : {};\n          const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n          for (const m in resForObjHndl) {\n            if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n              const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n              if (hasDefaultValue && !res) {\n                copy[m] = this.translate(deepKey, {\n                  ...opt,\n                  defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                  ...{\n                    joinArrays: false,\n                    ns: namespaces\n                  }\n                });\n              } else {\n                copy[m] = this.translate(deepKey, {\n                  ...opt,\n                  ...{\n                    joinArrays: false,\n                    ns: namespaces\n                  }\n                });\n              }\n              if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n            }\n          }\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n      } else {\n        let usedDefault = false;\n        let usedKey = false;\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n        const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n        const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n        const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n          if (keySeparator) {\n            const fk = this.resolve(key, {\n              ...opt,\n              keySeparator: false\n            });\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n          let lngs = [];\n          const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (let i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n          } else {\n            lngs.push(opt.lng || this.language);\n          }\n          const send = (l, k, specificDefaultValue) => {\n            const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n            if (this.options.missingKeyHandler) {\n              this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n            } else if (this.backendConnector?.saveMissing) {\n              this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n            }\n            this.emit('missingKey', l, namespace, k, res);\n          };\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(language => {\n                const suffixes = this.pluralResolver.getSuffixes(language, opt);\n                if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                  suffixes.push(`${this.options.pluralSeparator}zero`);\n                }\n                suffixes.forEach(suffix => {\n                  send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n        res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n          res = `${namespace}${nsSeparator}${key}`;\n        }\n        if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n        }\n      }\n      if (returnDetails) {\n        resolved.res = res;\n        resolved.usedParams = this.getUsedParamsDetails(opt);\n        return resolved;\n      }\n      return res;\n    }\n    extendTranslation(res, key, opt, resolved, lastKey) {\n      if (this.i18nFormat?.parse) {\n        res = this.i18nFormat.parse(res, {\n          ...this.options.interpolation.defaultVariables,\n          ...opt\n        }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved\n        });\n      } else if (!opt.skipInterpolation) {\n        if (opt.interpolation) this.interpolator.init({\n          ...opt,\n          ...{\n            interpolation: {\n              ...this.options.interpolation,\n              ...opt.interpolation\n            }\n          }\n        });\n        const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n        let nestBef;\n        if (skipOnVariables) {\n          const nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n        let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n        if (this.options.interpolation.defaultVariables) data = {\n          ...this.options.interpolation.defaultVariables,\n          ...data\n        };\n        res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n        if (skipOnVariables) {\n          const na = res.match(this.interpolator.nestingRegexp);\n          const nestAft = na && na.length;\n          if (nestBef < nestAft) opt.nest = false;\n        }\n        if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n        if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n          if (lastKey?.[0] === args[0] && !opt.context) {\n            this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n            return null;\n          }\n          return this.translate(...args, key);\n        }, opt);\n        if (opt.interpolation) this.interpolator.reset();\n      }\n      const postProcess = opt.postProcess || this.options.postProcess;\n      const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n      if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n          i18nResolved: {\n            ...resolved,\n            usedParams: this.getUsedParamsDetails(opt)\n          },\n          ...opt\n        } : opt, this);\n      }\n      return res;\n    }\n    resolve(keys, opt = {}) {\n      let found;\n      let usedKey;\n      let exactUsedKey;\n      let usedLng;\n      let usedNS;\n      if (isString(keys)) keys = [keys];\n      keys.forEach(k => {\n        if (this.isValidLookup(found)) return;\n        const extracted = this.extractFromKey(k, opt);\n        const key = extracted.key;\n        usedKey = key;\n        let namespaces = extracted.namespaces;\n        if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n        const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n        const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n        const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n        const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n        namespaces.forEach(ns => {\n          if (this.isValidLookup(found)) return;\n          usedNS = ns;\n          if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n            this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n          codes.forEach(code => {\n            if (this.isValidLookup(found)) return;\n            usedLng = code;\n            const finalKeys = [key];\n            if (this.i18nFormat?.addLookupKeys) {\n              this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n            } else {\n              let pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n              const zeroSuffix = `${this.options.pluralSeparator}zero`;\n              const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(key + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(key + zeroSuffix);\n                }\n              }\n              if (needsContextHandling) {\n                const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n                finalKeys.push(contextKey);\n                if (needsPluralHandling) {\n                  if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                    finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                  }\n                  finalKeys.push(contextKey + pluralSuffix);\n                  if (needsZeroSuffixLookup) {\n                    finalKeys.push(contextKey + zeroSuffix);\n                  }\n                }\n              }\n            }\n            let possibleKey;\n            while (possibleKey = finalKeys.pop()) {\n              if (!this.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = this.getResource(code, ns, possibleKey, opt);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey,\n        exactUsedKey,\n        usedLng,\n        usedNS\n      };\n    }\n    isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n    getResource(code, ns, key, options = {}) {\n      if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n    getUsedParamsDetails(options = {}) {\n      const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n      const useOptionsReplaceForData = options.replace && !isString(options.replace);\n      let data = useOptionsReplaceForData ? options.replace : options;\n      if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n        data.count = options.count;\n      }\n      if (this.options.interpolation.defaultVariables) {\n        data = {\n          ...this.options.interpolation.defaultVariables,\n          ...data\n        };\n      }\n      if (!useOptionsReplaceForData) {\n        data = {\n          ...data\n        };\n        for (const key of optionsKeys) {\n          delete data[key];\n        }\n      }\n      return data;\n    }\n    static hasDefaultValue(options) {\n      const prefix = 'defaultValue';\n      for (const option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n  class LanguageUtil {\n    constructor(options) {\n      this.options = options;\n      this.supportedLngs = this.options.supportedLngs || false;\n      this.logger = baseLogger.create('languageUtils');\n    }\n    getScriptPartFromCode(code) {\n      code = getCleanedCode(code);\n      if (!code || code.indexOf('-') < 0) return null;\n      const p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n    getLanguagePartFromCode(code) {\n      code = getCleanedCode(code);\n      if (!code || code.indexOf('-') < 0) return code;\n      const p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n    formatLanguageCode(code) {\n      if (isString(code) && code.indexOf('-') > -1) {\n        let formattedCode;\n        try {\n          formattedCode = Intl.getCanonicalLocales(code)[0];\n        } catch (e) {}\n        if (formattedCode && this.options.lowerCaseLng) {\n          formattedCode = formattedCode.toLowerCase();\n        }\n        if (formattedCode) return formattedCode;\n        if (this.options.lowerCaseLng) {\n          return code.toLowerCase();\n        }\n        return code;\n      }\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n    isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n    getBestMatchFromCodes(codes) {\n      if (!codes) return null;\n      let found;\n      codes.forEach(code => {\n        if (found) return;\n        const cleanedLng = this.formatLanguageCode(code);\n        if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(code => {\n          if (found) return;\n          const lngScOnly = this.getScriptPartFromCode(code);\n          if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n          const lngOnly = this.getLanguagePartFromCode(code);\n          if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = this.options.supportedLngs.find(supportedLng => {\n            if (supportedLng === lngOnly) return supportedLng;\n            if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n            if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n            if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n          });\n        });\n      }\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n    getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (isString(fallbacks)) fallbacks = [fallbacks];\n      if (Array.isArray(fallbacks)) return fallbacks;\n      if (!code) return fallbacks.default || [];\n      let found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks.default;\n      return found || [];\n    }\n    toResolveHierarchy(code, fallbackCode) {\n      const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n      const codes = [];\n      const addCode = c => {\n        if (!c) return;\n        if (this.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n        }\n      };\n      if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (isString(code)) {\n        addCode(this.formatLanguageCode(code));\n      }\n      fallbackCodes.forEach(fc => {\n        if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }\n  const suffixesOrder = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    few: 3,\n    many: 4,\n    other: 5\n  };\n  const dummyRule = {\n    select: count => count === 1 ? 'one' : 'other',\n    resolvedOptions: () => ({\n      pluralCategories: ['one', 'other']\n    })\n  };\n  class PluralResolver {\n    constructor(languageUtils, options = {}) {\n      this.languageUtils = languageUtils;\n      this.options = options;\n      this.logger = baseLogger.create('pluralResolver');\n      this.pluralRulesCache = {};\n    }\n    addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n    clearCache() {\n      this.pluralRulesCache = {};\n    }\n    getRule(code, options = {}) {\n      const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n      const type = options.ordinal ? 'ordinal' : 'cardinal';\n      const cacheKey = JSON.stringify({\n        cleanedCode,\n        type\n      });\n      if (cacheKey in this.pluralRulesCache) {\n        return this.pluralRulesCache[cacheKey];\n      }\n      let rule;\n      try {\n        rule = new Intl.PluralRules(cleanedCode, {\n          type\n        });\n      } catch (err) {\n        if (!Intl) {\n          this.logger.error('No Intl support, please use an Intl polyfill!');\n          return dummyRule;\n        }\n        if (!code.match(/-|_/)) return dummyRule;\n        const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n        rule = this.getRule(lngPart, options);\n      }\n      this.pluralRulesCache[cacheKey] = rule;\n      return rule;\n    }\n    needsPlural(code, options = {}) {\n      let rule = this.getRule(code, options);\n      if (!rule) rule = this.getRule('dev', options);\n      return rule?.resolvedOptions().pluralCategories.length > 1;\n    }\n    getPluralFormsOfKey(code, key, options = {}) {\n      return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n    }\n    getSuffixes(code, options = {}) {\n      let rule = this.getRule(code, options);\n      if (!rule) rule = this.getRule('dev', options);\n      if (!rule) return [];\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    getSuffix(code, count, options = {}) {\n      const rule = this.getRule(code, options);\n      if (rule) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      this.logger.warn(`no plural rule found for: ${code}`);\n      return this.getSuffix('dev', count, options);\n    }\n  }\n  const deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n    let path = getPathWithDefaults(data, defaultData, key);\n    if (!path && ignoreJSONStructure && isString(key)) {\n      path = deepFind(data, key, keySeparator);\n      if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n    }\n    return path;\n  };\n  const regexSafe = val => val.replace(/\\$/g, '$$$$');\n  class Interpolator {\n    constructor(options = {}) {\n      this.logger = baseLogger.create('interpolator');\n      this.options = options;\n      this.format = options?.interpolation?.format || (value => value);\n      this.init(options);\n    }\n    init(options = {}) {\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      const {\n        escape: escape$1,\n        escapeValue,\n        useRawValueToEscape,\n        prefix,\n        prefixEscaped,\n        suffix,\n        suffixEscaped,\n        formatSeparator,\n        unescapeSuffix,\n        unescapePrefix,\n        nestingPrefix,\n        nestingPrefixEscaped,\n        nestingSuffix,\n        nestingSuffixEscaped,\n        nestingOptionsSeparator,\n        maxReplaces,\n        alwaysFormat\n      } = options.interpolation;\n      this.escape = escape$1 !== undefined ? escape$1 : escape;\n      this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n      this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n      this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n      this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n      this.formatSeparator = formatSeparator || ',';\n      this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n      this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n      this.maxReplaces = maxReplaces || 1000;\n      this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n      this.resetRegExp();\n    }\n    reset() {\n      if (this.options) this.init(this.options);\n    }\n    resetRegExp() {\n      const getOrResetRegExp = (existingRegExp, pattern) => {\n        if (existingRegExp?.source === pattern) {\n          existingRegExp.lastIndex = 0;\n          return existingRegExp;\n        }\n        return new RegExp(pattern, 'g');\n      };\n      this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n      this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n      this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n    }\n    interpolate(str, data, lng, options) {\n      let match;\n      let value;\n      let replaces;\n      const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n      const handleFormat = key => {\n        if (key.indexOf(this.formatSeparator) < 0) {\n          const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n          return this.alwaysFormat ? this.format(path, undefined, lng, {\n            ...options,\n            ...data,\n            interpolationkey: key\n          }) : path;\n        }\n        const p = key.split(this.formatSeparator);\n        const k = p.shift().trim();\n        const f = p.join(this.formatSeparator).trim();\n        return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n          ...options,\n          ...data,\n          interpolationkey: k\n        });\n      };\n      this.resetRegExp();\n      const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n      const todos = [{\n        regex: this.regexpUnescape,\n        safeValue: val => regexSafe(val)\n      }, {\n        regex: this.regexp,\n        safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n      }];\n      todos.forEach(todo => {\n        replaces = 0;\n        while (match = todo.regex.exec(str)) {\n          const matchedVar = match[1].trim();\n          value = handleFormat(matchedVar);\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              const temp = missingInterpolationHandler(str, match, options);\n              value = isString(temp) ? temp : '';\n            } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n              value = '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n              value = '';\n            }\n          } else if (!isString(value) && !this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n          const safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n          if (skipOnVariables) {\n            todo.regex.lastIndex += value.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n          replaces++;\n          if (replaces >= this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n    nest(str, fc, options = {}) {\n      let match;\n      let value;\n      let clonedOptions;\n      const handleHasOptions = (key, inheritedOptions) => {\n        const sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        const c = key.split(new RegExp(`${sep}[ ]*{`));\n        let optionsString = `{${c[1]}`;\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        const matchedSingleQuotes = optionsString.match(/'/g);\n        const matchedDoubleQuotes = optionsString.match(/\"/g);\n        if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n          optionsString = optionsString.replace(/'/g, '\"');\n        }\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = {\n            ...inheritedOptions,\n            ...clonedOptions\n          };\n        } catch (e) {\n          this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n          return `${key}${sep}${optionsString}`;\n        }\n        if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n        return key;\n      };\n      while (match = this.nestingRegexp.exec(str)) {\n        let formatters = [];\n        clonedOptions = {\n          ...options\n        };\n        clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n        clonedOptions.applyPostProcessor = false;\n        delete clonedOptions.defaultValue;\n        const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n        if (keyEndIndex !== -1) {\n          formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n          match[1] = match[1].slice(0, keyEndIndex);\n        }\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && !isString(value)) return value;\n        if (!isString(value)) value = makeString(value);\n        if (!value) {\n          this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n          value = '';\n        }\n        if (formatters.length) {\n          value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n            ...options,\n            interpolationkey: match[1].trim()\n          }), value.trim());\n        }\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n      return str;\n    }\n  }\n  const parseFormatStr = formatStr => {\n    let formatName = formatStr.toLowerCase().trim();\n    const formatOptions = {};\n    if (formatStr.indexOf('(') > -1) {\n      const p = formatStr.split('(');\n      formatName = p[0].toLowerCase().trim();\n      const optStr = p[1].substring(0, p[1].length - 1);\n      if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n        if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n      } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n        if (!formatOptions.range) formatOptions.range = optStr.trim();\n      } else {\n        const opts = optStr.split(';');\n        opts.forEach(opt => {\n          if (opt) {\n            const [key, ...rest] = opt.split(':');\n            const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n            const trimmedKey = key.trim();\n            if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n            if (val === 'false') formatOptions[trimmedKey] = false;\n            if (val === 'true') formatOptions[trimmedKey] = true;\n            if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n          }\n        });\n      }\n    }\n    return {\n      formatName,\n      formatOptions\n    };\n  };\n  const createCachedFormatter = fn => {\n    const cache = {};\n    return (v, l, o) => {\n      let optForCache = o;\n      if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n        optForCache = {\n          ...optForCache,\n          [o.interpolationkey]: undefined\n        };\n      }\n      const key = l + JSON.stringify(optForCache);\n      let frm = cache[key];\n      if (!frm) {\n        frm = fn(getCleanedCode(l), o);\n        cache[key] = frm;\n      }\n      return frm(v);\n    };\n  };\n  const createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\n  class Formatter {\n    constructor(options = {}) {\n      this.logger = baseLogger.create('formatter');\n      this.options = options;\n      this.init(options);\n    }\n    init(services, options = {\n      interpolation: {}\n    }) {\n      this.formatSeparator = options.interpolation.formatSeparator || ',';\n      const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n      this.formats = {\n        number: cf((lng, opt) => {\n          const formatter = new Intl.NumberFormat(lng, {\n            ...opt\n          });\n          return val => formatter.format(val);\n        }),\n        currency: cf((lng, opt) => {\n          const formatter = new Intl.NumberFormat(lng, {\n            ...opt,\n            style: 'currency'\n          });\n          return val => formatter.format(val);\n        }),\n        datetime: cf((lng, opt) => {\n          const formatter = new Intl.DateTimeFormat(lng, {\n            ...opt\n          });\n          return val => formatter.format(val);\n        }),\n        relativetime: cf((lng, opt) => {\n          const formatter = new Intl.RelativeTimeFormat(lng, {\n            ...opt\n          });\n          return val => formatter.format(val, opt.range || 'day');\n        }),\n        list: cf((lng, opt) => {\n          const formatter = new Intl.ListFormat(lng, {\n            ...opt\n          });\n          return val => formatter.format(val);\n        })\n      };\n    }\n    add(name, fc) {\n      this.formats[name.toLowerCase().trim()] = fc;\n    }\n    addCached(name, fc) {\n      this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n    }\n    format(value, format, lng, options = {}) {\n      const formats = format.split(this.formatSeparator);\n      if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n        const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n        formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n      }\n      const result = formats.reduce((mem, f) => {\n        const {\n          formatName,\n          formatOptions\n        } = parseFormatStr(f);\n        if (this.formats[formatName]) {\n          let formatted = mem;\n          try {\n            const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n            const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n            formatted = this.formats[formatName](mem, l, {\n              ...formatOptions,\n              ...options,\n              ...valOptions\n            });\n          } catch (error) {\n            this.logger.warn(error);\n          }\n          return formatted;\n        } else {\n          this.logger.warn(`there was no format function for ${formatName}`);\n        }\n        return mem;\n      }, value);\n      return result;\n    }\n  }\n  const removePending = (q, name) => {\n    if (q.pending[name] !== undefined) {\n      delete q.pending[name];\n      q.pendingCount--;\n    }\n  };\n  class Connector extends EventEmitter {\n    constructor(backend, store, services, options = {}) {\n      super();\n      this.backend = backend;\n      this.store = store;\n      this.services = services;\n      this.languageUtils = services.languageUtils;\n      this.options = options;\n      this.logger = baseLogger.create('backendConnector');\n      this.waitingReads = [];\n      this.maxParallelReads = options.maxParallelReads || 10;\n      this.readingCalls = 0;\n      this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n      this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n      this.state = {};\n      this.queue = [];\n      this.backend?.init?.(services, options.backend, options);\n    }\n    queueLoad(languages, namespaces, options, callback) {\n      const toLoad = {};\n      const pending = {};\n      const toLoadLanguages = {};\n      const toLoadNamespaces = {};\n      languages.forEach(lng => {\n        let hasAllNamespaces = true;\n        namespaces.forEach(ns => {\n          const name = `${lng}|${ns}`;\n          if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n            this.state[name] = 2;\n          } else if (this.state[name] < 0) ;else if (this.state[name] === 1) {\n            if (pending[name] === undefined) pending[name] = true;\n          } else {\n            this.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending[name] === undefined) pending[name] = true;\n            if (toLoad[name] === undefined) toLoad[name] = true;\n            if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n      });\n      if (Object.keys(toLoad).length || Object.keys(pending).length) {\n        this.queue.push({\n          pending,\n          pendingCount: Object.keys(pending).length,\n          loaded: {},\n          errors: [],\n          callback\n        });\n      }\n      return {\n        toLoad: Object.keys(toLoad),\n        pending: Object.keys(pending),\n        toLoadLanguages: Object.keys(toLoadLanguages),\n        toLoadNamespaces: Object.keys(toLoadNamespaces)\n      };\n    }\n    loaded(name, err, data) {\n      const s = name.split('|');\n      const lng = s[0];\n      const ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n      if (!err && data) {\n        this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n          skipCopy: true\n        });\n      }\n      this.state[name] = err ? -1 : 2;\n      if (err && data) this.state[name] = 0;\n      const loaded = {};\n      this.queue.forEach(q => {\n        pushPath(q.loaded, [lng], ns);\n        removePending(q, name);\n        if (err) q.errors.push(err);\n        if (q.pendingCount === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(l => {\n            if (!loaded[l]) loaded[l] = {};\n            const loadedKeys = q.loaded[l];\n            if (loadedKeys.length) {\n              loadedKeys.forEach(n => {\n                if (loaded[l][n] === undefined) loaded[l][n] = true;\n              });\n            }\n          });\n          q.done = true;\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(q => !q.done);\n    }\n    read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n      if (!lng.length) return callback(null, {});\n      if (this.readingCalls >= this.maxParallelReads) {\n        this.waitingReads.push({\n          lng,\n          ns,\n          fcName,\n          tried,\n          wait,\n          callback\n        });\n        return;\n      }\n      this.readingCalls++;\n      const resolver = (err, data) => {\n        this.readingCalls--;\n        if (this.waitingReads.length > 0) {\n          const next = this.waitingReads.shift();\n          this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n        }\n        if (err && data && tried < this.maxRetries) {\n          setTimeout(() => {\n            this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n        callback(err, data);\n      };\n      const fc = this.backend[fcName].bind(this.backend);\n      if (fc.length === 2) {\n        try {\n          const r = fc(lng, ns);\n          if (r && typeof r.then === 'function') {\n            r.then(data => resolver(null, data)).catch(resolver);\n          } else {\n            resolver(null, r);\n          }\n        } catch (err) {\n          resolver(err);\n        }\n        return;\n      }\n      return fc(lng, ns, resolver);\n    }\n    prepareLoading(languages, namespaces, options = {}, callback) {\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n      if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n      if (isString(namespaces)) namespaces = [namespaces];\n      const toLoad = this.queueLoad(languages, namespaces, options, callback);\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n      toLoad.toLoad.forEach(name => {\n        this.loadOne(name);\n      });\n    }\n    load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n    reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n    loadOne(name, prefix = '') {\n      const s = name.split('|');\n      const lng = s[0];\n      const ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n        if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n        if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n        this.loaded(name, err, data);\n      });\n    }\n    saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n      if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n        this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n      if (key === undefined || key === null || key === '') return;\n      if (this.backend?.create) {\n        const opts = {\n          ...options,\n          isUpdate\n        };\n        const fc = this.backend.create.bind(this.backend);\n        if (fc.length < 6) {\n          try {\n            let r;\n            if (fc.length === 5) {\n              r = fc(languages, namespace, key, fallbackValue, opts);\n            } else {\n              r = fc(languages, namespace, key, fallbackValue);\n            }\n            if (r && typeof r.then === 'function') {\n              r.then(data => clb(null, data)).catch(clb);\n            } else {\n              clb(null, r);\n            }\n          } catch (err) {\n            clb(err);\n          }\n        } else {\n          fc(languages, namespace, key, fallbackValue, clb, opts);\n        }\n      }\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }\n  const get = () => ({\n    debug: false,\n    initAsync: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: false,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: args => {\n      let ret = {};\n      if (typeof args[1] === 'object') ret = args[1];\n      if (isString(args[1])) ret.defaultValue = args[1];\n      if (isString(args[2])) ret.tDescription = args[2];\n      if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n        const options = args[3] || args[2];\n        Object.keys(options).forEach(key => {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: value => value,\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    },\n    cacheInBuiltFormats: true\n  });\n  const transformOptions = options => {\n    if (isString(options.ns)) options.ns = [options.ns];\n    if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n    if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n    if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n      options.supportedLngs = options.supportedLngs.concat(['cimode']);\n    }\n    if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n    return options;\n  };\n  const noop = () => {};\n  const bindMemberFunctions = inst => {\n    const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n    mems.forEach(mem => {\n      if (typeof inst[mem] === 'function') {\n        inst[mem] = inst[mem].bind(inst);\n      }\n    });\n  };\n  class I18n extends EventEmitter {\n    constructor(options = {}, callback) {\n      super();\n      this.options = transformOptions(options);\n      this.services = {};\n      this.logger = baseLogger;\n      this.modules = {\n        external: []\n      };\n      bindMemberFunctions(this);\n      if (callback && !this.isInitialized && !options.isClone) {\n        if (!this.options.initAsync) {\n          this.init(options, callback);\n          return this;\n        }\n        setTimeout(() => {\n          this.init(options, callback);\n        }, 0);\n      }\n    }\n    init(options = {}, callback) {\n      this.isInitializing = true;\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      if (options.defaultNS == null && options.ns) {\n        if (isString(options.ns)) {\n          options.defaultNS = options.ns;\n        } else if (options.ns.indexOf('translation') < 0) {\n          options.defaultNS = options.ns[0];\n        }\n      }\n      const defOpts = get();\n      this.options = {\n        ...defOpts,\n        ...this.options,\n        ...transformOptions(options)\n      };\n      this.options.interpolation = {\n        ...defOpts.interpolation,\n        ...this.options.interpolation\n      };\n      if (options.keySeparator !== undefined) {\n        this.options.userDefinedKeySeparator = options.keySeparator;\n      }\n      if (options.nsSeparator !== undefined) {\n        this.options.userDefinedNsSeparator = options.nsSeparator;\n      }\n      const createClassOnDemand = ClassOrObject => {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      };\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n        let formatter;\n        if (this.modules.formatter) {\n          formatter = this.modules.formatter;\n        } else {\n          formatter = Formatter;\n        }\n        const lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        const s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n        if (usingLegacyFormatFunction) {\n          this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n        }\n        if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n          s.formatter = createClassOnDemand(formatter);\n          if (s.formatter.init) s.formatter.init(s, this.options);\n          this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n        }\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', (event, ...args) => {\n          this.emit(event, ...args);\n        });\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n        }\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', (event, ...args) => {\n          this.emit(event, ...args);\n        });\n        this.modules.external.forEach(m => {\n          if (m.init) m.init(this);\n        });\n      }\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n      const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(fcName => {\n        this[fcName] = (...args) => this.store[fcName](...args);\n      });\n      const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(fcName => {\n        this[fcName] = (...args) => {\n          this.store[fcName](...args);\n          return this;\n        };\n      });\n      const deferred = defer();\n      const load = () => {\n        const finish = (err, t) => {\n          this.isInitializing = false;\n          if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n          this.isInitialized = true;\n          if (!this.options.isClone) this.logger.log('initialized', this.options);\n          this.emit('initialized', this.options);\n          deferred.resolve(t);\n          callback(err, t);\n        };\n        if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n        this.changeLanguage(this.options.lng, finish);\n      };\n      if (this.options.resources || !this.options.initAsync) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n      return deferred;\n    }\n    loadResources(language, callback = noop) {\n      let usedCallback = callback;\n      const usedLng = isString(language) ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n        const toLoad = [];\n        const append = lng => {\n          if (!lng) return;\n          if (lng === 'cimode') return;\n          const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n          lngs.forEach(l => {\n            if (l === 'cimode') return;\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n        if (!usedLng) {\n          const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(l => append(l));\n        } else {\n          append(usedLng);\n        }\n        this.options.preload?.forEach?.(l => append(l));\n        this.services.backendConnector.load(toLoad, this.options.ns, e => {\n          if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n          usedCallback(e);\n        });\n      } else {\n        usedCallback(null);\n      }\n    }\n    reloadResources(lngs, ns, callback) {\n      const deferred = defer();\n      if (typeof lngs === 'function') {\n        callback = lngs;\n        lngs = undefined;\n      }\n      if (typeof ns === 'function') {\n        callback = ns;\n        ns = undefined;\n      }\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, err => {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n    use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n      if (module.type === 'formatter') {\n        this.modules.formatter = module;\n      }\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n      return this;\n    }\n    setResolvedLanguage(l) {\n      if (!l || !this.languages) return;\n      if (['cimode', 'dev'].indexOf(l) > -1) return;\n      for (let li = 0; li < this.languages.length; li++) {\n        const lngInLngs = this.languages[li];\n        if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n        if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n          this.resolvedLanguage = lngInLngs;\n          break;\n        }\n      }\n      if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n        this.resolvedLanguage = l;\n        this.languages.unshift(l);\n      }\n    }\n    changeLanguage(lng, callback) {\n      this.isLanguageChangingTo = lng;\n      const deferred = defer();\n      this.emit('languageChanging', lng);\n      const setLngProps = l => {\n        this.language = l;\n        this.languages = this.services.languageUtils.toResolveHierarchy(l);\n        this.resolvedLanguage = undefined;\n        this.setResolvedLanguage(l);\n      };\n      const done = (err, l) => {\n        if (l) {\n          if (this.isLanguageChangingTo === lng) {\n            setLngProps(l);\n            this.translator.changeLanguage(l);\n            this.isLanguageChangingTo = undefined;\n            this.emit('languageChanged', l);\n            this.logger.log('languageChanged', l);\n          }\n        } else {\n          this.isLanguageChangingTo = undefined;\n        }\n        deferred.resolve((...args) => this.t(...args));\n        if (callback) callback(err, (...args) => this.t(...args));\n      };\n      const setLng = lngs => {\n        if (!lng && !lngs && this.services.languageDetector) lngs = [];\n        const fl = isString(lngs) ? lngs : lngs && lngs[0];\n        const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n        if (l) {\n          if (!this.language) {\n            setLngProps(l);\n          }\n          if (!this.translator.language) this.translator.changeLanguage(l);\n          this.services.languageDetector?.cacheUserLanguage?.(l);\n        }\n        this.loadResources(l, err => {\n          done(err, l);\n        });\n      };\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        if (this.services.languageDetector.detect.length === 0) {\n          this.services.languageDetector.detect().then(setLng);\n        } else {\n          this.services.languageDetector.detect(setLng);\n        }\n      } else {\n        setLng(lng);\n      }\n      return deferred;\n    }\n    getFixedT(lng, ns, keyPrefix) {\n      const fixedT = (key, opts, ...rest) => {\n        let o;\n        if (typeof opts !== 'object') {\n          o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          o = {\n            ...opts\n          };\n        }\n        o.lng = o.lng || fixedT.lng;\n        o.lngs = o.lngs || fixedT.lngs;\n        o.ns = o.ns || fixedT.ns;\n        if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n        const keySeparator = this.options.keySeparator || '.';\n        let resultKey;\n        if (o.keyPrefix && Array.isArray(key)) {\n          resultKey = key.map(k => {\n            if (typeof k === 'function') k = keysFromSelector(k, {\n              ...this.options,\n              ...opts\n            });\n            return `${o.keyPrefix}${keySeparator}${k}`;\n          });\n        } else {\n          if (typeof key === 'function') key = keysFromSelector(key, {\n            ...this.options,\n            ...opts\n          });\n          resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n        }\n        return this.t(resultKey, o);\n      };\n      if (isString(lng)) {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n      fixedT.ns = ns;\n      fixedT.keyPrefix = keyPrefix;\n      return fixedT;\n    }\n    t(...args) {\n      return this.translator?.translate(...args);\n    }\n    exists(...args) {\n      return this.translator?.exists(...args);\n    }\n    setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n    hasLoadedNamespace(ns, options = {}) {\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n      const lng = options.lng || this.resolvedLanguage || this.languages[0];\n      const fallbackLng = this.options ? this.options.fallbackLng : false;\n      const lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n      const loadNotPending = (l, n) => {\n        const loadState = this.services.backendConnector.state[`${l}|${n}`];\n        return loadState === -1 || loadState === 0 || loadState === 2;\n      };\n      if (options.precheck) {\n        const preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n    loadNamespaces(ns, callback) {\n      const deferred = defer();\n      if (!this.options.ns) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n      if (isString(ns)) ns = [ns];\n      ns.forEach(n => {\n        if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n      });\n      this.loadResources(err => {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n    loadLanguages(lngs, callback) {\n      const deferred = defer();\n      if (isString(lngs)) lngs = [lngs];\n      const preloaded = this.options.preload || [];\n      const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(err => {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n    dir(lng) {\n      if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n      if (!lng) return 'rtl';\n      try {\n        const l = new Intl.Locale(lng);\n        if (l && l.getTextInfo) {\n          const ti = l.getTextInfo();\n          if (ti && ti.direction) return ti.direction;\n        }\n      } catch (e) {}\n      const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n      const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n      if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n      return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n    }\n    static createInstance(options = {}, callback) {\n      return new I18n(options, callback);\n    }\n    cloneInstance(options = {}, callback = noop) {\n      const forkResourceStore = options.forkResourceStore;\n      if (forkResourceStore) delete options.forkResourceStore;\n      const mergedOptions = {\n        ...this.options,\n        ...options,\n        ...{\n          isClone: true\n        }\n      };\n      const clone = new I18n(mergedOptions);\n      if (options.debug !== undefined || options.prefix !== undefined) {\n        clone.logger = clone.logger.clone(options);\n      }\n      const membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(m => {\n        clone[m] = this[m];\n      });\n      clone.services = {\n        ...this.services\n      };\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      if (forkResourceStore) {\n        const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n          prev[l] = {\n            ...this.store.data[l]\n          };\n          prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n            acc[n] = {\n              ...prev[l][n]\n            };\n            return acc;\n          }, prev[l]);\n          return prev;\n        }, {});\n        clone.store = new ResourceStore(clonedData, mergedOptions);\n        clone.services.resourceStore = clone.store;\n      }\n      clone.translator = new Translator(clone.services, mergedOptions);\n      clone.translator.on('*', (event, ...args) => {\n        clone.emit(event, ...args);\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = mergedOptions;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n    toJSON() {\n      return {\n        options: this.options,\n        store: this.store,\n        language: this.language,\n        languages: this.languages,\n        resolvedLanguage: this.resolvedLanguage\n      };\n    }\n  }\n  const instance = exports.default = I18n.createInstance();\n  instance.createInstance = I18n.createInstance;\n  const createInstance = exports.createInstance = instance.createInstance;\n  const dir = exports.dir = instance.dir;\n  const init = exports.init = instance.init;\n  const loadResources = exports.loadResources = instance.loadResources;\n  const reloadResources = exports.reloadResources = instance.reloadResources;\n  const use = exports.use = instance.use;\n  const changeLanguage = exports.changeLanguage = instance.changeLanguage;\n  const getFixedT = exports.getFixedT = instance.getFixedT;\n  const t = exports.t = instance.t;\n  const exists = exports.exists = instance.exists;\n  const setDefaultNamespace = exports.setDefaultNamespace = instance.setDefaultNamespace;\n  const hasLoadedNamespace = exports.hasLoadedNamespace = instance.hasLoadedNamespace;\n  const loadNamespaces = exports.loadNamespaces = instance.loadNamespaces;\n  const loadLanguages = exports.loadLanguages = instance.loadLanguages;\n});","lineCount":2191,"map":[[8,2,1,0],[8,8,1,6,"isString"],[8,16,1,14],[8,19,1,17,"obj"],[8,22,1,20],[8,26,1,24],[8,33,1,31,"obj"],[8,36,1,34],[8,41,1,39],[8,49,1,47],[9,2,2,0],[9,8,2,6,"defer"],[9,13,2,11],[9,16,2,14,"defer"],[9,17,2,14],[9,22,2,20],[10,4,3,2],[10,8,3,6,"res"],[10,11,3,9],[11,4,4,2],[11,8,4,6,"rej"],[11,11,4,9],[12,4,5,2],[12,10,5,8,"promise"],[12,17,5,15],[12,20,5,18],[12,24,5,22,"Promise"],[12,31,5,29],[12,32,5,30],[12,33,5,31,"resolve"],[12,40,5,38],[12,42,5,40,"reject"],[12,48,5,46],[12,53,5,51],[13,6,6,4,"res"],[13,9,6,7],[13,12,6,10,"resolve"],[13,19,6,17],[14,6,7,4,"rej"],[14,9,7,7],[14,12,7,10,"reject"],[14,18,7,16],[15,4,8,2],[15,5,8,3],[15,6,8,4],[16,4,9,2,"promise"],[16,11,9,9],[16,12,9,10,"resolve"],[16,19,9,17],[16,22,9,20,"res"],[16,25,9,23],[17,4,10,2,"promise"],[17,11,10,9],[17,12,10,10,"reject"],[17,18,10,16],[17,21,10,19,"rej"],[17,24,10,22],[18,4,11,2],[18,11,11,9,"promise"],[18,18,11,16],[19,2,12,0],[19,3,12,1],[20,2,13,0],[20,8,13,6,"makeString"],[20,18,13,16],[20,21,13,19,"object"],[20,27,13,25],[20,31,13,29],[21,4,14,2],[21,8,14,6,"object"],[21,14,14,12],[21,18,14,16],[21,22,14,20],[21,24,14,22],[21,31,14,29],[21,33,14,31],[22,4,15,2],[22,11,15,9],[22,13,15,11],[22,16,15,14,"object"],[22,22,15,20],[23,2,16,0],[23,3,16,1],[24,2,17,0],[24,8,17,6,"copy"],[24,12,17,10],[24,15,17,13,"copy"],[24,16,17,14,"a"],[24,17,17,15],[24,19,17,17,"s"],[24,20,17,18],[24,22,17,20,"t"],[24,23,17,21],[24,28,17,26],[25,4,18,2,"a"],[25,5,18,3],[25,6,18,4,"forEach"],[25,13,18,11],[25,14,18,12,"m"],[25,15,18,13],[25,19,18,17],[26,6,19,4],[26,10,19,8,"s"],[26,11,19,9],[26,12,19,10,"m"],[26,13,19,11],[26,14,19,12],[26,16,19,14,"t"],[26,17,19,15],[26,18,19,16,"m"],[26,19,19,17],[26,20,19,18],[26,23,19,21,"s"],[26,24,19,22],[26,25,19,23,"m"],[26,26,19,24],[26,27,19,25],[27,4,20,2],[27,5,20,3],[27,6,20,4],[28,2,21,0],[28,3,21,1],[29,2,22,0],[29,8,22,6,"lastOfPathSeparatorRegExp"],[29,33,22,31],[29,36,22,34],[29,42,22,40],[30,2,23,0],[30,8,23,6,"cleanKey"],[30,16,23,14],[30,19,23,17,"key"],[30,22,23,20],[30,26,23,24,"key"],[30,29,23,27],[30,33,23,31,"key"],[30,36,23,34],[30,37,23,35,"indexOf"],[30,44,23,42],[30,45,23,43],[30,50,23,48],[30,51,23,49],[30,54,23,52],[30,55,23,53],[30,56,23,54],[30,59,23,57,"key"],[30,62,23,60],[30,63,23,61,"replace"],[30,70,23,68],[30,71,23,69,"lastOfPathSeparatorRegExp"],[30,96,23,94],[30,98,23,96],[30,101,23,99],[30,102,23,100],[30,105,23,103,"key"],[30,108,23,106],[31,2,24,0],[31,8,24,6,"canNotTraverseDeeper"],[31,28,24,26],[31,31,24,29,"object"],[31,37,24,35],[31,41,24,39],[31,42,24,40,"object"],[31,48,24,46],[31,52,24,50,"isString"],[31,60,24,58],[31,61,24,59,"object"],[31,67,24,65],[31,68,24,66],[32,2,25,0],[32,8,25,6,"getLastOfPath"],[32,21,25,19],[32,24,25,22,"getLastOfPath"],[32,25,25,23,"object"],[32,31,25,29],[32,33,25,31,"path"],[32,37,25,35],[32,39,25,37,"Empty"],[32,44,25,42],[32,49,25,47],[33,4,26,2],[33,10,26,8,"stack"],[33,15,26,13],[33,18,26,16],[33,19,26,17,"isString"],[33,27,26,25],[33,28,26,26,"path"],[33,32,26,30],[33,33,26,31],[33,36,26,34,"path"],[33,40,26,38],[33,43,26,41,"path"],[33,47,26,45],[33,48,26,46,"split"],[33,53,26,51],[33,54,26,52],[33,57,26,55],[33,58,26,56],[34,4,27,2],[34,8,27,6,"stackIndex"],[34,18,27,16],[34,21,27,19],[34,22,27,20],[35,4,28,2],[35,11,28,9,"stackIndex"],[35,21,28,19],[35,24,28,22,"stack"],[35,29,28,27],[35,30,28,28,"length"],[35,36,28,34],[35,39,28,37],[35,40,28,38],[35,42,28,40],[36,6,29,4],[36,10,29,8,"canNotTraverseDeeper"],[36,30,29,28],[36,31,29,29,"object"],[36,37,29,35],[36,38,29,36],[36,40,29,38],[36,47,29,45],[36,48,29,46],[36,49,29,47],[37,6,30,4],[37,12,30,10,"key"],[37,15,30,13],[37,18,30,16,"cleanKey"],[37,26,30,24],[37,27,30,25,"stack"],[37,32,30,30],[37,33,30,31,"stackIndex"],[37,43,30,41],[37,44,30,42],[37,45,30,43],[38,6,31,4],[38,10,31,8],[38,11,31,9,"object"],[38,17,31,15],[38,18,31,16,"key"],[38,21,31,19],[38,22,31,20],[38,26,31,24,"Empty"],[38,31,31,29],[38,33,31,31,"object"],[38,39,31,37],[38,40,31,38,"key"],[38,43,31,41],[38,44,31,42],[38,47,31,45],[38,51,31,49,"Empty"],[38,56,31,54],[38,57,31,55],[38,58,31,56],[39,6,32,4],[39,10,32,8,"Object"],[39,16,32,14],[39,17,32,15,"prototype"],[39,26,32,24],[39,27,32,25,"hasOwnProperty"],[39,41,32,39],[39,42,32,40,"call"],[39,46,32,44],[39,47,32,45,"object"],[39,53,32,51],[39,55,32,53,"key"],[39,58,32,56],[39,59,32,57],[39,61,32,59],[40,8,33,6,"object"],[40,14,33,12],[40,17,33,15,"object"],[40,23,33,21],[40,24,33,22,"key"],[40,27,33,25],[40,28,33,26],[41,6,34,4],[41,7,34,5],[41,13,34,11],[42,8,35,6,"object"],[42,14,35,12],[42,17,35,15],[42,18,35,16],[42,19,35,17],[43,6,36,4],[44,6,37,4],[44,8,37,6,"stackIndex"],[44,18,37,16],[45,4,38,2],[46,4,39,2],[46,8,39,6,"canNotTraverseDeeper"],[46,28,39,26],[46,29,39,27,"object"],[46,35,39,33],[46,36,39,34],[46,38,39,36],[46,45,39,43],[46,46,39,44],[46,47,39,45],[47,4,40,2],[47,11,40,9],[48,6,41,4,"obj"],[48,9,41,7],[48,11,41,9,"object"],[48,17,41,15],[49,6,42,4,"k"],[49,7,42,5],[49,9,42,7,"cleanKey"],[49,17,42,15],[49,18,42,16,"stack"],[49,23,42,21],[49,24,42,22,"stackIndex"],[49,34,42,32],[49,35,42,33],[50,4,43,2],[50,5,43,3],[51,2,44,0],[51,3,44,1],[52,2,45,0],[52,8,45,6,"setPath"],[52,15,45,13],[52,18,45,16,"setPath"],[52,19,45,17,"object"],[52,25,45,23],[52,27,45,25,"path"],[52,31,45,29],[52,33,45,31,"newValue"],[52,41,45,39],[52,46,45,44],[53,4,46,2],[53,10,46,8],[54,6,47,4,"obj"],[54,9,47,7],[55,6,48,4,"k"],[56,4,49,2],[56,5,49,3],[56,8,49,6,"getLastOfPath"],[56,21,49,19],[56,22,49,20,"object"],[56,28,49,26],[56,30,49,28,"path"],[56,34,49,32],[56,36,49,34,"Object"],[56,42,49,40],[56,43,49,41],[57,4,50,2],[57,8,50,6,"obj"],[57,11,50,9],[57,16,50,14,"undefined"],[57,25,50,23],[57,29,50,27,"path"],[57,33,50,31],[57,34,50,32,"length"],[57,40,50,38],[57,45,50,43],[57,46,50,44],[57,48,50,46],[58,6,51,4,"obj"],[58,9,51,7],[58,10,51,8,"k"],[58,11,51,9],[58,12,51,10],[58,15,51,13,"newValue"],[58,23,51,21],[59,6,52,4],[60,4,53,2],[61,4,54,2],[61,8,54,6,"e"],[61,9,54,7],[61,12,54,10,"path"],[61,16,54,14],[61,17,54,15,"path"],[61,21,54,19],[61,22,54,20,"length"],[61,28,54,26],[61,31,54,29],[61,32,54,30],[61,33,54,31],[62,4,55,2],[62,8,55,6,"p"],[62,9,55,7],[62,12,55,10,"path"],[62,16,55,14],[62,17,55,15,"slice"],[62,22,55,20],[62,23,55,21],[62,24,55,22],[62,26,55,24,"path"],[62,30,55,28],[62,31,55,29,"length"],[62,37,55,35],[62,40,55,38],[62,41,55,39],[62,42,55,40],[63,4,56,2],[63,8,56,6,"last"],[63,12,56,10],[63,15,56,13,"getLastOfPath"],[63,28,56,26],[63,29,56,27,"object"],[63,35,56,33],[63,37,56,35,"p"],[63,38,56,36],[63,40,56,38,"Object"],[63,46,56,44],[63,47,56,45],[64,4,57,2],[64,11,57,9,"last"],[64,15,57,13],[64,16,57,14,"obj"],[64,19,57,17],[64,24,57,22,"undefined"],[64,33,57,31],[64,37,57,35,"p"],[64,38,57,36],[64,39,57,37,"length"],[64,45,57,43],[64,47,57,45],[65,6,58,4,"e"],[65,7,58,5],[65,10,58,8],[65,13,58,11,"p"],[65,14,58,12],[65,15,58,13,"p"],[65,16,58,14],[65,17,58,15,"length"],[65,23,58,21],[65,26,58,24],[65,27,58,25],[65,28,58,26],[65,32,58,30,"e"],[65,33,58,31],[65,35,58,33],[66,6,59,4,"p"],[66,7,59,5],[66,10,59,8,"p"],[66,11,59,9],[66,12,59,10,"slice"],[66,17,59,15],[66,18,59,16],[66,19,59,17],[66,21,59,19,"p"],[66,22,59,20],[66,23,59,21,"length"],[66,29,59,27],[66,32,59,30],[66,33,59,31],[66,34,59,32],[67,6,60,4,"last"],[67,10,60,8],[67,13,60,11,"getLastOfPath"],[67,26,60,24],[67,27,60,25,"object"],[67,33,60,31],[67,35,60,33,"p"],[67,36,60,34],[67,38,60,36,"Object"],[67,44,60,42],[67,45,60,43],[68,6,61,4],[68,10,61,8,"last"],[68,14,61,12],[68,16,61,14,"obj"],[68,19,61,17],[68,23,61,21],[68,30,61,28,"last"],[68,34,61,32],[68,35,61,33,"obj"],[68,38,61,36],[68,39,61,37],[68,42,61,40,"last"],[68,46,61,44],[68,47,61,45,"k"],[68,48,61,46],[68,52,61,50,"e"],[68,53,61,51],[68,55,61,53],[68,56,61,54],[68,61,61,59],[68,72,61,70],[68,74,61,72],[69,8,62,6,"last"],[69,12,62,10],[69,13,62,11,"obj"],[69,16,62,14],[69,19,62,17,"undefined"],[69,28,62,26],[70,6,63,4],[71,4,64,2],[72,4,65,2,"last"],[72,8,65,6],[72,9,65,7,"obj"],[72,12,65,10],[72,13,65,11],[72,16,65,14,"last"],[72,20,65,18],[72,21,65,19,"k"],[72,22,65,20],[72,26,65,24,"e"],[72,27,65,25],[72,29,65,27],[72,30,65,28],[72,33,65,31,"newValue"],[72,41,65,39],[73,2,66,0],[73,3,66,1],[74,2,67,0],[74,8,67,6,"pushPath"],[74,16,67,14],[74,19,67,17,"pushPath"],[74,20,67,18,"object"],[74,26,67,24],[74,28,67,26,"path"],[74,32,67,30],[74,34,67,32,"newValue"],[74,42,67,40],[74,44,67,42,"concat"],[74,50,67,48],[74,55,67,53],[75,4,68,2],[75,10,68,8],[76,6,69,4,"obj"],[76,9,69,7],[77,6,70,4,"k"],[78,4,71,2],[78,5,71,3],[78,8,71,6,"getLastOfPath"],[78,21,71,19],[78,22,71,20,"object"],[78,28,71,26],[78,30,71,28,"path"],[78,34,71,32],[78,36,71,34,"Object"],[78,42,71,40],[78,43,71,41],[79,4,72,2,"obj"],[79,7,72,5],[79,8,72,6,"k"],[79,9,72,7],[79,10,72,8],[79,13,72,11,"obj"],[79,16,72,14],[79,17,72,15,"k"],[79,18,72,16],[79,19,72,17],[79,23,72,21],[79,25,72,23],[80,4,73,2,"obj"],[80,7,73,5],[80,8,73,6,"k"],[80,9,73,7],[80,10,73,8],[80,11,73,9,"push"],[80,15,73,13],[80,16,73,14,"newValue"],[80,24,73,22],[80,25,73,23],[81,2,74,0],[81,3,74,1],[82,2,75,0],[82,8,75,6,"getPath"],[82,15,75,13],[82,18,75,16,"getPath"],[82,19,75,17,"object"],[82,25,75,23],[82,27,75,25,"path"],[82,31,75,29],[82,36,75,34],[83,4,76,2],[83,10,76,8],[84,6,77,4,"obj"],[84,9,77,7],[85,6,78,4,"k"],[86,4,79,2],[86,5,79,3],[86,8,79,6,"getLastOfPath"],[86,21,79,19],[86,22,79,20,"object"],[86,28,79,26],[86,30,79,28,"path"],[86,34,79,32],[86,35,79,33],[87,4,80,2],[87,8,80,6],[87,9,80,7,"obj"],[87,12,80,10],[87,14,80,12],[87,21,80,19,"undefined"],[87,30,80,28],[88,4,81,2],[88,8,81,6],[88,9,81,7,"Object"],[88,15,81,13],[88,16,81,14,"prototype"],[88,25,81,23],[88,26,81,24,"hasOwnProperty"],[88,40,81,38],[88,41,81,39,"call"],[88,45,81,43],[88,46,81,44,"obj"],[88,49,81,47],[88,51,81,49,"k"],[88,52,81,50],[88,53,81,51],[88,55,81,53],[88,62,81,60,"undefined"],[88,71,81,69],[89,4,82,2],[89,11,82,9,"obj"],[89,14,82,12],[89,15,82,13,"k"],[89,16,82,14],[89,17,82,15],[90,2,83,0],[90,3,83,1],[91,2,84,0],[91,8,84,6,"getPathWithDefaults"],[91,27,84,25],[91,30,84,28,"getPathWithDefaults"],[91,31,84,29,"data"],[91,35,84,33],[91,37,84,35,"defaultData"],[91,48,84,46],[91,50,84,48,"key"],[91,53,84,51],[91,58,84,56],[92,4,85,2],[92,10,85,8,"value"],[92,15,85,13],[92,18,85,16,"getPath"],[92,25,85,23],[92,26,85,24,"data"],[92,30,85,28],[92,32,85,30,"key"],[92,35,85,33],[92,36,85,34],[93,4,86,2],[93,8,86,6,"value"],[93,13,86,11],[93,18,86,16,"undefined"],[93,27,86,25],[93,29,86,27],[94,6,87,4],[94,13,87,11,"value"],[94,18,87,16],[95,4,88,2],[96,4,89,2],[96,11,89,9,"getPath"],[96,18,89,16],[96,19,89,17,"defaultData"],[96,30,89,28],[96,32,89,30,"key"],[96,35,89,33],[96,36,89,34],[97,2,90,0],[97,3,90,1],[98,2,91,0],[98,8,91,6,"deepExtend"],[98,18,91,16],[98,21,91,19,"deepExtend"],[98,22,91,20,"target"],[98,28,91,26],[98,30,91,28,"source"],[98,36,91,34],[98,38,91,36,"overwrite"],[98,47,91,45],[98,52,91,50],[99,4,92,2],[99,9,92,7],[99,15,92,13,"prop"],[99,19,92,17],[99,23,92,21,"source"],[99,29,92,27],[99,31,92,29],[100,6,93,4],[100,10,93,8,"prop"],[100,14,93,12],[100,19,93,17],[100,30,93,28],[100,34,93,32,"prop"],[100,38,93,36],[100,43,93,41],[100,56,93,54],[100,58,93,56],[101,8,94,6],[101,12,94,10,"prop"],[101,16,94,14],[101,20,94,18,"target"],[101,26,94,24],[101,28,94,26],[102,10,95,8],[102,14,95,12,"isString"],[102,22,95,20],[102,23,95,21,"target"],[102,29,95,27],[102,30,95,28,"prop"],[102,34,95,32],[102,35,95,33],[102,36,95,34],[102,40,95,38,"target"],[102,46,95,44],[102,47,95,45,"prop"],[102,51,95,49],[102,52,95,50],[102,64,95,62,"String"],[102,70,95,68],[102,74,95,72,"isString"],[102,82,95,80],[102,83,95,81,"source"],[102,89,95,87],[102,90,95,88,"prop"],[102,94,95,92],[102,95,95,93],[102,96,95,94],[102,100,95,98,"source"],[102,106,95,104],[102,107,95,105,"prop"],[102,111,95,109],[102,112,95,110],[102,124,95,122,"String"],[102,130,95,128],[102,132,95,130],[103,12,96,10],[103,16,96,14,"overwrite"],[103,25,96,23],[103,27,96,25,"target"],[103,33,96,31],[103,34,96,32,"prop"],[103,38,96,36],[103,39,96,37],[103,42,96,40,"source"],[103,48,96,46],[103,49,96,47,"prop"],[103,53,96,51],[103,54,96,52],[104,10,97,8],[104,11,97,9],[104,17,97,15],[105,12,98,10,"deepExtend"],[105,22,98,20],[105,23,98,21,"target"],[105,29,98,27],[105,30,98,28,"prop"],[105,34,98,32],[105,35,98,33],[105,37,98,35,"source"],[105,43,98,41],[105,44,98,42,"prop"],[105,48,98,46],[105,49,98,47],[105,51,98,49,"overwrite"],[105,60,98,58],[105,61,98,59],[106,10,99,8],[107,8,100,6],[107,9,100,7],[107,15,100,13],[108,10,101,8,"target"],[108,16,101,14],[108,17,101,15,"prop"],[108,21,101,19],[108,22,101,20],[108,25,101,23,"source"],[108,31,101,29],[108,32,101,30,"prop"],[108,36,101,34],[108,37,101,35],[109,8,102,6],[110,6,103,4],[111,4,104,2],[112,4,105,2],[112,11,105,9,"target"],[112,17,105,15],[113,2,106,0],[113,3,106,1],[114,2,107,0],[114,8,107,6,"regexEscape"],[114,19,107,17],[114,22,107,20,"str"],[114,25,107,23],[114,29,107,27,"str"],[114,32,107,30],[114,33,107,31,"replace"],[114,40,107,38],[114,41,107,39],[114,78,107,76],[114,80,107,78],[114,86,107,84],[114,87,107,85],[115,2,108,0],[115,6,108,4,"_entityMap"],[115,16,108,14],[115,19,108,17],[116,4,109,2],[116,7,109,5],[116,9,109,7],[116,16,109,14],[117,4,110,2],[117,7,110,5],[117,9,110,7],[117,15,110,13],[118,4,111,2],[118,7,111,5],[118,9,111,7],[118,15,111,13],[119,4,112,2],[119,7,112,5],[119,9,112,7],[119,17,112,15],[120,4,113,2],[120,7,113,5],[120,9,113,7],[120,16,113,14],[121,4,114,2],[121,7,114,5],[121,9,114,7],[122,2,115,0],[122,3,115,1],[123,2,116,0],[123,8,116,6,"escape"],[123,14,116,12],[123,17,116,15,"data"],[123,21,116,19],[123,25,116,23],[124,4,117,2],[124,8,117,6,"isString"],[124,16,117,14],[124,17,117,15,"data"],[124,21,117,19],[124,22,117,20],[124,24,117,22],[125,6,118,4],[125,13,118,11,"data"],[125,17,118,15],[125,18,118,16,"replace"],[125,25,118,23],[125,26,118,24],[125,38,118,36],[125,40,118,38,"s"],[125,41,118,39],[125,45,118,43,"_entityMap"],[125,55,118,53],[125,56,118,54,"s"],[125,57,118,55],[125,58,118,56],[125,59,118,57],[126,4,119,2],[127,4,120,2],[127,11,120,9,"data"],[127,15,120,13],[128,2,121,0],[128,3,121,1],[129,2,122,0],[129,8,122,6,"RegExpCache"],[129,19,122,17],[129,20,122,18],[130,4,123,2,"constructor"],[130,15,123,13,"constructor"],[130,16,123,14,"capacity"],[130,24,123,22],[130,26,123,24],[131,6,124,4],[131,10,124,8],[131,11,124,9,"capacity"],[131,19,124,17],[131,22,124,20,"capacity"],[131,30,124,28],[132,6,125,4],[132,10,125,8],[132,11,125,9,"regExpMap"],[132,20,125,18],[132,23,125,21],[132,27,125,25,"Map"],[132,30,125,28],[132,31,125,29],[132,32,125,30],[133,6,126,4],[133,10,126,8],[133,11,126,9,"regExpQueue"],[133,22,126,20],[133,25,126,23],[133,27,126,25],[134,4,127,2],[135,4,128,2,"getRegExp"],[135,13,128,11,"getRegExp"],[135,14,128,12,"pattern"],[135,21,128,19],[135,23,128,21],[136,6,129,4],[136,12,129,10,"regExpFromCache"],[136,27,129,25],[136,30,129,28],[136,34,129,32],[136,35,129,33,"regExpMap"],[136,44,129,42],[136,45,129,43,"get"],[136,48,129,46],[136,49,129,47,"pattern"],[136,56,129,54],[136,57,129,55],[137,6,130,4],[137,10,130,8,"regExpFromCache"],[137,25,130,23],[137,30,130,28,"undefined"],[137,39,130,37],[137,41,130,39],[138,8,131,6],[138,15,131,13,"regExpFromCache"],[138,30,131,28],[139,6,132,4],[140,6,133,4],[140,12,133,10,"regExpNew"],[140,21,133,19],[140,24,133,22],[140,28,133,26,"RegExp"],[140,34,133,32],[140,35,133,33,"pattern"],[140,42,133,40],[140,43,133,41],[141,6,134,4],[141,10,134,8],[141,14,134,12],[141,15,134,13,"regExpQueue"],[141,26,134,24],[141,27,134,25,"length"],[141,33,134,31],[141,38,134,36],[141,42,134,40],[141,43,134,41,"capacity"],[141,51,134,49],[141,53,134,51],[142,8,135,6],[142,12,135,10],[142,13,135,11,"regExpMap"],[142,22,135,20],[142,23,135,21,"delete"],[142,29,135,27],[142,30,135,28],[142,34,135,32],[142,35,135,33,"regExpQueue"],[142,46,135,44],[142,47,135,45,"shift"],[142,52,135,50],[142,53,135,51],[142,54,135,52],[142,55,135,53],[143,6,136,4],[144,6,137,4],[144,10,137,8],[144,11,137,9,"regExpMap"],[144,20,137,18],[144,21,137,19,"set"],[144,24,137,22],[144,25,137,23,"pattern"],[144,32,137,30],[144,34,137,32,"regExpNew"],[144,43,137,41],[144,44,137,42],[145,6,138,4],[145,10,138,8],[145,11,138,9,"regExpQueue"],[145,22,138,20],[145,23,138,21,"push"],[145,27,138,25],[145,28,138,26,"pattern"],[145,35,138,33],[145,36,138,34],[146,6,139,4],[146,13,139,11,"regExpNew"],[146,22,139,20],[147,4,140,2],[148,2,141,0],[149,2,142,0],[149,8,142,6,"chars"],[149,13,142,11],[149,16,142,14],[149,17,142,15],[149,20,142,18],[149,22,142,20],[149,25,142,23],[149,27,142,25],[149,30,142,28],[149,32,142,30],[149,35,142,33],[149,37,142,35],[149,40,142,38],[149,41,142,39],[150,2,143,0],[150,8,143,6,"looksLikeObjectPathRegExpCache"],[150,38,143,36],[150,41,143,39],[150,45,143,43,"RegExpCache"],[150,56,143,54],[150,57,143,55],[150,59,143,57],[150,60,143,58],[151,2,144,0],[151,8,144,6,"looksLikeObjectPath"],[151,27,144,25],[151,30,144,28,"looksLikeObjectPath"],[151,31,144,29,"key"],[151,34,144,32],[151,36,144,34,"nsSeparator"],[151,47,144,45],[151,49,144,47,"keySeparator"],[151,61,144,59],[151,66,144,64],[152,4,145,2,"nsSeparator"],[152,15,145,13],[152,18,145,16,"nsSeparator"],[152,29,145,27],[152,33,145,31],[152,35,145,33],[153,4,146,2,"keySeparator"],[153,16,146,14],[153,19,146,17,"keySeparator"],[153,31,146,29],[153,35,146,33],[153,37,146,35],[154,4,147,2],[154,10,147,8,"possibleChars"],[154,23,147,21],[154,26,147,24,"chars"],[154,31,147,29],[154,32,147,30,"filter"],[154,38,147,36],[154,39,147,37,"c"],[154,40,147,38],[154,44,147,42,"nsSeparator"],[154,55,147,53],[154,56,147,54,"indexOf"],[154,63,147,61],[154,64,147,62,"c"],[154,65,147,63],[154,66,147,64],[154,69,147,67],[154,70,147,68],[154,74,147,72,"keySeparator"],[154,86,147,84],[154,87,147,85,"indexOf"],[154,94,147,92],[154,95,147,93,"c"],[154,96,147,94],[154,97,147,95],[154,100,147,98],[154,101,147,99],[154,102,147,100],[155,4,148,2],[155,8,148,6,"possibleChars"],[155,21,148,19],[155,22,148,20,"length"],[155,28,148,26],[155,33,148,31],[155,34,148,32],[155,36,148,34],[155,43,148,41],[155,47,148,45],[156,4,149,2],[156,10,149,8,"r"],[156,11,149,9],[156,14,149,12,"looksLikeObjectPathRegExpCache"],[156,44,149,42],[156,45,149,43,"getRegExp"],[156,54,149,52],[156,55,149,53],[156,59,149,57,"possibleChars"],[156,72,149,70],[156,73,149,71,"map"],[156,76,149,74],[156,77,149,75,"c"],[156,78,149,76],[156,82,149,80,"c"],[156,83,149,81],[156,88,149,86],[156,91,149,89],[156,94,149,92],[156,99,149,97],[156,102,149,100,"c"],[156,103,149,101],[156,104,149,102],[156,105,149,103,"join"],[156,109,149,107],[156,110,149,108],[156,113,149,111],[156,114,149,112],[156,117,149,115],[156,118,149,116],[157,4,150,2],[157,8,150,6,"matched"],[157,15,150,13],[157,18,150,16],[157,19,150,17,"r"],[157,20,150,18],[157,21,150,19,"test"],[157,25,150,23],[157,26,150,24,"key"],[157,29,150,27],[157,30,150,28],[158,4,151,2],[158,8,151,6],[158,9,151,7,"matched"],[158,16,151,14],[158,18,151,16],[159,6,152,4],[159,12,152,10,"ki"],[159,14,152,12],[159,17,152,15,"key"],[159,20,152,18],[159,21,152,19,"indexOf"],[159,28,152,26],[159,29,152,27,"keySeparator"],[159,41,152,39],[159,42,152,40],[160,6,153,4],[160,10,153,8,"ki"],[160,12,153,10],[160,15,153,13],[160,16,153,14],[160,20,153,18],[160,21,153,19,"r"],[160,22,153,20],[160,23,153,21,"test"],[160,27,153,25],[160,28,153,26,"key"],[160,31,153,29],[160,32,153,30,"substring"],[160,41,153,39],[160,42,153,40],[160,43,153,41],[160,45,153,43,"ki"],[160,47,153,45],[160,48,153,46],[160,49,153,47],[160,51,153,49],[161,8,154,6,"matched"],[161,15,154,13],[161,18,154,16],[161,22,154,20],[162,6,155,4],[163,4,156,2],[164,4,157,2],[164,11,157,9,"matched"],[164,18,157,16],[165,2,158,0],[165,3,158,1],[166,2,159,0],[166,8,159,6,"deepFind"],[166,16,159,14],[166,19,159,17,"deepFind"],[166,20,159,18,"obj"],[166,23,159,21],[166,25,159,23,"path"],[166,29,159,27],[166,31,159,29,"keySeparator"],[166,43,159,41],[166,46,159,44],[166,49,159,47],[166,54,159,52],[167,4,160,2],[167,8,160,6],[167,9,160,7,"obj"],[167,12,160,10],[167,14,160,12],[167,21,160,19,"undefined"],[167,30,160,28],[168,4,161,2],[168,8,161,6,"obj"],[168,11,161,9],[168,12,161,10,"path"],[168,16,161,14],[168,17,161,15],[168,19,161,17],[169,6,162,4],[169,10,162,8],[169,11,162,9,"Object"],[169,17,162,15],[169,18,162,16,"prototype"],[169,27,162,25],[169,28,162,26,"hasOwnProperty"],[169,42,162,40],[169,43,162,41,"call"],[169,47,162,45],[169,48,162,46,"obj"],[169,51,162,49],[169,53,162,51,"path"],[169,57,162,55],[169,58,162,56],[169,60,162,58],[169,67,162,65,"undefined"],[169,76,162,74],[170,6,163,4],[170,13,163,11,"obj"],[170,16,163,14],[170,17,163,15,"path"],[170,21,163,19],[170,22,163,20],[171,4,164,2],[172,4,165,2],[172,10,165,8,"tokens"],[172,16,165,14],[172,19,165,17,"path"],[172,23,165,21],[172,24,165,22,"split"],[172,29,165,27],[172,30,165,28,"keySeparator"],[172,42,165,40],[172,43,165,41],[173,4,166,2],[173,8,166,6,"current"],[173,15,166,13],[173,18,166,16,"obj"],[173,21,166,19],[174,4,167,2],[174,9,167,7],[174,13,167,11,"i"],[174,14,167,12],[174,17,167,15],[174,18,167,16],[174,20,167,18,"i"],[174,21,167,19],[174,24,167,22,"tokens"],[174,30,167,28],[174,31,167,29,"length"],[174,37,167,35],[174,40,167,38],[175,6,168,4],[175,10,168,8],[175,11,168,9,"current"],[175,18,168,16],[175,22,168,20],[175,29,168,27,"current"],[175,36,168,34],[175,41,168,39],[175,49,168,47],[175,51,168,49],[176,8,169,6],[176,15,169,13,"undefined"],[176,24,169,22],[177,6,170,4],[178,6,171,4],[178,10,171,8,"next"],[178,14,171,12],[179,6,172,4],[179,10,172,8,"nextPath"],[179,18,172,16],[179,21,172,19],[179,23,172,21],[180,6,173,4],[180,11,173,9],[180,15,173,13,"j"],[180,16,173,14],[180,19,173,17,"i"],[180,20,173,18],[180,22,173,20,"j"],[180,23,173,21],[180,26,173,24,"tokens"],[180,32,173,30],[180,33,173,31,"length"],[180,39,173,37],[180,41,173,39],[180,43,173,41,"j"],[180,44,173,42],[180,46,173,44],[181,8,174,6],[181,12,174,10,"j"],[181,13,174,11],[181,18,174,16,"i"],[181,19,174,17],[181,21,174,19],[182,10,175,8,"nextPath"],[182,18,175,16],[182,22,175,20,"keySeparator"],[182,34,175,32],[183,8,176,6],[184,8,177,6,"nextPath"],[184,16,177,14],[184,20,177,18,"tokens"],[184,26,177,24],[184,27,177,25,"j"],[184,28,177,26],[184,29,177,27],[185,8,178,6,"next"],[185,12,178,10],[185,15,178,13,"current"],[185,22,178,20],[185,23,178,21,"nextPath"],[185,31,178,29],[185,32,178,30],[186,8,179,6],[186,12,179,10,"next"],[186,16,179,14],[186,21,179,19,"undefined"],[186,30,179,28],[186,32,179,30],[187,10,180,8],[187,14,180,12],[187,15,180,13],[187,23,180,21],[187,25,180,23],[187,33,180,31],[187,35,180,33],[187,44,180,42],[187,45,180,43],[187,46,180,44,"indexOf"],[187,53,180,51],[187,54,180,52],[187,61,180,59,"next"],[187,65,180,63],[187,66,180,64],[187,69,180,67],[187,70,180,68],[187,71,180,69],[187,75,180,73,"j"],[187,76,180,74],[187,79,180,77,"tokens"],[187,85,180,83],[187,86,180,84,"length"],[187,92,180,90],[187,95,180,93],[187,96,180,94],[187,98,180,96],[188,12,181,10],[189,10,182,8],[190,10,183,8,"i"],[190,11,183,9],[190,15,183,13,"j"],[190,16,183,14],[190,19,183,17,"i"],[190,20,183,18],[190,23,183,21],[190,24,183,22],[191,10,184,8],[192,8,185,6],[193,6,186,4],[194,6,187,4,"current"],[194,13,187,11],[194,16,187,14,"next"],[194,20,187,18],[195,4,188,2],[196,4,189,2],[196,11,189,9,"current"],[196,18,189,16],[197,2,190,0],[197,3,190,1],[198,2,191,0],[198,8,191,6,"getCleanedCode"],[198,22,191,20],[198,25,191,23,"code"],[198,29,191,27],[198,33,191,31,"code"],[198,37,191,35],[198,39,191,37,"replace"],[198,46,191,44],[198,47,191,45],[198,50,191,48],[198,52,191,50],[198,55,191,53],[198,56,191,54],[199,2,193,0],[199,8,193,6,"consoleLogger"],[199,21,193,19],[199,24,193,22],[200,4,194,2,"type"],[200,8,194,6],[200,10,194,8],[200,18,194,16],[201,4,195,2,"log"],[201,7,195,5,"log"],[201,8,195,6,"args"],[201,12,195,10],[201,14,195,12],[202,6,196,4],[202,10,196,8],[202,11,196,9,"output"],[202,17,196,15],[202,18,196,16],[202,23,196,21],[202,25,196,23,"args"],[202,29,196,27],[202,30,196,28],[203,4,197,2],[203,5,197,3],[204,4,198,2,"warn"],[204,8,198,6,"warn"],[204,9,198,7,"args"],[204,13,198,11],[204,15,198,13],[205,6,199,4],[205,10,199,8],[205,11,199,9,"output"],[205,17,199,15],[205,18,199,16],[205,24,199,22],[205,26,199,24,"args"],[205,30,199,28],[205,31,199,29],[206,4,200,2],[206,5,200,3],[207,4,201,2,"error"],[207,9,201,7,"error"],[207,10,201,8,"args"],[207,14,201,12],[207,16,201,14],[208,6,202,4],[208,10,202,8],[208,11,202,9,"output"],[208,17,202,15],[208,18,202,16],[208,25,202,23],[208,27,202,25,"args"],[208,31,202,29],[208,32,202,30],[209,4,203,2],[209,5,203,3],[210,4,204,2,"output"],[210,10,204,8,"output"],[210,11,204,9,"type"],[210,15,204,13],[210,17,204,15,"args"],[210,21,204,19],[210,23,204,21],[211,6,205,4,"console"],[211,13,205,11],[211,16,205,14,"type"],[211,20,205,18],[211,21,205,19],[211,23,205,21,"apply"],[211,28,205,26],[211,31,205,29,"console"],[211,38,205,36],[211,40,205,38,"args"],[211,44,205,42],[211,45,205,43],[212,4,206,2],[213,2,207,0],[213,3,207,1],[214,2,208,0],[214,8,208,6,"Logger"],[214,14,208,12],[214,15,208,13],[215,4,209,2,"constructor"],[215,15,209,13,"constructor"],[215,16,209,14,"concreteLogger"],[215,30,209,28],[215,32,209,30,"options"],[215,39,209,37],[215,42,209,40],[215,43,209,41],[215,44,209,42],[215,46,209,44],[216,6,210,4],[216,10,210,8],[216,11,210,9,"init"],[216,15,210,13],[216,16,210,14,"concreteLogger"],[216,30,210,28],[216,32,210,30,"options"],[216,39,210,37],[216,40,210,38],[217,4,211,2],[218,4,212,2,"init"],[218,8,212,6,"init"],[218,9,212,7,"concreteLogger"],[218,23,212,21],[218,25,212,23,"options"],[218,32,212,30],[218,35,212,33],[218,36,212,34],[218,37,212,35],[218,39,212,37],[219,6,213,4],[219,10,213,8],[219,11,213,9,"prefix"],[219,17,213,15],[219,20,213,18,"options"],[219,27,213,25],[219,28,213,26,"prefix"],[219,34,213,32],[219,38,213,36],[219,48,213,46],[220,6,214,4],[220,10,214,8],[220,11,214,9,"logger"],[220,17,214,15],[220,20,214,18,"concreteLogger"],[220,34,214,32],[220,38,214,36,"consoleLogger"],[220,51,214,49],[221,6,215,4],[221,10,215,8],[221,11,215,9,"options"],[221,18,215,16],[221,21,215,19,"options"],[221,28,215,26],[222,6,216,4],[222,10,216,8],[222,11,216,9,"debug"],[222,16,216,14],[222,19,216,17,"options"],[222,26,216,24],[222,27,216,25,"debug"],[222,32,216,30],[223,4,217,2],[224,4,218,2,"log"],[224,7,218,5,"log"],[224,8,218,6],[224,11,218,9,"args"],[224,15,218,13],[224,17,218,15],[225,6,219,4],[225,13,219,11],[225,17,219,15],[225,18,219,16,"forward"],[225,25,219,23],[225,26,219,24,"args"],[225,30,219,28],[225,32,219,30],[225,37,219,35],[225,39,219,37],[225,41,219,39],[225,43,219,41],[225,47,219,45],[225,48,219,46],[226,4,220,2],[227,4,221,2,"warn"],[227,8,221,6,"warn"],[227,9,221,7],[227,12,221,10,"args"],[227,16,221,14],[227,18,221,16],[228,6,222,4],[228,13,222,11],[228,17,222,15],[228,18,222,16,"forward"],[228,25,222,23],[228,26,222,24,"args"],[228,30,222,28],[228,32,222,30],[228,38,222,36],[228,40,222,38],[228,42,222,40],[228,44,222,42],[228,48,222,46],[228,49,222,47],[229,4,223,2],[230,4,224,2,"error"],[230,9,224,7,"error"],[230,10,224,8],[230,13,224,11,"args"],[230,17,224,15],[230,19,224,17],[231,6,225,4],[231,13,225,11],[231,17,225,15],[231,18,225,16,"forward"],[231,25,225,23],[231,26,225,24,"args"],[231,30,225,28],[231,32,225,30],[231,39,225,37],[231,41,225,39],[231,43,225,41],[231,44,225,42],[232,4,226,2],[233,4,227,2,"deprecate"],[233,13,227,11,"deprecate"],[233,14,227,12],[233,17,227,15,"args"],[233,21,227,19],[233,23,227,21],[234,6,228,4],[234,13,228,11],[234,17,228,15],[234,18,228,16,"forward"],[234,25,228,23],[234,26,228,24,"args"],[234,30,228,28],[234,32,228,30],[234,38,228,36],[234,40,228,38],[234,62,228,60],[234,64,228,62],[234,68,228,66],[234,69,228,67],[235,4,229,2],[236,4,230,2,"forward"],[236,11,230,9,"forward"],[236,12,230,10,"args"],[236,16,230,14],[236,18,230,16,"lvl"],[236,21,230,19],[236,23,230,21,"prefix"],[236,29,230,27],[236,31,230,29,"debugOnly"],[236,40,230,38],[236,42,230,40],[237,6,231,4],[237,10,231,8,"debugOnly"],[237,19,231,17],[237,23,231,21],[237,24,231,22],[237,28,231,26],[237,29,231,27,"debug"],[237,34,231,32],[237,36,231,34],[237,43,231,41],[237,47,231,45],[238,6,232,4],[238,10,232,8,"isString"],[238,18,232,16],[238,19,232,17,"args"],[238,23,232,21],[238,24,232,22],[238,25,232,23],[238,26,232,24],[238,27,232,25],[238,29,232,27,"args"],[238,33,232,31],[238,34,232,32],[238,35,232,33],[238,36,232,34],[238,39,232,37],[238,42,232,40,"prefix"],[238,48,232,46],[238,51,232,49],[238,55,232,53],[238,56,232,54,"prefix"],[238,62,232,60],[238,66,232,64,"args"],[238,70,232,68],[238,71,232,69],[238,72,232,70],[238,73,232,71],[238,75,232,73],[239,6,233,4],[239,13,233,11],[239,17,233,15],[239,18,233,16,"logger"],[239,24,233,22],[239,25,233,23,"lvl"],[239,28,233,26],[239,29,233,27],[239,30,233,28,"args"],[239,34,233,32],[239,35,233,33],[240,4,234,2],[241,4,235,2,"create"],[241,10,235,8,"create"],[241,11,235,9,"moduleName"],[241,21,235,19],[241,23,235,21],[242,6,236,4],[242,13,236,11],[242,17,236,15,"Logger"],[242,23,236,21],[242,24,236,22],[242,28,236,26],[242,29,236,27,"logger"],[242,35,236,33],[242,37,236,35],[243,8,237,6],[243,11,237,9],[244,10,238,8,"prefix"],[244,16,238,14],[244,18,238,16],[244,21,238,19],[244,25,238,23],[244,26,238,24,"prefix"],[244,32,238,30],[244,36,238,34,"moduleName"],[244,46,238,44],[245,8,239,6],[245,9,239,7],[246,8,240,6],[246,11,240,9],[246,15,240,13],[246,16,240,14,"options"],[247,6,241,4],[247,7,241,5],[247,8,241,6],[248,4,242,2],[249,4,243,2,"clone"],[249,9,243,7,"clone"],[249,10,243,8,"options"],[249,17,243,15],[249,19,243,17],[250,6,244,4,"options"],[250,13,244,11],[250,16,244,14,"options"],[250,23,244,21],[250,27,244,25],[250,31,244,29],[250,32,244,30,"options"],[250,39,244,37],[251,6,245,4,"options"],[251,13,245,11],[251,14,245,12,"prefix"],[251,20,245,18],[251,23,245,21,"options"],[251,30,245,28],[251,31,245,29,"prefix"],[251,37,245,35],[251,41,245,39],[251,45,245,43],[251,46,245,44,"prefix"],[251,52,245,50],[252,6,246,4],[252,13,246,11],[252,17,246,15,"Logger"],[252,23,246,21],[252,24,246,22],[252,28,246,26],[252,29,246,27,"logger"],[252,35,246,33],[252,37,246,35,"options"],[252,44,246,42],[252,45,246,43],[253,4,247,2],[254,2,248,0],[255,2,249,0],[255,6,249,4,"baseLogger"],[255,16,249,14],[255,19,249,17],[255,23,249,21,"Logger"],[255,29,249,27],[255,30,249,28],[255,31,249,29],[256,2,251,0],[256,8,251,6,"EventEmitter"],[256,20,251,18],[256,21,251,19],[257,4,252,2,"constructor"],[257,15,252,13,"constructor"],[257,16,252,13],[257,18,252,16],[258,6,253,4],[258,10,253,8],[258,11,253,9,"observers"],[258,20,253,18],[258,23,253,21],[258,24,253,22],[258,25,253,23],[259,4,254,2],[260,4,255,2,"on"],[260,6,255,4,"on"],[260,7,255,5,"events"],[260,13,255,11],[260,15,255,13,"listener"],[260,23,255,21],[260,25,255,23],[261,6,256,4,"events"],[261,12,256,10],[261,13,256,11,"split"],[261,18,256,16],[261,19,256,17],[261,22,256,20],[261,23,256,21],[261,24,256,22,"forEach"],[261,31,256,29],[261,32,256,30,"event"],[261,37,256,35],[261,41,256,39],[262,8,257,6],[262,12,257,10],[262,13,257,11],[262,17,257,15],[262,18,257,16,"observers"],[262,27,257,25],[262,28,257,26,"event"],[262,33,257,31],[262,34,257,32],[262,36,257,34],[262,40,257,38],[262,41,257,39,"observers"],[262,50,257,48],[262,51,257,49,"event"],[262,56,257,54],[262,57,257,55],[262,60,257,58],[262,64,257,62,"Map"],[262,67,257,65],[262,68,257,66],[262,69,257,67],[263,8,258,6],[263,14,258,12,"numListeners"],[263,26,258,24],[263,29,258,27],[263,33,258,31],[263,34,258,32,"observers"],[263,43,258,41],[263,44,258,42,"event"],[263,49,258,47],[263,50,258,48],[263,51,258,49,"get"],[263,54,258,52],[263,55,258,53,"listener"],[263,63,258,61],[263,64,258,62],[263,68,258,66],[263,69,258,67],[264,8,259,6],[264,12,259,10],[264,13,259,11,"observers"],[264,22,259,20],[264,23,259,21,"event"],[264,28,259,26],[264,29,259,27],[264,30,259,28,"set"],[264,33,259,31],[264,34,259,32,"listener"],[264,42,259,40],[264,44,259,42,"numListeners"],[264,56,259,54],[264,59,259,57],[264,60,259,58],[264,61,259,59],[265,6,260,4],[265,7,260,5],[265,8,260,6],[266,6,261,4],[266,13,261,11],[266,17,261,15],[267,4,262,2],[268,4,263,2,"off"],[268,7,263,5,"off"],[268,8,263,6,"event"],[268,13,263,11],[268,15,263,13,"listener"],[268,23,263,21],[268,25,263,23],[269,6,264,4],[269,10,264,8],[269,11,264,9],[269,15,264,13],[269,16,264,14,"observers"],[269,25,264,23],[269,26,264,24,"event"],[269,31,264,29],[269,32,264,30],[269,34,264,32],[270,6,265,4],[270,10,265,8],[270,11,265,9,"listener"],[270,19,265,17],[270,21,265,19],[271,8,266,6],[271,15,266,13],[271,19,266,17],[271,20,266,18,"observers"],[271,29,266,27],[271,30,266,28,"event"],[271,35,266,33],[271,36,266,34],[272,8,267,6],[273,6,268,4],[274,6,269,4],[274,10,269,8],[274,11,269,9,"observers"],[274,20,269,18],[274,21,269,19,"event"],[274,26,269,24],[274,27,269,25],[274,28,269,26,"delete"],[274,34,269,32],[274,35,269,33,"listener"],[274,43,269,41],[274,44,269,42],[275,4,270,2],[276,4,271,2,"emit"],[276,8,271,6,"emit"],[276,9,271,7,"event"],[276,14,271,12],[276,16,271,14],[276,19,271,17,"args"],[276,23,271,21],[276,25,271,23],[277,6,272,4],[277,10,272,8],[277,14,272,12],[277,15,272,13,"observers"],[277,24,272,22],[277,25,272,23,"event"],[277,30,272,28],[277,31,272,29],[277,33,272,31],[278,8,273,6],[278,14,273,12,"cloned"],[278,20,273,18],[278,23,273,21,"Array"],[278,28,273,26],[278,29,273,27,"from"],[278,33,273,31],[278,34,273,32],[278,38,273,36],[278,39,273,37,"observers"],[278,48,273,46],[278,49,273,47,"event"],[278,54,273,52],[278,55,273,53],[278,56,273,54,"entries"],[278,63,273,61],[278,64,273,62],[278,65,273,63],[278,66,273,64],[279,8,274,6,"cloned"],[279,14,274,12],[279,15,274,13,"forEach"],[279,22,274,20],[279,23,274,21],[279,24,274,22],[279,25,274,23,"observer"],[279,33,274,31],[279,35,274,33,"numTimesAdded"],[279,48,274,46],[279,49,274,47],[279,54,274,52],[280,10,275,8],[280,15,275,13],[280,19,275,17,"i"],[280,20,275,18],[280,23,275,21],[280,24,275,22],[280,26,275,24,"i"],[280,27,275,25],[280,30,275,28,"numTimesAdded"],[280,43,275,41],[280,45,275,43,"i"],[280,46,275,44],[280,48,275,46],[280,50,275,48],[281,12,276,10,"observer"],[281,20,276,18],[281,21,276,19],[281,24,276,22,"args"],[281,28,276,26],[281,29,276,27],[282,10,277,8],[283,8,278,6],[283,9,278,7],[283,10,278,8],[284,6,279,4],[285,6,280,4],[285,10,280,8],[285,14,280,12],[285,15,280,13,"observers"],[285,24,280,22],[285,25,280,23],[285,28,280,26],[285,29,280,27],[285,31,280,29],[286,8,281,6],[286,14,281,12,"cloned"],[286,20,281,18],[286,23,281,21,"Array"],[286,28,281,26],[286,29,281,27,"from"],[286,33,281,31],[286,34,281,32],[286,38,281,36],[286,39,281,37,"observers"],[286,48,281,46],[286,49,281,47],[286,52,281,50],[286,53,281,51],[286,54,281,52,"entries"],[286,61,281,59],[286,62,281,60],[286,63,281,61],[286,64,281,62],[287,8,282,6,"cloned"],[287,14,282,12],[287,15,282,13,"forEach"],[287,22,282,20],[287,23,282,21],[287,24,282,22],[287,25,282,23,"observer"],[287,33,282,31],[287,35,282,33,"numTimesAdded"],[287,48,282,46],[287,49,282,47],[287,54,282,52],[288,10,283,8],[288,15,283,13],[288,19,283,17,"i"],[288,20,283,18],[288,23,283,21],[288,24,283,22],[288,26,283,24,"i"],[288,27,283,25],[288,30,283,28,"numTimesAdded"],[288,43,283,41],[288,45,283,43,"i"],[288,46,283,44],[288,48,283,46],[288,50,283,48],[289,12,284,10,"observer"],[289,20,284,18],[289,21,284,19,"apply"],[289,26,284,24],[289,27,284,25,"observer"],[289,35,284,33],[289,37,284,35],[289,38,284,36,"event"],[289,43,284,41],[289,45,284,43],[289,48,284,46,"args"],[289,52,284,50],[289,53,284,51],[289,54,284,52],[290,10,285,8],[291,8,286,6],[291,9,286,7],[291,10,286,8],[292,6,287,4],[293,4,288,2],[294,2,289,0],[295,2,291,0],[295,8,291,6,"ResourceStore"],[295,21,291,19],[295,30,291,28,"EventEmitter"],[295,42,291,40],[295,43,291,41],[296,4,292,2,"constructor"],[296,15,292,13,"constructor"],[296,16,292,14,"data"],[296,20,292,18],[296,22,292,20,"options"],[296,29,292,27],[296,32,292,30],[297,6,293,4,"ns"],[297,8,293,6],[297,10,293,8],[297,11,293,9],[297,24,293,22],[297,25,293,23],[298,6,294,4,"defaultNS"],[298,15,294,13],[298,17,294,15],[299,4,295,2],[299,5,295,3],[299,7,295,5],[300,6,296,4],[300,11,296,9],[300,12,296,10],[300,13,296,11],[301,6,297,4],[301,10,297,8],[301,11,297,9,"data"],[301,15,297,13],[301,18,297,16,"data"],[301,22,297,20],[301,26,297,24],[301,27,297,25],[301,28,297,26],[302,6,298,4],[302,10,298,8],[302,11,298,9,"options"],[302,18,298,16],[302,21,298,19,"options"],[302,28,298,26],[303,6,299,4],[303,10,299,8],[303,14,299,12],[303,15,299,13,"options"],[303,22,299,20],[303,23,299,21,"keySeparator"],[303,35,299,33],[303,40,299,38,"undefined"],[303,49,299,47],[303,51,299,49],[304,8,300,6],[304,12,300,10],[304,13,300,11,"options"],[304,20,300,18],[304,21,300,19,"keySeparator"],[304,33,300,31],[304,36,300,34],[304,39,300,37],[305,6,301,4],[306,6,302,4],[306,10,302,8],[306,14,302,12],[306,15,302,13,"options"],[306,22,302,20],[306,23,302,21,"ignoreJSONStructure"],[306,42,302,40],[306,47,302,45,"undefined"],[306,56,302,54],[306,58,302,56],[307,8,303,6],[307,12,303,10],[307,13,303,11,"options"],[307,20,303,18],[307,21,303,19,"ignoreJSONStructure"],[307,40,303,38],[307,43,303,41],[307,47,303,45],[308,6,304,4],[309,4,305,2],[310,4,306,2,"addNamespaces"],[310,17,306,15,"addNamespaces"],[310,18,306,16,"ns"],[310,20,306,18],[310,22,306,20],[311,6,307,4],[311,10,307,8],[311,14,307,12],[311,15,307,13,"options"],[311,22,307,20],[311,23,307,21,"ns"],[311,25,307,23],[311,26,307,24,"indexOf"],[311,33,307,31],[311,34,307,32,"ns"],[311,36,307,34],[311,37,307,35],[311,40,307,38],[311,41,307,39],[311,43,307,41],[312,8,308,6],[312,12,308,10],[312,13,308,11,"options"],[312,20,308,18],[312,21,308,19,"ns"],[312,23,308,21],[312,24,308,22,"push"],[312,28,308,26],[312,29,308,27,"ns"],[312,31,308,29],[312,32,308,30],[313,6,309,4],[314,4,310,2],[315,4,311,2,"removeNamespaces"],[315,20,311,18,"removeNamespaces"],[315,21,311,19,"ns"],[315,23,311,21],[315,25,311,23],[316,6,312,4],[316,12,312,10,"index"],[316,17,312,15],[316,20,312,18],[316,24,312,22],[316,25,312,23,"options"],[316,32,312,30],[316,33,312,31,"ns"],[316,35,312,33],[316,36,312,34,"indexOf"],[316,43,312,41],[316,44,312,42,"ns"],[316,46,312,44],[316,47,312,45],[317,6,313,4],[317,10,313,8,"index"],[317,15,313,13],[317,18,313,16],[317,19,313,17],[317,20,313,18],[317,22,313,20],[318,8,314,6],[318,12,314,10],[318,13,314,11,"options"],[318,20,314,18],[318,21,314,19,"ns"],[318,23,314,21],[318,24,314,22,"splice"],[318,30,314,28],[318,31,314,29,"index"],[318,36,314,34],[318,38,314,36],[318,39,314,37],[318,40,314,38],[319,6,315,4],[320,4,316,2],[321,4,317,2,"getResource"],[321,15,317,13,"getResource"],[321,16,317,14,"lng"],[321,19,317,17],[321,21,317,19,"ns"],[321,23,317,21],[321,25,317,23,"key"],[321,28,317,26],[321,30,317,28,"options"],[321,37,317,35],[321,40,317,38],[321,41,317,39],[321,42,317,40],[321,44,317,42],[322,6,318,4],[322,12,318,10,"keySeparator"],[322,24,318,22],[322,27,318,25,"options"],[322,34,318,32],[322,35,318,33,"keySeparator"],[322,47,318,45],[322,52,318,50,"undefined"],[322,61,318,59],[322,64,318,62,"options"],[322,71,318,69],[322,72,318,70,"keySeparator"],[322,84,318,82],[322,87,318,85],[322,91,318,89],[322,92,318,90,"options"],[322,99,318,97],[322,100,318,98,"keySeparator"],[322,112,318,110],[323,6,319,4],[323,12,319,10,"ignoreJSONStructure"],[323,31,319,29],[323,34,319,32,"options"],[323,41,319,39],[323,42,319,40,"ignoreJSONStructure"],[323,61,319,59],[323,66,319,64,"undefined"],[323,75,319,73],[323,78,319,76,"options"],[323,85,319,83],[323,86,319,84,"ignoreJSONStructure"],[323,105,319,103],[323,108,319,106],[323,112,319,110],[323,113,319,111,"options"],[323,120,319,118],[323,121,319,119,"ignoreJSONStructure"],[323,140,319,138],[324,6,320,4],[324,10,320,8,"path"],[324,14,320,12],[325,6,321,4],[325,10,321,8,"lng"],[325,13,321,11],[325,14,321,12,"indexOf"],[325,21,321,19],[325,22,321,20],[325,25,321,23],[325,26,321,24],[325,29,321,27],[325,30,321,28],[325,31,321,29],[325,33,321,31],[326,8,322,6,"path"],[326,12,322,10],[326,15,322,13,"lng"],[326,18,322,16],[326,19,322,17,"split"],[326,24,322,22],[326,25,322,23],[326,28,322,26],[326,29,322,27],[327,6,323,4],[327,7,323,5],[327,13,323,11],[328,8,324,6,"path"],[328,12,324,10],[328,15,324,13],[328,16,324,14,"lng"],[328,19,324,17],[328,21,324,19,"ns"],[328,23,324,21],[328,24,324,22],[329,8,325,6],[329,12,325,10,"key"],[329,15,325,13],[329,17,325,15],[330,10,326,8],[330,14,326,12,"Array"],[330,19,326,17],[330,20,326,18,"isArray"],[330,27,326,25],[330,28,326,26,"key"],[330,31,326,29],[330,32,326,30],[330,34,326,32],[331,12,327,10,"path"],[331,16,327,14],[331,17,327,15,"push"],[331,21,327,19],[331,22,327,20],[331,25,327,23,"key"],[331,28,327,26],[331,29,327,27],[332,10,328,8],[332,11,328,9],[332,17,328,15],[332,21,328,19,"isString"],[332,29,328,27],[332,30,328,28,"key"],[332,33,328,31],[332,34,328,32],[332,38,328,36,"keySeparator"],[332,50,328,48],[332,52,328,50],[333,12,329,10,"path"],[333,16,329,14],[333,17,329,15,"push"],[333,21,329,19],[333,22,329,20],[333,25,329,23,"key"],[333,28,329,26],[333,29,329,27,"split"],[333,34,329,32],[333,35,329,33,"keySeparator"],[333,47,329,45],[333,48,329,46],[333,49,329,47],[334,10,330,8],[334,11,330,9],[334,17,330,15],[335,12,331,10,"path"],[335,16,331,14],[335,17,331,15,"push"],[335,21,331,19],[335,22,331,20,"key"],[335,25,331,23],[335,26,331,24],[336,10,332,8],[337,8,333,6],[338,6,334,4],[339,6,335,4],[339,12,335,10,"result"],[339,18,335,16],[339,21,335,19,"getPath"],[339,28,335,26],[339,29,335,27],[339,33,335,31],[339,34,335,32,"data"],[339,38,335,36],[339,40,335,38,"path"],[339,44,335,42],[339,45,335,43],[340,6,336,4],[340,10,336,8],[340,11,336,9,"result"],[340,17,336,15],[340,21,336,19],[340,22,336,20,"ns"],[340,24,336,22],[340,28,336,26],[340,29,336,27,"key"],[340,32,336,30],[340,36,336,34,"lng"],[340,39,336,37],[340,40,336,38,"indexOf"],[340,47,336,45],[340,48,336,46],[340,51,336,49],[340,52,336,50],[340,55,336,53],[340,56,336,54],[340,57,336,55],[340,59,336,57],[341,8,337,6,"lng"],[341,11,337,9],[341,14,337,12,"path"],[341,18,337,16],[341,19,337,17],[341,20,337,18],[341,21,337,19],[342,8,338,6,"ns"],[342,10,338,8],[342,13,338,11,"path"],[342,17,338,15],[342,18,338,16],[342,19,338,17],[342,20,338,18],[343,8,339,6,"key"],[343,11,339,9],[343,14,339,12,"path"],[343,18,339,16],[343,19,339,17,"slice"],[343,24,339,22],[343,25,339,23],[343,26,339,24],[343,27,339,25],[343,28,339,26,"join"],[343,32,339,30],[343,33,339,31],[343,36,339,34],[343,37,339,35],[344,6,340,4],[345,6,341,4],[345,10,341,8,"result"],[345,16,341,14],[345,20,341,18],[345,21,341,19,"ignoreJSONStructure"],[345,40,341,38],[345,44,341,42],[345,45,341,43,"isString"],[345,53,341,51],[345,54,341,52,"key"],[345,57,341,55],[345,58,341,56],[345,60,341,58],[345,67,341,65,"result"],[345,73,341,71],[346,6,342,4],[346,13,342,11,"deepFind"],[346,21,342,19],[346,22,342,20],[346,26,342,24],[346,27,342,25,"data"],[346,31,342,29],[346,34,342,32,"lng"],[346,37,342,35],[346,38,342,36],[346,41,342,39,"ns"],[346,43,342,41],[346,44,342,42],[346,46,342,44,"key"],[346,49,342,47],[346,51,342,49,"keySeparator"],[346,63,342,61],[346,64,342,62],[347,4,343,2],[348,4,344,2,"addResource"],[348,15,344,13,"addResource"],[348,16,344,14,"lng"],[348,19,344,17],[348,21,344,19,"ns"],[348,23,344,21],[348,25,344,23,"key"],[348,28,344,26],[348,30,344,28,"value"],[348,35,344,33],[348,37,344,35,"options"],[348,44,344,42],[348,47,344,45],[349,6,345,4,"silent"],[349,12,345,10],[349,14,345,12],[350,4,346,2],[350,5,346,3],[350,7,346,5],[351,6,347,4],[351,12,347,10,"keySeparator"],[351,24,347,22],[351,27,347,25,"options"],[351,34,347,32],[351,35,347,33,"keySeparator"],[351,47,347,45],[351,52,347,50,"undefined"],[351,61,347,59],[351,64,347,62,"options"],[351,71,347,69],[351,72,347,70,"keySeparator"],[351,84,347,82],[351,87,347,85],[351,91,347,89],[351,92,347,90,"options"],[351,99,347,97],[351,100,347,98,"keySeparator"],[351,112,347,110],[352,6,348,4],[352,10,348,8,"path"],[352,14,348,12],[352,17,348,15],[352,18,348,16,"lng"],[352,21,348,19],[352,23,348,21,"ns"],[352,25,348,23],[352,26,348,24],[353,6,349,4],[353,10,349,8,"key"],[353,13,349,11],[353,15,349,13,"path"],[353,19,349,17],[353,22,349,20,"path"],[353,26,349,24],[353,27,349,25,"concat"],[353,33,349,31],[353,34,349,32,"keySeparator"],[353,46,349,44],[353,49,349,47,"key"],[353,52,349,50],[353,53,349,51,"split"],[353,58,349,56],[353,59,349,57,"keySeparator"],[353,71,349,69],[353,72,349,70],[353,75,349,73,"key"],[353,78,349,76],[353,79,349,77],[354,6,350,4],[354,10,350,8,"lng"],[354,13,350,11],[354,14,350,12,"indexOf"],[354,21,350,19],[354,22,350,20],[354,25,350,23],[354,26,350,24],[354,29,350,27],[354,30,350,28],[354,31,350,29],[354,33,350,31],[355,8,351,6,"path"],[355,12,351,10],[355,15,351,13,"lng"],[355,18,351,16],[355,19,351,17,"split"],[355,24,351,22],[355,25,351,23],[355,28,351,26],[355,29,351,27],[356,8,352,6,"value"],[356,13,352,11],[356,16,352,14,"ns"],[356,18,352,16],[357,8,353,6,"ns"],[357,10,353,8],[357,13,353,11,"path"],[357,17,353,15],[357,18,353,16],[357,19,353,17],[357,20,353,18],[358,6,354,4],[359,6,355,4],[359,10,355,8],[359,11,355,9,"addNamespaces"],[359,24,355,22],[359,25,355,23,"ns"],[359,27,355,25],[359,28,355,26],[360,6,356,4,"setPath"],[360,13,356,11],[360,14,356,12],[360,18,356,16],[360,19,356,17,"data"],[360,23,356,21],[360,25,356,23,"path"],[360,29,356,27],[360,31,356,29,"value"],[360,36,356,34],[360,37,356,35],[361,6,357,4],[361,10,357,8],[361,11,357,9,"options"],[361,18,357,16],[361,19,357,17,"silent"],[361,25,357,23],[361,27,357,25],[361,31,357,29],[361,32,357,30,"emit"],[361,36,357,34],[361,37,357,35],[361,44,357,42],[361,46,357,44,"lng"],[361,49,357,47],[361,51,357,49,"ns"],[361,53,357,51],[361,55,357,53,"key"],[361,58,357,56],[361,60,357,58,"value"],[361,65,357,63],[361,66,357,64],[362,4,358,2],[363,4,359,2,"addResources"],[363,16,359,14,"addResources"],[363,17,359,15,"lng"],[363,20,359,18],[363,22,359,20,"ns"],[363,24,359,22],[363,26,359,24,"resources"],[363,35,359,33],[363,37,359,35,"options"],[363,44,359,42],[363,47,359,45],[364,6,360,4,"silent"],[364,12,360,10],[364,14,360,12],[365,4,361,2],[365,5,361,3],[365,7,361,5],[366,6,362,4],[366,11,362,9],[366,17,362,15,"m"],[366,18,362,16],[366,22,362,20,"resources"],[366,31,362,29],[366,33,362,31],[367,8,363,6],[367,12,363,10,"isString"],[367,20,363,18],[367,21,363,19,"resources"],[367,30,363,28],[367,31,363,29,"m"],[367,32,363,30],[367,33,363,31],[367,34,363,32],[367,38,363,36,"Array"],[367,43,363,41],[367,44,363,42,"isArray"],[367,51,363,49],[367,52,363,50,"resources"],[367,61,363,59],[367,62,363,60,"m"],[367,63,363,61],[367,64,363,62],[367,65,363,63],[367,67,363,65],[367,71,363,69],[367,72,363,70,"addResource"],[367,83,363,81],[367,84,363,82,"lng"],[367,87,363,85],[367,89,363,87,"ns"],[367,91,363,89],[367,93,363,91,"m"],[367,94,363,92],[367,96,363,94,"resources"],[367,105,363,103],[367,106,363,104,"m"],[367,107,363,105],[367,108,363,106],[367,110,363,108],[368,10,364,8,"silent"],[368,16,364,14],[368,18,364,16],[369,8,365,6],[369,9,365,7],[369,10,365,8],[370,6,366,4],[371,6,367,4],[371,10,367,8],[371,11,367,9,"options"],[371,18,367,16],[371,19,367,17,"silent"],[371,25,367,23],[371,27,367,25],[371,31,367,29],[371,32,367,30,"emit"],[371,36,367,34],[371,37,367,35],[371,44,367,42],[371,46,367,44,"lng"],[371,49,367,47],[371,51,367,49,"ns"],[371,53,367,51],[371,55,367,53,"resources"],[371,64,367,62],[371,65,367,63],[372,4,368,2],[373,4,369,2,"addResourceBundle"],[373,21,369,19,"addResourceBundle"],[373,22,369,20,"lng"],[373,25,369,23],[373,27,369,25,"ns"],[373,29,369,27],[373,31,369,29,"resources"],[373,40,369,38],[373,42,369,40,"deep"],[373,46,369,44],[373,48,369,46,"overwrite"],[373,57,369,55],[373,59,369,57,"options"],[373,66,369,64],[373,69,369,67],[374,6,370,4,"silent"],[374,12,370,10],[374,14,370,12],[374,19,370,17],[375,6,371,4,"skipCopy"],[375,14,371,12],[375,16,371,14],[376,4,372,2],[376,5,372,3],[376,7,372,5],[377,6,373,4],[377,10,373,8,"path"],[377,14,373,12],[377,17,373,15],[377,18,373,16,"lng"],[377,21,373,19],[377,23,373,21,"ns"],[377,25,373,23],[377,26,373,24],[378,6,374,4],[378,10,374,8,"lng"],[378,13,374,11],[378,14,374,12,"indexOf"],[378,21,374,19],[378,22,374,20],[378,25,374,23],[378,26,374,24],[378,29,374,27],[378,30,374,28],[378,31,374,29],[378,33,374,31],[379,8,375,6,"path"],[379,12,375,10],[379,15,375,13,"lng"],[379,18,375,16],[379,19,375,17,"split"],[379,24,375,22],[379,25,375,23],[379,28,375,26],[379,29,375,27],[380,8,376,6,"deep"],[380,12,376,10],[380,15,376,13,"resources"],[380,24,376,22],[381,8,377,6,"resources"],[381,17,377,15],[381,20,377,18,"ns"],[381,22,377,20],[382,8,378,6,"ns"],[382,10,378,8],[382,13,378,11,"path"],[382,17,378,15],[382,18,378,16],[382,19,378,17],[382,20,378,18],[383,6,379,4],[384,6,380,4],[384,10,380,8],[384,11,380,9,"addNamespaces"],[384,24,380,22],[384,25,380,23,"ns"],[384,27,380,25],[384,28,380,26],[385,6,381,4],[385,10,381,8,"pack"],[385,14,381,12],[385,17,381,15,"getPath"],[385,24,381,22],[385,25,381,23],[385,29,381,27],[385,30,381,28,"data"],[385,34,381,32],[385,36,381,34,"path"],[385,40,381,38],[385,41,381,39],[385,45,381,43],[385,46,381,44],[385,47,381,45],[386,6,382,4],[386,10,382,8],[386,11,382,9,"options"],[386,18,382,16],[386,19,382,17,"skipCopy"],[386,27,382,25],[386,29,382,27,"resources"],[386,38,382,36],[386,41,382,39,"JSON"],[386,45,382,43],[386,46,382,44,"parse"],[386,51,382,49],[386,52,382,50,"JSON"],[386,56,382,54],[386,57,382,55,"stringify"],[386,66,382,64],[386,67,382,65,"resources"],[386,76,382,74],[386,77,382,75],[386,78,382,76],[387,6,383,4],[387,10,383,8,"deep"],[387,14,383,12],[387,16,383,14],[388,8,384,6,"deepExtend"],[388,18,384,16],[388,19,384,17,"pack"],[388,23,384,21],[388,25,384,23,"resources"],[388,34,384,32],[388,36,384,34,"overwrite"],[388,45,384,43],[388,46,384,44],[389,6,385,4],[389,7,385,5],[389,13,385,11],[390,8,386,6,"pack"],[390,12,386,10],[390,15,386,13],[391,10,387,8],[391,13,387,11,"pack"],[391,17,387,15],[392,10,388,8],[392,13,388,11,"resources"],[393,8,389,6],[393,9,389,7],[394,6,390,4],[395,6,391,4,"setPath"],[395,13,391,11],[395,14,391,12],[395,18,391,16],[395,19,391,17,"data"],[395,23,391,21],[395,25,391,23,"path"],[395,29,391,27],[395,31,391,29,"pack"],[395,35,391,33],[395,36,391,34],[396,6,392,4],[396,10,392,8],[396,11,392,9,"options"],[396,18,392,16],[396,19,392,17,"silent"],[396,25,392,23],[396,27,392,25],[396,31,392,29],[396,32,392,30,"emit"],[396,36,392,34],[396,37,392,35],[396,44,392,42],[396,46,392,44,"lng"],[396,49,392,47],[396,51,392,49,"ns"],[396,53,392,51],[396,55,392,53,"resources"],[396,64,392,62],[396,65,392,63],[397,4,393,2],[398,4,394,2,"removeResourceBundle"],[398,24,394,22,"removeResourceBundle"],[398,25,394,23,"lng"],[398,28,394,26],[398,30,394,28,"ns"],[398,32,394,30],[398,34,394,32],[399,6,395,4],[399,10,395,8],[399,14,395,12],[399,15,395,13,"hasResourceBundle"],[399,32,395,30],[399,33,395,31,"lng"],[399,36,395,34],[399,38,395,36,"ns"],[399,40,395,38],[399,41,395,39],[399,43,395,41],[400,8,396,6],[400,15,396,13],[400,19,396,17],[400,20,396,18,"data"],[400,24,396,22],[400,25,396,23,"lng"],[400,28,396,26],[400,29,396,27],[400,30,396,28,"ns"],[400,32,396,30],[400,33,396,31],[401,6,397,4],[402,6,398,4],[402,10,398,8],[402,11,398,9,"removeNamespaces"],[402,27,398,25],[402,28,398,26,"ns"],[402,30,398,28],[402,31,398,29],[403,6,399,4],[403,10,399,8],[403,11,399,9,"emit"],[403,15,399,13],[403,16,399,14],[403,25,399,23],[403,27,399,25,"lng"],[403,30,399,28],[403,32,399,30,"ns"],[403,34,399,32],[403,35,399,33],[404,4,400,2],[405,4,401,2,"hasResourceBundle"],[405,21,401,19,"hasResourceBundle"],[405,22,401,20,"lng"],[405,25,401,23],[405,27,401,25,"ns"],[405,29,401,27],[405,31,401,29],[406,6,402,4],[406,13,402,11],[406,17,402,15],[406,18,402,16,"getResource"],[406,29,402,27],[406,30,402,28,"lng"],[406,33,402,31],[406,35,402,33,"ns"],[406,37,402,35],[406,38,402,36],[406,43,402,41,"undefined"],[406,52,402,50],[407,4,403,2],[408,4,404,2,"getResourceBundle"],[408,21,404,19,"getResourceBundle"],[408,22,404,20,"lng"],[408,25,404,23],[408,27,404,25,"ns"],[408,29,404,27],[408,31,404,29],[409,6,405,4],[409,10,405,8],[409,11,405,9,"ns"],[409,13,405,11],[409,15,405,13,"ns"],[409,17,405,15],[409,20,405,18],[409,24,405,22],[409,25,405,23,"options"],[409,32,405,30],[409,33,405,31,"defaultNS"],[409,42,405,40],[410,6,406,4],[410,13,406,11],[410,17,406,15],[410,18,406,16,"getResource"],[410,29,406,27],[410,30,406,28,"lng"],[410,33,406,31],[410,35,406,33,"ns"],[410,37,406,35],[410,38,406,36],[411,4,407,2],[412,4,408,2,"getDataByLanguage"],[412,21,408,19,"getDataByLanguage"],[412,22,408,20,"lng"],[412,25,408,23],[412,27,408,25],[413,6,409,4],[413,13,409,11],[413,17,409,15],[413,18,409,16,"data"],[413,22,409,20],[413,23,409,21,"lng"],[413,26,409,24],[413,27,409,25],[414,4,410,2],[415,4,411,2,"hasLanguageSomeTranslations"],[415,31,411,29,"hasLanguageSomeTranslations"],[415,32,411,30,"lng"],[415,35,411,33],[415,37,411,35],[416,6,412,4],[416,12,412,10,"data"],[416,16,412,14],[416,19,412,17],[416,23,412,21],[416,24,412,22,"getDataByLanguage"],[416,41,412,39],[416,42,412,40,"lng"],[416,45,412,43],[416,46,412,44],[417,6,413,4],[417,12,413,10,"n"],[417,13,413,11],[417,16,413,14,"data"],[417,20,413,18],[417,24,413,22,"Object"],[417,30,413,28],[417,31,413,29,"keys"],[417,35,413,33],[417,36,413,34,"data"],[417,40,413,38],[417,41,413,39],[417,45,413,43],[417,47,413,45],[418,6,414,4],[418,13,414,11],[418,14,414,12],[418,15,414,13,"n"],[418,16,414,14],[418,17,414,15,"find"],[418,21,414,19],[418,22,414,20,"v"],[418,23,414,21],[418,27,414,25,"data"],[418,31,414,29],[418,32,414,30,"v"],[418,33,414,31],[418,34,414,32],[418,38,414,36,"Object"],[418,44,414,42],[418,45,414,43,"keys"],[418,49,414,47],[418,50,414,48,"data"],[418,54,414,52],[418,55,414,53,"v"],[418,56,414,54],[418,57,414,55],[418,58,414,56],[418,59,414,57,"length"],[418,65,414,63],[418,68,414,66],[418,69,414,67],[418,70,414,68],[419,4,415,2],[420,4,416,2,"toJSON"],[420,10,416,8,"toJSON"],[420,11,416,8],[420,13,416,11],[421,6,417,4],[421,13,417,11],[421,17,417,15],[421,18,417,16,"data"],[421,22,417,20],[422,4,418,2],[423,2,419,0],[424,2,421,0],[424,6,421,4,"postProcessor"],[424,19,421,17],[424,22,421,20],[425,4,422,2,"processors"],[425,14,422,12],[425,16,422,14],[425,17,422,15],[425,18,422,16],[426,4,423,2,"addPostProcessor"],[426,20,423,18,"addPostProcessor"],[426,21,423,19,"module"],[426,27,423,25],[426,29,423,27],[427,6,424,4],[427,10,424,8],[427,11,424,9,"processors"],[427,21,424,19],[427,22,424,20,"module"],[427,28,424,26],[427,29,424,27,"name"],[427,33,424,31],[427,34,424,32],[427,37,424,35,"module"],[427,43,424,41],[428,4,425,2],[428,5,425,3],[429,4,426,2,"handle"],[429,10,426,8,"handle"],[429,11,426,9,"processors"],[429,21,426,19],[429,23,426,21,"value"],[429,28,426,26],[429,30,426,28,"key"],[429,33,426,31],[429,35,426,33,"options"],[429,42,426,40],[429,44,426,42,"translator"],[429,54,426,52],[429,56,426,54],[430,6,427,4,"processors"],[430,16,427,14],[430,17,427,15,"forEach"],[430,24,427,22],[430,25,427,23,"processor"],[430,34,427,32],[430,38,427,36],[431,8,428,6,"value"],[431,13,428,11],[431,16,428,14],[431,20,428,18],[431,21,428,19,"processors"],[431,31,428,29],[431,32,428,30,"processor"],[431,41,428,39],[431,42,428,40],[431,44,428,42,"process"],[431,51,428,49],[431,52,428,50,"value"],[431,57,428,55],[431,59,428,57,"key"],[431,62,428,60],[431,64,428,62,"options"],[431,71,428,69],[431,73,428,71,"translator"],[431,83,428,81],[431,84,428,82],[431,88,428,86,"value"],[431,93,428,91],[432,6,429,4],[432,7,429,5],[432,8,429,6],[433,6,430,4],[433,13,430,11,"value"],[433,18,430,16],[434,4,431,2],[435,2,432,0],[435,3,432,1],[436,2,434,0],[436,8,434,6,"PATH_KEY"],[436,16,434,14],[436,19,434,17,"Symbol"],[436,25,434,23],[436,26,434,24],[436,44,434,42],[436,45,434,43],[437,2,435,0],[437,11,435,9,"createProxy"],[437,22,435,20,"createProxy"],[437,23,435,20],[437,25,435,23],[438,4,436,2],[438,10,436,8,"state"],[438,15,436,13],[438,18,436,16],[438,20,436,18],[439,4,437,2],[439,10,437,8,"handler"],[439,17,437,15],[439,20,437,18,"Object"],[439,26,437,24],[439,27,437,25,"create"],[439,33,437,31],[439,34,437,32],[439,38,437,36],[439,39,437,37],[440,4,438,2],[440,8,438,6,"proxy"],[440,13,438,11],[441,4,439,2,"handler"],[441,11,439,9],[441,12,439,10,"get"],[441,15,439,13],[441,18,439,16],[441,19,439,17,"target"],[441,25,439,23],[441,27,439,25,"key"],[441,30,439,28],[441,35,439,33],[442,6,440,4,"proxy"],[442,11,440,9],[442,13,440,11,"revoke"],[442,19,440,17],[442,22,440,20],[442,23,440,21],[443,6,441,4],[443,10,441,8,"key"],[443,13,441,11],[443,18,441,16,"PATH_KEY"],[443,26,441,24],[443,28,441,26],[443,35,441,33,"state"],[443,40,441,38],[444,6,442,4,"state"],[444,11,442,9],[444,12,442,10,"push"],[444,16,442,14],[444,17,442,15,"key"],[444,20,442,18],[444,21,442,19],[445,6,443,4,"proxy"],[445,11,443,9],[445,14,443,12,"Proxy"],[445,19,443,17],[445,20,443,18,"revocable"],[445,29,443,27],[445,30,443,28,"target"],[445,36,443,34],[445,38,443,36,"handler"],[445,45,443,43],[445,46,443,44],[446,6,444,4],[446,13,444,11,"proxy"],[446,18,444,16],[446,19,444,17,"proxy"],[446,24,444,22],[447,4,445,2],[447,5,445,3],[448,4,446,2],[448,11,446,9,"Proxy"],[448,16,446,14],[448,17,446,15,"revocable"],[448,26,446,24],[448,27,446,25,"Object"],[448,33,446,31],[448,34,446,32,"create"],[448,40,446,38],[448,41,446,39],[448,45,446,43],[448,46,446,44],[448,48,446,46,"handler"],[448,55,446,53],[448,56,446,54],[448,57,446,55,"proxy"],[448,62,446,60],[449,2,447,0],[450,2,448,0],[450,11,448,9,"keysFromSelector"],[450,27,448,25,"keysFromSelector"],[450,28,448,26,"selector"],[450,36,448,34],[450,38,448,36,"opts"],[450,42,448,40],[450,44,448,42],[451,4,449,2],[451,10,449,8],[452,6,450,4],[452,7,450,5,"PATH_KEY"],[452,15,450,13],[452,18,450,16,"path"],[453,4,451,2],[453,5,451,3],[453,8,451,6,"selector"],[453,16,451,14],[453,17,451,15,"createProxy"],[453,28,451,26],[453,29,451,27],[453,30,451,28],[453,31,451,29],[454,4,452,2],[454,11,452,9,"path"],[454,15,452,13],[454,16,452,14,"join"],[454,20,452,18],[454,21,452,19,"opts"],[454,25,452,23],[454,27,452,25,"keySeparator"],[454,39,452,37],[454,43,452,41],[454,46,452,44],[454,47,452,45],[455,2,453,0],[456,2,455,0],[456,8,455,6,"checkedLoadedFor"],[456,24,455,22],[456,27,455,25],[456,28,455,26],[456,29,455,27],[457,2,456,0],[457,8,456,6,"shouldHandleAsObject"],[457,28,456,26],[457,31,456,29,"res"],[457,34,456,32],[457,38,456,36],[457,39,456,37,"isString"],[457,47,456,45],[457,48,456,46,"res"],[457,51,456,49],[457,52,456,50],[457,56,456,54],[457,63,456,61,"res"],[457,66,456,64],[457,71,456,69],[457,80,456,78],[457,84,456,82],[457,91,456,89,"res"],[457,94,456,92],[457,99,456,97],[457,107,456,105],[458,2,457,0],[458,8,457,6,"Translator"],[458,18,457,16],[458,27,457,25,"EventEmitter"],[458,39,457,37],[458,40,457,38],[459,4,458,2,"constructor"],[459,15,458,13,"constructor"],[459,16,458,14,"services"],[459,24,458,22],[459,26,458,24,"options"],[459,33,458,31],[459,36,458,34],[459,37,458,35],[459,38,458,36],[459,40,458,38],[460,6,459,4],[460,11,459,9],[460,12,459,10],[460,13,459,11],[461,6,460,4,"copy"],[461,10,460,8],[461,11,460,9],[461,12,460,10],[461,27,460,25],[461,29,460,27],[461,44,460,42],[461,46,460,44],[461,62,460,60],[461,64,460,62],[461,78,460,76],[461,80,460,78],[461,98,460,96],[461,100,460,98],[461,112,460,110],[461,114,460,112],[461,121,460,119],[461,122,460,120],[461,124,460,122,"services"],[461,132,460,130],[461,134,460,132],[461,138,460,136],[461,139,460,137],[462,6,461,4],[462,10,461,8],[462,11,461,9,"options"],[462,18,461,16],[462,21,461,19,"options"],[462,28,461,26],[463,6,462,4],[463,10,462,8],[463,14,462,12],[463,15,462,13,"options"],[463,22,462,20],[463,23,462,21,"keySeparator"],[463,35,462,33],[463,40,462,38,"undefined"],[463,49,462,47],[463,51,462,49],[464,8,463,6],[464,12,463,10],[464,13,463,11,"options"],[464,20,463,18],[464,21,463,19,"keySeparator"],[464,33,463,31],[464,36,463,34],[464,39,463,37],[465,6,464,4],[466,6,465,4],[466,10,465,8],[466,11,465,9,"logger"],[466,17,465,15],[466,20,465,18,"baseLogger"],[466,30,465,28],[466,31,465,29,"create"],[466,37,465,35],[466,38,465,36],[466,50,465,48],[466,51,465,49],[467,4,466,2],[468,4,467,2,"changeLanguage"],[468,18,467,16,"changeLanguage"],[468,19,467,17,"lng"],[468,22,467,20],[468,24,467,22],[469,6,468,4],[469,10,468,8,"lng"],[469,13,468,11],[469,15,468,13],[469,19,468,17],[469,20,468,18,"language"],[469,28,468,26],[469,31,468,29,"lng"],[469,34,468,32],[470,4,469,2],[471,4,470,2,"exists"],[471,10,470,8,"exists"],[471,11,470,9,"key"],[471,14,470,12],[471,16,470,14,"o"],[471,17,470,15],[471,20,470,18],[472,6,471,4,"interpolation"],[472,19,471,17],[472,21,471,19],[472,22,471,20],[473,4,472,2],[473,5,472,3],[473,7,472,5],[474,6,473,4],[474,12,473,10,"opt"],[474,15,473,13],[474,18,473,16],[475,8,474,6],[475,11,474,9,"o"],[476,6,475,4],[476,7,475,5],[477,6,476,4],[477,10,476,8,"key"],[477,13,476,11],[477,17,476,15],[477,21,476,19],[477,23,476,21],[477,30,476,28],[477,35,476,33],[478,6,477,4],[478,12,477,10,"resolved"],[478,20,477,18],[478,23,477,21],[478,27,477,25],[478,28,477,26,"resolve"],[478,35,477,33],[478,36,477,34,"key"],[478,39,477,37],[478,41,477,39,"opt"],[478,44,477,42],[478,45,477,43],[479,6,478,4],[479,13,478,11,"resolved"],[479,21,478,19],[479,23,478,21,"res"],[479,26,478,24],[479,31,478,29,"undefined"],[479,40,478,38],[480,4,479,2],[481,4,480,2,"extractFromKey"],[481,18,480,16,"extractFromKey"],[481,19,480,17,"key"],[481,22,480,20],[481,24,480,22,"opt"],[481,27,480,25],[481,29,480,27],[482,6,481,4],[482,10,481,8,"nsSeparator"],[482,21,481,19],[482,24,481,22,"opt"],[482,27,481,25],[482,28,481,26,"nsSeparator"],[482,39,481,37],[482,44,481,42,"undefined"],[482,53,481,51],[482,56,481,54,"opt"],[482,59,481,57],[482,60,481,58,"nsSeparator"],[482,71,481,69],[482,74,481,72],[482,78,481,76],[482,79,481,77,"options"],[482,86,481,84],[482,87,481,85,"nsSeparator"],[482,98,481,96],[483,6,482,4],[483,10,482,8,"nsSeparator"],[483,21,482,19],[483,26,482,24,"undefined"],[483,35,482,33],[483,37,482,35,"nsSeparator"],[483,48,482,46],[483,51,482,49],[483,54,482,52],[484,6,483,4],[484,12,483,10,"keySeparator"],[484,24,483,22],[484,27,483,25,"opt"],[484,30,483,28],[484,31,483,29,"keySeparator"],[484,43,483,41],[484,48,483,46,"undefined"],[484,57,483,55],[484,60,483,58,"opt"],[484,63,483,61],[484,64,483,62,"keySeparator"],[484,76,483,74],[484,79,483,77],[484,83,483,81],[484,84,483,82,"options"],[484,91,483,89],[484,92,483,90,"keySeparator"],[484,104,483,102],[485,6,484,4],[485,10,484,8,"namespaces"],[485,20,484,18],[485,23,484,21,"opt"],[485,26,484,24],[485,27,484,25,"ns"],[485,29,484,27],[485,33,484,31],[485,37,484,35],[485,38,484,36,"options"],[485,45,484,43],[485,46,484,44,"defaultNS"],[485,55,484,53],[485,59,484,57],[485,61,484,59],[486,6,485,4],[486,12,485,10,"wouldCheckForNsInKey"],[486,32,485,30],[486,35,485,33,"nsSeparator"],[486,46,485,44],[486,50,485,48,"key"],[486,53,485,51],[486,54,485,52,"indexOf"],[486,61,485,59],[486,62,485,60,"nsSeparator"],[486,73,485,71],[486,74,485,72],[486,77,485,75],[486,78,485,76],[486,79,485,77],[487,6,486,4],[487,12,486,10,"seemsNaturalLanguage"],[487,32,486,30],[487,35,486,33],[487,36,486,34],[487,40,486,38],[487,41,486,39,"options"],[487,48,486,46],[487,49,486,47,"userDefinedKeySeparator"],[487,72,486,70],[487,76,486,74],[487,77,486,75,"opt"],[487,80,486,78],[487,81,486,79,"keySeparator"],[487,93,486,91],[487,97,486,95],[487,98,486,96],[487,102,486,100],[487,103,486,101,"options"],[487,110,486,108],[487,111,486,109,"userDefinedNsSeparator"],[487,133,486,131],[487,137,486,135],[487,138,486,136,"opt"],[487,141,486,139],[487,142,486,140,"nsSeparator"],[487,153,486,151],[487,157,486,155],[487,158,486,156,"looksLikeObjectPath"],[487,177,486,175],[487,178,486,176,"key"],[487,181,486,179],[487,183,486,181,"nsSeparator"],[487,194,486,192],[487,196,486,194,"keySeparator"],[487,208,486,206],[487,209,486,207],[488,6,487,4],[488,10,487,8,"wouldCheckForNsInKey"],[488,30,487,28],[488,34,487,32],[488,35,487,33,"seemsNaturalLanguage"],[488,55,487,53],[488,57,487,55],[489,8,488,6],[489,14,488,12,"m"],[489,15,488,13],[489,18,488,16,"key"],[489,21,488,19],[489,22,488,20,"match"],[489,27,488,25],[489,28,488,26],[489,32,488,30],[489,33,488,31,"interpolator"],[489,45,488,43],[489,46,488,44,"nestingRegexp"],[489,59,488,57],[489,60,488,58],[490,8,489,6],[490,12,489,10,"m"],[490,13,489,11],[490,17,489,15,"m"],[490,18,489,16],[490,19,489,17,"length"],[490,25,489,23],[490,28,489,26],[490,29,489,27],[490,31,489,29],[491,10,490,8],[491,17,490,15],[492,12,491,10,"key"],[492,15,491,13],[493,12,492,10,"namespaces"],[493,22,492,20],[493,24,492,22,"isString"],[493,32,492,30],[493,33,492,31,"namespaces"],[493,43,492,41],[493,44,492,42],[493,47,492,45],[493,48,492,46,"namespaces"],[493,58,492,56],[493,59,492,57],[493,62,492,60,"namespaces"],[494,10,493,8],[494,11,493,9],[495,8,494,6],[496,8,495,6],[496,14,495,12,"parts"],[496,19,495,17],[496,22,495,20,"key"],[496,25,495,23],[496,26,495,24,"split"],[496,31,495,29],[496,32,495,30,"nsSeparator"],[496,43,495,41],[496,44,495,42],[497,8,496,6],[497,12,496,10,"nsSeparator"],[497,23,496,21],[497,28,496,26,"keySeparator"],[497,40,496,38],[497,44,496,42,"nsSeparator"],[497,55,496,53],[497,60,496,58,"keySeparator"],[497,72,496,70],[497,76,496,74],[497,80,496,78],[497,81,496,79,"options"],[497,88,496,86],[497,89,496,87,"ns"],[497,91,496,89],[497,92,496,90,"indexOf"],[497,99,496,97],[497,100,496,98,"parts"],[497,105,496,103],[497,106,496,104],[497,107,496,105],[497,108,496,106],[497,109,496,107],[497,112,496,110],[497,113,496,111],[497,114,496,112],[497,116,496,114,"namespaces"],[497,126,496,124],[497,129,496,127,"parts"],[497,134,496,132],[497,135,496,133,"shift"],[497,140,496,138],[497,141,496,139],[497,142,496,140],[498,8,497,6,"key"],[498,11,497,9],[498,14,497,12,"parts"],[498,19,497,17],[498,20,497,18,"join"],[498,24,497,22],[498,25,497,23,"keySeparator"],[498,37,497,35],[498,38,497,36],[499,6,498,4],[500,6,499,4],[500,13,499,11],[501,8,500,6,"key"],[501,11,500,9],[502,8,501,6,"namespaces"],[502,18,501,16],[502,20,501,18,"isString"],[502,28,501,26],[502,29,501,27,"namespaces"],[502,39,501,37],[502,40,501,38],[502,43,501,41],[502,44,501,42,"namespaces"],[502,54,501,52],[502,55,501,53],[502,58,501,56,"namespaces"],[503,6,502,4],[503,7,502,5],[504,4,503,2],[505,4,504,2,"translate"],[505,13,504,11,"translate"],[505,14,504,12,"keys"],[505,18,504,16],[505,20,504,18,"o"],[505,21,504,19],[505,23,504,21,"lastKey"],[505,30,504,28],[505,32,504,30],[506,6,505,4],[506,10,505,8,"opt"],[506,13,505,11],[506,16,505,14],[506,23,505,21,"o"],[506,24,505,22],[506,29,505,27],[506,37,505,35],[506,40,505,38],[507,8,506,6],[507,11,506,9,"o"],[508,6,507,4],[508,7,507,5],[508,10,507,8,"o"],[508,11,507,9],[509,6,508,4],[509,10,508,8],[509,17,508,15,"opt"],[509,20,508,18],[509,25,508,23],[509,33,508,31],[509,37,508,35],[509,41,508,39],[509,42,508,40,"options"],[509,49,508,47],[509,50,508,48,"overloadTranslationOptionHandler"],[509,82,508,80],[509,84,508,82],[510,8,509,6,"opt"],[510,11,509,9],[510,14,509,12],[510,18,509,16],[510,19,509,17,"options"],[510,26,509,24],[510,27,509,25,"overloadTranslationOptionHandler"],[510,59,509,57],[510,60,509,58,"arguments"],[510,69,509,67],[510,70,509,68],[511,6,510,4],[512,6,511,4],[512,10,511,8],[512,17,511,15,"opt"],[512,20,511,18],[512,25,511,23],[512,33,511,31],[512,35,511,33,"opt"],[512,38,511,36],[512,41,511,39],[513,8,512,6],[513,11,512,9,"opt"],[514,6,513,4],[514,7,513,5],[515,6,514,4],[515,10,514,8],[515,11,514,9,"opt"],[515,14,514,12],[515,16,514,14,"opt"],[515,19,514,17],[515,22,514,20],[515,23,514,21],[515,24,514,22],[516,6,515,4],[516,10,515,8,"keys"],[516,14,515,12],[516,18,515,16],[516,22,515,20],[516,24,515,22],[516,31,515,29],[516,33,515,31],[517,6,516,4],[517,10,516,8],[517,17,516,15,"keys"],[517,21,516,19],[517,26,516,24],[517,36,516,34],[517,38,516,36,"keys"],[517,42,516,40],[517,45,516,43,"keysFromSelector"],[517,61,516,59],[517,62,516,60,"keys"],[517,66,516,64],[517,68,516,66],[518,8,517,6],[518,11,517,9],[518,15,517,13],[518,16,517,14,"options"],[518,23,517,21],[519,8,518,6],[519,11,518,9,"opt"],[520,6,519,4],[520,7,519,5],[520,8,519,6],[521,6,520,4],[521,10,520,8],[521,11,520,9,"Array"],[521,16,520,14],[521,17,520,15,"isArray"],[521,24,520,22],[521,25,520,23,"keys"],[521,29,520,27],[521,30,520,28],[521,32,520,30,"keys"],[521,36,520,34],[521,39,520,37],[521,40,520,38,"String"],[521,46,520,44],[521,47,520,45,"keys"],[521,51,520,49],[521,52,520,50],[521,53,520,51],[522,6,521,4],[522,12,521,10,"returnDetails"],[522,25,521,23],[522,28,521,26,"opt"],[522,31,521,29],[522,32,521,30,"returnDetails"],[522,45,521,43],[522,50,521,48,"undefined"],[522,59,521,57],[522,62,521,60,"opt"],[522,65,521,63],[522,66,521,64,"returnDetails"],[522,79,521,77],[522,82,521,80],[522,86,521,84],[522,87,521,85,"options"],[522,94,521,92],[522,95,521,93,"returnDetails"],[522,108,521,106],[523,6,522,4],[523,12,522,10,"keySeparator"],[523,24,522,22],[523,27,522,25,"opt"],[523,30,522,28],[523,31,522,29,"keySeparator"],[523,43,522,41],[523,48,522,46,"undefined"],[523,57,522,55],[523,60,522,58,"opt"],[523,63,522,61],[523,64,522,62,"keySeparator"],[523,76,522,74],[523,79,522,77],[523,83,522,81],[523,84,522,82,"options"],[523,91,522,89],[523,92,522,90,"keySeparator"],[523,104,522,102],[524,6,523,4],[524,12,523,10],[525,8,524,6,"key"],[525,11,524,9],[526,8,525,6,"namespaces"],[527,6,526,4],[527,7,526,5],[527,10,526,8],[527,14,526,12],[527,15,526,13,"extractFromKey"],[527,29,526,27],[527,30,526,28,"keys"],[527,34,526,32],[527,35,526,33,"keys"],[527,39,526,37],[527,40,526,38,"length"],[527,46,526,44],[527,49,526,47],[527,50,526,48],[527,51,526,49],[527,53,526,51,"opt"],[527,56,526,54],[527,57,526,55],[528,6,527,4],[528,12,527,10,"namespace"],[528,21,527,19],[528,24,527,22,"namespaces"],[528,34,527,32],[528,35,527,33,"namespaces"],[528,45,527,43],[528,46,527,44,"length"],[528,52,527,50],[528,55,527,53],[528,56,527,54],[528,57,527,55],[529,6,528,4],[529,10,528,8,"nsSeparator"],[529,21,528,19],[529,24,528,22,"opt"],[529,27,528,25],[529,28,528,26,"nsSeparator"],[529,39,528,37],[529,44,528,42,"undefined"],[529,53,528,51],[529,56,528,54,"opt"],[529,59,528,57],[529,60,528,58,"nsSeparator"],[529,71,528,69],[529,74,528,72],[529,78,528,76],[529,79,528,77,"options"],[529,86,528,84],[529,87,528,85,"nsSeparator"],[529,98,528,96],[530,6,529,4],[530,10,529,8,"nsSeparator"],[530,21,529,19],[530,26,529,24,"undefined"],[530,35,529,33],[530,37,529,35,"nsSeparator"],[530,48,529,46],[530,51,529,49],[530,54,529,52],[531,6,530,4],[531,12,530,10,"lng"],[531,15,530,13],[531,18,530,16,"opt"],[531,21,530,19],[531,22,530,20,"lng"],[531,25,530,23],[531,29,530,27],[531,33,530,31],[531,34,530,32,"language"],[531,42,530,40],[532,6,531,4],[532,12,531,10,"appendNamespaceToCIMode"],[532,35,531,33],[532,38,531,36,"opt"],[532,41,531,39],[532,42,531,40,"appendNamespaceToCIMode"],[532,65,531,63],[532,69,531,67],[532,73,531,71],[532,74,531,72,"options"],[532,81,531,79],[532,82,531,80,"appendNamespaceToCIMode"],[532,105,531,103],[533,6,532,4],[533,10,532,8,"lng"],[533,13,532,11],[533,15,532,13,"toLowerCase"],[533,26,532,24],[533,27,532,25],[533,28,532,26],[533,33,532,31],[533,41,532,39],[533,43,532,41],[534,8,533,6],[534,12,533,10,"appendNamespaceToCIMode"],[534,35,533,33],[534,37,533,35],[535,10,534,8],[535,14,534,12,"returnDetails"],[535,27,534,25],[535,29,534,27],[536,12,535,10],[536,19,535,17],[537,14,536,12,"res"],[537,17,536,15],[537,19,536,17],[537,22,536,20,"namespace"],[537,31,536,29],[537,34,536,32,"nsSeparator"],[537,45,536,43],[537,48,536,46,"key"],[537,51,536,49],[537,53,536,51],[538,14,537,12,"usedKey"],[538,21,537,19],[538,23,537,21,"key"],[538,26,537,24],[539,14,538,12,"exactUsedKey"],[539,26,538,24],[539,28,538,26,"key"],[539,31,538,29],[540,14,539,12,"usedLng"],[540,21,539,19],[540,23,539,21,"lng"],[540,26,539,24],[541,14,540,12,"usedNS"],[541,20,540,18],[541,22,540,20,"namespace"],[541,31,540,29],[542,14,541,12,"usedParams"],[542,24,541,22],[542,26,541,24],[542,30,541,28],[542,31,541,29,"getUsedParamsDetails"],[542,51,541,49],[542,52,541,50,"opt"],[542,55,541,53],[543,12,542,10],[543,13,542,11],[544,10,543,8],[545,10,544,8],[545,17,544,15],[545,20,544,18,"namespace"],[545,29,544,27],[545,32,544,30,"nsSeparator"],[545,43,544,41],[545,46,544,44,"key"],[545,49,544,47],[545,51,544,49],[546,8,545,6],[547,8,546,6],[547,12,546,10,"returnDetails"],[547,25,546,23],[547,27,546,25],[548,10,547,8],[548,17,547,15],[549,12,548,10,"res"],[549,15,548,13],[549,17,548,15,"key"],[549,20,548,18],[550,12,549,10,"usedKey"],[550,19,549,17],[550,21,549,19,"key"],[550,24,549,22],[551,12,550,10,"exactUsedKey"],[551,24,550,22],[551,26,550,24,"key"],[551,29,550,27],[552,12,551,10,"usedLng"],[552,19,551,17],[552,21,551,19,"lng"],[552,24,551,22],[553,12,552,10,"usedNS"],[553,18,552,16],[553,20,552,18,"namespace"],[553,29,552,27],[554,12,553,10,"usedParams"],[554,22,553,20],[554,24,553,22],[554,28,553,26],[554,29,553,27,"getUsedParamsDetails"],[554,49,553,47],[554,50,553,48,"opt"],[554,53,553,51],[555,10,554,8],[555,11,554,9],[556,8,555,6],[557,8,556,6],[557,15,556,13,"key"],[557,18,556,16],[558,6,557,4],[559,6,558,4],[559,12,558,10,"resolved"],[559,20,558,18],[559,23,558,21],[559,27,558,25],[559,28,558,26,"resolve"],[559,35,558,33],[559,36,558,34,"keys"],[559,40,558,38],[559,42,558,40,"opt"],[559,45,558,43],[559,46,558,44],[560,6,559,4],[560,10,559,8,"res"],[560,13,559,11],[560,16,559,14,"resolved"],[560,24,559,22],[560,26,559,24,"res"],[560,29,559,27],[561,6,560,4],[561,12,560,10,"resUsedKey"],[561,22,560,20],[561,25,560,23,"resolved"],[561,33,560,31],[561,35,560,33,"usedKey"],[561,42,560,40],[561,46,560,44,"key"],[561,49,560,47],[562,6,561,4],[562,12,561,10,"resExactUsedKey"],[562,27,561,25],[562,30,561,28,"resolved"],[562,38,561,36],[562,40,561,38,"exactUsedKey"],[562,52,561,50],[562,56,561,54,"key"],[562,59,561,57],[563,6,562,4],[563,12,562,10,"noObject"],[563,20,562,18],[563,23,562,21],[563,24,562,22],[563,41,562,39],[563,43,562,41],[563,62,562,60],[563,64,562,62],[563,81,562,79],[563,82,562,80],[564,6,563,4],[564,12,563,10,"joinArrays"],[564,22,563,20],[564,25,563,23,"opt"],[564,28,563,26],[564,29,563,27,"joinArrays"],[564,39,563,37],[564,44,563,42,"undefined"],[564,53,563,51],[564,56,563,54,"opt"],[564,59,563,57],[564,60,563,58,"joinArrays"],[564,70,563,68],[564,73,563,71],[564,77,563,75],[564,78,563,76,"options"],[564,85,563,83],[564,86,563,84,"joinArrays"],[564,96,563,94],[565,6,564,4],[565,12,564,10,"handleAsObjectInI18nFormat"],[565,38,564,36],[565,41,564,39],[565,42,564,40],[565,46,564,44],[565,47,564,45,"i18nFormat"],[565,57,564,55],[565,61,564,59],[565,65,564,63],[565,66,564,64,"i18nFormat"],[565,76,564,74],[565,77,564,75,"handleAsObject"],[565,91,564,89],[566,6,565,4],[566,12,565,10,"needsPluralHandling"],[566,31,565,29],[566,34,565,32,"opt"],[566,37,565,35],[566,38,565,36,"count"],[566,43,565,41],[566,48,565,46,"undefined"],[566,57,565,55],[566,61,565,59],[566,62,565,60,"isString"],[566,70,565,68],[566,71,565,69,"opt"],[566,74,565,72],[566,75,565,73,"count"],[566,80,565,78],[566,81,565,79],[567,6,566,4],[567,12,566,10,"hasDefaultValue"],[567,27,566,25],[567,30,566,28,"Translator"],[567,40,566,38],[567,41,566,39,"hasDefaultValue"],[567,56,566,54],[567,57,566,55,"opt"],[567,60,566,58],[567,61,566,59],[568,6,567,4],[568,12,567,10,"defaultValueSuffix"],[568,30,567,28],[568,33,567,31,"needsPluralHandling"],[568,52,567,50],[568,55,567,53],[568,59,567,57],[568,60,567,58,"pluralResolver"],[568,74,567,72],[568,75,567,73,"getSuffix"],[568,84,567,82],[568,85,567,83,"lng"],[568,88,567,86],[568,90,567,88,"opt"],[568,93,567,91],[568,94,567,92,"count"],[568,99,567,97],[568,101,567,99,"opt"],[568,104,567,102],[568,105,567,103],[568,108,567,106],[568,110,567,108],[569,6,568,4],[569,12,568,10,"defaultValueSuffixOrdinalFallback"],[569,45,568,43],[569,48,568,46,"opt"],[569,51,568,49],[569,52,568,50,"ordinal"],[569,59,568,57],[569,63,568,61,"needsPluralHandling"],[569,82,568,80],[569,85,568,83],[569,89,568,87],[569,90,568,88,"pluralResolver"],[569,104,568,102],[569,105,568,103,"getSuffix"],[569,114,568,112],[569,115,568,113,"lng"],[569,118,568,116],[569,120,568,118,"opt"],[569,123,568,121],[569,124,568,122,"count"],[569,129,568,127],[569,131,568,129],[570,8,569,6,"ordinal"],[570,15,569,13],[570,17,569,15],[571,6,570,4],[571,7,570,5],[571,8,570,6],[571,11,570,9],[571,13,570,11],[572,6,571,4],[572,12,571,10,"needsZeroSuffixLookup"],[572,33,571,31],[572,36,571,34,"needsPluralHandling"],[572,55,571,53],[572,59,571,57],[572,60,571,58,"opt"],[572,63,571,61],[572,64,571,62,"ordinal"],[572,71,571,69],[572,75,571,73,"opt"],[572,78,571,76],[572,79,571,77,"count"],[572,84,571,82],[572,89,571,87],[572,90,571,88],[573,6,572,4],[573,12,572,10,"defaultValue"],[573,24,572,22],[573,27,572,25,"needsZeroSuffixLookup"],[573,48,572,46],[573,52,572,50,"opt"],[573,55,572,53],[573,56,572,54],[573,71,572,69],[573,75,572,73],[573,76,572,74,"options"],[573,83,572,81],[573,84,572,82,"pluralSeparator"],[573,99,572,97],[573,105,572,103],[573,106,572,104],[573,110,572,108,"opt"],[573,113,572,111],[573,114,572,112],[573,129,572,127,"defaultValueSuffix"],[573,147,572,145],[573,149,572,147],[573,150,572,148],[573,154,572,152,"opt"],[573,157,572,155],[573,158,572,156],[573,173,572,171,"defaultValueSuffixOrdinalFallback"],[573,206,572,204],[573,208,572,206],[573,209,572,207],[573,213,572,211,"opt"],[573,216,572,214],[573,217,572,215,"defaultValue"],[573,229,572,227],[574,6,573,4],[574,10,573,8,"resForObjHndl"],[574,23,573,21],[574,26,573,24,"res"],[574,29,573,27],[575,6,574,4],[575,10,574,8,"handleAsObjectInI18nFormat"],[575,36,574,34],[575,40,574,38],[575,41,574,39,"res"],[575,44,574,42],[575,48,574,46,"hasDefaultValue"],[575,63,574,61],[575,65,574,63],[576,8,575,6,"resForObjHndl"],[576,21,575,19],[576,24,575,22,"defaultValue"],[576,36,575,34],[577,6,576,4],[578,6,577,4],[578,12,577,10,"handleAsObject"],[578,26,577,24],[578,29,577,27,"shouldHandleAsObject"],[578,49,577,47],[578,50,577,48,"resForObjHndl"],[578,63,577,61],[578,64,577,62],[579,6,578,4],[579,12,578,10,"resType"],[579,19,578,17],[579,22,578,20,"Object"],[579,28,578,26],[579,29,578,27,"prototype"],[579,38,578,36],[579,39,578,37,"toString"],[579,47,578,45],[579,48,578,46,"apply"],[579,53,578,51],[579,54,578,52,"resForObjHndl"],[579,67,578,65],[579,68,578,66],[580,6,579,4],[580,10,579,8,"handleAsObjectInI18nFormat"],[580,36,579,34],[580,40,579,38,"resForObjHndl"],[580,53,579,51],[580,57,579,55,"handleAsObject"],[580,71,579,69],[580,75,579,73,"noObject"],[580,83,579,81],[580,84,579,82,"indexOf"],[580,91,579,89],[580,92,579,90,"resType"],[580,99,579,97],[580,100,579,98],[580,103,579,101],[580,104,579,102],[580,108,579,106],[580,110,579,108,"isString"],[580,118,579,116],[580,119,579,117,"joinArrays"],[580,129,579,127],[580,130,579,128],[580,134,579,132,"Array"],[580,139,579,137],[580,140,579,138,"isArray"],[580,147,579,145],[580,148,579,146,"resForObjHndl"],[580,161,579,159],[580,162,579,160],[580,163,579,161],[580,165,579,163],[581,8,580,6],[581,12,580,10],[581,13,580,11,"opt"],[581,16,580,14],[581,17,580,15,"returnObjects"],[581,30,580,28],[581,34,580,32],[581,35,580,33],[581,39,580,37],[581,40,580,38,"options"],[581,47,580,45],[581,48,580,46,"returnObjects"],[581,61,580,59],[581,63,580,61],[582,10,581,8],[582,14,581,12],[582,15,581,13],[582,19,581,17],[582,20,581,18,"options"],[582,27,581,25],[582,28,581,26,"returnedObjectHandler"],[582,49,581,47],[582,51,581,49],[583,12,582,10],[583,16,582,14],[583,17,582,15,"logger"],[583,23,582,21],[583,24,582,22,"warn"],[583,28,582,26],[583,29,582,27],[583,94,582,92],[583,95,582,93],[584,10,583,8],[585,10,584,8],[585,16,584,14,"r"],[585,17,584,15],[585,20,584,18],[585,24,584,22],[585,25,584,23,"options"],[585,32,584,30],[585,33,584,31,"returnedObjectHandler"],[585,54,584,52],[585,57,584,55],[585,61,584,59],[585,62,584,60,"options"],[585,69,584,67],[585,70,584,68,"returnedObjectHandler"],[585,91,584,89],[585,92,584,90,"resUsedKey"],[585,102,584,100],[585,104,584,102,"resForObjHndl"],[585,117,584,115],[585,119,584,117],[586,12,585,10],[586,15,585,13,"opt"],[586,18,585,16],[587,12,586,10,"ns"],[587,14,586,12],[587,16,586,14,"namespaces"],[588,10,587,8],[588,11,587,9],[588,12,587,10],[588,15,587,13],[588,23,587,21,"key"],[588,26,587,24],[588,31,587,29],[588,35,587,33],[588,36,587,34,"language"],[588,44,587,42],[588,86,587,84],[589,10,588,8],[589,14,588,12,"returnDetails"],[589,27,588,25],[589,29,588,27],[590,12,589,10,"resolved"],[590,20,589,18],[590,21,589,19,"res"],[590,24,589,22],[590,27,589,25,"r"],[590,28,589,26],[591,12,590,10,"resolved"],[591,20,590,18],[591,21,590,19,"usedParams"],[591,31,590,29],[591,34,590,32],[591,38,590,36],[591,39,590,37,"getUsedParamsDetails"],[591,59,590,57],[591,60,590,58,"opt"],[591,63,590,61],[591,64,590,62],[592,12,591,10],[592,19,591,17,"resolved"],[592,27,591,25],[593,10,592,8],[594,10,593,8],[594,17,593,15,"r"],[594,18,593,16],[595,8,594,6],[596,8,595,6],[596,12,595,10,"keySeparator"],[596,24,595,22],[596,26,595,24],[597,10,596,8],[597,16,596,14,"resTypeIsArray"],[597,30,596,28],[597,33,596,31,"Array"],[597,38,596,36],[597,39,596,37,"isArray"],[597,46,596,44],[597,47,596,45,"resForObjHndl"],[597,60,596,58],[597,61,596,59],[598,10,597,8],[598,16,597,14,"copy"],[598,20,597,18],[598,23,597,21,"resTypeIsArray"],[598,37,597,35],[598,40,597,38],[598,42,597,40],[598,45,597,43],[598,46,597,44],[598,47,597,45],[599,10,598,8],[599,16,598,14,"newKeyToUse"],[599,27,598,25],[599,30,598,28,"resTypeIsArray"],[599,44,598,42],[599,47,598,45,"resExactUsedKey"],[599,62,598,60],[599,65,598,63,"resUsedKey"],[599,75,598,73],[600,10,599,8],[600,15,599,13],[600,21,599,19,"m"],[600,22,599,20],[600,26,599,24,"resForObjHndl"],[600,39,599,37],[600,41,599,39],[601,12,600,10],[601,16,600,14,"Object"],[601,22,600,20],[601,23,600,21,"prototype"],[601,32,600,30],[601,33,600,31,"hasOwnProperty"],[601,47,600,45],[601,48,600,46,"call"],[601,52,600,50],[601,53,600,51,"resForObjHndl"],[601,66,600,64],[601,68,600,66,"m"],[601,69,600,67],[601,70,600,68],[601,72,600,70],[602,14,601,12],[602,20,601,18,"deepKey"],[602,27,601,25],[602,30,601,28],[602,33,601,31,"newKeyToUse"],[602,44,601,42],[602,47,601,45,"keySeparator"],[602,59,601,57],[602,62,601,60,"m"],[602,63,601,61],[602,65,601,63],[603,14,602,12],[603,18,602,16,"hasDefaultValue"],[603,33,602,31],[603,37,602,35],[603,38,602,36,"res"],[603,41,602,39],[603,43,602,41],[604,16,603,14,"copy"],[604,20,603,18],[604,21,603,19,"m"],[604,22,603,20],[604,23,603,21],[604,26,603,24],[604,30,603,28],[604,31,603,29,"translate"],[604,40,603,38],[604,41,603,39,"deepKey"],[604,48,603,46],[604,50,603,48],[605,18,604,16],[605,21,604,19,"opt"],[605,24,604,22],[606,18,605,16,"defaultValue"],[606,30,605,28],[606,32,605,30,"shouldHandleAsObject"],[606,52,605,50],[606,53,605,51,"defaultValue"],[606,65,605,63],[606,66,605,64],[606,69,605,67,"defaultValue"],[606,81,605,79],[606,82,605,80,"m"],[606,83,605,81],[606,84,605,82],[606,87,605,85,"undefined"],[606,96,605,94],[607,18,606,16],[607,21,606,19],[608,20,607,18,"joinArrays"],[608,30,607,28],[608,32,607,30],[608,37,607,35],[609,20,608,18,"ns"],[609,22,608,20],[609,24,608,22,"namespaces"],[610,18,609,16],[611,16,610,14],[611,17,610,15],[611,18,610,16],[612,14,611,12],[612,15,611,13],[612,21,611,19],[613,16,612,14,"copy"],[613,20,612,18],[613,21,612,19,"m"],[613,22,612,20],[613,23,612,21],[613,26,612,24],[613,30,612,28],[613,31,612,29,"translate"],[613,40,612,38],[613,41,612,39,"deepKey"],[613,48,612,46],[613,50,612,48],[614,18,613,16],[614,21,613,19,"opt"],[614,24,613,22],[615,18,614,16],[615,21,614,19],[616,20,615,18,"joinArrays"],[616,30,615,28],[616,32,615,30],[616,37,615,35],[617,20,616,18,"ns"],[617,22,616,20],[617,24,616,22,"namespaces"],[618,18,617,16],[619,16,618,14],[619,17,618,15],[619,18,618,16],[620,14,619,12],[621,14,620,12],[621,18,620,16,"copy"],[621,22,620,20],[621,23,620,21,"m"],[621,24,620,22],[621,25,620,23],[621,30,620,28,"deepKey"],[621,37,620,35],[621,39,620,37,"copy"],[621,43,620,41],[621,44,620,42,"m"],[621,45,620,43],[621,46,620,44],[621,49,620,47,"resForObjHndl"],[621,62,620,60],[621,63,620,61,"m"],[621,64,620,62],[621,65,620,63],[622,12,621,10],[623,10,622,8],[624,10,623,8,"res"],[624,13,623,11],[624,16,623,14,"copy"],[624,20,623,18],[625,8,624,6],[626,6,625,4],[626,7,625,5],[626,13,625,11],[626,17,625,15,"handleAsObjectInI18nFormat"],[626,43,625,41],[626,47,625,45,"isString"],[626,55,625,53],[626,56,625,54,"joinArrays"],[626,66,625,64],[626,67,625,65],[626,71,625,69,"Array"],[626,76,625,74],[626,77,625,75,"isArray"],[626,84,625,82],[626,85,625,83,"res"],[626,88,625,86],[626,89,625,87],[626,91,625,89],[627,8,626,6,"res"],[627,11,626,9],[627,14,626,12,"res"],[627,17,626,15],[627,18,626,16,"join"],[627,22,626,20],[627,23,626,21,"joinArrays"],[627,33,626,31],[627,34,626,32],[628,8,627,6],[628,12,627,10,"res"],[628,15,627,13],[628,17,627,15,"res"],[628,20,627,18],[628,23,627,21],[628,27,627,25],[628,28,627,26,"extendTranslation"],[628,45,627,43],[628,46,627,44,"res"],[628,49,627,47],[628,51,627,49,"keys"],[628,55,627,53],[628,57,627,55,"opt"],[628,60,627,58],[628,62,627,60,"lastKey"],[628,69,627,67],[628,70,627,68],[629,6,628,4],[629,7,628,5],[629,13,628,11],[630,8,629,6],[630,12,629,10,"usedDefault"],[630,23,629,21],[630,26,629,24],[630,31,629,29],[631,8,630,6],[631,12,630,10,"usedKey"],[631,19,630,17],[631,22,630,20],[631,27,630,25],[632,8,631,6],[632,12,631,10],[632,13,631,11],[632,17,631,15],[632,18,631,16,"isValidLookup"],[632,31,631,29],[632,32,631,30,"res"],[632,35,631,33],[632,36,631,34],[632,40,631,38,"hasDefaultValue"],[632,55,631,53],[632,57,631,55],[633,10,632,8,"usedDefault"],[633,21,632,19],[633,24,632,22],[633,28,632,26],[634,10,633,8,"res"],[634,13,633,11],[634,16,633,14,"defaultValue"],[634,28,633,26],[635,8,634,6],[636,8,635,6],[636,12,635,10],[636,13,635,11],[636,17,635,15],[636,18,635,16,"isValidLookup"],[636,31,635,29],[636,32,635,30,"res"],[636,35,635,33],[636,36,635,34],[636,38,635,36],[637,10,636,8,"usedKey"],[637,17,636,15],[637,20,636,18],[637,24,636,22],[638,10,637,8,"res"],[638,13,637,11],[638,16,637,14,"key"],[638,19,637,17],[639,8,638,6],[640,8,639,6],[640,14,639,12,"missingKeyNoValueFallbackToKey"],[640,44,639,42],[640,47,639,45,"opt"],[640,50,639,48],[640,51,639,49,"missingKeyNoValueFallbackToKey"],[640,81,639,79],[640,85,639,83],[640,89,639,87],[640,90,639,88,"options"],[640,97,639,95],[640,98,639,96,"missingKeyNoValueFallbackToKey"],[640,128,639,126],[641,8,640,6],[641,14,640,12,"resForMissing"],[641,27,640,25],[641,30,640,28,"missingKeyNoValueFallbackToKey"],[641,60,640,58],[641,64,640,62,"usedKey"],[641,71,640,69],[641,74,640,72,"undefined"],[641,83,640,81],[641,86,640,84,"res"],[641,89,640,87],[642,8,641,6],[642,14,641,12,"updateMissing"],[642,27,641,25],[642,30,641,28,"hasDefaultValue"],[642,45,641,43],[642,49,641,47,"defaultValue"],[642,61,641,59],[642,66,641,64,"res"],[642,69,641,67],[642,73,641,71],[642,77,641,75],[642,78,641,76,"options"],[642,85,641,83],[642,86,641,84,"updateMissing"],[642,99,641,97],[643,8,642,6],[643,12,642,10,"usedKey"],[643,19,642,17],[643,23,642,21,"usedDefault"],[643,34,642,32],[643,38,642,36,"updateMissing"],[643,51,642,49],[643,53,642,51],[644,10,643,8],[644,14,643,12],[644,15,643,13,"logger"],[644,21,643,19],[644,22,643,20,"log"],[644,25,643,23],[644,26,643,24,"updateMissing"],[644,39,643,37],[644,42,643,40],[644,53,643,51],[644,56,643,54],[644,68,643,66],[644,70,643,68,"lng"],[644,73,643,71],[644,75,643,73,"namespace"],[644,84,643,82],[644,86,643,84,"key"],[644,89,643,87],[644,91,643,89,"updateMissing"],[644,104,643,102],[644,107,643,105,"defaultValue"],[644,119,643,117],[644,122,643,120,"res"],[644,125,643,123],[644,126,643,124],[645,10,644,8],[645,14,644,12,"keySeparator"],[645,26,644,24],[645,28,644,26],[646,12,645,10],[646,18,645,16,"fk"],[646,20,645,18],[646,23,645,21],[646,27,645,25],[646,28,645,26,"resolve"],[646,35,645,33],[646,36,645,34,"key"],[646,39,645,37],[646,41,645,39],[647,14,646,12],[647,17,646,15,"opt"],[647,20,646,18],[648,14,647,12,"keySeparator"],[648,26,647,24],[648,28,647,26],[649,12,648,10],[649,13,648,11],[649,14,648,12],[650,12,649,10],[650,16,649,14,"fk"],[650,18,649,16],[650,22,649,20,"fk"],[650,24,649,22],[650,25,649,23,"res"],[650,28,649,26],[650,30,649,28],[650,34,649,32],[650,35,649,33,"logger"],[650,41,649,39],[650,42,649,40,"warn"],[650,46,649,44],[650,47,649,45],[650,224,649,222],[650,225,649,223],[651,10,650,8],[652,10,651,8],[652,14,651,12,"lngs"],[652,18,651,16],[652,21,651,19],[652,23,651,21],[653,10,652,8],[653,16,652,14,"fallbackLngs"],[653,28,652,26],[653,31,652,29],[653,35,652,33],[653,36,652,34,"languageUtils"],[653,49,652,47],[653,50,652,48,"getFallbackCodes"],[653,66,652,64],[653,67,652,65],[653,71,652,69],[653,72,652,70,"options"],[653,79,652,77],[653,80,652,78,"fallbackLng"],[653,91,652,89],[653,93,652,91,"opt"],[653,96,652,94],[653,97,652,95,"lng"],[653,100,652,98],[653,104,652,102],[653,108,652,106],[653,109,652,107,"language"],[653,117,652,115],[653,118,652,116],[654,10,653,8],[654,14,653,12],[654,18,653,16],[654,19,653,17,"options"],[654,26,653,24],[654,27,653,25,"saveMissingTo"],[654,40,653,38],[654,45,653,43],[654,55,653,53],[654,59,653,57,"fallbackLngs"],[654,71,653,69],[654,75,653,73,"fallbackLngs"],[654,87,653,85],[654,88,653,86],[654,89,653,87],[654,90,653,88],[654,92,653,90],[655,12,654,10],[655,17,654,15],[655,21,654,19,"i"],[655,22,654,20],[655,25,654,23],[655,26,654,24],[655,28,654,26,"i"],[655,29,654,27],[655,32,654,30,"fallbackLngs"],[655,44,654,42],[655,45,654,43,"length"],[655,51,654,49],[655,53,654,51,"i"],[655,54,654,52],[655,56,654,54],[655,58,654,56],[656,14,655,12,"lngs"],[656,18,655,16],[656,19,655,17,"push"],[656,23,655,21],[656,24,655,22,"fallbackLngs"],[656,36,655,34],[656,37,655,35,"i"],[656,38,655,36],[656,39,655,37],[656,40,655,38],[657,12,656,10],[658,10,657,8],[658,11,657,9],[658,17,657,15],[658,21,657,19],[658,25,657,23],[658,26,657,24,"options"],[658,33,657,31],[658,34,657,32,"saveMissingTo"],[658,47,657,45],[658,52,657,50],[658,57,657,55],[658,59,657,57],[659,12,658,10,"lngs"],[659,16,658,14],[659,19,658,17],[659,23,658,21],[659,24,658,22,"languageUtils"],[659,37,658,35],[659,38,658,36,"toResolveHierarchy"],[659,56,658,54],[659,57,658,55,"opt"],[659,60,658,58],[659,61,658,59,"lng"],[659,64,658,62],[659,68,658,66],[659,72,658,70],[659,73,658,71,"language"],[659,81,658,79],[659,82,658,80],[660,10,659,8],[660,11,659,9],[660,17,659,15],[661,12,660,10,"lngs"],[661,16,660,14],[661,17,660,15,"push"],[661,21,660,19],[661,22,660,20,"opt"],[661,25,660,23],[661,26,660,24,"lng"],[661,29,660,27],[661,33,660,31],[661,37,660,35],[661,38,660,36,"language"],[661,46,660,44],[661,47,660,45],[662,10,661,8],[663,10,662,8],[663,16,662,14,"send"],[663,20,662,18],[663,23,662,21,"send"],[663,24,662,22,"l"],[663,25,662,23],[663,27,662,25,"k"],[663,28,662,26],[663,30,662,28,"specificDefaultValue"],[663,50,662,48],[663,55,662,53],[664,12,663,10],[664,18,663,16,"defaultForMissing"],[664,35,663,33],[664,38,663,36,"hasDefaultValue"],[664,53,663,51],[664,57,663,55,"specificDefaultValue"],[664,77,663,75],[664,82,663,80,"res"],[664,85,663,83],[664,88,663,86,"specificDefaultValue"],[664,108,663,106],[664,111,663,109,"resForMissing"],[664,124,663,122],[665,12,664,10],[665,16,664,14],[665,20,664,18],[665,21,664,19,"options"],[665,28,664,26],[665,29,664,27,"missingKeyHandler"],[665,46,664,44],[665,48,664,46],[666,14,665,12],[666,18,665,16],[666,19,665,17,"options"],[666,26,665,24],[666,27,665,25,"missingKeyHandler"],[666,44,665,42],[666,45,665,43,"l"],[666,46,665,44],[666,48,665,46,"namespace"],[666,57,665,55],[666,59,665,57,"k"],[666,60,665,58],[666,62,665,60,"defaultForMissing"],[666,79,665,77],[666,81,665,79,"updateMissing"],[666,94,665,92],[666,96,665,94,"opt"],[666,99,665,97],[666,100,665,98],[667,12,666,10],[667,13,666,11],[667,19,666,17],[667,23,666,21],[667,27,666,25],[667,28,666,26,"backendConnector"],[667,44,666,42],[667,46,666,44,"saveMissing"],[667,57,666,55],[667,59,666,57],[668,14,667,12],[668,18,667,16],[668,19,667,17,"backendConnector"],[668,35,667,33],[668,36,667,34,"saveMissing"],[668,47,667,45],[668,48,667,46,"l"],[668,49,667,47],[668,51,667,49,"namespace"],[668,60,667,58],[668,62,667,60,"k"],[668,63,667,61],[668,65,667,63,"defaultForMissing"],[668,82,667,80],[668,84,667,82,"updateMissing"],[668,97,667,95],[668,99,667,97,"opt"],[668,102,667,100],[668,103,667,101],[669,12,668,10],[670,12,669,10],[670,16,669,14],[670,17,669,15,"emit"],[670,21,669,19],[670,22,669,20],[670,34,669,32],[670,36,669,34,"l"],[670,37,669,35],[670,39,669,37,"namespace"],[670,48,669,46],[670,50,669,48,"k"],[670,51,669,49],[670,53,669,51,"res"],[670,56,669,54],[670,57,669,55],[671,10,670,8],[671,11,670,9],[672,10,671,8],[672,14,671,12],[672,18,671,16],[672,19,671,17,"options"],[672,26,671,24],[672,27,671,25,"saveMissing"],[672,38,671,36],[672,40,671,38],[673,12,672,10],[673,16,672,14],[673,20,672,18],[673,21,672,19,"options"],[673,28,672,26],[673,29,672,27,"saveMissingPlurals"],[673,47,672,45],[673,51,672,49,"needsPluralHandling"],[673,70,672,68],[673,72,672,70],[674,14,673,12,"lngs"],[674,18,673,16],[674,19,673,17,"forEach"],[674,26,673,24],[674,27,673,25,"language"],[674,35,673,33],[674,39,673,37],[675,16,674,14],[675,22,674,20,"suffixes"],[675,30,674,28],[675,33,674,31],[675,37,674,35],[675,38,674,36,"pluralResolver"],[675,52,674,50],[675,53,674,51,"getSuffixes"],[675,64,674,62],[675,65,674,63,"language"],[675,73,674,71],[675,75,674,73,"opt"],[675,78,674,76],[675,79,674,77],[676,16,675,14],[676,20,675,18,"needsZeroSuffixLookup"],[676,41,675,39],[676,45,675,43,"opt"],[676,48,675,46],[676,49,675,47],[676,64,675,62],[676,68,675,66],[676,69,675,67,"options"],[676,76,675,74],[676,77,675,75,"pluralSeparator"],[676,92,675,90],[676,98,675,96],[676,99,675,97],[676,103,675,101,"suffixes"],[676,111,675,109],[676,112,675,110,"indexOf"],[676,119,675,117],[676,120,675,118],[676,123,675,121],[676,127,675,125],[676,128,675,126,"options"],[676,135,675,133],[676,136,675,134,"pluralSeparator"],[676,151,675,149],[676,157,675,155],[676,158,675,156],[676,161,675,159],[676,162,675,160],[676,164,675,162],[677,18,676,16,"suffixes"],[677,26,676,24],[677,27,676,25,"push"],[677,31,676,29],[677,32,676,30],[677,35,676,33],[677,39,676,37],[677,40,676,38,"options"],[677,47,676,45],[677,48,676,46,"pluralSeparator"],[677,63,676,61],[677,69,676,67],[677,70,676,68],[678,16,677,14],[679,16,678,14,"suffixes"],[679,24,678,22],[679,25,678,23,"forEach"],[679,32,678,30],[679,33,678,31,"suffix"],[679,39,678,37],[679,43,678,41],[680,18,679,16,"send"],[680,22,679,20],[680,23,679,21],[680,24,679,22,"language"],[680,32,679,30],[680,33,679,31],[680,35,679,33,"key"],[680,38,679,36],[680,41,679,39,"suffix"],[680,47,679,45],[680,49,679,47,"opt"],[680,52,679,50],[680,53,679,51],[680,68,679,66,"suffix"],[680,74,679,72],[680,76,679,74],[680,77,679,75],[680,81,679,79,"defaultValue"],[680,93,679,91],[680,94,679,92],[681,16,680,14],[681,17,680,15],[681,18,680,16],[682,14,681,12],[682,15,681,13],[682,16,681,14],[683,12,682,10],[683,13,682,11],[683,19,682,17],[684,14,683,12,"send"],[684,18,683,16],[684,19,683,17,"lngs"],[684,23,683,21],[684,25,683,23,"key"],[684,28,683,26],[684,30,683,28,"defaultValue"],[684,42,683,40],[684,43,683,41],[685,12,684,10],[686,10,685,8],[687,8,686,6],[688,8,687,6,"res"],[688,11,687,9],[688,14,687,12],[688,18,687,16],[688,19,687,17,"extendTranslation"],[688,36,687,34],[688,37,687,35,"res"],[688,40,687,38],[688,42,687,40,"keys"],[688,46,687,44],[688,48,687,46,"opt"],[688,51,687,49],[688,53,687,51,"resolved"],[688,61,687,59],[688,63,687,61,"lastKey"],[688,70,687,68],[688,71,687,69],[689,8,688,6],[689,12,688,10,"usedKey"],[689,19,688,17],[689,23,688,21,"res"],[689,26,688,24],[689,31,688,29,"key"],[689,34,688,32],[689,38,688,36],[689,42,688,40],[689,43,688,41,"options"],[689,50,688,48],[689,51,688,49,"appendNamespaceToMissingKey"],[689,78,688,76],[689,80,688,78],[690,10,689,8,"res"],[690,13,689,11],[690,16,689,14],[690,19,689,17,"namespace"],[690,28,689,26],[690,31,689,29,"nsSeparator"],[690,42,689,40],[690,45,689,43,"key"],[690,48,689,46],[690,50,689,48],[691,8,690,6],[692,8,691,6],[692,12,691,10],[692,13,691,11,"usedKey"],[692,20,691,18],[692,24,691,22,"usedDefault"],[692,35,691,33],[692,40,691,38],[692,44,691,42],[692,45,691,43,"options"],[692,52,691,50],[692,53,691,51,"parseMissingKeyHandler"],[692,75,691,73],[692,77,691,75],[693,10,692,8,"res"],[693,13,692,11],[693,16,692,14],[693,20,692,18],[693,21,692,19,"options"],[693,28,692,26],[693,29,692,27,"parseMissingKeyHandler"],[693,51,692,49],[693,52,692,50],[693,56,692,54],[693,57,692,55,"options"],[693,64,692,62],[693,65,692,63,"appendNamespaceToMissingKey"],[693,92,692,90],[693,95,692,93],[693,98,692,96,"namespace"],[693,107,692,105],[693,110,692,108,"nsSeparator"],[693,121,692,119],[693,124,692,122,"key"],[693,127,692,125],[693,129,692,127],[693,132,692,130,"key"],[693,135,692,133],[693,137,692,135,"usedDefault"],[693,148,692,146],[693,151,692,149,"res"],[693,154,692,152],[693,157,692,155,"undefined"],[693,166,692,164],[693,168,692,166,"opt"],[693,171,692,169],[693,172,692,170],[694,8,693,6],[695,6,694,4],[696,6,695,4],[696,10,695,8,"returnDetails"],[696,23,695,21],[696,25,695,23],[697,8,696,6,"resolved"],[697,16,696,14],[697,17,696,15,"res"],[697,20,696,18],[697,23,696,21,"res"],[697,26,696,24],[698,8,697,6,"resolved"],[698,16,697,14],[698,17,697,15,"usedParams"],[698,27,697,25],[698,30,697,28],[698,34,697,32],[698,35,697,33,"getUsedParamsDetails"],[698,55,697,53],[698,56,697,54,"opt"],[698,59,697,57],[698,60,697,58],[699,8,698,6],[699,15,698,13,"resolved"],[699,23,698,21],[700,6,699,4],[701,6,700,4],[701,13,700,11,"res"],[701,16,700,14],[702,4,701,2],[703,4,702,2,"extendTranslation"],[703,21,702,19,"extendTranslation"],[703,22,702,20,"res"],[703,25,702,23],[703,27,702,25,"key"],[703,30,702,28],[703,32,702,30,"opt"],[703,35,702,33],[703,37,702,35,"resolved"],[703,45,702,43],[703,47,702,45,"lastKey"],[703,54,702,52],[703,56,702,54],[704,6,703,4],[704,10,703,8],[704,14,703,12],[704,15,703,13,"i18nFormat"],[704,25,703,23],[704,27,703,25,"parse"],[704,32,703,30],[704,34,703,32],[705,8,704,6,"res"],[705,11,704,9],[705,14,704,12],[705,18,704,16],[705,19,704,17,"i18nFormat"],[705,29,704,27],[705,30,704,28,"parse"],[705,35,704,33],[705,36,704,34,"res"],[705,39,704,37],[705,41,704,39],[706,10,705,8],[706,13,705,11],[706,17,705,15],[706,18,705,16,"options"],[706,25,705,23],[706,26,705,24,"interpolation"],[706,39,705,37],[706,40,705,38,"defaultVariables"],[706,56,705,54],[707,10,706,8],[707,13,706,11,"opt"],[708,8,707,6],[708,9,707,7],[708,11,707,9,"opt"],[708,14,707,12],[708,15,707,13,"lng"],[708,18,707,16],[708,22,707,20],[708,26,707,24],[708,27,707,25,"language"],[708,35,707,33],[708,39,707,37,"resolved"],[708,47,707,45],[708,48,707,46,"usedLng"],[708,55,707,53],[708,57,707,55,"resolved"],[708,65,707,63],[708,66,707,64,"usedNS"],[708,72,707,70],[708,74,707,72,"resolved"],[708,82,707,80],[708,83,707,81,"usedKey"],[708,90,707,88],[708,92,707,90],[709,10,708,8,"resolved"],[710,8,709,6],[710,9,709,7],[710,10,709,8],[711,6,710,4],[711,7,710,5],[711,13,710,11],[711,17,710,15],[711,18,710,16,"opt"],[711,21,710,19],[711,22,710,20,"skipInterpolation"],[711,39,710,37],[711,41,710,39],[712,8,711,6],[712,12,711,10,"opt"],[712,15,711,13],[712,16,711,14,"interpolation"],[712,29,711,27],[712,31,711,29],[712,35,711,33],[712,36,711,34,"interpolator"],[712,48,711,46],[712,49,711,47,"init"],[712,53,711,51],[712,54,711,52],[713,10,712,8],[713,13,712,11,"opt"],[713,16,712,14],[714,10,713,8],[714,13,713,11],[715,12,714,10,"interpolation"],[715,25,714,23],[715,27,714,25],[716,14,715,12],[716,17,715,15],[716,21,715,19],[716,22,715,20,"options"],[716,29,715,27],[716,30,715,28,"interpolation"],[716,43,715,41],[717,14,716,12],[717,17,716,15,"opt"],[717,20,716,18],[717,21,716,19,"interpolation"],[718,12,717,10],[719,10,718,8],[720,8,719,6],[720,9,719,7],[720,10,719,8],[721,8,720,6],[721,14,720,12,"skipOnVariables"],[721,29,720,27],[721,32,720,30,"isString"],[721,40,720,38],[721,41,720,39,"res"],[721,44,720,42],[721,45,720,43],[721,50,720,48,"opt"],[721,53,720,51],[721,55,720,53,"interpolation"],[721,68,720,66],[721,70,720,68,"skipOnVariables"],[721,85,720,83],[721,90,720,88,"undefined"],[721,99,720,97],[721,102,720,100,"opt"],[721,105,720,103],[721,106,720,104,"interpolation"],[721,119,720,117],[721,120,720,118,"skipOnVariables"],[721,135,720,133],[721,138,720,136],[721,142,720,140],[721,143,720,141,"options"],[721,150,720,148],[721,151,720,149,"interpolation"],[721,164,720,162],[721,165,720,163,"skipOnVariables"],[721,180,720,178],[721,181,720,179],[722,8,721,6],[722,12,721,10,"nestBef"],[722,19,721,17],[723,8,722,6],[723,12,722,10,"skipOnVariables"],[723,27,722,25],[723,29,722,27],[724,10,723,8],[724,16,723,14,"nb"],[724,18,723,16],[724,21,723,19,"res"],[724,24,723,22],[724,25,723,23,"match"],[724,30,723,28],[724,31,723,29],[724,35,723,33],[724,36,723,34,"interpolator"],[724,48,723,46],[724,49,723,47,"nestingRegexp"],[724,62,723,60],[724,63,723,61],[725,10,724,8,"nestBef"],[725,17,724,15],[725,20,724,18,"nb"],[725,22,724,20],[725,26,724,24,"nb"],[725,28,724,26],[725,29,724,27,"length"],[725,35,724,33],[726,8,725,6],[727,8,726,6],[727,12,726,10,"data"],[727,16,726,14],[727,19,726,17,"opt"],[727,22,726,20],[727,23,726,21,"replace"],[727,30,726,28],[727,34,726,32],[727,35,726,33,"isString"],[727,43,726,41],[727,44,726,42,"opt"],[727,47,726,45],[727,48,726,46,"replace"],[727,55,726,53],[727,56,726,54],[727,59,726,57,"opt"],[727,62,726,60],[727,63,726,61,"replace"],[727,70,726,68],[727,73,726,71,"opt"],[727,76,726,74],[728,8,727,6],[728,12,727,10],[728,16,727,14],[728,17,727,15,"options"],[728,24,727,22],[728,25,727,23,"interpolation"],[728,38,727,36],[728,39,727,37,"defaultVariables"],[728,55,727,53],[728,57,727,55,"data"],[728,61,727,59],[728,64,727,62],[729,10,728,8],[729,13,728,11],[729,17,728,15],[729,18,728,16,"options"],[729,25,728,23],[729,26,728,24,"interpolation"],[729,39,728,37],[729,40,728,38,"defaultVariables"],[729,56,728,54],[730,10,729,8],[730,13,729,11,"data"],[731,8,730,6],[731,9,730,7],[732,8,731,6,"res"],[732,11,731,9],[732,14,731,12],[732,18,731,16],[732,19,731,17,"interpolator"],[732,31,731,29],[732,32,731,30,"interpolate"],[732,43,731,41],[732,44,731,42,"res"],[732,47,731,45],[732,49,731,47,"data"],[732,53,731,51],[732,55,731,53,"opt"],[732,58,731,56],[732,59,731,57,"lng"],[732,62,731,60],[732,66,731,64],[732,70,731,68],[732,71,731,69,"language"],[732,79,731,77],[732,83,731,81,"resolved"],[732,91,731,89],[732,92,731,90,"usedLng"],[732,99,731,97],[732,101,731,99,"opt"],[732,104,731,102],[732,105,731,103],[733,8,732,6],[733,12,732,10,"skipOnVariables"],[733,27,732,25],[733,29,732,27],[734,10,733,8],[734,16,733,14,"na"],[734,18,733,16],[734,21,733,19,"res"],[734,24,733,22],[734,25,733,23,"match"],[734,30,733,28],[734,31,733,29],[734,35,733,33],[734,36,733,34,"interpolator"],[734,48,733,46],[734,49,733,47,"nestingRegexp"],[734,62,733,60],[734,63,733,61],[735,10,734,8],[735,16,734,14,"nestAft"],[735,23,734,21],[735,26,734,24,"na"],[735,28,734,26],[735,32,734,30,"na"],[735,34,734,32],[735,35,734,33,"length"],[735,41,734,39],[736,10,735,8],[736,14,735,12,"nestBef"],[736,21,735,19],[736,24,735,22,"nestAft"],[736,31,735,29],[736,33,735,31,"opt"],[736,36,735,34],[736,37,735,35,"nest"],[736,41,735,39],[736,44,735,42],[736,49,735,47],[737,8,736,6],[738,8,737,6],[738,12,737,10],[738,13,737,11,"opt"],[738,16,737,14],[738,17,737,15,"lng"],[738,20,737,18],[738,24,737,22,"resolved"],[738,32,737,30],[738,36,737,34,"resolved"],[738,44,737,42],[738,45,737,43,"res"],[738,48,737,46],[738,50,737,48,"opt"],[738,53,737,51],[738,54,737,52,"lng"],[738,57,737,55],[738,60,737,58],[738,64,737,62],[738,65,737,63,"language"],[738,73,737,71],[738,77,737,75,"resolved"],[738,85,737,83],[738,86,737,84,"usedLng"],[738,93,737,91],[739,8,738,6],[739,12,738,10,"opt"],[739,15,738,13],[739,16,738,14,"nest"],[739,20,738,18],[739,25,738,23],[739,30,738,28],[739,32,738,30,"res"],[739,35,738,33],[739,38,738,36],[739,42,738,40],[739,43,738,41,"interpolator"],[739,55,738,53],[739,56,738,54,"nest"],[739,60,738,58],[739,61,738,59,"res"],[739,64,738,62],[739,66,738,64],[739,67,738,65],[739,70,738,68,"args"],[739,74,738,72],[739,79,738,77],[740,10,739,8],[740,14,739,12,"lastKey"],[740,21,739,19],[740,24,739,22],[740,25,739,23],[740,26,739,24],[740,31,739,29,"args"],[740,35,739,33],[740,36,739,34],[740,37,739,35],[740,38,739,36],[740,42,739,40],[740,43,739,41,"opt"],[740,46,739,44],[740,47,739,45,"context"],[740,54,739,52],[740,56,739,54],[741,12,740,10],[741,16,740,14],[741,17,740,15,"logger"],[741,23,740,21],[741,24,740,22,"warn"],[741,28,740,26],[741,29,740,27],[741,74,740,72,"args"],[741,78,740,76],[741,79,740,77],[741,80,740,78],[741,81,740,79],[741,93,740,91,"key"],[741,96,740,94],[741,97,740,95],[741,98,740,96],[741,99,740,97],[741,101,740,99],[741,102,740,100],[742,12,741,10],[742,19,741,17],[742,23,741,21],[743,10,742,8],[744,10,743,8],[744,17,743,15],[744,21,743,19],[744,22,743,20,"translate"],[744,31,743,29],[744,32,743,30],[744,35,743,33,"args"],[744,39,743,37],[744,41,743,39,"key"],[744,44,743,42],[744,45,743,43],[745,8,744,6],[745,9,744,7],[745,11,744,9,"opt"],[745,14,744,12],[745,15,744,13],[746,8,745,6],[746,12,745,10,"opt"],[746,15,745,13],[746,16,745,14,"interpolation"],[746,29,745,27],[746,31,745,29],[746,35,745,33],[746,36,745,34,"interpolator"],[746,48,745,46],[746,49,745,47,"reset"],[746,54,745,52],[746,55,745,53],[746,56,745,54],[747,6,746,4],[748,6,747,4],[748,12,747,10,"postProcess"],[748,23,747,21],[748,26,747,24,"opt"],[748,29,747,27],[748,30,747,28,"postProcess"],[748,41,747,39],[748,45,747,43],[748,49,747,47],[748,50,747,48,"options"],[748,57,747,55],[748,58,747,56,"postProcess"],[748,69,747,67],[749,6,748,4],[749,12,748,10,"postProcessorNames"],[749,30,748,28],[749,33,748,31,"isString"],[749,41,748,39],[749,42,748,40,"postProcess"],[749,53,748,51],[749,54,748,52],[749,57,748,55],[749,58,748,56,"postProcess"],[749,69,748,67],[749,70,748,68],[749,73,748,71,"postProcess"],[749,84,748,82],[750,6,749,4],[750,10,749,8,"res"],[750,13,749,11],[750,17,749,15],[750,21,749,19],[750,25,749,23,"postProcessorNames"],[750,43,749,41],[750,45,749,43,"length"],[750,51,749,49],[750,55,749,53,"opt"],[750,58,749,56],[750,59,749,57,"applyPostProcessor"],[750,77,749,75],[750,82,749,80],[750,87,749,85],[750,89,749,87],[751,8,750,6,"res"],[751,11,750,9],[751,14,750,12,"postProcessor"],[751,27,750,25],[751,28,750,26,"handle"],[751,34,750,32],[751,35,750,33,"postProcessorNames"],[751,53,750,51],[751,55,750,53,"res"],[751,58,750,56],[751,60,750,58,"key"],[751,63,750,61],[751,65,750,63],[751,69,750,67],[751,70,750,68,"options"],[751,77,750,75],[751,81,750,79],[751,85,750,83],[751,86,750,84,"options"],[751,93,750,91],[751,94,750,92,"postProcessPassResolved"],[751,117,750,115],[751,120,750,118],[752,10,751,8,"i18nResolved"],[752,22,751,20],[752,24,751,22],[753,12,752,10],[753,15,752,13,"resolved"],[753,23,752,21],[754,12,753,10,"usedParams"],[754,22,753,20],[754,24,753,22],[754,28,753,26],[754,29,753,27,"getUsedParamsDetails"],[754,49,753,47],[754,50,753,48,"opt"],[754,53,753,51],[755,10,754,8],[755,11,754,9],[756,10,755,8],[756,13,755,11,"opt"],[757,8,756,6],[757,9,756,7],[757,12,756,10,"opt"],[757,15,756,13],[757,17,756,15],[757,21,756,19],[757,22,756,20],[758,6,757,4],[759,6,758,4],[759,13,758,11,"res"],[759,16,758,14],[760,4,759,2],[761,4,760,2,"resolve"],[761,11,760,9,"resolve"],[761,12,760,10,"keys"],[761,16,760,14],[761,18,760,16,"opt"],[761,21,760,19],[761,24,760,22],[761,25,760,23],[761,26,760,24],[761,28,760,26],[762,6,761,4],[762,10,761,8,"found"],[762,15,761,13],[763,6,762,4],[763,10,762,8,"usedKey"],[763,17,762,15],[764,6,763,4],[764,10,763,8,"exactUsedKey"],[764,22,763,20],[765,6,764,4],[765,10,764,8,"usedLng"],[765,17,764,15],[766,6,765,4],[766,10,765,8,"usedNS"],[766,16,765,14],[767,6,766,4],[767,10,766,8,"isString"],[767,18,766,16],[767,19,766,17,"keys"],[767,23,766,21],[767,24,766,22],[767,26,766,24,"keys"],[767,30,766,28],[767,33,766,31],[767,34,766,32,"keys"],[767,38,766,36],[767,39,766,37],[768,6,767,4,"keys"],[768,10,767,8],[768,11,767,9,"forEach"],[768,18,767,16],[768,19,767,17,"k"],[768,20,767,18],[768,24,767,22],[769,8,768,6],[769,12,768,10],[769,16,768,14],[769,17,768,15,"isValidLookup"],[769,30,768,28],[769,31,768,29,"found"],[769,36,768,34],[769,37,768,35],[769,39,768,37],[770,8,769,6],[770,14,769,12,"extracted"],[770,23,769,21],[770,26,769,24],[770,30,769,28],[770,31,769,29,"extractFromKey"],[770,45,769,43],[770,46,769,44,"k"],[770,47,769,45],[770,49,769,47,"opt"],[770,52,769,50],[770,53,769,51],[771,8,770,6],[771,14,770,12,"key"],[771,17,770,15],[771,20,770,18,"extracted"],[771,29,770,27],[771,30,770,28,"key"],[771,33,770,31],[772,8,771,6,"usedKey"],[772,15,771,13],[772,18,771,16,"key"],[772,21,771,19],[773,8,772,6],[773,12,772,10,"namespaces"],[773,22,772,20],[773,25,772,23,"extracted"],[773,34,772,32],[773,35,772,33,"namespaces"],[773,45,772,43],[774,8,773,6],[774,12,773,10],[774,16,773,14],[774,17,773,15,"options"],[774,24,773,22],[774,25,773,23,"fallbackNS"],[774,35,773,33],[774,37,773,35,"namespaces"],[774,47,773,45],[774,50,773,48,"namespaces"],[774,60,773,58],[774,61,773,59,"concat"],[774,67,773,65],[774,68,773,66],[774,72,773,70],[774,73,773,71,"options"],[774,80,773,78],[774,81,773,79,"fallbackNS"],[774,91,773,89],[774,92,773,90],[775,8,774,6],[775,14,774,12,"needsPluralHandling"],[775,33,774,31],[775,36,774,34,"opt"],[775,39,774,37],[775,40,774,38,"count"],[775,45,774,43],[775,50,774,48,"undefined"],[775,59,774,57],[775,63,774,61],[775,64,774,62,"isString"],[775,72,774,70],[775,73,774,71,"opt"],[775,76,774,74],[775,77,774,75,"count"],[775,82,774,80],[775,83,774,81],[776,8,775,6],[776,14,775,12,"needsZeroSuffixLookup"],[776,35,775,33],[776,38,775,36,"needsPluralHandling"],[776,57,775,55],[776,61,775,59],[776,62,775,60,"opt"],[776,65,775,63],[776,66,775,64,"ordinal"],[776,73,775,71],[776,77,775,75,"opt"],[776,80,775,78],[776,81,775,79,"count"],[776,86,775,84],[776,91,775,89],[776,92,775,90],[777,8,776,6],[777,14,776,12,"needsContextHandling"],[777,34,776,32],[777,37,776,35,"opt"],[777,40,776,38],[777,41,776,39,"context"],[777,48,776,46],[777,53,776,51,"undefined"],[777,62,776,60],[777,67,776,65,"isString"],[777,75,776,73],[777,76,776,74,"opt"],[777,79,776,77],[777,80,776,78,"context"],[777,87,776,85],[777,88,776,86],[777,92,776,90],[777,99,776,97,"opt"],[777,102,776,100],[777,103,776,101,"context"],[777,110,776,108],[777,115,776,113],[777,123,776,121],[777,124,776,122],[777,128,776,126,"opt"],[777,131,776,129],[777,132,776,130,"context"],[777,139,776,137],[777,144,776,142],[777,146,776,144],[778,8,777,6],[778,14,777,12,"codes"],[778,19,777,17],[778,22,777,20,"opt"],[778,25,777,23],[778,26,777,24,"lngs"],[778,30,777,28],[778,33,777,31,"opt"],[778,36,777,34],[778,37,777,35,"lngs"],[778,41,777,39],[778,44,777,42],[778,48,777,46],[778,49,777,47,"languageUtils"],[778,62,777,60],[778,63,777,61,"toResolveHierarchy"],[778,81,777,79],[778,82,777,80,"opt"],[778,85,777,83],[778,86,777,84,"lng"],[778,89,777,87],[778,93,777,91],[778,97,777,95],[778,98,777,96,"language"],[778,106,777,104],[778,108,777,106,"opt"],[778,111,777,109],[778,112,777,110,"fallbackLng"],[778,123,777,121],[778,124,777,122],[779,8,778,6,"namespaces"],[779,18,778,16],[779,19,778,17,"forEach"],[779,26,778,24],[779,27,778,25,"ns"],[779,29,778,27],[779,33,778,31],[780,10,779,8],[780,14,779,12],[780,18,779,16],[780,19,779,17,"isValidLookup"],[780,32,779,30],[780,33,779,31,"found"],[780,38,779,36],[780,39,779,37],[780,41,779,39],[781,10,780,8,"usedNS"],[781,16,780,14],[781,19,780,17,"ns"],[781,21,780,19],[782,10,781,8],[782,14,781,12],[782,15,781,13,"checkedLoadedFor"],[782,31,781,29],[782,32,781,30],[782,35,781,33,"codes"],[782,40,781,38],[782,41,781,39],[782,42,781,40],[782,43,781,41],[782,47,781,45,"ns"],[782,49,781,47],[782,51,781,49],[782,52,781,50],[782,56,781,54],[782,60,781,58],[782,61,781,59,"utils"],[782,66,781,64],[782,68,781,66,"hasLoadedNamespace"],[782,86,781,84],[782,90,781,88],[782,91,781,89],[782,95,781,93],[782,96,781,94,"utils"],[782,101,781,99],[782,103,781,101,"hasLoadedNamespace"],[782,121,781,119],[782,122,781,120,"usedNS"],[782,128,781,126],[782,129,781,127],[782,131,781,129],[783,12,782,10,"checkedLoadedFor"],[783,28,782,26],[783,29,782,27],[783,32,782,30,"codes"],[783,37,782,35],[783,38,782,36],[783,39,782,37],[783,40,782,38],[783,44,782,42,"ns"],[783,46,782,44],[783,48,782,46],[783,49,782,47],[783,52,782,50],[783,56,782,54],[784,12,783,10],[784,16,783,14],[784,17,783,15,"logger"],[784,23,783,21],[784,24,783,22,"warn"],[784,28,783,26],[784,29,783,27],[784,37,783,35,"usedKey"],[784,44,783,42],[784,64,783,62,"codes"],[784,69,783,67],[784,70,783,68,"join"],[784,74,783,72],[784,75,783,73],[784,79,783,77],[784,80,783,78],[784,118,783,116,"usedNS"],[784,124,783,122],[784,146,783,144],[784,148,783,146],[784,366,783,364],[784,367,783,365],[785,10,784,8],[786,10,785,8,"codes"],[786,15,785,13],[786,16,785,14,"forEach"],[786,23,785,21],[786,24,785,22,"code"],[786,28,785,26],[786,32,785,30],[787,12,786,10],[787,16,786,14],[787,20,786,18],[787,21,786,19,"isValidLookup"],[787,34,786,32],[787,35,786,33,"found"],[787,40,786,38],[787,41,786,39],[787,43,786,41],[788,12,787,10,"usedLng"],[788,19,787,17],[788,22,787,20,"code"],[788,26,787,24],[789,12,788,10],[789,18,788,16,"finalKeys"],[789,27,788,25],[789,30,788,28],[789,31,788,29,"key"],[789,34,788,32],[789,35,788,33],[790,12,789,10],[790,16,789,14],[790,20,789,18],[790,21,789,19,"i18nFormat"],[790,31,789,29],[790,33,789,31,"addLookupKeys"],[790,46,789,44],[790,48,789,46],[791,14,790,12],[791,18,790,16],[791,19,790,17,"i18nFormat"],[791,29,790,27],[791,30,790,28,"addLookupKeys"],[791,43,790,41],[791,44,790,42,"finalKeys"],[791,53,790,51],[791,55,790,53,"key"],[791,58,790,56],[791,60,790,58,"code"],[791,64,790,62],[791,66,790,64,"ns"],[791,68,790,66],[791,70,790,68,"opt"],[791,73,790,71],[791,74,790,72],[792,12,791,10],[792,13,791,11],[792,19,791,17],[793,14,792,12],[793,18,792,16,"pluralSuffix"],[793,30,792,28],[794,14,793,12],[794,18,793,16,"needsPluralHandling"],[794,37,793,35],[794,39,793,37,"pluralSuffix"],[794,51,793,49],[794,54,793,52],[794,58,793,56],[794,59,793,57,"pluralResolver"],[794,73,793,71],[794,74,793,72,"getSuffix"],[794,83,793,81],[794,84,793,82,"code"],[794,88,793,86],[794,90,793,88,"opt"],[794,93,793,91],[794,94,793,92,"count"],[794,99,793,97],[794,101,793,99,"opt"],[794,104,793,102],[794,105,793,103],[795,14,794,12],[795,20,794,18,"zeroSuffix"],[795,30,794,28],[795,33,794,31],[795,36,794,34],[795,40,794,38],[795,41,794,39,"options"],[795,48,794,46],[795,49,794,47,"pluralSeparator"],[795,64,794,62],[795,70,794,68],[796,14,795,12],[796,20,795,18,"ordinalPrefix"],[796,33,795,31],[796,36,795,34],[796,39,795,37],[796,43,795,41],[796,44,795,42,"options"],[796,51,795,49],[796,52,795,50,"pluralSeparator"],[796,67,795,65],[796,77,795,75],[796,81,795,79],[796,82,795,80,"options"],[796,89,795,87],[796,90,795,88,"pluralSeparator"],[796,105,795,103],[796,107,795,105],[797,14,796,12],[797,18,796,16,"needsPluralHandling"],[797,37,796,35],[797,39,796,37],[798,16,797,14],[798,20,797,18,"opt"],[798,23,797,21],[798,24,797,22,"ordinal"],[798,31,797,29],[798,35,797,33,"pluralSuffix"],[798,47,797,45],[798,48,797,46,"indexOf"],[798,55,797,53],[798,56,797,54,"ordinalPrefix"],[798,69,797,67],[798,70,797,68],[798,75,797,73],[798,76,797,74],[798,78,797,76],[799,18,798,16,"finalKeys"],[799,27,798,25],[799,28,798,26,"push"],[799,32,798,30],[799,33,798,31,"key"],[799,36,798,34],[799,39,798,37,"pluralSuffix"],[799,51,798,49],[799,52,798,50,"replace"],[799,59,798,57],[799,60,798,58,"ordinalPrefix"],[799,73,798,71],[799,75,798,73],[799,79,798,77],[799,80,798,78,"options"],[799,87,798,85],[799,88,798,86,"pluralSeparator"],[799,103,798,101],[799,104,798,102],[799,105,798,103],[800,16,799,14],[801,16,800,14,"finalKeys"],[801,25,800,23],[801,26,800,24,"push"],[801,30,800,28],[801,31,800,29,"key"],[801,34,800,32],[801,37,800,35,"pluralSuffix"],[801,49,800,47],[801,50,800,48],[802,16,801,14],[802,20,801,18,"needsZeroSuffixLookup"],[802,41,801,39],[802,43,801,41],[803,18,802,16,"finalKeys"],[803,27,802,25],[803,28,802,26,"push"],[803,32,802,30],[803,33,802,31,"key"],[803,36,802,34],[803,39,802,37,"zeroSuffix"],[803,49,802,47],[803,50,802,48],[804,16,803,14],[805,14,804,12],[806,14,805,12],[806,18,805,16,"needsContextHandling"],[806,38,805,36],[806,40,805,38],[807,16,806,14],[807,22,806,20,"contextKey"],[807,32,806,30],[807,35,806,33],[807,38,806,36,"key"],[807,41,806,39],[807,44,806,42],[807,48,806,46],[807,49,806,47,"options"],[807,56,806,54],[807,57,806,55,"contextSeparator"],[807,73,806,71],[807,77,806,75],[807,80,806,78],[807,83,806,81,"opt"],[807,86,806,84],[807,87,806,85,"context"],[807,94,806,92],[807,96,806,94],[808,16,807,14,"finalKeys"],[808,25,807,23],[808,26,807,24,"push"],[808,30,807,28],[808,31,807,29,"contextKey"],[808,41,807,39],[808,42,807,40],[809,16,808,14],[809,20,808,18,"needsPluralHandling"],[809,39,808,37],[809,41,808,39],[810,18,809,16],[810,22,809,20,"opt"],[810,25,809,23],[810,26,809,24,"ordinal"],[810,33,809,31],[810,37,809,35,"pluralSuffix"],[810,49,809,47],[810,50,809,48,"indexOf"],[810,57,809,55],[810,58,809,56,"ordinalPrefix"],[810,71,809,69],[810,72,809,70],[810,77,809,75],[810,78,809,76],[810,80,809,78],[811,20,810,18,"finalKeys"],[811,29,810,27],[811,30,810,28,"push"],[811,34,810,32],[811,35,810,33,"contextKey"],[811,45,810,43],[811,48,810,46,"pluralSuffix"],[811,60,810,58],[811,61,810,59,"replace"],[811,68,810,66],[811,69,810,67,"ordinalPrefix"],[811,82,810,80],[811,84,810,82],[811,88,810,86],[811,89,810,87,"options"],[811,96,810,94],[811,97,810,95,"pluralSeparator"],[811,112,810,110],[811,113,810,111],[811,114,810,112],[812,18,811,16],[813,18,812,16,"finalKeys"],[813,27,812,25],[813,28,812,26,"push"],[813,32,812,30],[813,33,812,31,"contextKey"],[813,43,812,41],[813,46,812,44,"pluralSuffix"],[813,58,812,56],[813,59,812,57],[814,18,813,16],[814,22,813,20,"needsZeroSuffixLookup"],[814,43,813,41],[814,45,813,43],[815,20,814,18,"finalKeys"],[815,29,814,27],[815,30,814,28,"push"],[815,34,814,32],[815,35,814,33,"contextKey"],[815,45,814,43],[815,48,814,46,"zeroSuffix"],[815,58,814,56],[815,59,814,57],[816,18,815,16],[817,16,816,14],[818,14,817,12],[819,12,818,10],[820,12,819,10],[820,16,819,14,"possibleKey"],[820,27,819,25],[821,12,820,10],[821,19,820,17,"possibleKey"],[821,30,820,28],[821,33,820,31,"finalKeys"],[821,42,820,40],[821,43,820,41,"pop"],[821,46,820,44],[821,47,820,45],[821,48,820,46],[821,50,820,48],[822,14,821,12],[822,18,821,16],[822,19,821,17],[822,23,821,21],[822,24,821,22,"isValidLookup"],[822,37,821,35],[822,38,821,36,"found"],[822,43,821,41],[822,44,821,42],[822,46,821,44],[823,16,822,14,"exactUsedKey"],[823,28,822,26],[823,31,822,29,"possibleKey"],[823,42,822,40],[824,16,823,14,"found"],[824,21,823,19],[824,24,823,22],[824,28,823,26],[824,29,823,27,"getResource"],[824,40,823,38],[824,41,823,39,"code"],[824,45,823,43],[824,47,823,45,"ns"],[824,49,823,47],[824,51,823,49,"possibleKey"],[824,62,823,60],[824,64,823,62,"opt"],[824,67,823,65],[824,68,823,66],[825,14,824,12],[826,12,825,10],[827,10,826,8],[827,11,826,9],[827,12,826,10],[828,8,827,6],[828,9,827,7],[828,10,827,8],[829,6,828,4],[829,7,828,5],[829,8,828,6],[830,6,829,4],[830,13,829,11],[831,8,830,6,"res"],[831,11,830,9],[831,13,830,11,"found"],[831,18,830,16],[832,8,831,6,"usedKey"],[832,15,831,13],[833,8,832,6,"exactUsedKey"],[833,20,832,18],[834,8,833,6,"usedLng"],[834,15,833,13],[835,8,834,6,"usedNS"],[836,6,835,4],[836,7,835,5],[837,4,836,2],[838,4,837,2,"isValidLookup"],[838,17,837,15,"isValidLookup"],[838,18,837,16,"res"],[838,21,837,19],[838,23,837,21],[839,6,838,4],[839,13,838,11,"res"],[839,16,838,14],[839,21,838,19,"undefined"],[839,30,838,28],[839,34,838,32],[839,36,838,34],[839,37,838,35],[839,41,838,39],[839,42,838,40,"options"],[839,49,838,47],[839,50,838,48,"returnNull"],[839,60,838,58],[839,64,838,62,"res"],[839,67,838,65],[839,72,838,70],[839,76,838,74],[839,77,838,75],[839,81,838,79],[839,83,838,81],[839,84,838,82],[839,88,838,86],[839,89,838,87,"options"],[839,96,838,94],[839,97,838,95,"returnEmptyString"],[839,114,838,112],[839,118,838,116,"res"],[839,121,838,119],[839,126,838,124],[839,128,838,126],[839,129,838,127],[840,4,839,2],[841,4,840,2,"getResource"],[841,15,840,13,"getResource"],[841,16,840,14,"code"],[841,20,840,18],[841,22,840,20,"ns"],[841,24,840,22],[841,26,840,24,"key"],[841,29,840,27],[841,31,840,29,"options"],[841,38,840,36],[841,41,840,39],[841,42,840,40],[841,43,840,41],[841,45,840,43],[842,6,841,4],[842,10,841,8],[842,14,841,12],[842,15,841,13,"i18nFormat"],[842,25,841,23],[842,27,841,25,"getResource"],[842,38,841,36],[842,40,841,38],[842,47,841,45],[842,51,841,49],[842,52,841,50,"i18nFormat"],[842,62,841,60],[842,63,841,61,"getResource"],[842,74,841,72],[842,75,841,73,"code"],[842,79,841,77],[842,81,841,79,"ns"],[842,83,841,81],[842,85,841,83,"key"],[842,88,841,86],[842,90,841,88,"options"],[842,97,841,95],[842,98,841,96],[843,6,842,4],[843,13,842,11],[843,17,842,15],[843,18,842,16,"resourceStore"],[843,31,842,29],[843,32,842,30,"getResource"],[843,43,842,41],[843,44,842,42,"code"],[843,48,842,46],[843,50,842,48,"ns"],[843,52,842,50],[843,54,842,52,"key"],[843,57,842,55],[843,59,842,57,"options"],[843,66,842,64],[843,67,842,65],[844,4,843,2],[845,4,844,2,"getUsedParamsDetails"],[845,24,844,22,"getUsedParamsDetails"],[845,25,844,23,"options"],[845,32,844,30],[845,35,844,33],[845,36,844,34],[845,37,844,35],[845,39,844,37],[846,6,845,4],[846,12,845,10,"optionsKeys"],[846,23,845,21],[846,26,845,24],[846,27,845,25],[846,41,845,39],[846,43,845,41],[846,52,845,50],[846,54,845,52],[846,63,845,61],[846,65,845,63],[846,74,845,72],[846,76,845,74],[846,81,845,79],[846,83,845,81],[846,89,845,87],[846,91,845,89],[846,104,845,102],[846,106,845,104],[846,110,845,108],[846,112,845,110],[846,126,845,124],[846,128,845,126],[846,141,845,139],[846,143,845,141],[846,158,845,156],[846,160,845,158],[846,175,845,173],[846,177,845,175],[846,189,845,187],[846,191,845,189],[846,204,845,202],[846,206,845,204],[846,221,845,219],[846,222,845,220],[847,6,846,4],[847,12,846,10,"useOptionsReplaceForData"],[847,36,846,34],[847,39,846,37,"options"],[847,46,846,44],[847,47,846,45,"replace"],[847,54,846,52],[847,58,846,56],[847,59,846,57,"isString"],[847,67,846,65],[847,68,846,66,"options"],[847,75,846,73],[847,76,846,74,"replace"],[847,83,846,81],[847,84,846,82],[848,6,847,4],[848,10,847,8,"data"],[848,14,847,12],[848,17,847,15,"useOptionsReplaceForData"],[848,41,847,39],[848,44,847,42,"options"],[848,51,847,49],[848,52,847,50,"replace"],[848,59,847,57],[848,62,847,60,"options"],[848,69,847,67],[849,6,848,4],[849,10,848,8,"useOptionsReplaceForData"],[849,34,848,32],[849,38,848,36],[849,45,848,43,"options"],[849,52,848,50],[849,53,848,51,"count"],[849,58,848,56],[849,63,848,61],[849,74,848,72],[849,76,848,74],[850,8,849,6,"data"],[850,12,849,10],[850,13,849,11,"count"],[850,18,849,16],[850,21,849,19,"options"],[850,28,849,26],[850,29,849,27,"count"],[850,34,849,32],[851,6,850,4],[852,6,851,4],[852,10,851,8],[852,14,851,12],[852,15,851,13,"options"],[852,22,851,20],[852,23,851,21,"interpolation"],[852,36,851,34],[852,37,851,35,"defaultVariables"],[852,53,851,51],[852,55,851,53],[853,8,852,6,"data"],[853,12,852,10],[853,15,852,13],[854,10,853,8],[854,13,853,11],[854,17,853,15],[854,18,853,16,"options"],[854,25,853,23],[854,26,853,24,"interpolation"],[854,39,853,37],[854,40,853,38,"defaultVariables"],[854,56,853,54],[855,10,854,8],[855,13,854,11,"data"],[856,8,855,6],[856,9,855,7],[857,6,856,4],[858,6,857,4],[858,10,857,8],[858,11,857,9,"useOptionsReplaceForData"],[858,35,857,33],[858,37,857,35],[859,8,858,6,"data"],[859,12,858,10],[859,15,858,13],[860,10,859,8],[860,13,859,11,"data"],[861,8,860,6],[861,9,860,7],[862,8,861,6],[862,13,861,11],[862,19,861,17,"key"],[862,22,861,20],[862,26,861,24,"optionsKeys"],[862,37,861,35],[862,39,861,37],[863,10,862,8],[863,17,862,15,"data"],[863,21,862,19],[863,22,862,20,"key"],[863,25,862,23],[863,26,862,24],[864,8,863,6],[865,6,864,4],[866,6,865,4],[866,13,865,11,"data"],[866,17,865,15],[867,4,866,2],[868,4,867,2],[868,11,867,9,"hasDefaultValue"],[868,26,867,24,"hasDefaultValue"],[868,27,867,25,"options"],[868,34,867,32],[868,36,867,34],[869,6,868,4],[869,12,868,10,"prefix"],[869,18,868,16],[869,21,868,19],[869,35,868,33],[870,6,869,4],[870,11,869,9],[870,17,869,15,"option"],[870,23,869,21],[870,27,869,25,"options"],[870,34,869,32],[870,36,869,34],[871,8,870,6],[871,12,870,10,"Object"],[871,18,870,16],[871,19,870,17,"prototype"],[871,28,870,26],[871,29,870,27,"hasOwnProperty"],[871,43,870,41],[871,44,870,42,"call"],[871,48,870,46],[871,49,870,47,"options"],[871,56,870,54],[871,58,870,56,"option"],[871,64,870,62],[871,65,870,63],[871,69,870,67,"prefix"],[871,75,870,73],[871,80,870,78,"option"],[871,86,870,84],[871,87,870,85,"substring"],[871,96,870,94],[871,97,870,95],[871,98,870,96],[871,100,870,98,"prefix"],[871,106,870,104],[871,107,870,105,"length"],[871,113,870,111],[871,114,870,112],[871,118,870,116,"undefined"],[871,127,870,125],[871,132,870,130,"options"],[871,139,870,137],[871,140,870,138,"option"],[871,146,870,144],[871,147,870,145],[871,149,870,147],[872,10,871,8],[872,17,871,15],[872,21,871,19],[873,8,872,6],[874,6,873,4],[875,6,874,4],[875,13,874,11],[875,18,874,16],[876,4,875,2],[877,2,876,0],[878,2,878,0],[878,8,878,6,"LanguageUtil"],[878,20,878,18],[878,21,878,19],[879,4,879,2,"constructor"],[879,15,879,13,"constructor"],[879,16,879,14,"options"],[879,23,879,21],[879,25,879,23],[880,6,880,4],[880,10,880,8],[880,11,880,9,"options"],[880,18,880,16],[880,21,880,19,"options"],[880,28,880,26],[881,6,881,4],[881,10,881,8],[881,11,881,9,"supportedLngs"],[881,24,881,22],[881,27,881,25],[881,31,881,29],[881,32,881,30,"options"],[881,39,881,37],[881,40,881,38,"supportedLngs"],[881,53,881,51],[881,57,881,55],[881,62,881,60],[882,6,882,4],[882,10,882,8],[882,11,882,9,"logger"],[882,17,882,15],[882,20,882,18,"baseLogger"],[882,30,882,28],[882,31,882,29,"create"],[882,37,882,35],[882,38,882,36],[882,53,882,51],[882,54,882,52],[883,4,883,2],[884,4,884,2,"getScriptPartFromCode"],[884,25,884,23,"getScriptPartFromCode"],[884,26,884,24,"code"],[884,30,884,28],[884,32,884,30],[885,6,885,4,"code"],[885,10,885,8],[885,13,885,11,"getCleanedCode"],[885,27,885,25],[885,28,885,26,"code"],[885,32,885,30],[885,33,885,31],[886,6,886,4],[886,10,886,8],[886,11,886,9,"code"],[886,15,886,13],[886,19,886,17,"code"],[886,23,886,21],[886,24,886,22,"indexOf"],[886,31,886,29],[886,32,886,30],[886,35,886,33],[886,36,886,34],[886,39,886,37],[886,40,886,38],[886,42,886,40],[886,49,886,47],[886,53,886,51],[887,6,887,4],[887,12,887,10,"p"],[887,13,887,11],[887,16,887,14,"code"],[887,20,887,18],[887,21,887,19,"split"],[887,26,887,24],[887,27,887,25],[887,30,887,28],[887,31,887,29],[888,6,888,4],[888,10,888,8,"p"],[888,11,888,9],[888,12,888,10,"length"],[888,18,888,16],[888,23,888,21],[888,24,888,22],[888,26,888,24],[888,33,888,31],[888,37,888,35],[889,6,889,4,"p"],[889,7,889,5],[889,8,889,6,"pop"],[889,11,889,9],[889,12,889,10],[889,13,889,11],[890,6,890,4],[890,10,890,8,"p"],[890,11,890,9],[890,12,890,10,"p"],[890,13,890,11],[890,14,890,12,"length"],[890,20,890,18],[890,23,890,21],[890,24,890,22],[890,25,890,23],[890,26,890,24,"toLowerCase"],[890,37,890,35],[890,38,890,36],[890,39,890,37],[890,44,890,42],[890,47,890,45],[890,49,890,47],[890,56,890,54],[890,60,890,58],[891,6,891,4],[891,13,891,11],[891,17,891,15],[891,18,891,16,"formatLanguageCode"],[891,36,891,34],[891,37,891,35,"p"],[891,38,891,36],[891,39,891,37,"join"],[891,43,891,41],[891,44,891,42],[891,47,891,45],[891,48,891,46],[891,49,891,47],[892,4,892,2],[893,4,893,2,"getLanguagePartFromCode"],[893,27,893,25,"getLanguagePartFromCode"],[893,28,893,26,"code"],[893,32,893,30],[893,34,893,32],[894,6,894,4,"code"],[894,10,894,8],[894,13,894,11,"getCleanedCode"],[894,27,894,25],[894,28,894,26,"code"],[894,32,894,30],[894,33,894,31],[895,6,895,4],[895,10,895,8],[895,11,895,9,"code"],[895,15,895,13],[895,19,895,17,"code"],[895,23,895,21],[895,24,895,22,"indexOf"],[895,31,895,29],[895,32,895,30],[895,35,895,33],[895,36,895,34],[895,39,895,37],[895,40,895,38],[895,42,895,40],[895,49,895,47,"code"],[895,53,895,51],[896,6,896,4],[896,12,896,10,"p"],[896,13,896,11],[896,16,896,14,"code"],[896,20,896,18],[896,21,896,19,"split"],[896,26,896,24],[896,27,896,25],[896,30,896,28],[896,31,896,29],[897,6,897,4],[897,13,897,11],[897,17,897,15],[897,18,897,16,"formatLanguageCode"],[897,36,897,34],[897,37,897,35,"p"],[897,38,897,36],[897,39,897,37],[897,40,897,38],[897,41,897,39],[897,42,897,40],[898,4,898,2],[899,4,899,2,"formatLanguageCode"],[899,22,899,20,"formatLanguageCode"],[899,23,899,21,"code"],[899,27,899,25],[899,29,899,27],[900,6,900,4],[900,10,900,8,"isString"],[900,18,900,16],[900,19,900,17,"code"],[900,23,900,21],[900,24,900,22],[900,28,900,26,"code"],[900,32,900,30],[900,33,900,31,"indexOf"],[900,40,900,38],[900,41,900,39],[900,44,900,42],[900,45,900,43],[900,48,900,46],[900,49,900,47],[900,50,900,48],[900,52,900,50],[901,8,901,6],[901,12,901,10,"formattedCode"],[901,25,901,23],[902,8,902,6],[902,12,902,10],[903,10,903,8,"formattedCode"],[903,23,903,21],[903,26,903,24,"Intl"],[903,30,903,28],[903,31,903,29,"getCanonicalLocales"],[903,50,903,48],[903,51,903,49,"code"],[903,55,903,53],[903,56,903,54],[903,57,903,55],[903,58,903,56],[903,59,903,57],[904,8,904,6],[904,9,904,7],[904,10,904,8],[904,17,904,15,"e"],[904,18,904,16],[904,20,904,18],[904,21,904,19],[905,8,905,6],[905,12,905,10,"formattedCode"],[905,25,905,23],[905,29,905,27],[905,33,905,31],[905,34,905,32,"options"],[905,41,905,39],[905,42,905,40,"lowerCaseLng"],[905,54,905,52],[905,56,905,54],[906,10,906,8,"formattedCode"],[906,23,906,21],[906,26,906,24,"formattedCode"],[906,39,906,37],[906,40,906,38,"toLowerCase"],[906,51,906,49],[906,52,906,50],[906,53,906,51],[907,8,907,6],[908,8,908,6],[908,12,908,10,"formattedCode"],[908,25,908,23],[908,27,908,25],[908,34,908,32,"formattedCode"],[908,47,908,45],[909,8,909,6],[909,12,909,10],[909,16,909,14],[909,17,909,15,"options"],[909,24,909,22],[909,25,909,23,"lowerCaseLng"],[909,37,909,35],[909,39,909,37],[910,10,910,8],[910,17,910,15,"code"],[910,21,910,19],[910,22,910,20,"toLowerCase"],[910,33,910,31],[910,34,910,32],[910,35,910,33],[911,8,911,6],[912,8,912,6],[912,15,912,13,"code"],[912,19,912,17],[913,6,913,4],[914,6,914,4],[914,13,914,11],[914,17,914,15],[914,18,914,16,"options"],[914,25,914,23],[914,26,914,24,"cleanCode"],[914,35,914,33],[914,39,914,37],[914,43,914,41],[914,44,914,42,"options"],[914,51,914,49],[914,52,914,50,"lowerCaseLng"],[914,64,914,62],[914,67,914,65,"code"],[914,71,914,69],[914,72,914,70,"toLowerCase"],[914,83,914,81],[914,84,914,82],[914,85,914,83],[914,88,914,86,"code"],[914,92,914,90],[915,4,915,2],[916,4,916,2,"isSupportedCode"],[916,19,916,17,"isSupportedCode"],[916,20,916,18,"code"],[916,24,916,22],[916,26,916,24],[917,6,917,4],[917,10,917,8],[917,14,917,12],[917,15,917,13,"options"],[917,22,917,20],[917,23,917,21,"load"],[917,27,917,25],[917,32,917,30],[917,46,917,44],[917,50,917,48],[917,54,917,52],[917,55,917,53,"options"],[917,62,917,60],[917,63,917,61,"nonExplicitSupportedLngs"],[917,87,917,85],[917,89,917,87],[918,8,918,6,"code"],[918,12,918,10],[918,15,918,13],[918,19,918,17],[918,20,918,18,"getLanguagePartFromCode"],[918,43,918,41],[918,44,918,42,"code"],[918,48,918,46],[918,49,918,47],[919,6,919,4],[920,6,920,4],[920,13,920,11],[920,14,920,12],[920,18,920,16],[920,19,920,17,"supportedLngs"],[920,32,920,30],[920,36,920,34],[920,37,920,35],[920,41,920,39],[920,42,920,40,"supportedLngs"],[920,55,920,53],[920,56,920,54,"length"],[920,62,920,60],[920,66,920,64],[920,70,920,68],[920,71,920,69,"supportedLngs"],[920,84,920,82],[920,85,920,83,"indexOf"],[920,92,920,90],[920,93,920,91,"code"],[920,97,920,95],[920,98,920,96],[920,101,920,99],[920,102,920,100],[920,103,920,101],[921,4,921,2],[922,4,922,2,"getBestMatchFromCodes"],[922,25,922,23,"getBestMatchFromCodes"],[922,26,922,24,"codes"],[922,31,922,29],[922,33,922,31],[923,6,923,4],[923,10,923,8],[923,11,923,9,"codes"],[923,16,923,14],[923,18,923,16],[923,25,923,23],[923,29,923,27],[924,6,924,4],[924,10,924,8,"found"],[924,15,924,13],[925,6,925,4,"codes"],[925,11,925,9],[925,12,925,10,"forEach"],[925,19,925,17],[925,20,925,18,"code"],[925,24,925,22],[925,28,925,26],[926,8,926,6],[926,12,926,10,"found"],[926,17,926,15],[926,19,926,17],[927,8,927,6],[927,14,927,12,"cleanedLng"],[927,24,927,22],[927,27,927,25],[927,31,927,29],[927,32,927,30,"formatLanguageCode"],[927,50,927,48],[927,51,927,49,"code"],[927,55,927,53],[927,56,927,54],[928,8,928,6],[928,12,928,10],[928,13,928,11],[928,17,928,15],[928,18,928,16,"options"],[928,25,928,23],[928,26,928,24,"supportedLngs"],[928,39,928,37],[928,43,928,41],[928,47,928,45],[928,48,928,46,"isSupportedCode"],[928,63,928,61],[928,64,928,62,"cleanedLng"],[928,74,928,72],[928,75,928,73],[928,77,928,75,"found"],[928,82,928,80],[928,85,928,83,"cleanedLng"],[928,95,928,93],[929,6,929,4],[929,7,929,5],[929,8,929,6],[930,6,930,4],[930,10,930,8],[930,11,930,9,"found"],[930,16,930,14],[930,20,930,18],[930,24,930,22],[930,25,930,23,"options"],[930,32,930,30],[930,33,930,31,"supportedLngs"],[930,46,930,44],[930,48,930,46],[931,8,931,6,"codes"],[931,13,931,11],[931,14,931,12,"forEach"],[931,21,931,19],[931,22,931,20,"code"],[931,26,931,24],[931,30,931,28],[932,10,932,8],[932,14,932,12,"found"],[932,19,932,17],[932,21,932,19],[933,10,933,8],[933,16,933,14,"lngScOnly"],[933,25,933,23],[933,28,933,26],[933,32,933,30],[933,33,933,31,"getScriptPartFromCode"],[933,54,933,52],[933,55,933,53,"code"],[933,59,933,57],[933,60,933,58],[934,10,934,8],[934,14,934,12],[934,18,934,16],[934,19,934,17,"isSupportedCode"],[934,34,934,32],[934,35,934,33,"lngScOnly"],[934,44,934,42],[934,45,934,43],[934,47,934,45],[934,54,934,52,"found"],[934,59,934,57],[934,62,934,60,"lngScOnly"],[934,71,934,69],[935,10,935,8],[935,16,935,14,"lngOnly"],[935,23,935,21],[935,26,935,24],[935,30,935,28],[935,31,935,29,"getLanguagePartFromCode"],[935,54,935,52],[935,55,935,53,"code"],[935,59,935,57],[935,60,935,58],[936,10,936,8],[936,14,936,12],[936,18,936,16],[936,19,936,17,"isSupportedCode"],[936,34,936,32],[936,35,936,33,"lngOnly"],[936,42,936,40],[936,43,936,41],[936,45,936,43],[936,52,936,50,"found"],[936,57,936,55],[936,60,936,58,"lngOnly"],[936,67,936,65],[937,10,937,8,"found"],[937,15,937,13],[937,18,937,16],[937,22,937,20],[937,23,937,21,"options"],[937,30,937,28],[937,31,937,29,"supportedLngs"],[937,44,937,42],[937,45,937,43,"find"],[937,49,937,47],[937,50,937,48,"supportedLng"],[937,62,937,60],[937,66,937,64],[938,12,938,10],[938,16,938,14,"supportedLng"],[938,28,938,26],[938,33,938,31,"lngOnly"],[938,40,938,38],[938,42,938,40],[938,49,938,47,"supportedLng"],[938,61,938,59],[939,12,939,10],[939,16,939,14,"supportedLng"],[939,28,939,26],[939,29,939,27,"indexOf"],[939,36,939,34],[939,37,939,35],[939,40,939,38],[939,41,939,39],[939,44,939,42],[939,45,939,43],[939,49,939,47,"lngOnly"],[939,56,939,54],[939,57,939,55,"indexOf"],[939,64,939,62],[939,65,939,63],[939,68,939,66],[939,69,939,67],[939,72,939,70],[939,73,939,71],[939,75,939,73],[940,12,940,10],[940,16,940,14,"supportedLng"],[940,28,940,26],[940,29,940,27,"indexOf"],[940,36,940,34],[940,37,940,35],[940,40,940,38],[940,41,940,39],[940,44,940,42],[940,45,940,43],[940,49,940,47,"lngOnly"],[940,56,940,54],[940,57,940,55,"indexOf"],[940,64,940,62],[940,65,940,63],[940,68,940,66],[940,69,940,67],[940,72,940,70],[940,73,940,71],[940,77,940,75,"supportedLng"],[940,89,940,87],[940,90,940,88,"substring"],[940,99,940,97],[940,100,940,98],[940,101,940,99],[940,103,940,101,"supportedLng"],[940,115,940,113],[940,116,940,114,"indexOf"],[940,123,940,121],[940,124,940,122],[940,127,940,125],[940,128,940,126],[940,129,940,127],[940,134,940,132,"lngOnly"],[940,141,940,139],[940,143,940,141],[940,150,940,148,"supportedLng"],[940,162,940,160],[941,12,941,10],[941,16,941,14,"supportedLng"],[941,28,941,26],[941,29,941,27,"indexOf"],[941,36,941,34],[941,37,941,35,"lngOnly"],[941,44,941,42],[941,45,941,43],[941,50,941,48],[941,51,941,49],[941,55,941,53,"lngOnly"],[941,62,941,60],[941,63,941,61,"length"],[941,69,941,67],[941,72,941,70],[941,73,941,71],[941,75,941,73],[941,82,941,80,"supportedLng"],[941,94,941,92],[942,10,942,8],[942,11,942,9],[942,12,942,10],[943,8,943,6],[943,9,943,7],[943,10,943,8],[944,6,944,4],[945,6,945,4],[945,10,945,8],[945,11,945,9,"found"],[945,16,945,14],[945,18,945,16,"found"],[945,23,945,21],[945,26,945,24],[945,30,945,28],[945,31,945,29,"getFallbackCodes"],[945,47,945,45],[945,48,945,46],[945,52,945,50],[945,53,945,51,"options"],[945,60,945,58],[945,61,945,59,"fallbackLng"],[945,72,945,70],[945,73,945,71],[945,74,945,72],[945,75,945,73],[945,76,945,74],[946,6,946,4],[946,13,946,11,"found"],[946,18,946,16],[947,4,947,2],[948,4,948,2,"getFallbackCodes"],[948,20,948,18,"getFallbackCodes"],[948,21,948,19,"fallbacks"],[948,30,948,28],[948,32,948,30,"code"],[948,36,948,34],[948,38,948,36],[949,6,949,4],[949,10,949,8],[949,11,949,9,"fallbacks"],[949,20,949,18],[949,22,949,20],[949,29,949,27],[949,31,949,29],[950,6,950,4],[950,10,950,8],[950,17,950,15,"fallbacks"],[950,26,950,24],[950,31,950,29],[950,41,950,39],[950,43,950,41,"fallbacks"],[950,52,950,50],[950,55,950,53,"fallbacks"],[950,64,950,62],[950,65,950,63,"code"],[950,69,950,67],[950,70,950,68],[951,6,951,4],[951,10,951,8,"isString"],[951,18,951,16],[951,19,951,17,"fallbacks"],[951,28,951,26],[951,29,951,27],[951,31,951,29,"fallbacks"],[951,40,951,38],[951,43,951,41],[951,44,951,42,"fallbacks"],[951,53,951,51],[951,54,951,52],[952,6,952,4],[952,10,952,8,"Array"],[952,15,952,13],[952,16,952,14,"isArray"],[952,23,952,21],[952,24,952,22,"fallbacks"],[952,33,952,31],[952,34,952,32],[952,36,952,34],[952,43,952,41,"fallbacks"],[952,52,952,50],[953,6,953,4],[953,10,953,8],[953,11,953,9,"code"],[953,15,953,13],[953,17,953,15],[953,24,953,22,"fallbacks"],[953,33,953,31],[953,34,953,32,"default"],[953,41,953,39],[953,45,953,43],[953,47,953,45],[954,6,954,4],[954,10,954,8,"found"],[954,15,954,13],[954,18,954,16,"fallbacks"],[954,27,954,25],[954,28,954,26,"code"],[954,32,954,30],[954,33,954,31],[955,6,955,4],[955,10,955,8],[955,11,955,9,"found"],[955,16,955,14],[955,18,955,16,"found"],[955,23,955,21],[955,26,955,24,"fallbacks"],[955,35,955,33],[955,36,955,34],[955,40,955,38],[955,41,955,39,"getScriptPartFromCode"],[955,62,955,60],[955,63,955,61,"code"],[955,67,955,65],[955,68,955,66],[955,69,955,67],[956,6,956,4],[956,10,956,8],[956,11,956,9,"found"],[956,16,956,14],[956,18,956,16,"found"],[956,23,956,21],[956,26,956,24,"fallbacks"],[956,35,956,33],[956,36,956,34],[956,40,956,38],[956,41,956,39,"formatLanguageCode"],[956,59,956,57],[956,60,956,58,"code"],[956,64,956,62],[956,65,956,63],[956,66,956,64],[957,6,957,4],[957,10,957,8],[957,11,957,9,"found"],[957,16,957,14],[957,18,957,16,"found"],[957,23,957,21],[957,26,957,24,"fallbacks"],[957,35,957,33],[957,36,957,34],[957,40,957,38],[957,41,957,39,"getLanguagePartFromCode"],[957,64,957,62],[957,65,957,63,"code"],[957,69,957,67],[957,70,957,68],[957,71,957,69],[958,6,958,4],[958,10,958,8],[958,11,958,9,"found"],[958,16,958,14],[958,18,958,16,"found"],[958,23,958,21],[958,26,958,24,"fallbacks"],[958,35,958,33],[958,36,958,34,"default"],[958,43,958,41],[959,6,959,4],[959,13,959,11,"found"],[959,18,959,16],[959,22,959,20],[959,24,959,22],[960,4,960,2],[961,4,961,2,"toResolveHierarchy"],[961,22,961,20,"toResolveHierarchy"],[961,23,961,21,"code"],[961,27,961,25],[961,29,961,27,"fallbackCode"],[961,41,961,39],[961,43,961,41],[962,6,962,4],[962,12,962,10,"fallbackCodes"],[962,25,962,23],[962,28,962,26],[962,32,962,30],[962,33,962,31,"getFallbackCodes"],[962,49,962,47],[962,50,962,48],[962,51,962,49,"fallbackCode"],[962,63,962,61],[962,68,962,66],[962,73,962,71],[962,76,962,74],[962,78,962,76],[962,81,962,79,"fallbackCode"],[962,93,962,91],[962,98,962,96],[962,102,962,100],[962,103,962,101,"options"],[962,110,962,108],[962,111,962,109,"fallbackLng"],[962,122,962,120],[962,126,962,124],[962,128,962,126],[962,130,962,128,"code"],[962,134,962,132],[962,135,962,133],[963,6,963,4],[963,12,963,10,"codes"],[963,17,963,15],[963,20,963,18],[963,22,963,20],[964,6,964,4],[964,12,964,10,"addCode"],[964,19,964,17],[964,22,964,20,"c"],[964,23,964,21],[964,27,964,25],[965,8,965,6],[965,12,965,10],[965,13,965,11,"c"],[965,14,965,12],[965,16,965,14],[966,8,966,6],[966,12,966,10],[966,16,966,14],[966,17,966,15,"isSupportedCode"],[966,32,966,30],[966,33,966,31,"c"],[966,34,966,32],[966,35,966,33],[966,37,966,35],[967,10,967,8,"codes"],[967,15,967,13],[967,16,967,14,"push"],[967,20,967,18],[967,21,967,19,"c"],[967,22,967,20],[967,23,967,21],[968,8,968,6],[968,9,968,7],[968,15,968,13],[969,10,969,8],[969,14,969,12],[969,15,969,13,"logger"],[969,21,969,19],[969,22,969,20,"warn"],[969,26,969,24],[969,27,969,25],[969,82,969,80,"c"],[969,83,969,81],[969,85,969,83],[969,86,969,84],[970,8,970,6],[971,6,971,4],[971,7,971,5],[972,6,972,4],[972,10,972,8,"isString"],[972,18,972,16],[972,19,972,17,"code"],[972,23,972,21],[972,24,972,22],[972,29,972,27,"code"],[972,33,972,31],[972,34,972,32,"indexOf"],[972,41,972,39],[972,42,972,40],[972,45,972,43],[972,46,972,44],[972,49,972,47],[972,50,972,48],[972,51,972,49],[972,55,972,53,"code"],[972,59,972,57],[972,60,972,58,"indexOf"],[972,67,972,65],[972,68,972,66],[972,71,972,69],[972,72,972,70],[972,75,972,73],[972,76,972,74],[972,77,972,75],[972,78,972,76],[972,80,972,78],[973,8,973,6],[973,12,973,10],[973,16,973,14],[973,17,973,15,"options"],[973,24,973,22],[973,25,973,23,"load"],[973,29,973,27],[973,34,973,32],[973,48,973,46],[973,50,973,48,"addCode"],[973,57,973,55],[973,58,973,56],[973,62,973,60],[973,63,973,61,"formatLanguageCode"],[973,81,973,79],[973,82,973,80,"code"],[973,86,973,84],[973,87,973,85],[973,88,973,86],[974,8,974,6],[974,12,974,10],[974,16,974,14],[974,17,974,15,"options"],[974,24,974,22],[974,25,974,23,"load"],[974,29,974,27],[974,34,974,32],[974,48,974,46],[974,52,974,50],[974,56,974,54],[974,57,974,55,"options"],[974,64,974,62],[974,65,974,63,"load"],[974,69,974,67],[974,74,974,72],[974,87,974,85],[974,89,974,87,"addCode"],[974,96,974,94],[974,97,974,95],[974,101,974,99],[974,102,974,100,"getScriptPartFromCode"],[974,123,974,121],[974,124,974,122,"code"],[974,128,974,126],[974,129,974,127],[974,130,974,128],[975,8,975,6],[975,12,975,10],[975,16,975,14],[975,17,975,15,"options"],[975,24,975,22],[975,25,975,23,"load"],[975,29,975,27],[975,34,975,32],[975,47,975,45],[975,49,975,47,"addCode"],[975,56,975,54],[975,57,975,55],[975,61,975,59],[975,62,975,60,"getLanguagePartFromCode"],[975,85,975,83],[975,86,975,84,"code"],[975,90,975,88],[975,91,975,89],[975,92,975,90],[976,6,976,4],[976,7,976,5],[976,13,976,11],[976,17,976,15,"isString"],[976,25,976,23],[976,26,976,24,"code"],[976,30,976,28],[976,31,976,29],[976,33,976,31],[977,8,977,6,"addCode"],[977,15,977,13],[977,16,977,14],[977,20,977,18],[977,21,977,19,"formatLanguageCode"],[977,39,977,37],[977,40,977,38,"code"],[977,44,977,42],[977,45,977,43],[977,46,977,44],[978,6,978,4],[979,6,979,4,"fallbackCodes"],[979,19,979,17],[979,20,979,18,"forEach"],[979,27,979,25],[979,28,979,26,"fc"],[979,30,979,28],[979,34,979,32],[980,8,980,6],[980,12,980,10,"codes"],[980,17,980,15],[980,18,980,16,"indexOf"],[980,25,980,23],[980,26,980,24,"fc"],[980,28,980,26],[980,29,980,27],[980,32,980,30],[980,33,980,31],[980,35,980,33,"addCode"],[980,42,980,40],[980,43,980,41],[980,47,980,45],[980,48,980,46,"formatLanguageCode"],[980,66,980,64],[980,67,980,65,"fc"],[980,69,980,67],[980,70,980,68],[980,71,980,69],[981,6,981,4],[981,7,981,5],[981,8,981,6],[982,6,982,4],[982,13,982,11,"codes"],[982,18,982,16],[983,4,983,2],[984,2,984,0],[985,2,986,0],[985,8,986,6,"suffixesOrder"],[985,21,986,19],[985,24,986,22],[986,4,987,2,"zero"],[986,8,987,6],[986,10,987,8],[986,11,987,9],[987,4,988,2,"one"],[987,7,988,5],[987,9,988,7],[987,10,988,8],[988,4,989,2,"two"],[988,7,989,5],[988,9,989,7],[988,10,989,8],[989,4,990,2,"few"],[989,7,990,5],[989,9,990,7],[989,10,990,8],[990,4,991,2,"many"],[990,8,991,6],[990,10,991,8],[990,11,991,9],[991,4,992,2,"other"],[991,9,992,7],[991,11,992,9],[992,2,993,0],[992,3,993,1],[993,2,994,0],[993,8,994,6,"dummyRule"],[993,17,994,15],[993,20,994,18],[994,4,995,2,"select"],[994,10,995,8],[994,12,995,10,"count"],[994,17,995,15],[994,21,995,19,"count"],[994,26,995,24],[994,31,995,29],[994,32,995,30],[994,35,995,33],[994,40,995,38],[994,43,995,41],[994,50,995,48],[995,4,996,2,"resolvedOptions"],[995,19,996,17],[995,21,996,19,"resolvedOptions"],[995,22,996,19],[995,28,996,26],[996,6,997,4,"pluralCategories"],[996,22,997,20],[996,24,997,22],[996,25,997,23],[996,30,997,28],[996,32,997,30],[996,39,997,37],[997,4,998,2],[997,5,998,3],[998,2,999,0],[998,3,999,1],[999,2,1000,0],[999,8,1000,6,"PluralResolver"],[999,22,1000,20],[999,23,1000,21],[1000,4,1001,2,"constructor"],[1000,15,1001,13,"constructor"],[1000,16,1001,14,"languageUtils"],[1000,29,1001,27],[1000,31,1001,29,"options"],[1000,38,1001,36],[1000,41,1001,39],[1000,42,1001,40],[1000,43,1001,41],[1000,45,1001,43],[1001,6,1002,4],[1001,10,1002,8],[1001,11,1002,9,"languageUtils"],[1001,24,1002,22],[1001,27,1002,25,"languageUtils"],[1001,40,1002,38],[1002,6,1003,4],[1002,10,1003,8],[1002,11,1003,9,"options"],[1002,18,1003,16],[1002,21,1003,19,"options"],[1002,28,1003,26],[1003,6,1004,4],[1003,10,1004,8],[1003,11,1004,9,"logger"],[1003,17,1004,15],[1003,20,1004,18,"baseLogger"],[1003,30,1004,28],[1003,31,1004,29,"create"],[1003,37,1004,35],[1003,38,1004,36],[1003,54,1004,52],[1003,55,1004,53],[1004,6,1005,4],[1004,10,1005,8],[1004,11,1005,9,"pluralRulesCache"],[1004,27,1005,25],[1004,30,1005,28],[1004,31,1005,29],[1004,32,1005,30],[1005,4,1006,2],[1006,4,1007,2,"addRule"],[1006,11,1007,9,"addRule"],[1006,12,1007,10,"lng"],[1006,15,1007,13],[1006,17,1007,15,"obj"],[1006,20,1007,18],[1006,22,1007,20],[1007,6,1008,4],[1007,10,1008,8],[1007,11,1008,9,"rules"],[1007,16,1008,14],[1007,17,1008,15,"lng"],[1007,20,1008,18],[1007,21,1008,19],[1007,24,1008,22,"obj"],[1007,27,1008,25],[1008,4,1009,2],[1009,4,1010,2,"clearCache"],[1009,14,1010,12,"clearCache"],[1009,15,1010,12],[1009,17,1010,15],[1010,6,1011,4],[1010,10,1011,8],[1010,11,1011,9,"pluralRulesCache"],[1010,27,1011,25],[1010,30,1011,28],[1010,31,1011,29],[1010,32,1011,30],[1011,4,1012,2],[1012,4,1013,2,"getRule"],[1012,11,1013,9,"getRule"],[1012,12,1013,10,"code"],[1012,16,1013,14],[1012,18,1013,16,"options"],[1012,25,1013,23],[1012,28,1013,26],[1012,29,1013,27],[1012,30,1013,28],[1012,32,1013,30],[1013,6,1014,4],[1013,12,1014,10,"cleanedCode"],[1013,23,1014,21],[1013,26,1014,24,"getCleanedCode"],[1013,40,1014,38],[1013,41,1014,39,"code"],[1013,45,1014,43],[1013,50,1014,48],[1013,55,1014,53],[1013,58,1014,56],[1013,62,1014,60],[1013,65,1014,63,"code"],[1013,69,1014,67],[1013,70,1014,68],[1014,6,1015,4],[1014,12,1015,10,"type"],[1014,16,1015,14],[1014,19,1015,17,"options"],[1014,26,1015,24],[1014,27,1015,25,"ordinal"],[1014,34,1015,32],[1014,37,1015,35],[1014,46,1015,44],[1014,49,1015,47],[1014,59,1015,57],[1015,6,1016,4],[1015,12,1016,10,"cacheKey"],[1015,20,1016,18],[1015,23,1016,21,"JSON"],[1015,27,1016,25],[1015,28,1016,26,"stringify"],[1015,37,1016,35],[1015,38,1016,36],[1016,8,1017,6,"cleanedCode"],[1016,19,1017,17],[1017,8,1018,6,"type"],[1018,6,1019,4],[1018,7,1019,5],[1018,8,1019,6],[1019,6,1020,4],[1019,10,1020,8,"cacheKey"],[1019,18,1020,16],[1019,22,1020,20],[1019,26,1020,24],[1019,27,1020,25,"pluralRulesCache"],[1019,43,1020,41],[1019,45,1020,43],[1020,8,1021,6],[1020,15,1021,13],[1020,19,1021,17],[1020,20,1021,18,"pluralRulesCache"],[1020,36,1021,34],[1020,37,1021,35,"cacheKey"],[1020,45,1021,43],[1020,46,1021,44],[1021,6,1022,4],[1022,6,1023,4],[1022,10,1023,8,"rule"],[1022,14,1023,12],[1023,6,1024,4],[1023,10,1024,8],[1024,8,1025,6,"rule"],[1024,12,1025,10],[1024,15,1025,13],[1024,19,1025,17,"Intl"],[1024,23,1025,21],[1024,24,1025,22,"PluralRules"],[1024,35,1025,33],[1024,36,1025,34,"cleanedCode"],[1024,47,1025,45],[1024,49,1025,47],[1025,10,1026,8,"type"],[1026,8,1027,6],[1026,9,1027,7],[1026,10,1027,8],[1027,6,1028,4],[1027,7,1028,5],[1027,8,1028,6],[1027,15,1028,13,"err"],[1027,18,1028,16],[1027,20,1028,18],[1028,8,1029,6],[1028,12,1029,10],[1028,13,1029,11,"Intl"],[1028,17,1029,15],[1028,19,1029,17],[1029,10,1030,8],[1029,14,1030,12],[1029,15,1030,13,"logger"],[1029,21,1030,19],[1029,22,1030,20,"error"],[1029,27,1030,25],[1029,28,1030,26],[1029,75,1030,73],[1029,76,1030,74],[1030,10,1031,8],[1030,17,1031,15,"dummyRule"],[1030,26,1031,24],[1031,8,1032,6],[1032,8,1033,6],[1032,12,1033,10],[1032,13,1033,11,"code"],[1032,17,1033,15],[1032,18,1033,16,"match"],[1032,23,1033,21],[1032,24,1033,22],[1032,29,1033,27],[1032,30,1033,28],[1032,32,1033,30],[1032,39,1033,37,"dummyRule"],[1032,48,1033,46],[1033,8,1034,6],[1033,14,1034,12,"lngPart"],[1033,21,1034,19],[1033,24,1034,22],[1033,28,1034,26],[1033,29,1034,27,"languageUtils"],[1033,42,1034,40],[1033,43,1034,41,"getLanguagePartFromCode"],[1033,66,1034,64],[1033,67,1034,65,"code"],[1033,71,1034,69],[1033,72,1034,70],[1034,8,1035,6,"rule"],[1034,12,1035,10],[1034,15,1035,13],[1034,19,1035,17],[1034,20,1035,18,"getRule"],[1034,27,1035,25],[1034,28,1035,26,"lngPart"],[1034,35,1035,33],[1034,37,1035,35,"options"],[1034,44,1035,42],[1034,45,1035,43],[1035,6,1036,4],[1036,6,1037,4],[1036,10,1037,8],[1036,11,1037,9,"pluralRulesCache"],[1036,27,1037,25],[1036,28,1037,26,"cacheKey"],[1036,36,1037,34],[1036,37,1037,35],[1036,40,1037,38,"rule"],[1036,44,1037,42],[1037,6,1038,4],[1037,13,1038,11,"rule"],[1037,17,1038,15],[1038,4,1039,2],[1039,4,1040,2,"needsPlural"],[1039,15,1040,13,"needsPlural"],[1039,16,1040,14,"code"],[1039,20,1040,18],[1039,22,1040,20,"options"],[1039,29,1040,27],[1039,32,1040,30],[1039,33,1040,31],[1039,34,1040,32],[1039,36,1040,34],[1040,6,1041,4],[1040,10,1041,8,"rule"],[1040,14,1041,12],[1040,17,1041,15],[1040,21,1041,19],[1040,22,1041,20,"getRule"],[1040,29,1041,27],[1040,30,1041,28,"code"],[1040,34,1041,32],[1040,36,1041,34,"options"],[1040,43,1041,41],[1040,44,1041,42],[1041,6,1042,4],[1041,10,1042,8],[1041,11,1042,9,"rule"],[1041,15,1042,13],[1041,17,1042,15,"rule"],[1041,21,1042,19],[1041,24,1042,22],[1041,28,1042,26],[1041,29,1042,27,"getRule"],[1041,36,1042,34],[1041,37,1042,35],[1041,42,1042,40],[1041,44,1042,42,"options"],[1041,51,1042,49],[1041,52,1042,50],[1042,6,1043,4],[1042,13,1043,11,"rule"],[1042,17,1043,15],[1042,19,1043,17,"resolvedOptions"],[1042,34,1043,32],[1042,35,1043,33],[1042,36,1043,34],[1042,37,1043,35,"pluralCategories"],[1042,53,1043,51],[1042,54,1043,52,"length"],[1042,60,1043,58],[1042,63,1043,61],[1042,64,1043,62],[1043,4,1044,2],[1044,4,1045,2,"getPluralFormsOfKey"],[1044,23,1045,21,"getPluralFormsOfKey"],[1044,24,1045,22,"code"],[1044,28,1045,26],[1044,30,1045,28,"key"],[1044,33,1045,31],[1044,35,1045,33,"options"],[1044,42,1045,40],[1044,45,1045,43],[1044,46,1045,44],[1044,47,1045,45],[1044,49,1045,47],[1045,6,1046,4],[1045,13,1046,11],[1045,17,1046,15],[1045,18,1046,16,"getSuffixes"],[1045,29,1046,27],[1045,30,1046,28,"code"],[1045,34,1046,32],[1045,36,1046,34,"options"],[1045,43,1046,41],[1045,44,1046,42],[1045,45,1046,43,"map"],[1045,48,1046,46],[1045,49,1046,47,"suffix"],[1045,55,1046,53],[1045,59,1046,57],[1045,62,1046,60,"key"],[1045,65,1046,63],[1045,68,1046,66,"suffix"],[1045,74,1046,72],[1045,76,1046,74],[1045,77,1046,75],[1046,4,1047,2],[1047,4,1048,2,"getSuffixes"],[1047,15,1048,13,"getSuffixes"],[1047,16,1048,14,"code"],[1047,20,1048,18],[1047,22,1048,20,"options"],[1047,29,1048,27],[1047,32,1048,30],[1047,33,1048,31],[1047,34,1048,32],[1047,36,1048,34],[1048,6,1049,4],[1048,10,1049,8,"rule"],[1048,14,1049,12],[1048,17,1049,15],[1048,21,1049,19],[1048,22,1049,20,"getRule"],[1048,29,1049,27],[1048,30,1049,28,"code"],[1048,34,1049,32],[1048,36,1049,34,"options"],[1048,43,1049,41],[1048,44,1049,42],[1049,6,1050,4],[1049,10,1050,8],[1049,11,1050,9,"rule"],[1049,15,1050,13],[1049,17,1050,15,"rule"],[1049,21,1050,19],[1049,24,1050,22],[1049,28,1050,26],[1049,29,1050,27,"getRule"],[1049,36,1050,34],[1049,37,1050,35],[1049,42,1050,40],[1049,44,1050,42,"options"],[1049,51,1050,49],[1049,52,1050,50],[1050,6,1051,4],[1050,10,1051,8],[1050,11,1051,9,"rule"],[1050,15,1051,13],[1050,17,1051,15],[1050,24,1051,22],[1050,26,1051,24],[1051,6,1052,4],[1051,13,1052,11,"rule"],[1051,17,1052,15],[1051,18,1052,16,"resolvedOptions"],[1051,33,1052,31],[1051,34,1052,32],[1051,35,1052,33],[1051,36,1052,34,"pluralCategories"],[1051,52,1052,50],[1051,53,1052,51,"sort"],[1051,57,1052,55],[1051,58,1052,56],[1051,59,1052,57,"pluralCategory1"],[1051,74,1052,72],[1051,76,1052,74,"pluralCategory2"],[1051,91,1052,89],[1051,96,1052,94,"suffixesOrder"],[1051,109,1052,107],[1051,110,1052,108,"pluralCategory1"],[1051,125,1052,123],[1051,126,1052,124],[1051,129,1052,127,"suffixesOrder"],[1051,142,1052,140],[1051,143,1052,141,"pluralCategory2"],[1051,158,1052,156],[1051,159,1052,157],[1051,160,1052,158],[1051,161,1052,159,"map"],[1051,164,1052,162],[1051,165,1052,163,"pluralCategory"],[1051,179,1052,177],[1051,183,1052,181],[1051,186,1052,184],[1051,190,1052,188],[1051,191,1052,189,"options"],[1051,198,1052,196],[1051,199,1052,197,"prepend"],[1051,206,1052,204],[1051,209,1052,207,"options"],[1051,216,1052,214],[1051,217,1052,215,"ordinal"],[1051,224,1052,222],[1051,227,1052,225],[1051,237,1052,235],[1051,241,1052,239],[1051,242,1052,240,"options"],[1051,249,1052,247],[1051,250,1052,248,"prepend"],[1051,257,1052,255],[1051,259,1052,257],[1051,262,1052,260],[1051,264,1052,262],[1051,267,1052,265,"pluralCategory"],[1051,281,1052,279],[1051,283,1052,281],[1051,284,1052,282],[1052,4,1053,2],[1053,4,1054,2,"getSuffix"],[1053,13,1054,11,"getSuffix"],[1053,14,1054,12,"code"],[1053,18,1054,16],[1053,20,1054,18,"count"],[1053,25,1054,23],[1053,27,1054,25,"options"],[1053,34,1054,32],[1053,37,1054,35],[1053,38,1054,36],[1053,39,1054,37],[1053,41,1054,39],[1054,6,1055,4],[1054,12,1055,10,"rule"],[1054,16,1055,14],[1054,19,1055,17],[1054,23,1055,21],[1054,24,1055,22,"getRule"],[1054,31,1055,29],[1054,32,1055,30,"code"],[1054,36,1055,34],[1054,38,1055,36,"options"],[1054,45,1055,43],[1054,46,1055,44],[1055,6,1056,4],[1055,10,1056,8,"rule"],[1055,14,1056,12],[1055,16,1056,14],[1056,8,1057,6],[1056,15,1057,13],[1056,18,1057,16],[1056,22,1057,20],[1056,23,1057,21,"options"],[1056,30,1057,28],[1056,31,1057,29,"prepend"],[1056,38,1057,36],[1056,41,1057,39,"options"],[1056,48,1057,46],[1056,49,1057,47,"ordinal"],[1056,56,1057,54],[1056,59,1057,57],[1056,69,1057,67],[1056,73,1057,71],[1056,74,1057,72,"options"],[1056,81,1057,79],[1056,82,1057,80,"prepend"],[1056,89,1057,87],[1056,91,1057,89],[1056,94,1057,92],[1056,96,1057,94],[1056,99,1057,97,"rule"],[1056,103,1057,101],[1056,104,1057,102,"select"],[1056,110,1057,108],[1056,111,1057,109,"count"],[1056,116,1057,114],[1056,117,1057,115],[1056,119,1057,117],[1057,6,1058,4],[1058,6,1059,4],[1058,10,1059,8],[1058,11,1059,9,"logger"],[1058,17,1059,15],[1058,18,1059,16,"warn"],[1058,22,1059,20],[1058,23,1059,21],[1058,52,1059,50,"code"],[1058,56,1059,54],[1058,58,1059,56],[1058,59,1059,57],[1059,6,1060,4],[1059,13,1060,11],[1059,17,1060,15],[1059,18,1060,16,"getSuffix"],[1059,27,1060,25],[1059,28,1060,26],[1059,33,1060,31],[1059,35,1060,33,"count"],[1059,40,1060,38],[1059,42,1060,40,"options"],[1059,49,1060,47],[1059,50,1060,48],[1060,4,1061,2],[1061,2,1062,0],[1062,2,1064,0],[1062,8,1064,6,"deepFindWithDefaults"],[1062,28,1064,26],[1062,31,1064,29,"deepFindWithDefaults"],[1062,32,1064,30,"data"],[1062,36,1064,34],[1062,38,1064,36,"defaultData"],[1062,49,1064,47],[1062,51,1064,49,"key"],[1062,54,1064,52],[1062,56,1064,54,"keySeparator"],[1062,68,1064,66],[1062,71,1064,69],[1062,74,1064,72],[1062,76,1064,74,"ignoreJSONStructure"],[1062,95,1064,93],[1062,98,1064,96],[1062,102,1064,100],[1062,107,1064,105],[1063,4,1065,2],[1063,8,1065,6,"path"],[1063,12,1065,10],[1063,15,1065,13,"getPathWithDefaults"],[1063,34,1065,32],[1063,35,1065,33,"data"],[1063,39,1065,37],[1063,41,1065,39,"defaultData"],[1063,52,1065,50],[1063,54,1065,52,"key"],[1063,57,1065,55],[1063,58,1065,56],[1064,4,1066,2],[1064,8,1066,6],[1064,9,1066,7,"path"],[1064,13,1066,11],[1064,17,1066,15,"ignoreJSONStructure"],[1064,36,1066,34],[1064,40,1066,38,"isString"],[1064,48,1066,46],[1064,49,1066,47,"key"],[1064,52,1066,50],[1064,53,1066,51],[1064,55,1066,53],[1065,6,1067,4,"path"],[1065,10,1067,8],[1065,13,1067,11,"deepFind"],[1065,21,1067,19],[1065,22,1067,20,"data"],[1065,26,1067,24],[1065,28,1067,26,"key"],[1065,31,1067,29],[1065,33,1067,31,"keySeparator"],[1065,45,1067,43],[1065,46,1067,44],[1066,6,1068,4],[1066,10,1068,8,"path"],[1066,14,1068,12],[1066,19,1068,17,"undefined"],[1066,28,1068,26],[1066,30,1068,28,"path"],[1066,34,1068,32],[1066,37,1068,35,"deepFind"],[1066,45,1068,43],[1066,46,1068,44,"defaultData"],[1066,57,1068,55],[1066,59,1068,57,"key"],[1066,62,1068,60],[1066,64,1068,62,"keySeparator"],[1066,76,1068,74],[1066,77,1068,75],[1067,4,1069,2],[1068,4,1070,2],[1068,11,1070,9,"path"],[1068,15,1070,13],[1069,2,1071,0],[1069,3,1071,1],[1070,2,1072,0],[1070,8,1072,6,"regexSafe"],[1070,17,1072,15],[1070,20,1072,18,"val"],[1070,23,1072,21],[1070,27,1072,25,"val"],[1070,30,1072,28],[1070,31,1072,29,"replace"],[1070,38,1072,36],[1070,39,1072,37],[1070,44,1072,42],[1070,46,1072,44],[1070,52,1072,50],[1070,53,1072,51],[1071,2,1073,0],[1071,8,1073,6,"Interpolator"],[1071,20,1073,18],[1071,21,1073,19],[1072,4,1074,2,"constructor"],[1072,15,1074,13,"constructor"],[1072,16,1074,14,"options"],[1072,23,1074,21],[1072,26,1074,24],[1072,27,1074,25],[1072,28,1074,26],[1072,30,1074,28],[1073,6,1075,4],[1073,10,1075,8],[1073,11,1075,9,"logger"],[1073,17,1075,15],[1073,20,1075,18,"baseLogger"],[1073,30,1075,28],[1073,31,1075,29,"create"],[1073,37,1075,35],[1073,38,1075,36],[1073,52,1075,50],[1073,53,1075,51],[1074,6,1076,4],[1074,10,1076,8],[1074,11,1076,9,"options"],[1074,18,1076,16],[1074,21,1076,19,"options"],[1074,28,1076,26],[1075,6,1077,4],[1075,10,1077,8],[1075,11,1077,9,"format"],[1075,17,1077,15],[1075,20,1077,18,"options"],[1075,27,1077,25],[1075,29,1077,27,"interpolation"],[1075,42,1077,40],[1075,44,1077,42,"format"],[1075,50,1077,48],[1075,55,1077,53,"value"],[1075,60,1077,58],[1075,64,1077,62,"value"],[1075,69,1077,67],[1075,70,1077,68],[1076,6,1078,4],[1076,10,1078,8],[1076,11,1078,9,"init"],[1076,15,1078,13],[1076,16,1078,14,"options"],[1076,23,1078,21],[1076,24,1078,22],[1077,4,1079,2],[1078,4,1080,2,"init"],[1078,8,1080,6,"init"],[1078,9,1080,7,"options"],[1078,16,1080,14],[1078,19,1080,17],[1078,20,1080,18],[1078,21,1080,19],[1078,23,1080,21],[1079,6,1081,4],[1079,10,1081,8],[1079,11,1081,9,"options"],[1079,18,1081,16],[1079,19,1081,17,"interpolation"],[1079,32,1081,30],[1079,34,1081,32,"options"],[1079,41,1081,39],[1079,42,1081,40,"interpolation"],[1079,55,1081,53],[1079,58,1081,56],[1080,8,1082,6,"escapeValue"],[1080,19,1082,17],[1080,21,1082,19],[1081,6,1083,4],[1081,7,1083,5],[1082,6,1084,4],[1082,12,1084,10],[1083,8,1085,6,"escape"],[1083,14,1085,12],[1083,16,1085,14,"escape$1"],[1083,24,1085,22],[1084,8,1086,6,"escapeValue"],[1084,19,1086,17],[1085,8,1087,6,"useRawValueToEscape"],[1085,27,1087,25],[1086,8,1088,6,"prefix"],[1086,14,1088,12],[1087,8,1089,6,"prefixEscaped"],[1087,21,1089,19],[1088,8,1090,6,"suffix"],[1088,14,1090,12],[1089,8,1091,6,"suffixEscaped"],[1089,21,1091,19],[1090,8,1092,6,"formatSeparator"],[1090,23,1092,21],[1091,8,1093,6,"unescapeSuffix"],[1091,22,1093,20],[1092,8,1094,6,"unescapePrefix"],[1092,22,1094,20],[1093,8,1095,6,"nestingPrefix"],[1093,21,1095,19],[1094,8,1096,6,"nestingPrefixEscaped"],[1094,28,1096,26],[1095,8,1097,6,"nestingSuffix"],[1095,21,1097,19],[1096,8,1098,6,"nestingSuffixEscaped"],[1096,28,1098,26],[1097,8,1099,6,"nestingOptionsSeparator"],[1097,31,1099,29],[1098,8,1100,6,"maxReplaces"],[1098,19,1100,17],[1099,8,1101,6,"alwaysFormat"],[1100,6,1102,4],[1100,7,1102,5],[1100,10,1102,8,"options"],[1100,17,1102,15],[1100,18,1102,16,"interpolation"],[1100,31,1102,29],[1101,6,1103,4],[1101,10,1103,8],[1101,11,1103,9,"escape"],[1101,17,1103,15],[1101,20,1103,18,"escape$1"],[1101,28,1103,26],[1101,33,1103,31,"undefined"],[1101,42,1103,40],[1101,45,1103,43,"escape$1"],[1101,53,1103,51],[1101,56,1103,54,"escape"],[1101,62,1103,60],[1102,6,1104,4],[1102,10,1104,8],[1102,11,1104,9,"escapeValue"],[1102,22,1104,20],[1102,25,1104,23,"escapeValue"],[1102,36,1104,34],[1102,41,1104,39,"undefined"],[1102,50,1104,48],[1102,53,1104,51,"escapeValue"],[1102,64,1104,62],[1102,67,1104,65],[1102,71,1104,69],[1103,6,1105,4],[1103,10,1105,8],[1103,11,1105,9,"useRawValueToEscape"],[1103,30,1105,28],[1103,33,1105,31,"useRawValueToEscape"],[1103,52,1105,50],[1103,57,1105,55,"undefined"],[1103,66,1105,64],[1103,69,1105,67,"useRawValueToEscape"],[1103,88,1105,86],[1103,91,1105,89],[1103,96,1105,94],[1104,6,1106,4],[1104,10,1106,8],[1104,11,1106,9,"prefix"],[1104,17,1106,15],[1104,20,1106,18,"prefix"],[1104,26,1106,24],[1104,29,1106,27,"regexEscape"],[1104,40,1106,38],[1104,41,1106,39,"prefix"],[1104,47,1106,45],[1104,48,1106,46],[1104,51,1106,49,"prefixEscaped"],[1104,64,1106,62],[1104,68,1106,66],[1104,72,1106,70],[1105,6,1107,4],[1105,10,1107,8],[1105,11,1107,9,"suffix"],[1105,17,1107,15],[1105,20,1107,18,"suffix"],[1105,26,1107,24],[1105,29,1107,27,"regexEscape"],[1105,40,1107,38],[1105,41,1107,39,"suffix"],[1105,47,1107,45],[1105,48,1107,46],[1105,51,1107,49,"suffixEscaped"],[1105,64,1107,62],[1105,68,1107,66],[1105,72,1107,70],[1106,6,1108,4],[1106,10,1108,8],[1106,11,1108,9,"formatSeparator"],[1106,26,1108,24],[1106,29,1108,27,"formatSeparator"],[1106,44,1108,42],[1106,48,1108,46],[1106,51,1108,49],[1107,6,1109,4],[1107,10,1109,8],[1107,11,1109,9,"unescapePrefix"],[1107,25,1109,23],[1107,28,1109,26,"unescapeSuffix"],[1107,42,1109,40],[1107,45,1109,43],[1107,47,1109,45],[1107,50,1109,48,"unescapePrefix"],[1107,64,1109,62],[1107,68,1109,66],[1107,71,1109,69],[1108,6,1110,4],[1108,10,1110,8],[1108,11,1110,9,"unescapeSuffix"],[1108,25,1110,23],[1108,28,1110,26],[1108,32,1110,30],[1108,33,1110,31,"unescapePrefix"],[1108,47,1110,45],[1108,50,1110,48],[1108,52,1110,50],[1108,55,1110,53,"unescapeSuffix"],[1108,69,1110,67],[1108,73,1110,71],[1108,75,1110,73],[1109,6,1111,4],[1109,10,1111,8],[1109,11,1111,9,"nestingPrefix"],[1109,24,1111,22],[1109,27,1111,25,"nestingPrefix"],[1109,40,1111,38],[1109,43,1111,41,"regexEscape"],[1109,54,1111,52],[1109,55,1111,53,"nestingPrefix"],[1109,68,1111,66],[1109,69,1111,67],[1109,72,1111,70,"nestingPrefixEscaped"],[1109,92,1111,90],[1109,96,1111,94,"regexEscape"],[1109,107,1111,105],[1109,108,1111,106],[1109,113,1111,111],[1109,114,1111,112],[1110,6,1112,4],[1110,10,1112,8],[1110,11,1112,9,"nestingSuffix"],[1110,24,1112,22],[1110,27,1112,25,"nestingSuffix"],[1110,40,1112,38],[1110,43,1112,41,"regexEscape"],[1110,54,1112,52],[1110,55,1112,53,"nestingSuffix"],[1110,68,1112,66],[1110,69,1112,67],[1110,72,1112,70,"nestingSuffixEscaped"],[1110,92,1112,90],[1110,96,1112,94,"regexEscape"],[1110,107,1112,105],[1110,108,1112,106],[1110,111,1112,109],[1110,112,1112,110],[1111,6,1113,4],[1111,10,1113,8],[1111,11,1113,9,"nestingOptionsSeparator"],[1111,34,1113,32],[1111,37,1113,35,"nestingOptionsSeparator"],[1111,60,1113,58],[1111,64,1113,62],[1111,67,1113,65],[1112,6,1114,4],[1112,10,1114,8],[1112,11,1114,9,"maxReplaces"],[1112,22,1114,20],[1112,25,1114,23,"maxReplaces"],[1112,36,1114,34],[1112,40,1114,38],[1112,44,1114,42],[1113,6,1115,4],[1113,10,1115,8],[1113,11,1115,9,"alwaysFormat"],[1113,23,1115,21],[1113,26,1115,24,"alwaysFormat"],[1113,38,1115,36],[1113,43,1115,41,"undefined"],[1113,52,1115,50],[1113,55,1115,53,"alwaysFormat"],[1113,67,1115,65],[1113,70,1115,68],[1113,75,1115,73],[1114,6,1116,4],[1114,10,1116,8],[1114,11,1116,9,"resetRegExp"],[1114,22,1116,20],[1114,23,1116,21],[1114,24,1116,22],[1115,4,1117,2],[1116,4,1118,2,"reset"],[1116,9,1118,7,"reset"],[1116,10,1118,7],[1116,12,1118,10],[1117,6,1119,4],[1117,10,1119,8],[1117,14,1119,12],[1117,15,1119,13,"options"],[1117,22,1119,20],[1117,24,1119,22],[1117,28,1119,26],[1117,29,1119,27,"init"],[1117,33,1119,31],[1117,34,1119,32],[1117,38,1119,36],[1117,39,1119,37,"options"],[1117,46,1119,44],[1117,47,1119,45],[1118,4,1120,2],[1119,4,1121,2,"resetRegExp"],[1119,15,1121,13,"resetRegExp"],[1119,16,1121,13],[1119,18,1121,16],[1120,6,1122,4],[1120,12,1122,10,"getOrResetRegExp"],[1120,28,1122,26],[1120,31,1122,29,"getOrResetRegExp"],[1120,32,1122,30,"existingRegExp"],[1120,46,1122,44],[1120,48,1122,46,"pattern"],[1120,55,1122,53],[1120,60,1122,58],[1121,8,1123,6],[1121,12,1123,10,"existingRegExp"],[1121,26,1123,24],[1121,28,1123,26,"source"],[1121,34,1123,32],[1121,39,1123,37,"pattern"],[1121,46,1123,44],[1121,48,1123,46],[1122,10,1124,8,"existingRegExp"],[1122,24,1124,22],[1122,25,1124,23,"lastIndex"],[1122,34,1124,32],[1122,37,1124,35],[1122,38,1124,36],[1123,10,1125,8],[1123,17,1125,15,"existingRegExp"],[1123,31,1125,29],[1124,8,1126,6],[1125,8,1127,6],[1125,15,1127,13],[1125,19,1127,17,"RegExp"],[1125,25,1127,23],[1125,26,1127,24,"pattern"],[1125,33,1127,31],[1125,35,1127,33],[1125,38,1127,36],[1125,39,1127,37],[1126,6,1128,4],[1126,7,1128,5],[1127,6,1129,4],[1127,10,1129,8],[1127,11,1129,9,"regexp"],[1127,17,1129,15],[1127,20,1129,18,"getOrResetRegExp"],[1127,36,1129,34],[1127,37,1129,35],[1127,41,1129,39],[1127,42,1129,40,"regexp"],[1127,48,1129,46],[1127,50,1129,48],[1127,53,1129,51],[1127,57,1129,55],[1127,58,1129,56,"prefix"],[1127,64,1129,62],[1127,72,1129,70],[1127,76,1129,74],[1127,77,1129,75,"suffix"],[1127,83,1129,81],[1127,85,1129,83],[1127,86,1129,84],[1128,6,1130,4],[1128,10,1130,8],[1128,11,1130,9,"regexpUnescape"],[1128,25,1130,23],[1128,28,1130,26,"getOrResetRegExp"],[1128,44,1130,42],[1128,45,1130,43],[1128,49,1130,47],[1128,50,1130,48,"regexpUnescape"],[1128,64,1130,62],[1128,66,1130,64],[1128,69,1130,67],[1128,73,1130,71],[1128,74,1130,72,"prefix"],[1128,80,1130,78],[1128,83,1130,81],[1128,87,1130,85],[1128,88,1130,86,"unescapePrefix"],[1128,102,1130,100],[1128,110,1130,108],[1128,114,1130,112],[1128,115,1130,113,"unescapeSuffix"],[1128,129,1130,127],[1128,132,1130,130],[1128,136,1130,134],[1128,137,1130,135,"suffix"],[1128,143,1130,141],[1128,145,1130,143],[1128,146,1130,144],[1129,6,1131,4],[1129,10,1131,8],[1129,11,1131,9,"nestingRegexp"],[1129,24,1131,22],[1129,27,1131,25,"getOrResetRegExp"],[1129,43,1131,41],[1129,44,1131,42],[1129,48,1131,46],[1129,49,1131,47,"nestingRegexp"],[1129,62,1131,60],[1129,64,1131,62],[1129,67,1131,65],[1129,71,1131,69],[1129,72,1131,70,"nestingPrefix"],[1129,85,1131,83],[1129,153,1131,151],[1129,157,1131,155],[1129,158,1131,156,"nestingSuffix"],[1129,171,1131,169],[1129,173,1131,171],[1129,174,1131,172],[1130,4,1132,2],[1131,4,1133,2,"interpolate"],[1131,15,1133,13,"interpolate"],[1131,16,1133,14,"str"],[1131,19,1133,17],[1131,21,1133,19,"data"],[1131,25,1133,23],[1131,27,1133,25,"lng"],[1131,30,1133,28],[1131,32,1133,30,"options"],[1131,39,1133,37],[1131,41,1133,39],[1132,6,1134,4],[1132,10,1134,8,"match"],[1132,15,1134,13],[1133,6,1135,4],[1133,10,1135,8,"value"],[1133,15,1135,13],[1134,6,1136,4],[1134,10,1136,8,"replaces"],[1134,18,1136,16],[1135,6,1137,4],[1135,12,1137,10,"defaultData"],[1135,23,1137,21],[1135,26,1137,24],[1135,30,1137,28],[1135,31,1137,29,"options"],[1135,38,1137,36],[1135,42,1137,40],[1135,46,1137,44],[1135,47,1137,45,"options"],[1135,54,1137,52],[1135,55,1137,53,"interpolation"],[1135,68,1137,66],[1135,72,1137,70],[1135,76,1137,74],[1135,77,1137,75,"options"],[1135,84,1137,82],[1135,85,1137,83,"interpolation"],[1135,98,1137,96],[1135,99,1137,97,"defaultVariables"],[1135,115,1137,113],[1135,119,1137,117],[1135,120,1137,118],[1135,121,1137,119],[1136,6,1138,4],[1136,12,1138,10,"handleFormat"],[1136,24,1138,22],[1136,27,1138,25,"key"],[1136,30,1138,28],[1136,34,1138,32],[1137,8,1139,6],[1137,12,1139,10,"key"],[1137,15,1139,13],[1137,16,1139,14,"indexOf"],[1137,23,1139,21],[1137,24,1139,22],[1137,28,1139,26],[1137,29,1139,27,"formatSeparator"],[1137,44,1139,42],[1137,45,1139,43],[1137,48,1139,46],[1137,49,1139,47],[1137,51,1139,49],[1138,10,1140,8],[1138,16,1140,14,"path"],[1138,20,1140,18],[1138,23,1140,21,"deepFindWithDefaults"],[1138,43,1140,41],[1138,44,1140,42,"data"],[1138,48,1140,46],[1138,50,1140,48,"defaultData"],[1138,61,1140,59],[1138,63,1140,61,"key"],[1138,66,1140,64],[1138,68,1140,66],[1138,72,1140,70],[1138,73,1140,71,"options"],[1138,80,1140,78],[1138,81,1140,79,"keySeparator"],[1138,93,1140,91],[1138,95,1140,93],[1138,99,1140,97],[1138,100,1140,98,"options"],[1138,107,1140,105],[1138,108,1140,106,"ignoreJSONStructure"],[1138,127,1140,125],[1138,128,1140,126],[1139,10,1141,8],[1139,17,1141,15],[1139,21,1141,19],[1139,22,1141,20,"alwaysFormat"],[1139,34,1141,32],[1139,37,1141,35],[1139,41,1141,39],[1139,42,1141,40,"format"],[1139,48,1141,46],[1139,49,1141,47,"path"],[1139,53,1141,51],[1139,55,1141,53,"undefined"],[1139,64,1141,62],[1139,66,1141,64,"lng"],[1139,69,1141,67],[1139,71,1141,69],[1140,12,1142,10],[1140,15,1142,13,"options"],[1140,22,1142,20],[1141,12,1143,10],[1141,15,1143,13,"data"],[1141,19,1143,17],[1142,12,1144,10,"interpolationkey"],[1142,28,1144,26],[1142,30,1144,28,"key"],[1143,10,1145,8],[1143,11,1145,9],[1143,12,1145,10],[1143,15,1145,13,"path"],[1143,19,1145,17],[1144,8,1146,6],[1145,8,1147,6],[1145,14,1147,12,"p"],[1145,15,1147,13],[1145,18,1147,16,"key"],[1145,21,1147,19],[1145,22,1147,20,"split"],[1145,27,1147,25],[1145,28,1147,26],[1145,32,1147,30],[1145,33,1147,31,"formatSeparator"],[1145,48,1147,46],[1145,49,1147,47],[1146,8,1148,6],[1146,14,1148,12,"k"],[1146,15,1148,13],[1146,18,1148,16,"p"],[1146,19,1148,17],[1146,20,1148,18,"shift"],[1146,25,1148,23],[1146,26,1148,24],[1146,27,1148,25],[1146,28,1148,26,"trim"],[1146,32,1148,30],[1146,33,1148,31],[1146,34,1148,32],[1147,8,1149,6],[1147,14,1149,12,"f"],[1147,15,1149,13],[1147,18,1149,16,"p"],[1147,19,1149,17],[1147,20,1149,18,"join"],[1147,24,1149,22],[1147,25,1149,23],[1147,29,1149,27],[1147,30,1149,28,"formatSeparator"],[1147,45,1149,43],[1147,46,1149,44],[1147,47,1149,45,"trim"],[1147,51,1149,49],[1147,52,1149,50],[1147,53,1149,51],[1148,8,1150,6],[1148,15,1150,13],[1148,19,1150,17],[1148,20,1150,18,"format"],[1148,26,1150,24],[1148,27,1150,25,"deepFindWithDefaults"],[1148,47,1150,45],[1148,48,1150,46,"data"],[1148,52,1150,50],[1148,54,1150,52,"defaultData"],[1148,65,1150,63],[1148,67,1150,65,"k"],[1148,68,1150,66],[1148,70,1150,68],[1148,74,1150,72],[1148,75,1150,73,"options"],[1148,82,1150,80],[1148,83,1150,81,"keySeparator"],[1148,95,1150,93],[1148,97,1150,95],[1148,101,1150,99],[1148,102,1150,100,"options"],[1148,109,1150,107],[1148,110,1150,108,"ignoreJSONStructure"],[1148,129,1150,127],[1148,130,1150,128],[1148,132,1150,130,"f"],[1148,133,1150,131],[1148,135,1150,133,"lng"],[1148,138,1150,136],[1148,140,1150,138],[1149,10,1151,8],[1149,13,1151,11,"options"],[1149,20,1151,18],[1150,10,1152,8],[1150,13,1152,11,"data"],[1150,17,1152,15],[1151,10,1153,8,"interpolationkey"],[1151,26,1153,24],[1151,28,1153,26,"k"],[1152,8,1154,6],[1152,9,1154,7],[1152,10,1154,8],[1153,6,1155,4],[1153,7,1155,5],[1154,6,1156,4],[1154,10,1156,8],[1154,11,1156,9,"resetRegExp"],[1154,22,1156,20],[1154,23,1156,21],[1154,24,1156,22],[1155,6,1157,4],[1155,12,1157,10,"missingInterpolationHandler"],[1155,39,1157,37],[1155,42,1157,40,"options"],[1155,49,1157,47],[1155,51,1157,49,"missingInterpolationHandler"],[1155,78,1157,76],[1155,82,1157,80],[1155,86,1157,84],[1155,87,1157,85,"options"],[1155,94,1157,92],[1155,95,1157,93,"missingInterpolationHandler"],[1155,122,1157,120],[1156,6,1158,4],[1156,12,1158,10,"skipOnVariables"],[1156,27,1158,25],[1156,30,1158,28,"options"],[1156,37,1158,35],[1156,39,1158,37,"interpolation"],[1156,52,1158,50],[1156,54,1158,52,"skipOnVariables"],[1156,69,1158,67],[1156,74,1158,72,"undefined"],[1156,83,1158,81],[1156,86,1158,84,"options"],[1156,93,1158,91],[1156,94,1158,92,"interpolation"],[1156,107,1158,105],[1156,108,1158,106,"skipOnVariables"],[1156,123,1158,121],[1156,126,1158,124],[1156,130,1158,128],[1156,131,1158,129,"options"],[1156,138,1158,136],[1156,139,1158,137,"interpolation"],[1156,152,1158,150],[1156,153,1158,151,"skipOnVariables"],[1156,168,1158,166],[1157,6,1159,4],[1157,12,1159,10,"todos"],[1157,17,1159,15],[1157,20,1159,18],[1157,21,1159,19],[1158,8,1160,6,"regex"],[1158,13,1160,11],[1158,15,1160,13],[1158,19,1160,17],[1158,20,1160,18,"regexpUnescape"],[1158,34,1160,32],[1159,8,1161,6,"safeValue"],[1159,17,1161,15],[1159,19,1161,17,"val"],[1159,22,1161,20],[1159,26,1161,24,"regexSafe"],[1159,35,1161,33],[1159,36,1161,34,"val"],[1159,39,1161,37],[1160,6,1162,4],[1160,7,1162,5],[1160,9,1162,7],[1161,8,1163,6,"regex"],[1161,13,1163,11],[1161,15,1163,13],[1161,19,1163,17],[1161,20,1163,18,"regexp"],[1161,26,1163,24],[1162,8,1164,6,"safeValue"],[1162,17,1164,15],[1162,19,1164,17,"val"],[1162,22,1164,20],[1162,26,1164,24],[1162,30,1164,28],[1162,31,1164,29,"escapeValue"],[1162,42,1164,40],[1162,45,1164,43,"regexSafe"],[1162,54,1164,52],[1162,55,1164,53],[1162,59,1164,57],[1162,60,1164,58,"escape"],[1162,66,1164,64],[1162,67,1164,65,"val"],[1162,70,1164,68],[1162,71,1164,69],[1162,72,1164,70],[1162,75,1164,73,"regexSafe"],[1162,84,1164,82],[1162,85,1164,83,"val"],[1162,88,1164,86],[1163,6,1165,4],[1163,7,1165,5],[1163,8,1165,6],[1164,6,1166,4,"todos"],[1164,11,1166,9],[1164,12,1166,10,"forEach"],[1164,19,1166,17],[1164,20,1166,18,"todo"],[1164,24,1166,22],[1164,28,1166,26],[1165,8,1167,6,"replaces"],[1165,16,1167,14],[1165,19,1167,17],[1165,20,1167,18],[1166,8,1168,6],[1166,15,1168,13,"match"],[1166,20,1168,18],[1166,23,1168,21,"todo"],[1166,27,1168,25],[1166,28,1168,26,"regex"],[1166,33,1168,31],[1166,34,1168,32,"exec"],[1166,38,1168,36],[1166,39,1168,37,"str"],[1166,42,1168,40],[1166,43,1168,41],[1166,45,1168,43],[1167,10,1169,8],[1167,16,1169,14,"matchedVar"],[1167,26,1169,24],[1167,29,1169,27,"match"],[1167,34,1169,32],[1167,35,1169,33],[1167,36,1169,34],[1167,37,1169,35],[1167,38,1169,36,"trim"],[1167,42,1169,40],[1167,43,1169,41],[1167,44,1169,42],[1168,10,1170,8,"value"],[1168,15,1170,13],[1168,18,1170,16,"handleFormat"],[1168,30,1170,28],[1168,31,1170,29,"matchedVar"],[1168,41,1170,39],[1168,42,1170,40],[1169,10,1171,8],[1169,14,1171,12,"value"],[1169,19,1171,17],[1169,24,1171,22,"undefined"],[1169,33,1171,31],[1169,35,1171,33],[1170,12,1172,10],[1170,16,1172,14],[1170,23,1172,21,"missingInterpolationHandler"],[1170,50,1172,48],[1170,55,1172,53],[1170,65,1172,63],[1170,67,1172,65],[1171,14,1173,12],[1171,20,1173,18,"temp"],[1171,24,1173,22],[1171,27,1173,25,"missingInterpolationHandler"],[1171,54,1173,52],[1171,55,1173,53,"str"],[1171,58,1173,56],[1171,60,1173,58,"match"],[1171,65,1173,63],[1171,67,1173,65,"options"],[1171,74,1173,72],[1171,75,1173,73],[1172,14,1174,12,"value"],[1172,19,1174,17],[1172,22,1174,20,"isString"],[1172,30,1174,28],[1172,31,1174,29,"temp"],[1172,35,1174,33],[1172,36,1174,34],[1172,39,1174,37,"temp"],[1172,43,1174,41],[1172,46,1174,44],[1172,48,1174,46],[1173,12,1175,10],[1173,13,1175,11],[1173,19,1175,17],[1173,23,1175,21,"options"],[1173,30,1175,28],[1173,34,1175,32,"Object"],[1173,40,1175,38],[1173,41,1175,39,"prototype"],[1173,50,1175,48],[1173,51,1175,49,"hasOwnProperty"],[1173,65,1175,63],[1173,66,1175,64,"call"],[1173,70,1175,68],[1173,71,1175,69,"options"],[1173,78,1175,76],[1173,80,1175,78,"matchedVar"],[1173,90,1175,88],[1173,91,1175,89],[1173,93,1175,91],[1174,14,1176,12,"value"],[1174,19,1176,17],[1174,22,1176,20],[1174,24,1176,22],[1175,12,1177,10],[1175,13,1177,11],[1175,19,1177,17],[1175,23,1177,21,"skipOnVariables"],[1175,38,1177,36],[1175,40,1177,38],[1176,14,1178,12,"value"],[1176,19,1178,17],[1176,22,1178,20,"match"],[1176,27,1178,25],[1176,28,1178,26],[1176,29,1178,27],[1176,30,1178,28],[1177,14,1179,12],[1178,12,1180,10],[1178,13,1180,11],[1178,19,1180,17],[1179,14,1181,12],[1179,18,1181,16],[1179,19,1181,17,"logger"],[1179,25,1181,23],[1179,26,1181,24,"warn"],[1179,30,1181,28],[1179,31,1181,29],[1179,61,1181,59,"matchedVar"],[1179,71,1181,69],[1179,93,1181,91,"str"],[1179,96,1181,94],[1179,98,1181,96],[1179,99,1181,97],[1180,14,1182,12,"value"],[1180,19,1182,17],[1180,22,1182,20],[1180,24,1182,22],[1181,12,1183,10],[1182,10,1184,8],[1182,11,1184,9],[1182,17,1184,15],[1182,21,1184,19],[1182,22,1184,20,"isString"],[1182,30,1184,28],[1182,31,1184,29,"value"],[1182,36,1184,34],[1182,37,1184,35],[1182,41,1184,39],[1182,42,1184,40],[1182,46,1184,44],[1182,47,1184,45,"useRawValueToEscape"],[1182,66,1184,64],[1182,68,1184,66],[1183,12,1185,10,"value"],[1183,17,1185,15],[1183,20,1185,18,"makeString"],[1183,30,1185,28],[1183,31,1185,29,"value"],[1183,36,1185,34],[1183,37,1185,35],[1184,10,1186,8],[1185,10,1187,8],[1185,16,1187,14,"safeValue"],[1185,25,1187,23],[1185,28,1187,26,"todo"],[1185,32,1187,30],[1185,33,1187,31,"safeValue"],[1185,42,1187,40],[1185,43,1187,41,"value"],[1185,48,1187,46],[1185,49,1187,47],[1186,10,1188,8,"str"],[1186,13,1188,11],[1186,16,1188,14,"str"],[1186,19,1188,17],[1186,20,1188,18,"replace"],[1186,27,1188,25],[1186,28,1188,26,"match"],[1186,33,1188,31],[1186,34,1188,32],[1186,35,1188,33],[1186,36,1188,34],[1186,38,1188,36,"safeValue"],[1186,47,1188,45],[1186,48,1188,46],[1187,10,1189,8],[1187,14,1189,12,"skipOnVariables"],[1187,29,1189,27],[1187,31,1189,29],[1188,12,1190,10,"todo"],[1188,16,1190,14],[1188,17,1190,15,"regex"],[1188,22,1190,20],[1188,23,1190,21,"lastIndex"],[1188,32,1190,30],[1188,36,1190,34,"value"],[1188,41,1190,39],[1188,42,1190,40,"length"],[1188,48,1190,46],[1189,12,1191,10,"todo"],[1189,16,1191,14],[1189,17,1191,15,"regex"],[1189,22,1191,20],[1189,23,1191,21,"lastIndex"],[1189,32,1191,30],[1189,36,1191,34,"match"],[1189,41,1191,39],[1189,42,1191,40],[1189,43,1191,41],[1189,44,1191,42],[1189,45,1191,43,"length"],[1189,51,1191,49],[1190,10,1192,8],[1190,11,1192,9],[1190,17,1192,15],[1191,12,1193,10,"todo"],[1191,16,1193,14],[1191,17,1193,15,"regex"],[1191,22,1193,20],[1191,23,1193,21,"lastIndex"],[1191,32,1193,30],[1191,35,1193,33],[1191,36,1193,34],[1192,10,1194,8],[1193,10,1195,8,"replaces"],[1193,18,1195,16],[1193,20,1195,18],[1194,10,1196,8],[1194,14,1196,12,"replaces"],[1194,22,1196,20],[1194,26,1196,24],[1194,30,1196,28],[1194,31,1196,29,"maxReplaces"],[1194,42,1196,40],[1194,44,1196,42],[1195,12,1197,10],[1196,10,1198,8],[1197,8,1199,6],[1198,6,1200,4],[1198,7,1200,5],[1198,8,1200,6],[1199,6,1201,4],[1199,13,1201,11,"str"],[1199,16,1201,14],[1200,4,1202,2],[1201,4,1203,2,"nest"],[1201,8,1203,6,"nest"],[1201,9,1203,7,"str"],[1201,12,1203,10],[1201,14,1203,12,"fc"],[1201,16,1203,14],[1201,18,1203,16,"options"],[1201,25,1203,23],[1201,28,1203,26],[1201,29,1203,27],[1201,30,1203,28],[1201,32,1203,30],[1202,6,1204,4],[1202,10,1204,8,"match"],[1202,15,1204,13],[1203,6,1205,4],[1203,10,1205,8,"value"],[1203,15,1205,13],[1204,6,1206,4],[1204,10,1206,8,"clonedOptions"],[1204,23,1206,21],[1205,6,1207,4],[1205,12,1207,10,"handleHasOptions"],[1205,28,1207,26],[1205,31,1207,29,"handleHasOptions"],[1205,32,1207,30,"key"],[1205,35,1207,33],[1205,37,1207,35,"inheritedOptions"],[1205,53,1207,51],[1205,58,1207,56],[1206,8,1208,6],[1206,14,1208,12,"sep"],[1206,17,1208,15],[1206,20,1208,18],[1206,24,1208,22],[1206,25,1208,23,"nestingOptionsSeparator"],[1206,48,1208,46],[1207,8,1209,6],[1207,12,1209,10,"key"],[1207,15,1209,13],[1207,16,1209,14,"indexOf"],[1207,23,1209,21],[1207,24,1209,22,"sep"],[1207,27,1209,25],[1207,28,1209,26],[1207,31,1209,29],[1207,32,1209,30],[1207,34,1209,32],[1207,41,1209,39,"key"],[1207,44,1209,42],[1208,8,1210,6],[1208,14,1210,12,"c"],[1208,15,1210,13],[1208,18,1210,16,"key"],[1208,21,1210,19],[1208,22,1210,20,"split"],[1208,27,1210,25],[1208,28,1210,26],[1208,32,1210,30,"RegExp"],[1208,38,1210,36],[1208,39,1210,37],[1208,42,1210,40,"sep"],[1208,45,1210,43],[1208,52,1210,50],[1208,53,1210,51],[1208,54,1210,52],[1209,8,1211,6],[1209,12,1211,10,"optionsString"],[1209,25,1211,23],[1209,28,1211,26],[1209,32,1211,30,"c"],[1209,33,1211,31],[1209,34,1211,32],[1209,35,1211,33],[1209,36,1211,34],[1209,38,1211,36],[1210,8,1212,6,"key"],[1210,11,1212,9],[1210,14,1212,12,"c"],[1210,15,1212,13],[1210,16,1212,14],[1210,17,1212,15],[1210,18,1212,16],[1211,8,1213,6,"optionsString"],[1211,21,1213,19],[1211,24,1213,22],[1211,28,1213,26],[1211,29,1213,27,"interpolate"],[1211,40,1213,38],[1211,41,1213,39,"optionsString"],[1211,54,1213,52],[1211,56,1213,54,"clonedOptions"],[1211,69,1213,67],[1211,70,1213,68],[1212,8,1214,6],[1212,14,1214,12,"matchedSingleQuotes"],[1212,33,1214,31],[1212,36,1214,34,"optionsString"],[1212,49,1214,47],[1212,50,1214,48,"match"],[1212,55,1214,53],[1212,56,1214,54],[1212,60,1214,58],[1212,61,1214,59],[1213,8,1215,6],[1213,14,1215,12,"matchedDoubleQuotes"],[1213,33,1215,31],[1213,36,1215,34,"optionsString"],[1213,49,1215,47],[1213,50,1215,48,"match"],[1213,55,1215,53],[1213,56,1215,54],[1213,60,1215,58],[1213,61,1215,59],[1214,8,1216,6],[1214,12,1216,10],[1214,13,1216,11,"matchedSingleQuotes"],[1214,32,1216,30],[1214,34,1216,32,"length"],[1214,40,1216,38],[1214,44,1216,42],[1214,45,1216,43],[1214,49,1216,47],[1214,50,1216,48],[1214,55,1216,53],[1214,56,1216,54],[1214,60,1216,58],[1214,61,1216,59,"matchedDoubleQuotes"],[1214,80,1216,78],[1214,84,1216,82,"matchedDoubleQuotes"],[1214,103,1216,101],[1214,104,1216,102,"length"],[1214,110,1216,108],[1214,113,1216,111],[1214,114,1216,112],[1214,119,1216,117],[1214,120,1216,118],[1214,122,1216,120],[1215,10,1217,8,"optionsString"],[1215,23,1217,21],[1215,26,1217,24,"optionsString"],[1215,39,1217,37],[1215,40,1217,38,"replace"],[1215,47,1217,45],[1215,48,1217,46],[1215,52,1217,50],[1215,54,1217,52],[1215,57,1217,55],[1215,58,1217,56],[1216,8,1218,6],[1217,8,1219,6],[1217,12,1219,10],[1218,10,1220,8,"clonedOptions"],[1218,23,1220,21],[1218,26,1220,24,"JSON"],[1218,30,1220,28],[1218,31,1220,29,"parse"],[1218,36,1220,34],[1218,37,1220,35,"optionsString"],[1218,50,1220,48],[1218,51,1220,49],[1219,10,1221,8],[1219,14,1221,12,"inheritedOptions"],[1219,30,1221,28],[1219,32,1221,30,"clonedOptions"],[1219,45,1221,43],[1219,48,1221,46],[1220,12,1222,10],[1220,15,1222,13,"inheritedOptions"],[1220,31,1222,29],[1221,12,1223,10],[1221,15,1223,13,"clonedOptions"],[1222,10,1224,8],[1222,11,1224,9],[1223,8,1225,6],[1223,9,1225,7],[1223,10,1225,8],[1223,17,1225,15,"e"],[1223,18,1225,16],[1223,20,1225,18],[1224,10,1226,8],[1224,14,1226,12],[1224,15,1226,13,"logger"],[1224,21,1226,19],[1224,22,1226,20,"warn"],[1224,26,1226,24],[1224,27,1226,25],[1224,79,1226,77,"key"],[1224,82,1226,80],[1224,84,1226,82],[1224,86,1226,84,"e"],[1224,87,1226,85],[1224,88,1226,86],[1225,10,1227,8],[1225,17,1227,15],[1225,20,1227,18,"key"],[1225,23,1227,21],[1225,26,1227,24,"sep"],[1225,29,1227,27],[1225,32,1227,30,"optionsString"],[1225,45,1227,43],[1225,47,1227,45],[1226,8,1228,6],[1227,8,1229,6],[1227,12,1229,10,"clonedOptions"],[1227,25,1229,23],[1227,26,1229,24,"defaultValue"],[1227,38,1229,36],[1227,42,1229,40,"clonedOptions"],[1227,55,1229,53],[1227,56,1229,54,"defaultValue"],[1227,68,1229,66],[1227,69,1229,67,"indexOf"],[1227,76,1229,74],[1227,77,1229,75],[1227,81,1229,79],[1227,82,1229,80,"prefix"],[1227,88,1229,86],[1227,89,1229,87],[1227,92,1229,90],[1227,93,1229,91],[1227,94,1229,92],[1227,96,1229,94],[1227,103,1229,101,"clonedOptions"],[1227,116,1229,114],[1227,117,1229,115,"defaultValue"],[1227,129,1229,127],[1228,8,1230,6],[1228,15,1230,13,"key"],[1228,18,1230,16],[1229,6,1231,4],[1229,7,1231,5],[1230,6,1232,4],[1230,13,1232,11,"match"],[1230,18,1232,16],[1230,21,1232,19],[1230,25,1232,23],[1230,26,1232,24,"nestingRegexp"],[1230,39,1232,37],[1230,40,1232,38,"exec"],[1230,44,1232,42],[1230,45,1232,43,"str"],[1230,48,1232,46],[1230,49,1232,47],[1230,51,1232,49],[1231,8,1233,6],[1231,12,1233,10,"formatters"],[1231,22,1233,20],[1231,25,1233,23],[1231,27,1233,25],[1232,8,1234,6,"clonedOptions"],[1232,21,1234,19],[1232,24,1234,22],[1233,10,1235,8],[1233,13,1235,11,"options"],[1234,8,1236,6],[1234,9,1236,7],[1235,8,1237,6,"clonedOptions"],[1235,21,1237,19],[1235,24,1237,22,"clonedOptions"],[1235,37,1237,35],[1235,38,1237,36,"replace"],[1235,45,1237,43],[1235,49,1237,47],[1235,50,1237,48,"isString"],[1235,58,1237,56],[1235,59,1237,57,"clonedOptions"],[1235,72,1237,70],[1235,73,1237,71,"replace"],[1235,80,1237,78],[1235,81,1237,79],[1235,84,1237,82,"clonedOptions"],[1235,97,1237,95],[1235,98,1237,96,"replace"],[1235,105,1237,103],[1235,108,1237,106,"clonedOptions"],[1235,121,1237,119],[1236,8,1238,6,"clonedOptions"],[1236,21,1238,19],[1236,22,1238,20,"applyPostProcessor"],[1236,40,1238,38],[1236,43,1238,41],[1236,48,1238,46],[1237,8,1239,6],[1237,15,1239,13,"clonedOptions"],[1237,28,1239,26],[1237,29,1239,27,"defaultValue"],[1237,41,1239,39],[1238,8,1240,6],[1238,14,1240,12,"keyEndIndex"],[1238,25,1240,23],[1238,28,1240,26],[1238,34,1240,32],[1238,35,1240,33,"test"],[1238,39,1240,37],[1238,40,1240,38,"match"],[1238,45,1240,43],[1238,46,1240,44],[1238,47,1240,45],[1238,48,1240,46],[1238,49,1240,47],[1238,52,1240,50,"match"],[1238,57,1240,55],[1238,58,1240,56],[1238,59,1240,57],[1238,60,1240,58],[1238,61,1240,59,"lastIndexOf"],[1238,72,1240,70],[1238,73,1240,71],[1238,76,1240,74],[1238,77,1240,75],[1238,80,1240,78],[1238,81,1240,79],[1238,84,1240,82,"match"],[1238,89,1240,87],[1238,90,1240,88],[1238,91,1240,89],[1238,92,1240,90],[1238,93,1240,91,"indexOf"],[1238,100,1240,98],[1238,101,1240,99],[1238,105,1240,103],[1238,106,1240,104,"formatSeparator"],[1238,121,1240,119],[1238,122,1240,120],[1239,8,1241,6],[1239,12,1241,10,"keyEndIndex"],[1239,23,1241,21],[1239,28,1241,26],[1239,29,1241,27],[1239,30,1241,28],[1239,32,1241,30],[1240,10,1242,8,"formatters"],[1240,20,1242,18],[1240,23,1242,21,"match"],[1240,28,1242,26],[1240,29,1242,27],[1240,30,1242,28],[1240,31,1242,29],[1240,32,1242,30,"slice"],[1240,37,1242,35],[1240,38,1242,36,"keyEndIndex"],[1240,49,1242,47],[1240,50,1242,48],[1240,51,1242,49,"split"],[1240,56,1242,54],[1240,57,1242,55],[1240,61,1242,59],[1240,62,1242,60,"formatSeparator"],[1240,77,1242,75],[1240,78,1242,76],[1240,79,1242,77,"map"],[1240,82,1242,80],[1240,83,1242,81,"elem"],[1240,87,1242,85],[1240,91,1242,89,"elem"],[1240,95,1242,93],[1240,96,1242,94,"trim"],[1240,100,1242,98],[1240,101,1242,99],[1240,102,1242,100],[1240,103,1242,101],[1240,104,1242,102,"filter"],[1240,110,1242,108],[1240,111,1242,109,"Boolean"],[1240,118,1242,116],[1240,119,1242,117],[1241,10,1243,8,"match"],[1241,15,1243,13],[1241,16,1243,14],[1241,17,1243,15],[1241,18,1243,16],[1241,21,1243,19,"match"],[1241,26,1243,24],[1241,27,1243,25],[1241,28,1243,26],[1241,29,1243,27],[1241,30,1243,28,"slice"],[1241,35,1243,33],[1241,36,1243,34],[1241,37,1243,35],[1241,39,1243,37,"keyEndIndex"],[1241,50,1243,48],[1241,51,1243,49],[1242,8,1244,6],[1243,8,1245,6,"value"],[1243,13,1245,11],[1243,16,1245,14,"fc"],[1243,18,1245,16],[1243,19,1245,17,"handleHasOptions"],[1243,35,1245,33],[1243,36,1245,34,"call"],[1243,40,1245,38],[1243,41,1245,39],[1243,45,1245,43],[1243,47,1245,45,"match"],[1243,52,1245,50],[1243,53,1245,51],[1243,54,1245,52],[1243,55,1245,53],[1243,56,1245,54,"trim"],[1243,60,1245,58],[1243,61,1245,59],[1243,62,1245,60],[1243,64,1245,62,"clonedOptions"],[1243,77,1245,75],[1243,78,1245,76],[1243,80,1245,78,"clonedOptions"],[1243,93,1245,91],[1243,94,1245,92],[1244,8,1246,6],[1244,12,1246,10,"value"],[1244,17,1246,15],[1244,21,1246,19,"match"],[1244,26,1246,24],[1244,27,1246,25],[1244,28,1246,26],[1244,29,1246,27],[1244,34,1246,32,"str"],[1244,37,1246,35],[1244,41,1246,39],[1244,42,1246,40,"isString"],[1244,50,1246,48],[1244,51,1246,49,"value"],[1244,56,1246,54],[1244,57,1246,55],[1244,59,1246,57],[1244,66,1246,64,"value"],[1244,71,1246,69],[1245,8,1247,6],[1245,12,1247,10],[1245,13,1247,11,"isString"],[1245,21,1247,19],[1245,22,1247,20,"value"],[1245,27,1247,25],[1245,28,1247,26],[1245,30,1247,28,"value"],[1245,35,1247,33],[1245,38,1247,36,"makeString"],[1245,48,1247,46],[1245,49,1247,47,"value"],[1245,54,1247,52],[1245,55,1247,53],[1246,8,1248,6],[1246,12,1248,10],[1246,13,1248,11,"value"],[1246,18,1248,16],[1246,20,1248,18],[1247,10,1249,8],[1247,14,1249,12],[1247,15,1249,13,"logger"],[1247,21,1249,19],[1247,22,1249,20,"warn"],[1247,26,1249,24],[1247,27,1249,25],[1247,48,1249,46,"match"],[1247,53,1249,51],[1247,54,1249,52],[1247,55,1249,53],[1247,56,1249,54],[1247,72,1249,70,"str"],[1247,75,1249,73],[1247,77,1249,75],[1247,78,1249,76],[1248,10,1250,8,"value"],[1248,15,1250,13],[1248,18,1250,16],[1248,20,1250,18],[1249,8,1251,6],[1250,8,1252,6],[1250,12,1252,10,"formatters"],[1250,22,1252,20],[1250,23,1252,21,"length"],[1250,29,1252,27],[1250,31,1252,29],[1251,10,1253,8,"value"],[1251,15,1253,13],[1251,18,1253,16,"formatters"],[1251,28,1253,26],[1251,29,1253,27,"reduce"],[1251,35,1253,33],[1251,36,1253,34],[1251,37,1253,35,"v"],[1251,38,1253,36],[1251,40,1253,38,"f"],[1251,41,1253,39],[1251,46,1253,44],[1251,50,1253,48],[1251,51,1253,49,"format"],[1251,57,1253,55],[1251,58,1253,56,"v"],[1251,59,1253,57],[1251,61,1253,59,"f"],[1251,62,1253,60],[1251,64,1253,62,"options"],[1251,71,1253,69],[1251,72,1253,70,"lng"],[1251,75,1253,73],[1251,77,1253,75],[1252,12,1254,10],[1252,15,1254,13,"options"],[1252,22,1254,20],[1253,12,1255,10,"interpolationkey"],[1253,28,1255,26],[1253,30,1255,28,"match"],[1253,35,1255,33],[1253,36,1255,34],[1253,37,1255,35],[1253,38,1255,36],[1253,39,1255,37,"trim"],[1253,43,1255,41],[1253,44,1255,42],[1254,10,1256,8],[1254,11,1256,9],[1254,12,1256,10],[1254,14,1256,12,"value"],[1254,19,1256,17],[1254,20,1256,18,"trim"],[1254,24,1256,22],[1254,25,1256,23],[1254,26,1256,24],[1254,27,1256,25],[1255,8,1257,6],[1256,8,1258,6,"str"],[1256,11,1258,9],[1256,14,1258,12,"str"],[1256,17,1258,15],[1256,18,1258,16,"replace"],[1256,25,1258,23],[1256,26,1258,24,"match"],[1256,31,1258,29],[1256,32,1258,30],[1256,33,1258,31],[1256,34,1258,32],[1256,36,1258,34,"value"],[1256,41,1258,39],[1256,42,1258,40],[1257,8,1259,6],[1257,12,1259,10],[1257,13,1259,11,"regexp"],[1257,19,1259,17],[1257,20,1259,18,"lastIndex"],[1257,29,1259,27],[1257,32,1259,30],[1257,33,1259,31],[1258,6,1260,4],[1259,6,1261,4],[1259,13,1261,11,"str"],[1259,16,1261,14],[1260,4,1262,2],[1261,2,1263,0],[1262,2,1265,0],[1262,8,1265,6,"parseFormatStr"],[1262,22,1265,20],[1262,25,1265,23,"formatStr"],[1262,34,1265,32],[1262,38,1265,36],[1263,4,1266,2],[1263,8,1266,6,"formatName"],[1263,18,1266,16],[1263,21,1266,19,"formatStr"],[1263,30,1266,28],[1263,31,1266,29,"toLowerCase"],[1263,42,1266,40],[1263,43,1266,41],[1263,44,1266,42],[1263,45,1266,43,"trim"],[1263,49,1266,47],[1263,50,1266,48],[1263,51,1266,49],[1264,4,1267,2],[1264,10,1267,8,"formatOptions"],[1264,23,1267,21],[1264,26,1267,24],[1264,27,1267,25],[1264,28,1267,26],[1265,4,1268,2],[1265,8,1268,6,"formatStr"],[1265,17,1268,15],[1265,18,1268,16,"indexOf"],[1265,25,1268,23],[1265,26,1268,24],[1265,29,1268,27],[1265,30,1268,28],[1265,33,1268,31],[1265,34,1268,32],[1265,35,1268,33],[1265,37,1268,35],[1266,6,1269,4],[1266,12,1269,10,"p"],[1266,13,1269,11],[1266,16,1269,14,"formatStr"],[1266,25,1269,23],[1266,26,1269,24,"split"],[1266,31,1269,29],[1266,32,1269,30],[1266,35,1269,33],[1266,36,1269,34],[1267,6,1270,4,"formatName"],[1267,16,1270,14],[1267,19,1270,17,"p"],[1267,20,1270,18],[1267,21,1270,19],[1267,22,1270,20],[1267,23,1270,21],[1267,24,1270,22,"toLowerCase"],[1267,35,1270,33],[1267,36,1270,34],[1267,37,1270,35],[1267,38,1270,36,"trim"],[1267,42,1270,40],[1267,43,1270,41],[1267,44,1270,42],[1268,6,1271,4],[1268,12,1271,10,"optStr"],[1268,18,1271,16],[1268,21,1271,19,"p"],[1268,22,1271,20],[1268,23,1271,21],[1268,24,1271,22],[1268,25,1271,23],[1268,26,1271,24,"substring"],[1268,35,1271,33],[1268,36,1271,34],[1268,37,1271,35],[1268,39,1271,37,"p"],[1268,40,1271,38],[1268,41,1271,39],[1268,42,1271,40],[1268,43,1271,41],[1268,44,1271,42,"length"],[1268,50,1271,48],[1268,53,1271,51],[1268,54,1271,52],[1268,55,1271,53],[1269,6,1272,4],[1269,10,1272,8,"formatName"],[1269,20,1272,18],[1269,25,1272,23],[1269,35,1272,33],[1269,39,1272,37,"optStr"],[1269,45,1272,43],[1269,46,1272,44,"indexOf"],[1269,53,1272,51],[1269,54,1272,52],[1269,57,1272,55],[1269,58,1272,56],[1269,61,1272,59],[1269,62,1272,60],[1269,64,1272,62],[1270,8,1273,6],[1270,12,1273,10],[1270,13,1273,11,"formatOptions"],[1270,26,1273,24],[1270,27,1273,25,"currency"],[1270,35,1273,33],[1270,37,1273,35,"formatOptions"],[1270,50,1273,48],[1270,51,1273,49,"currency"],[1270,59,1273,57],[1270,62,1273,60,"optStr"],[1270,68,1273,66],[1270,69,1273,67,"trim"],[1270,73,1273,71],[1270,74,1273,72],[1270,75,1273,73],[1271,6,1274,4],[1271,7,1274,5],[1271,13,1274,11],[1271,17,1274,15,"formatName"],[1271,27,1274,25],[1271,32,1274,30],[1271,46,1274,44],[1271,50,1274,48,"optStr"],[1271,56,1274,54],[1271,57,1274,55,"indexOf"],[1271,64,1274,62],[1271,65,1274,63],[1271,68,1274,66],[1271,69,1274,67],[1271,72,1274,70],[1271,73,1274,71],[1271,75,1274,73],[1272,8,1275,6],[1272,12,1275,10],[1272,13,1275,11,"formatOptions"],[1272,26,1275,24],[1272,27,1275,25,"range"],[1272,32,1275,30],[1272,34,1275,32,"formatOptions"],[1272,47,1275,45],[1272,48,1275,46,"range"],[1272,53,1275,51],[1272,56,1275,54,"optStr"],[1272,62,1275,60],[1272,63,1275,61,"trim"],[1272,67,1275,65],[1272,68,1275,66],[1272,69,1275,67],[1273,6,1276,4],[1273,7,1276,5],[1273,13,1276,11],[1274,8,1277,6],[1274,14,1277,12,"opts"],[1274,18,1277,16],[1274,21,1277,19,"optStr"],[1274,27,1277,25],[1274,28,1277,26,"split"],[1274,33,1277,31],[1274,34,1277,32],[1274,37,1277,35],[1274,38,1277,36],[1275,8,1278,6,"opts"],[1275,12,1278,10],[1275,13,1278,11,"forEach"],[1275,20,1278,18],[1275,21,1278,19,"opt"],[1275,24,1278,22],[1275,28,1278,26],[1276,10,1279,8],[1276,14,1279,12,"opt"],[1276,17,1279,15],[1276,19,1279,17],[1277,12,1280,10],[1277,18,1280,16],[1277,19,1280,17,"key"],[1277,22,1280,20],[1277,24,1280,22],[1277,27,1280,25,"rest"],[1277,31,1280,29],[1277,32,1280,30],[1277,35,1280,33,"opt"],[1277,38,1280,36],[1277,39,1280,37,"split"],[1277,44,1280,42],[1277,45,1280,43],[1277,48,1280,46],[1277,49,1280,47],[1278,12,1281,10],[1278,18,1281,16,"val"],[1278,21,1281,19],[1278,24,1281,22,"rest"],[1278,28,1281,26],[1278,29,1281,27,"join"],[1278,33,1281,31],[1278,34,1281,32],[1278,37,1281,35],[1278,38,1281,36],[1278,39,1281,37,"trim"],[1278,43,1281,41],[1278,44,1281,42],[1278,45,1281,43],[1278,46,1281,44,"replace"],[1278,53,1281,51],[1278,54,1281,52],[1278,64,1281,62],[1278,66,1281,64],[1278,68,1281,66],[1278,69,1281,67],[1279,12,1282,10],[1279,18,1282,16,"trimmedKey"],[1279,28,1282,26],[1279,31,1282,29,"key"],[1279,34,1282,32],[1279,35,1282,33,"trim"],[1279,39,1282,37],[1279,40,1282,38],[1279,41,1282,39],[1280,12,1283,10],[1280,16,1283,14],[1280,17,1283,15,"formatOptions"],[1280,30,1283,28],[1280,31,1283,29,"trimmedKey"],[1280,41,1283,39],[1280,42,1283,40],[1280,44,1283,42,"formatOptions"],[1280,57,1283,55],[1280,58,1283,56,"trimmedKey"],[1280,68,1283,66],[1280,69,1283,67],[1280,72,1283,70,"val"],[1280,75,1283,73],[1281,12,1284,10],[1281,16,1284,14,"val"],[1281,19,1284,17],[1281,24,1284,22],[1281,31,1284,29],[1281,33,1284,31,"formatOptions"],[1281,46,1284,44],[1281,47,1284,45,"trimmedKey"],[1281,57,1284,55],[1281,58,1284,56],[1281,61,1284,59],[1281,66,1284,64],[1282,12,1285,10],[1282,16,1285,14,"val"],[1282,19,1285,17],[1282,24,1285,22],[1282,30,1285,28],[1282,32,1285,30,"formatOptions"],[1282,45,1285,43],[1282,46,1285,44,"trimmedKey"],[1282,56,1285,54],[1282,57,1285,55],[1282,60,1285,58],[1282,64,1285,62],[1283,12,1286,10],[1283,16,1286,14],[1283,17,1286,15,"isNaN"],[1283,22,1286,20],[1283,23,1286,21,"val"],[1283,26,1286,24],[1283,27,1286,25],[1283,29,1286,27,"formatOptions"],[1283,42,1286,40],[1283,43,1286,41,"trimmedKey"],[1283,53,1286,51],[1283,54,1286,52],[1283,57,1286,55,"parseInt"],[1283,65,1286,63],[1283,66,1286,64,"val"],[1283,69,1286,67],[1283,71,1286,69],[1283,73,1286,71],[1283,74,1286,72],[1284,10,1287,8],[1285,8,1288,6],[1285,9,1288,7],[1285,10,1288,8],[1286,6,1289,4],[1287,4,1290,2],[1288,4,1291,2],[1288,11,1291,9],[1289,6,1292,4,"formatName"],[1289,16,1292,14],[1290,6,1293,4,"formatOptions"],[1291,4,1294,2],[1291,5,1294,3],[1292,2,1295,0],[1292,3,1295,1],[1293,2,1296,0],[1293,8,1296,6,"createCachedFormatter"],[1293,29,1296,27],[1293,32,1296,30,"fn"],[1293,34,1296,32],[1293,38,1296,36],[1294,4,1297,2],[1294,10,1297,8,"cache"],[1294,15,1297,13],[1294,18,1297,16],[1294,19,1297,17],[1294,20,1297,18],[1295,4,1298,2],[1295,11,1298,9],[1295,12,1298,10,"v"],[1295,13,1298,11],[1295,15,1298,13,"l"],[1295,16,1298,14],[1295,18,1298,16,"o"],[1295,19,1298,17],[1295,24,1298,22],[1296,6,1299,4],[1296,10,1299,8,"optForCache"],[1296,21,1299,19],[1296,24,1299,22,"o"],[1296,25,1299,23],[1297,6,1300,4],[1297,10,1300,8,"o"],[1297,11,1300,9],[1297,15,1300,13,"o"],[1297,16,1300,14],[1297,17,1300,15,"interpolationkey"],[1297,33,1300,31],[1297,37,1300,35,"o"],[1297,38,1300,36],[1297,39,1300,37,"formatParams"],[1297,51,1300,49],[1297,55,1300,53,"o"],[1297,56,1300,54],[1297,57,1300,55,"formatParams"],[1297,69,1300,67],[1297,70,1300,68,"o"],[1297,71,1300,69],[1297,72,1300,70,"interpolationkey"],[1297,88,1300,86],[1297,89,1300,87],[1297,93,1300,91,"o"],[1297,94,1300,92],[1297,95,1300,93,"o"],[1297,96,1300,94],[1297,97,1300,95,"interpolationkey"],[1297,113,1300,111],[1297,114,1300,112],[1297,116,1300,114],[1298,8,1301,6,"optForCache"],[1298,19,1301,17],[1298,22,1301,20],[1299,10,1302,8],[1299,13,1302,11,"optForCache"],[1299,24,1302,22],[1300,10,1303,8],[1300,11,1303,9,"o"],[1300,12,1303,10],[1300,13,1303,11,"interpolationkey"],[1300,29,1303,27],[1300,32,1303,30,"undefined"],[1301,8,1304,6],[1301,9,1304,7],[1302,6,1305,4],[1303,6,1306,4],[1303,12,1306,10,"key"],[1303,15,1306,13],[1303,18,1306,16,"l"],[1303,19,1306,17],[1303,22,1306,20,"JSON"],[1303,26,1306,24],[1303,27,1306,25,"stringify"],[1303,36,1306,34],[1303,37,1306,35,"optForCache"],[1303,48,1306,46],[1303,49,1306,47],[1304,6,1307,4],[1304,10,1307,8,"frm"],[1304,13,1307,11],[1304,16,1307,14,"cache"],[1304,21,1307,19],[1304,22,1307,20,"key"],[1304,25,1307,23],[1304,26,1307,24],[1305,6,1308,4],[1305,10,1308,8],[1305,11,1308,9,"frm"],[1305,14,1308,12],[1305,16,1308,14],[1306,8,1309,6,"frm"],[1306,11,1309,9],[1306,14,1309,12,"fn"],[1306,16,1309,14],[1306,17,1309,15,"getCleanedCode"],[1306,31,1309,29],[1306,32,1309,30,"l"],[1306,33,1309,31],[1306,34,1309,32],[1306,36,1309,34,"o"],[1306,37,1309,35],[1306,38,1309,36],[1307,8,1310,6,"cache"],[1307,13,1310,11],[1307,14,1310,12,"key"],[1307,17,1310,15],[1307,18,1310,16],[1307,21,1310,19,"frm"],[1307,24,1310,22],[1308,6,1311,4],[1309,6,1312,4],[1309,13,1312,11,"frm"],[1309,16,1312,14],[1309,17,1312,15,"v"],[1309,18,1312,16],[1309,19,1312,17],[1310,4,1313,2],[1310,5,1313,3],[1311,2,1314,0],[1311,3,1314,1],[1312,2,1315,0],[1312,8,1315,6,"createNonCachedFormatter"],[1312,32,1315,30],[1312,35,1315,33,"fn"],[1312,37,1315,35],[1312,41,1315,39],[1312,42,1315,40,"v"],[1312,43,1315,41],[1312,45,1315,43,"l"],[1312,46,1315,44],[1312,48,1315,46,"o"],[1312,49,1315,47],[1312,54,1315,52,"fn"],[1312,56,1315,54],[1312,57,1315,55,"getCleanedCode"],[1312,71,1315,69],[1312,72,1315,70,"l"],[1312,73,1315,71],[1312,74,1315,72],[1312,76,1315,74,"o"],[1312,77,1315,75],[1312,78,1315,76],[1312,79,1315,77,"v"],[1312,80,1315,78],[1312,81,1315,79],[1313,2,1316,0],[1313,8,1316,6,"Formatter"],[1313,17,1316,15],[1313,18,1316,16],[1314,4,1317,2,"constructor"],[1314,15,1317,13,"constructor"],[1314,16,1317,14,"options"],[1314,23,1317,21],[1314,26,1317,24],[1314,27,1317,25],[1314,28,1317,26],[1314,30,1317,28],[1315,6,1318,4],[1315,10,1318,8],[1315,11,1318,9,"logger"],[1315,17,1318,15],[1315,20,1318,18,"baseLogger"],[1315,30,1318,28],[1315,31,1318,29,"create"],[1315,37,1318,35],[1315,38,1318,36],[1315,49,1318,47],[1315,50,1318,48],[1316,6,1319,4],[1316,10,1319,8],[1316,11,1319,9,"options"],[1316,18,1319,16],[1316,21,1319,19,"options"],[1316,28,1319,26],[1317,6,1320,4],[1317,10,1320,8],[1317,11,1320,9,"init"],[1317,15,1320,13],[1317,16,1320,14,"options"],[1317,23,1320,21],[1317,24,1320,22],[1318,4,1321,2],[1319,4,1322,2,"init"],[1319,8,1322,6,"init"],[1319,9,1322,7,"services"],[1319,17,1322,15],[1319,19,1322,17,"options"],[1319,26,1322,24],[1319,29,1322,27],[1320,6,1323,4,"interpolation"],[1320,19,1323,17],[1320,21,1323,19],[1320,22,1323,20],[1321,4,1324,2],[1321,5,1324,3],[1321,7,1324,5],[1322,6,1325,4],[1322,10,1325,8],[1322,11,1325,9,"formatSeparator"],[1322,26,1325,24],[1322,29,1325,27,"options"],[1322,36,1325,34],[1322,37,1325,35,"interpolation"],[1322,50,1325,48],[1322,51,1325,49,"formatSeparator"],[1322,66,1325,64],[1322,70,1325,68],[1322,73,1325,71],[1323,6,1326,4],[1323,12,1326,10,"cf"],[1323,14,1326,12],[1323,17,1326,15,"options"],[1323,24,1326,22],[1323,25,1326,23,"cacheInBuiltFormats"],[1323,44,1326,42],[1323,47,1326,45,"createCachedFormatter"],[1323,68,1326,66],[1323,71,1326,69,"createNonCachedFormatter"],[1323,95,1326,93],[1324,6,1327,4],[1324,10,1327,8],[1324,11,1327,9,"formats"],[1324,18,1327,16],[1324,21,1327,19],[1325,8,1328,6,"number"],[1325,14,1328,12],[1325,16,1328,14,"cf"],[1325,18,1328,16],[1325,19,1328,17],[1325,20,1328,18,"lng"],[1325,23,1328,21],[1325,25,1328,23,"opt"],[1325,28,1328,26],[1325,33,1328,31],[1326,10,1329,8],[1326,16,1329,14,"formatter"],[1326,25,1329,23],[1326,28,1329,26],[1326,32,1329,30,"Intl"],[1326,36,1329,34],[1326,37,1329,35,"NumberFormat"],[1326,49,1329,47],[1326,50,1329,48,"lng"],[1326,53,1329,51],[1326,55,1329,53],[1327,12,1330,10],[1327,15,1330,13,"opt"],[1328,10,1331,8],[1328,11,1331,9],[1328,12,1331,10],[1329,10,1332,8],[1329,17,1332,15,"val"],[1329,20,1332,18],[1329,24,1332,22,"formatter"],[1329,33,1332,31],[1329,34,1332,32,"format"],[1329,40,1332,38],[1329,41,1332,39,"val"],[1329,44,1332,42],[1329,45,1332,43],[1330,8,1333,6],[1330,9,1333,7],[1330,10,1333,8],[1331,8,1334,6,"currency"],[1331,16,1334,14],[1331,18,1334,16,"cf"],[1331,20,1334,18],[1331,21,1334,19],[1331,22,1334,20,"lng"],[1331,25,1334,23],[1331,27,1334,25,"opt"],[1331,30,1334,28],[1331,35,1334,33],[1332,10,1335,8],[1332,16,1335,14,"formatter"],[1332,25,1335,23],[1332,28,1335,26],[1332,32,1335,30,"Intl"],[1332,36,1335,34],[1332,37,1335,35,"NumberFormat"],[1332,49,1335,47],[1332,50,1335,48,"lng"],[1332,53,1335,51],[1332,55,1335,53],[1333,12,1336,10],[1333,15,1336,13,"opt"],[1333,18,1336,16],[1334,12,1337,10,"style"],[1334,17,1337,15],[1334,19,1337,17],[1335,10,1338,8],[1335,11,1338,9],[1335,12,1338,10],[1336,10,1339,8],[1336,17,1339,15,"val"],[1336,20,1339,18],[1336,24,1339,22,"formatter"],[1336,33,1339,31],[1336,34,1339,32,"format"],[1336,40,1339,38],[1336,41,1339,39,"val"],[1336,44,1339,42],[1336,45,1339,43],[1337,8,1340,6],[1337,9,1340,7],[1337,10,1340,8],[1338,8,1341,6,"datetime"],[1338,16,1341,14],[1338,18,1341,16,"cf"],[1338,20,1341,18],[1338,21,1341,19],[1338,22,1341,20,"lng"],[1338,25,1341,23],[1338,27,1341,25,"opt"],[1338,30,1341,28],[1338,35,1341,33],[1339,10,1342,8],[1339,16,1342,14,"formatter"],[1339,25,1342,23],[1339,28,1342,26],[1339,32,1342,30,"Intl"],[1339,36,1342,34],[1339,37,1342,35,"DateTimeFormat"],[1339,51,1342,49],[1339,52,1342,50,"lng"],[1339,55,1342,53],[1339,57,1342,55],[1340,12,1343,10],[1340,15,1343,13,"opt"],[1341,10,1344,8],[1341,11,1344,9],[1341,12,1344,10],[1342,10,1345,8],[1342,17,1345,15,"val"],[1342,20,1345,18],[1342,24,1345,22,"formatter"],[1342,33,1345,31],[1342,34,1345,32,"format"],[1342,40,1345,38],[1342,41,1345,39,"val"],[1342,44,1345,42],[1342,45,1345,43],[1343,8,1346,6],[1343,9,1346,7],[1343,10,1346,8],[1344,8,1347,6,"relativetime"],[1344,20,1347,18],[1344,22,1347,20,"cf"],[1344,24,1347,22],[1344,25,1347,23],[1344,26,1347,24,"lng"],[1344,29,1347,27],[1344,31,1347,29,"opt"],[1344,34,1347,32],[1344,39,1347,37],[1345,10,1348,8],[1345,16,1348,14,"formatter"],[1345,25,1348,23],[1345,28,1348,26],[1345,32,1348,30,"Intl"],[1345,36,1348,34],[1345,37,1348,35,"RelativeTimeFormat"],[1345,55,1348,53],[1345,56,1348,54,"lng"],[1345,59,1348,57],[1345,61,1348,59],[1346,12,1349,10],[1346,15,1349,13,"opt"],[1347,10,1350,8],[1347,11,1350,9],[1347,12,1350,10],[1348,10,1351,8],[1348,17,1351,15,"val"],[1348,20,1351,18],[1348,24,1351,22,"formatter"],[1348,33,1351,31],[1348,34,1351,32,"format"],[1348,40,1351,38],[1348,41,1351,39,"val"],[1348,44,1351,42],[1348,46,1351,44,"opt"],[1348,49,1351,47],[1348,50,1351,48,"range"],[1348,55,1351,53],[1348,59,1351,57],[1348,64,1351,62],[1348,65,1351,63],[1349,8,1352,6],[1349,9,1352,7],[1349,10,1352,8],[1350,8,1353,6,"list"],[1350,12,1353,10],[1350,14,1353,12,"cf"],[1350,16,1353,14],[1350,17,1353,15],[1350,18,1353,16,"lng"],[1350,21,1353,19],[1350,23,1353,21,"opt"],[1350,26,1353,24],[1350,31,1353,29],[1351,10,1354,8],[1351,16,1354,14,"formatter"],[1351,25,1354,23],[1351,28,1354,26],[1351,32,1354,30,"Intl"],[1351,36,1354,34],[1351,37,1354,35,"ListFormat"],[1351,47,1354,45],[1351,48,1354,46,"lng"],[1351,51,1354,49],[1351,53,1354,51],[1352,12,1355,10],[1352,15,1355,13,"opt"],[1353,10,1356,8],[1353,11,1356,9],[1353,12,1356,10],[1354,10,1357,8],[1354,17,1357,15,"val"],[1354,20,1357,18],[1354,24,1357,22,"formatter"],[1354,33,1357,31],[1354,34,1357,32,"format"],[1354,40,1357,38],[1354,41,1357,39,"val"],[1354,44,1357,42],[1354,45,1357,43],[1355,8,1358,6],[1355,9,1358,7],[1356,6,1359,4],[1356,7,1359,5],[1357,4,1360,2],[1358,4,1361,2,"add"],[1358,7,1361,5,"add"],[1358,8,1361,6,"name"],[1358,12,1361,10],[1358,14,1361,12,"fc"],[1358,16,1361,14],[1358,18,1361,16],[1359,6,1362,4],[1359,10,1362,8],[1359,11,1362,9,"formats"],[1359,18,1362,16],[1359,19,1362,17,"name"],[1359,23,1362,21],[1359,24,1362,22,"toLowerCase"],[1359,35,1362,33],[1359,36,1362,34],[1359,37,1362,35],[1359,38,1362,36,"trim"],[1359,42,1362,40],[1359,43,1362,41],[1359,44,1362,42],[1359,45,1362,43],[1359,48,1362,46,"fc"],[1359,50,1362,48],[1360,4,1363,2],[1361,4,1364,2,"addCached"],[1361,13,1364,11,"addCached"],[1361,14,1364,12,"name"],[1361,18,1364,16],[1361,20,1364,18,"fc"],[1361,22,1364,20],[1361,24,1364,22],[1362,6,1365,4],[1362,10,1365,8],[1362,11,1365,9,"formats"],[1362,18,1365,16],[1362,19,1365,17,"name"],[1362,23,1365,21],[1362,24,1365,22,"toLowerCase"],[1362,35,1365,33],[1362,36,1365,34],[1362,37,1365,35],[1362,38,1365,36,"trim"],[1362,42,1365,40],[1362,43,1365,41],[1362,44,1365,42],[1362,45,1365,43],[1362,48,1365,46,"createCachedFormatter"],[1362,69,1365,67],[1362,70,1365,68,"fc"],[1362,72,1365,70],[1362,73,1365,71],[1363,4,1366,2],[1364,4,1367,2,"format"],[1364,10,1367,8,"format"],[1364,11,1367,9,"value"],[1364,16,1367,14],[1364,18,1367,16,"format"],[1364,24,1367,22],[1364,26,1367,24,"lng"],[1364,29,1367,27],[1364,31,1367,29,"options"],[1364,38,1367,36],[1364,41,1367,39],[1364,42,1367,40],[1364,43,1367,41],[1364,45,1367,43],[1365,6,1368,4],[1365,12,1368,10,"formats"],[1365,19,1368,17],[1365,22,1368,20,"format"],[1365,28,1368,26],[1365,29,1368,27,"split"],[1365,34,1368,32],[1365,35,1368,33],[1365,39,1368,37],[1365,40,1368,38,"formatSeparator"],[1365,55,1368,53],[1365,56,1368,54],[1366,6,1369,4],[1366,10,1369,8,"formats"],[1366,17,1369,15],[1366,18,1369,16,"length"],[1366,24,1369,22],[1366,27,1369,25],[1366,28,1369,26],[1366,32,1369,30,"formats"],[1366,39,1369,37],[1366,40,1369,38],[1366,41,1369,39],[1366,42,1369,40],[1366,43,1369,41,"indexOf"],[1366,50,1369,48],[1366,51,1369,49],[1366,54,1369,52],[1366,55,1369,53],[1366,58,1369,56],[1366,59,1369,57],[1366,63,1369,61,"formats"],[1366,70,1369,68],[1366,71,1369,69],[1366,72,1369,70],[1366,73,1369,71],[1366,74,1369,72,"indexOf"],[1366,81,1369,79],[1366,82,1369,80],[1366,85,1369,83],[1366,86,1369,84],[1366,89,1369,87],[1366,90,1369,88],[1366,94,1369,92,"formats"],[1366,101,1369,99],[1366,102,1369,100,"find"],[1366,106,1369,104],[1366,107,1369,105,"f"],[1366,108,1369,106],[1366,112,1369,110,"f"],[1366,113,1369,111],[1366,114,1369,112,"indexOf"],[1366,121,1369,119],[1366,122,1369,120],[1366,125,1369,123],[1366,126,1369,124],[1366,129,1369,127],[1366,130,1369,128],[1366,131,1369,129],[1366,132,1369,130],[1366,134,1369,132],[1367,8,1370,6],[1367,14,1370,12,"lastIndex"],[1367,23,1370,21],[1367,26,1370,24,"formats"],[1367,33,1370,31],[1367,34,1370,32,"findIndex"],[1367,43,1370,41],[1367,44,1370,42,"f"],[1367,45,1370,43],[1367,49,1370,47,"f"],[1367,50,1370,48],[1367,51,1370,49,"indexOf"],[1367,58,1370,56],[1367,59,1370,57],[1367,62,1370,60],[1367,63,1370,61],[1367,66,1370,64],[1367,67,1370,65],[1367,68,1370,66],[1367,69,1370,67],[1368,8,1371,6,"formats"],[1368,15,1371,13],[1368,16,1371,14],[1368,17,1371,15],[1368,18,1371,16],[1368,21,1371,19],[1368,22,1371,20,"formats"],[1368,29,1371,27],[1368,30,1371,28],[1368,31,1371,29],[1368,32,1371,30],[1368,34,1371,32],[1368,37,1371,35,"formats"],[1368,44,1371,42],[1368,45,1371,43,"splice"],[1368,51,1371,49],[1368,52,1371,50],[1368,53,1371,51],[1368,55,1371,53,"lastIndex"],[1368,64,1371,62],[1368,65,1371,63],[1368,66,1371,64],[1368,67,1371,65,"join"],[1368,71,1371,69],[1368,72,1371,70],[1368,76,1371,74],[1368,77,1371,75,"formatSeparator"],[1368,92,1371,90],[1368,93,1371,91],[1369,6,1372,4],[1370,6,1373,4],[1370,12,1373,10,"result"],[1370,18,1373,16],[1370,21,1373,19,"formats"],[1370,28,1373,26],[1370,29,1373,27,"reduce"],[1370,35,1373,33],[1370,36,1373,34],[1370,37,1373,35,"mem"],[1370,40,1373,38],[1370,42,1373,40,"f"],[1370,43,1373,41],[1370,48,1373,46],[1371,8,1374,6],[1371,14,1374,12],[1372,10,1375,8,"formatName"],[1372,20,1375,18],[1373,10,1376,8,"formatOptions"],[1374,8,1377,6],[1374,9,1377,7],[1374,12,1377,10,"parseFormatStr"],[1374,26,1377,24],[1374,27,1377,25,"f"],[1374,28,1377,26],[1374,29,1377,27],[1375,8,1378,6],[1375,12,1378,10],[1375,16,1378,14],[1375,17,1378,15,"formats"],[1375,24,1378,22],[1375,25,1378,23,"formatName"],[1375,35,1378,33],[1375,36,1378,34],[1375,38,1378,36],[1376,10,1379,8],[1376,14,1379,12,"formatted"],[1376,23,1379,21],[1376,26,1379,24,"mem"],[1376,29,1379,27],[1377,10,1380,8],[1377,14,1380,12],[1378,12,1381,10],[1378,18,1381,16,"valOptions"],[1378,28,1381,26],[1378,31,1381,29,"options"],[1378,38,1381,36],[1378,40,1381,38,"formatParams"],[1378,52,1381,50],[1378,55,1381,53,"options"],[1378,62,1381,60],[1378,63,1381,61,"interpolationkey"],[1378,79,1381,77],[1378,80,1381,78],[1378,84,1381,82],[1378,85,1381,83],[1378,86,1381,84],[1379,12,1382,10],[1379,18,1382,16,"l"],[1379,19,1382,17],[1379,22,1382,20,"valOptions"],[1379,32,1382,30],[1379,33,1382,31,"locale"],[1379,39,1382,37],[1379,43,1382,41,"valOptions"],[1379,53,1382,51],[1379,54,1382,52,"lng"],[1379,57,1382,55],[1379,61,1382,59,"options"],[1379,68,1382,66],[1379,69,1382,67,"locale"],[1379,75,1382,73],[1379,79,1382,77,"options"],[1379,86,1382,84],[1379,87,1382,85,"lng"],[1379,90,1382,88],[1379,94,1382,92,"lng"],[1379,97,1382,95],[1380,12,1383,10,"formatted"],[1380,21,1383,19],[1380,24,1383,22],[1380,28,1383,26],[1380,29,1383,27,"formats"],[1380,36,1383,34],[1380,37,1383,35,"formatName"],[1380,47,1383,45],[1380,48,1383,46],[1380,49,1383,47,"mem"],[1380,52,1383,50],[1380,54,1383,52,"l"],[1380,55,1383,53],[1380,57,1383,55],[1381,14,1384,12],[1381,17,1384,15,"formatOptions"],[1381,30,1384,28],[1382,14,1385,12],[1382,17,1385,15,"options"],[1382,24,1385,22],[1383,14,1386,12],[1383,17,1386,15,"valOptions"],[1384,12,1387,10],[1384,13,1387,11],[1384,14,1387,12],[1385,10,1388,8],[1385,11,1388,9],[1385,12,1388,10],[1385,19,1388,17,"error"],[1385,24,1388,22],[1385,26,1388,24],[1386,12,1389,10],[1386,16,1389,14],[1386,17,1389,15,"logger"],[1386,23,1389,21],[1386,24,1389,22,"warn"],[1386,28,1389,26],[1386,29,1389,27,"error"],[1386,34,1389,32],[1386,35,1389,33],[1387,10,1390,8],[1388,10,1391,8],[1388,17,1391,15,"formatted"],[1388,26,1391,24],[1389,8,1392,6],[1389,9,1392,7],[1389,15,1392,13],[1390,10,1393,8],[1390,14,1393,12],[1390,15,1393,13,"logger"],[1390,21,1393,19],[1390,22,1393,20,"warn"],[1390,26,1393,24],[1390,27,1393,25],[1390,63,1393,61,"formatName"],[1390,73,1393,71],[1390,75,1393,73],[1390,76,1393,74],[1391,8,1394,6],[1392,8,1395,6],[1392,15,1395,13,"mem"],[1392,18,1395,16],[1393,6,1396,4],[1393,7,1396,5],[1393,9,1396,7,"value"],[1393,14,1396,12],[1393,15,1396,13],[1394,6,1397,4],[1394,13,1397,11,"result"],[1394,19,1397,17],[1395,4,1398,2],[1396,2,1399,0],[1397,2,1401,0],[1397,8,1401,6,"removePending"],[1397,21,1401,19],[1397,24,1401,22,"removePending"],[1397,25,1401,23,"q"],[1397,26,1401,24],[1397,28,1401,26,"name"],[1397,32,1401,30],[1397,37,1401,35],[1398,4,1402,2],[1398,8,1402,6,"q"],[1398,9,1402,7],[1398,10,1402,8,"pending"],[1398,17,1402,15],[1398,18,1402,16,"name"],[1398,22,1402,20],[1398,23,1402,21],[1398,28,1402,26,"undefined"],[1398,37,1402,35],[1398,39,1402,37],[1399,6,1403,4],[1399,13,1403,11,"q"],[1399,14,1403,12],[1399,15,1403,13,"pending"],[1399,22,1403,20],[1399,23,1403,21,"name"],[1399,27,1403,25],[1399,28,1403,26],[1400,6,1404,4,"q"],[1400,7,1404,5],[1400,8,1404,6,"pendingCount"],[1400,20,1404,18],[1400,22,1404,20],[1401,4,1405,2],[1402,2,1406,0],[1402,3,1406,1],[1403,2,1407,0],[1403,8,1407,6,"Connector"],[1403,17,1407,15],[1403,26,1407,24,"EventEmitter"],[1403,38,1407,36],[1403,39,1407,37],[1404,4,1408,2,"constructor"],[1404,15,1408,13,"constructor"],[1404,16,1408,14,"backend"],[1404,23,1408,21],[1404,25,1408,23,"store"],[1404,30,1408,28],[1404,32,1408,30,"services"],[1404,40,1408,38],[1404,42,1408,40,"options"],[1404,49,1408,47],[1404,52,1408,50],[1404,53,1408,51],[1404,54,1408,52],[1404,56,1408,54],[1405,6,1409,4],[1405,11,1409,9],[1405,12,1409,10],[1405,13,1409,11],[1406,6,1410,4],[1406,10,1410,8],[1406,11,1410,9,"backend"],[1406,18,1410,16],[1406,21,1410,19,"backend"],[1406,28,1410,26],[1407,6,1411,4],[1407,10,1411,8],[1407,11,1411,9,"store"],[1407,16,1411,14],[1407,19,1411,17,"store"],[1407,24,1411,22],[1408,6,1412,4],[1408,10,1412,8],[1408,11,1412,9,"services"],[1408,19,1412,17],[1408,22,1412,20,"services"],[1408,30,1412,28],[1409,6,1413,4],[1409,10,1413,8],[1409,11,1413,9,"languageUtils"],[1409,24,1413,22],[1409,27,1413,25,"services"],[1409,35,1413,33],[1409,36,1413,34,"languageUtils"],[1409,49,1413,47],[1410,6,1414,4],[1410,10,1414,8],[1410,11,1414,9,"options"],[1410,18,1414,16],[1410,21,1414,19,"options"],[1410,28,1414,26],[1411,6,1415,4],[1411,10,1415,8],[1411,11,1415,9,"logger"],[1411,17,1415,15],[1411,20,1415,18,"baseLogger"],[1411,30,1415,28],[1411,31,1415,29,"create"],[1411,37,1415,35],[1411,38,1415,36],[1411,56,1415,54],[1411,57,1415,55],[1412,6,1416,4],[1412,10,1416,8],[1412,11,1416,9,"waitingReads"],[1412,23,1416,21],[1412,26,1416,24],[1412,28,1416,26],[1413,6,1417,4],[1413,10,1417,8],[1413,11,1417,9,"maxParallelReads"],[1413,27,1417,25],[1413,30,1417,28,"options"],[1413,37,1417,35],[1413,38,1417,36,"maxParallelReads"],[1413,54,1417,52],[1413,58,1417,56],[1413,60,1417,58],[1414,6,1418,4],[1414,10,1418,8],[1414,11,1418,9,"readingCalls"],[1414,23,1418,21],[1414,26,1418,24],[1414,27,1418,25],[1415,6,1419,4],[1415,10,1419,8],[1415,11,1419,9,"maxRetries"],[1415,21,1419,19],[1415,24,1419,22,"options"],[1415,31,1419,29],[1415,32,1419,30,"maxRetries"],[1415,42,1419,40],[1415,46,1419,44],[1415,47,1419,45],[1415,50,1419,48,"options"],[1415,57,1419,55],[1415,58,1419,56,"maxRetries"],[1415,68,1419,66],[1415,71,1419,69],[1415,72,1419,70],[1416,6,1420,4],[1416,10,1420,8],[1416,11,1420,9,"retryTimeout"],[1416,23,1420,21],[1416,26,1420,24,"options"],[1416,33,1420,31],[1416,34,1420,32,"retryTimeout"],[1416,46,1420,44],[1416,50,1420,48],[1416,51,1420,49],[1416,54,1420,52,"options"],[1416,61,1420,59],[1416,62,1420,60,"retryTimeout"],[1416,74,1420,72],[1416,77,1420,75],[1416,80,1420,78],[1417,6,1421,4],[1417,10,1421,8],[1417,11,1421,9,"state"],[1417,16,1421,14],[1417,19,1421,17],[1417,20,1421,18],[1417,21,1421,19],[1418,6,1422,4],[1418,10,1422,8],[1418,11,1422,9,"queue"],[1418,16,1422,14],[1418,19,1422,17],[1418,21,1422,19],[1419,6,1423,4],[1419,10,1423,8],[1419,11,1423,9,"backend"],[1419,18,1423,16],[1419,20,1423,18,"init"],[1419,24,1423,22],[1419,27,1423,25,"services"],[1419,35,1423,33],[1419,37,1423,35,"options"],[1419,44,1423,42],[1419,45,1423,43,"backend"],[1419,52,1423,50],[1419,54,1423,52,"options"],[1419,61,1423,59],[1419,62,1423,60],[1420,4,1424,2],[1421,4,1425,2,"queueLoad"],[1421,13,1425,11,"queueLoad"],[1421,14,1425,12,"languages"],[1421,23,1425,21],[1421,25,1425,23,"namespaces"],[1421,35,1425,33],[1421,37,1425,35,"options"],[1421,44,1425,42],[1421,46,1425,44,"callback"],[1421,54,1425,52],[1421,56,1425,54],[1422,6,1426,4],[1422,12,1426,10,"toLoad"],[1422,18,1426,16],[1422,21,1426,19],[1422,22,1426,20],[1422,23,1426,21],[1423,6,1427,4],[1423,12,1427,10,"pending"],[1423,19,1427,17],[1423,22,1427,20],[1423,23,1427,21],[1423,24,1427,22],[1424,6,1428,4],[1424,12,1428,10,"toLoadLanguages"],[1424,27,1428,25],[1424,30,1428,28],[1424,31,1428,29],[1424,32,1428,30],[1425,6,1429,4],[1425,12,1429,10,"toLoadNamespaces"],[1425,28,1429,26],[1425,31,1429,29],[1425,32,1429,30],[1425,33,1429,31],[1426,6,1430,4,"languages"],[1426,15,1430,13],[1426,16,1430,14,"forEach"],[1426,23,1430,21],[1426,24,1430,22,"lng"],[1426,27,1430,25],[1426,31,1430,29],[1427,8,1431,6],[1427,12,1431,10,"hasAllNamespaces"],[1427,28,1431,26],[1427,31,1431,29],[1427,35,1431,33],[1428,8,1432,6,"namespaces"],[1428,18,1432,16],[1428,19,1432,17,"forEach"],[1428,26,1432,24],[1428,27,1432,25,"ns"],[1428,29,1432,27],[1428,33,1432,31],[1429,10,1433,8],[1429,16,1433,14,"name"],[1429,20,1433,18],[1429,23,1433,21],[1429,26,1433,24,"lng"],[1429,29,1433,27],[1429,33,1433,31,"ns"],[1429,35,1433,33],[1429,37,1433,35],[1430,10,1434,8],[1430,14,1434,12],[1430,15,1434,13,"options"],[1430,22,1434,20],[1430,23,1434,21,"reload"],[1430,29,1434,27],[1430,33,1434,31],[1430,37,1434,35],[1430,38,1434,36,"store"],[1430,43,1434,41],[1430,44,1434,42,"hasResourceBundle"],[1430,61,1434,59],[1430,62,1434,60,"lng"],[1430,65,1434,63],[1430,67,1434,65,"ns"],[1430,69,1434,67],[1430,70,1434,68],[1430,72,1434,70],[1431,12,1435,10],[1431,16,1435,14],[1431,17,1435,15,"state"],[1431,22,1435,20],[1431,23,1435,21,"name"],[1431,27,1435,25],[1431,28,1435,26],[1431,31,1435,29],[1431,32,1435,30],[1432,10,1436,8],[1432,11,1436,9],[1432,17,1436,15],[1432,21,1436,19],[1432,25,1436,23],[1432,26,1436,24,"state"],[1432,31,1436,29],[1432,32,1436,30,"name"],[1432,36,1436,34],[1432,37,1436,35],[1432,40,1436,38],[1432,41,1436,39],[1432,43,1436,41],[1432,44,1436,42],[1432,49,1436,48],[1432,53,1436,52],[1432,57,1436,56],[1432,58,1436,57,"state"],[1432,63,1436,62],[1432,64,1436,63,"name"],[1432,68,1436,67],[1432,69,1436,68],[1432,74,1436,73],[1432,75,1436,74],[1432,77,1436,76],[1433,12,1437,10],[1433,16,1437,14,"pending"],[1433,23,1437,21],[1433,24,1437,22,"name"],[1433,28,1437,26],[1433,29,1437,27],[1433,34,1437,32,"undefined"],[1433,43,1437,41],[1433,45,1437,43,"pending"],[1433,52,1437,50],[1433,53,1437,51,"name"],[1433,57,1437,55],[1433,58,1437,56],[1433,61,1437,59],[1433,65,1437,63],[1434,10,1438,8],[1434,11,1438,9],[1434,17,1438,15],[1435,12,1439,10],[1435,16,1439,14],[1435,17,1439,15,"state"],[1435,22,1439,20],[1435,23,1439,21,"name"],[1435,27,1439,25],[1435,28,1439,26],[1435,31,1439,29],[1435,32,1439,30],[1436,12,1440,10,"hasAllNamespaces"],[1436,28,1440,26],[1436,31,1440,29],[1436,36,1440,34],[1437,12,1441,10],[1437,16,1441,14,"pending"],[1437,23,1441,21],[1437,24,1441,22,"name"],[1437,28,1441,26],[1437,29,1441,27],[1437,34,1441,32,"undefined"],[1437,43,1441,41],[1437,45,1441,43,"pending"],[1437,52,1441,50],[1437,53,1441,51,"name"],[1437,57,1441,55],[1437,58,1441,56],[1437,61,1441,59],[1437,65,1441,63],[1438,12,1442,10],[1438,16,1442,14,"toLoad"],[1438,22,1442,20],[1438,23,1442,21,"name"],[1438,27,1442,25],[1438,28,1442,26],[1438,33,1442,31,"undefined"],[1438,42,1442,40],[1438,44,1442,42,"toLoad"],[1438,50,1442,48],[1438,51,1442,49,"name"],[1438,55,1442,53],[1438,56,1442,54],[1438,59,1442,57],[1438,63,1442,61],[1439,12,1443,10],[1439,16,1443,14,"toLoadNamespaces"],[1439,32,1443,30],[1439,33,1443,31,"ns"],[1439,35,1443,33],[1439,36,1443,34],[1439,41,1443,39,"undefined"],[1439,50,1443,48],[1439,52,1443,50,"toLoadNamespaces"],[1439,68,1443,66],[1439,69,1443,67,"ns"],[1439,71,1443,69],[1439,72,1443,70],[1439,75,1443,73],[1439,79,1443,77],[1440,10,1444,8],[1441,8,1445,6],[1441,9,1445,7],[1441,10,1445,8],[1442,8,1446,6],[1442,12,1446,10],[1442,13,1446,11,"hasAllNamespaces"],[1442,29,1446,27],[1442,31,1446,29,"toLoadLanguages"],[1442,46,1446,44],[1442,47,1446,45,"lng"],[1442,50,1446,48],[1442,51,1446,49],[1442,54,1446,52],[1442,58,1446,56],[1443,6,1447,4],[1443,7,1447,5],[1443,8,1447,6],[1444,6,1448,4],[1444,10,1448,8,"Object"],[1444,16,1448,14],[1444,17,1448,15,"keys"],[1444,21,1448,19],[1444,22,1448,20,"toLoad"],[1444,28,1448,26],[1444,29,1448,27],[1444,30,1448,28,"length"],[1444,36,1448,34],[1444,40,1448,38,"Object"],[1444,46,1448,44],[1444,47,1448,45,"keys"],[1444,51,1448,49],[1444,52,1448,50,"pending"],[1444,59,1448,57],[1444,60,1448,58],[1444,61,1448,59,"length"],[1444,67,1448,65],[1444,69,1448,67],[1445,8,1449,6],[1445,12,1449,10],[1445,13,1449,11,"queue"],[1445,18,1449,16],[1445,19,1449,17,"push"],[1445,23,1449,21],[1445,24,1449,22],[1446,10,1450,8,"pending"],[1446,17,1450,15],[1447,10,1451,8,"pendingCount"],[1447,22,1451,20],[1447,24,1451,22,"Object"],[1447,30,1451,28],[1447,31,1451,29,"keys"],[1447,35,1451,33],[1447,36,1451,34,"pending"],[1447,43,1451,41],[1447,44,1451,42],[1447,45,1451,43,"length"],[1447,51,1451,49],[1448,10,1452,8,"loaded"],[1448,16,1452,14],[1448,18,1452,16],[1448,19,1452,17],[1448,20,1452,18],[1449,10,1453,8,"errors"],[1449,16,1453,14],[1449,18,1453,16],[1449,20,1453,18],[1450,10,1454,8,"callback"],[1451,8,1455,6],[1451,9,1455,7],[1451,10,1455,8],[1452,6,1456,4],[1453,6,1457,4],[1453,13,1457,11],[1454,8,1458,6,"toLoad"],[1454,14,1458,12],[1454,16,1458,14,"Object"],[1454,22,1458,20],[1454,23,1458,21,"keys"],[1454,27,1458,25],[1454,28,1458,26,"toLoad"],[1454,34,1458,32],[1454,35,1458,33],[1455,8,1459,6,"pending"],[1455,15,1459,13],[1455,17,1459,15,"Object"],[1455,23,1459,21],[1455,24,1459,22,"keys"],[1455,28,1459,26],[1455,29,1459,27,"pending"],[1455,36,1459,34],[1455,37,1459,35],[1456,8,1460,6,"toLoadLanguages"],[1456,23,1460,21],[1456,25,1460,23,"Object"],[1456,31,1460,29],[1456,32,1460,30,"keys"],[1456,36,1460,34],[1456,37,1460,35,"toLoadLanguages"],[1456,52,1460,50],[1456,53,1460,51],[1457,8,1461,6,"toLoadNamespaces"],[1457,24,1461,22],[1457,26,1461,24,"Object"],[1457,32,1461,30],[1457,33,1461,31,"keys"],[1457,37,1461,35],[1457,38,1461,36,"toLoadNamespaces"],[1457,54,1461,52],[1458,6,1462,4],[1458,7,1462,5],[1459,4,1463,2],[1460,4,1464,2,"loaded"],[1460,10,1464,8,"loaded"],[1460,11,1464,9,"name"],[1460,15,1464,13],[1460,17,1464,15,"err"],[1460,20,1464,18],[1460,22,1464,20,"data"],[1460,26,1464,24],[1460,28,1464,26],[1461,6,1465,4],[1461,12,1465,10,"s"],[1461,13,1465,11],[1461,16,1465,14,"name"],[1461,20,1465,18],[1461,21,1465,19,"split"],[1461,26,1465,24],[1461,27,1465,25],[1461,30,1465,28],[1461,31,1465,29],[1462,6,1466,4],[1462,12,1466,10,"lng"],[1462,15,1466,13],[1462,18,1466,16,"s"],[1462,19,1466,17],[1462,20,1466,18],[1462,21,1466,19],[1462,22,1466,20],[1463,6,1467,4],[1463,12,1467,10,"ns"],[1463,14,1467,12],[1463,17,1467,15,"s"],[1463,18,1467,16],[1463,19,1467,17],[1463,20,1467,18],[1463,21,1467,19],[1464,6,1468,4],[1464,10,1468,8,"err"],[1464,13,1468,11],[1464,15,1468,13],[1464,19,1468,17],[1464,20,1468,18,"emit"],[1464,24,1468,22],[1464,25,1468,23],[1464,40,1468,38],[1464,42,1468,40,"lng"],[1464,45,1468,43],[1464,47,1468,45,"ns"],[1464,49,1468,47],[1464,51,1468,49,"err"],[1464,54,1468,52],[1464,55,1468,53],[1465,6,1469,4],[1465,10,1469,8],[1465,11,1469,9,"err"],[1465,14,1469,12],[1465,18,1469,16,"data"],[1465,22,1469,20],[1465,24,1469,22],[1466,8,1470,6],[1466,12,1470,10],[1466,13,1470,11,"store"],[1466,18,1470,16],[1466,19,1470,17,"addResourceBundle"],[1466,36,1470,34],[1466,37,1470,35,"lng"],[1466,40,1470,38],[1466,42,1470,40,"ns"],[1466,44,1470,42],[1466,46,1470,44,"data"],[1466,50,1470,48],[1466,52,1470,50,"undefined"],[1466,61,1470,59],[1466,63,1470,61,"undefined"],[1466,72,1470,70],[1466,74,1470,72],[1467,10,1471,8,"skipCopy"],[1467,18,1471,16],[1467,20,1471,18],[1468,8,1472,6],[1468,9,1472,7],[1468,10,1472,8],[1469,6,1473,4],[1470,6,1474,4],[1470,10,1474,8],[1470,11,1474,9,"state"],[1470,16,1474,14],[1470,17,1474,15,"name"],[1470,21,1474,19],[1470,22,1474,20],[1470,25,1474,23,"err"],[1470,28,1474,26],[1470,31,1474,29],[1470,32,1474,30],[1470,33,1474,31],[1470,36,1474,34],[1470,37,1474,35],[1471,6,1475,4],[1471,10,1475,8,"err"],[1471,13,1475,11],[1471,17,1475,15,"data"],[1471,21,1475,19],[1471,23,1475,21],[1471,27,1475,25],[1471,28,1475,26,"state"],[1471,33,1475,31],[1471,34,1475,32,"name"],[1471,38,1475,36],[1471,39,1475,37],[1471,42,1475,40],[1471,43,1475,41],[1472,6,1476,4],[1472,12,1476,10,"loaded"],[1472,18,1476,16],[1472,21,1476,19],[1472,22,1476,20],[1472,23,1476,21],[1473,6,1477,4],[1473,10,1477,8],[1473,11,1477,9,"queue"],[1473,16,1477,14],[1473,17,1477,15,"forEach"],[1473,24,1477,22],[1473,25,1477,23,"q"],[1473,26,1477,24],[1473,30,1477,28],[1474,8,1478,6,"pushPath"],[1474,16,1478,14],[1474,17,1478,15,"q"],[1474,18,1478,16],[1474,19,1478,17,"loaded"],[1474,25,1478,23],[1474,27,1478,25],[1474,28,1478,26,"lng"],[1474,31,1478,29],[1474,32,1478,30],[1474,34,1478,32,"ns"],[1474,36,1478,34],[1474,37,1478,35],[1475,8,1479,6,"removePending"],[1475,21,1479,19],[1475,22,1479,20,"q"],[1475,23,1479,21],[1475,25,1479,23,"name"],[1475,29,1479,27],[1475,30,1479,28],[1476,8,1480,6],[1476,12,1480,10,"err"],[1476,15,1480,13],[1476,17,1480,15,"q"],[1476,18,1480,16],[1476,19,1480,17,"errors"],[1476,25,1480,23],[1476,26,1480,24,"push"],[1476,30,1480,28],[1476,31,1480,29,"err"],[1476,34,1480,32],[1476,35,1480,33],[1477,8,1481,6],[1477,12,1481,10,"q"],[1477,13,1481,11],[1477,14,1481,12,"pendingCount"],[1477,26,1481,24],[1477,31,1481,29],[1477,32,1481,30],[1477,36,1481,34],[1477,37,1481,35,"q"],[1477,38,1481,36],[1477,39,1481,37,"done"],[1477,43,1481,41],[1477,45,1481,43],[1478,10,1482,8,"Object"],[1478,16,1482,14],[1478,17,1482,15,"keys"],[1478,21,1482,19],[1478,22,1482,20,"q"],[1478,23,1482,21],[1478,24,1482,22,"loaded"],[1478,30,1482,28],[1478,31,1482,29],[1478,32,1482,30,"forEach"],[1478,39,1482,37],[1478,40,1482,38,"l"],[1478,41,1482,39],[1478,45,1482,43],[1479,12,1483,10],[1479,16,1483,14],[1479,17,1483,15,"loaded"],[1479,23,1483,21],[1479,24,1483,22,"l"],[1479,25,1483,23],[1479,26,1483,24],[1479,28,1483,26,"loaded"],[1479,34,1483,32],[1479,35,1483,33,"l"],[1479,36,1483,34],[1479,37,1483,35],[1479,40,1483,38],[1479,41,1483,39],[1479,42,1483,40],[1480,12,1484,10],[1480,18,1484,16,"loadedKeys"],[1480,28,1484,26],[1480,31,1484,29,"q"],[1480,32,1484,30],[1480,33,1484,31,"loaded"],[1480,39,1484,37],[1480,40,1484,38,"l"],[1480,41,1484,39],[1480,42,1484,40],[1481,12,1485,10],[1481,16,1485,14,"loadedKeys"],[1481,26,1485,24],[1481,27,1485,25,"length"],[1481,33,1485,31],[1481,35,1485,33],[1482,14,1486,12,"loadedKeys"],[1482,24,1486,22],[1482,25,1486,23,"forEach"],[1482,32,1486,30],[1482,33,1486,31,"n"],[1482,34,1486,32],[1482,38,1486,36],[1483,16,1487,14],[1483,20,1487,18,"loaded"],[1483,26,1487,24],[1483,27,1487,25,"l"],[1483,28,1487,26],[1483,29,1487,27],[1483,30,1487,28,"n"],[1483,31,1487,29],[1483,32,1487,30],[1483,37,1487,35,"undefined"],[1483,46,1487,44],[1483,48,1487,46,"loaded"],[1483,54,1487,52],[1483,55,1487,53,"l"],[1483,56,1487,54],[1483,57,1487,55],[1483,58,1487,56,"n"],[1483,59,1487,57],[1483,60,1487,58],[1483,63,1487,61],[1483,67,1487,65],[1484,14,1488,12],[1484,15,1488,13],[1484,16,1488,14],[1485,12,1489,10],[1486,10,1490,8],[1486,11,1490,9],[1486,12,1490,10],[1487,10,1491,8,"q"],[1487,11,1491,9],[1487,12,1491,10,"done"],[1487,16,1491,14],[1487,19,1491,17],[1487,23,1491,21],[1488,10,1492,8],[1488,14,1492,12,"q"],[1488,15,1492,13],[1488,16,1492,14,"errors"],[1488,22,1492,20],[1488,23,1492,21,"length"],[1488,29,1492,27],[1488,31,1492,29],[1489,12,1493,10,"q"],[1489,13,1493,11],[1489,14,1493,12,"callback"],[1489,22,1493,20],[1489,23,1493,21,"q"],[1489,24,1493,22],[1489,25,1493,23,"errors"],[1489,31,1493,29],[1489,32,1493,30],[1490,10,1494,8],[1490,11,1494,9],[1490,17,1494,15],[1491,12,1495,10,"q"],[1491,13,1495,11],[1491,14,1495,12,"callback"],[1491,22,1495,20],[1491,23,1495,21],[1491,24,1495,22],[1492,10,1496,8],[1493,8,1497,6],[1494,6,1498,4],[1494,7,1498,5],[1494,8,1498,6],[1495,6,1499,4],[1495,10,1499,8],[1495,11,1499,9,"emit"],[1495,15,1499,13],[1495,16,1499,14],[1495,24,1499,22],[1495,26,1499,24,"loaded"],[1495,32,1499,30],[1495,33,1499,31],[1496,6,1500,4],[1496,10,1500,8],[1496,11,1500,9,"queue"],[1496,16,1500,14],[1496,19,1500,17],[1496,23,1500,21],[1496,24,1500,22,"queue"],[1496,29,1500,27],[1496,30,1500,28,"filter"],[1496,36,1500,34],[1496,37,1500,35,"q"],[1496,38,1500,36],[1496,42,1500,40],[1496,43,1500,41,"q"],[1496,44,1500,42],[1496,45,1500,43,"done"],[1496,49,1500,47],[1496,50,1500,48],[1497,4,1501,2],[1498,4,1502,2,"read"],[1498,8,1502,6,"read"],[1498,9,1502,7,"lng"],[1498,12,1502,10],[1498,14,1502,12,"ns"],[1498,16,1502,14],[1498,18,1502,16,"fcName"],[1498,24,1502,22],[1498,26,1502,24,"tried"],[1498,31,1502,29],[1498,34,1502,32],[1498,35,1502,33],[1498,37,1502,35,"wait"],[1498,41,1502,39],[1498,44,1502,42],[1498,48,1502,46],[1498,49,1502,47,"retryTimeout"],[1498,61,1502,59],[1498,63,1502,61,"callback"],[1498,71,1502,69],[1498,73,1502,71],[1499,6,1503,4],[1499,10,1503,8],[1499,11,1503,9,"lng"],[1499,14,1503,12],[1499,15,1503,13,"length"],[1499,21,1503,19],[1499,23,1503,21],[1499,30,1503,28,"callback"],[1499,38,1503,36],[1499,39,1503,37],[1499,43,1503,41],[1499,45,1503,43],[1499,46,1503,44],[1499,47,1503,45],[1499,48,1503,46],[1500,6,1504,4],[1500,10,1504,8],[1500,14,1504,12],[1500,15,1504,13,"readingCalls"],[1500,27,1504,25],[1500,31,1504,29],[1500,35,1504,33],[1500,36,1504,34,"maxParallelReads"],[1500,52,1504,50],[1500,54,1504,52],[1501,8,1505,6],[1501,12,1505,10],[1501,13,1505,11,"waitingReads"],[1501,25,1505,23],[1501,26,1505,24,"push"],[1501,30,1505,28],[1501,31,1505,29],[1502,10,1506,8,"lng"],[1502,13,1506,11],[1503,10,1507,8,"ns"],[1503,12,1507,10],[1504,10,1508,8,"fcName"],[1504,16,1508,14],[1505,10,1509,8,"tried"],[1505,15,1509,13],[1506,10,1510,8,"wait"],[1506,14,1510,12],[1507,10,1511,8,"callback"],[1508,8,1512,6],[1508,9,1512,7],[1508,10,1512,8],[1509,8,1513,6],[1510,6,1514,4],[1511,6,1515,4],[1511,10,1515,8],[1511,11,1515,9,"readingCalls"],[1511,23,1515,21],[1511,25,1515,23],[1512,6,1516,4],[1512,12,1516,10,"resolver"],[1512,20,1516,18],[1512,23,1516,21,"resolver"],[1512,24,1516,22,"err"],[1512,27,1516,25],[1512,29,1516,27,"data"],[1512,33,1516,31],[1512,38,1516,36],[1513,8,1517,6],[1513,12,1517,10],[1513,13,1517,11,"readingCalls"],[1513,25,1517,23],[1513,27,1517,25],[1514,8,1518,6],[1514,12,1518,10],[1514,16,1518,14],[1514,17,1518,15,"waitingReads"],[1514,29,1518,27],[1514,30,1518,28,"length"],[1514,36,1518,34],[1514,39,1518,37],[1514,40,1518,38],[1514,42,1518,40],[1515,10,1519,8],[1515,16,1519,14,"next"],[1515,20,1519,18],[1515,23,1519,21],[1515,27,1519,25],[1515,28,1519,26,"waitingReads"],[1515,40,1519,38],[1515,41,1519,39,"shift"],[1515,46,1519,44],[1515,47,1519,45],[1515,48,1519,46],[1516,10,1520,8],[1516,14,1520,12],[1516,15,1520,13,"read"],[1516,19,1520,17],[1516,20,1520,18,"next"],[1516,24,1520,22],[1516,25,1520,23,"lng"],[1516,28,1520,26],[1516,30,1520,28,"next"],[1516,34,1520,32],[1516,35,1520,33,"ns"],[1516,37,1520,35],[1516,39,1520,37,"next"],[1516,43,1520,41],[1516,44,1520,42,"fcName"],[1516,50,1520,48],[1516,52,1520,50,"next"],[1516,56,1520,54],[1516,57,1520,55,"tried"],[1516,62,1520,60],[1516,64,1520,62,"next"],[1516,68,1520,66],[1516,69,1520,67,"wait"],[1516,73,1520,71],[1516,75,1520,73,"next"],[1516,79,1520,77],[1516,80,1520,78,"callback"],[1516,88,1520,86],[1516,89,1520,87],[1517,8,1521,6],[1518,8,1522,6],[1518,12,1522,10,"err"],[1518,15,1522,13],[1518,19,1522,17,"data"],[1518,23,1522,21],[1518,27,1522,25,"tried"],[1518,32,1522,30],[1518,35,1522,33],[1518,39,1522,37],[1518,40,1522,38,"maxRetries"],[1518,50,1522,48],[1518,52,1522,50],[1519,10,1523,8,"setTimeout"],[1519,20,1523,18],[1519,21,1523,19],[1519,27,1523,25],[1520,12,1524,10],[1520,16,1524,14],[1520,17,1524,15,"read"],[1520,21,1524,19],[1520,22,1524,20,"call"],[1520,26,1524,24],[1520,27,1524,25],[1520,31,1524,29],[1520,33,1524,31,"lng"],[1520,36,1524,34],[1520,38,1524,36,"ns"],[1520,40,1524,38],[1520,42,1524,40,"fcName"],[1520,48,1524,46],[1520,50,1524,48,"tried"],[1520,55,1524,53],[1520,58,1524,56],[1520,59,1524,57],[1520,61,1524,59,"wait"],[1520,65,1524,63],[1520,68,1524,66],[1520,69,1524,67],[1520,71,1524,69,"callback"],[1520,79,1524,77],[1520,80,1524,78],[1521,10,1525,8],[1521,11,1525,9],[1521,13,1525,11,"wait"],[1521,17,1525,15],[1521,18,1525,16],[1522,10,1526,8],[1523,8,1527,6],[1524,8,1528,6,"callback"],[1524,16,1528,14],[1524,17,1528,15,"err"],[1524,20,1528,18],[1524,22,1528,20,"data"],[1524,26,1528,24],[1524,27,1528,25],[1525,6,1529,4],[1525,7,1529,5],[1526,6,1530,4],[1526,12,1530,10,"fc"],[1526,14,1530,12],[1526,17,1530,15],[1526,21,1530,19],[1526,22,1530,20,"backend"],[1526,29,1530,27],[1526,30,1530,28,"fcName"],[1526,36,1530,34],[1526,37,1530,35],[1526,38,1530,36,"bind"],[1526,42,1530,40],[1526,43,1530,41],[1526,47,1530,45],[1526,48,1530,46,"backend"],[1526,55,1530,53],[1526,56,1530,54],[1527,6,1531,4],[1527,10,1531,8,"fc"],[1527,12,1531,10],[1527,13,1531,11,"length"],[1527,19,1531,17],[1527,24,1531,22],[1527,25,1531,23],[1527,27,1531,25],[1528,8,1532,6],[1528,12,1532,10],[1529,10,1533,8],[1529,16,1533,14,"r"],[1529,17,1533,15],[1529,20,1533,18,"fc"],[1529,22,1533,20],[1529,23,1533,21,"lng"],[1529,26,1533,24],[1529,28,1533,26,"ns"],[1529,30,1533,28],[1529,31,1533,29],[1530,10,1534,8],[1530,14,1534,12,"r"],[1530,15,1534,13],[1530,19,1534,17],[1530,26,1534,24,"r"],[1530,27,1534,25],[1530,28,1534,26,"then"],[1530,32,1534,30],[1530,37,1534,35],[1530,47,1534,45],[1530,49,1534,47],[1531,12,1535,10,"r"],[1531,13,1535,11],[1531,14,1535,12,"then"],[1531,18,1535,16],[1531,19,1535,17,"data"],[1531,23,1535,21],[1531,27,1535,25,"resolver"],[1531,35,1535,33],[1531,36,1535,34],[1531,40,1535,38],[1531,42,1535,40,"data"],[1531,46,1535,44],[1531,47,1535,45],[1531,48,1535,46],[1531,49,1535,47,"catch"],[1531,54,1535,52],[1531,55,1535,53,"resolver"],[1531,63,1535,61],[1531,64,1535,62],[1532,10,1536,8],[1532,11,1536,9],[1532,17,1536,15],[1533,12,1537,10,"resolver"],[1533,20,1537,18],[1533,21,1537,19],[1533,25,1537,23],[1533,27,1537,25,"r"],[1533,28,1537,26],[1533,29,1537,27],[1534,10,1538,8],[1535,8,1539,6],[1535,9,1539,7],[1535,10,1539,8],[1535,17,1539,15,"err"],[1535,20,1539,18],[1535,22,1539,20],[1536,10,1540,8,"resolver"],[1536,18,1540,16],[1536,19,1540,17,"err"],[1536,22,1540,20],[1536,23,1540,21],[1537,8,1541,6],[1538,8,1542,6],[1539,6,1543,4],[1540,6,1544,4],[1540,13,1544,11,"fc"],[1540,15,1544,13],[1540,16,1544,14,"lng"],[1540,19,1544,17],[1540,21,1544,19,"ns"],[1540,23,1544,21],[1540,25,1544,23,"resolver"],[1540,33,1544,31],[1540,34,1544,32],[1541,4,1545,2],[1542,4,1546,2,"prepareLoading"],[1542,18,1546,16,"prepareLoading"],[1542,19,1546,17,"languages"],[1542,28,1546,26],[1542,30,1546,28,"namespaces"],[1542,40,1546,38],[1542,42,1546,40,"options"],[1542,49,1546,47],[1542,52,1546,50],[1542,53,1546,51],[1542,54,1546,52],[1542,56,1546,54,"callback"],[1542,64,1546,62],[1542,66,1546,64],[1543,6,1547,4],[1543,10,1547,8],[1543,11,1547,9],[1543,15,1547,13],[1543,16,1547,14,"backend"],[1543,23,1547,21],[1543,25,1547,23],[1544,8,1548,6],[1544,12,1548,10],[1544,13,1548,11,"logger"],[1544,19,1548,17],[1544,20,1548,18,"warn"],[1544,24,1548,22],[1544,25,1548,23],[1544,89,1548,87],[1544,90,1548,88],[1545,8,1549,6],[1545,15,1549,13,"callback"],[1545,23,1549,21],[1545,27,1549,25,"callback"],[1545,35,1549,33],[1545,36,1549,34],[1545,37,1549,35],[1546,6,1550,4],[1547,6,1551,4],[1547,10,1551,8,"isString"],[1547,18,1551,16],[1547,19,1551,17,"languages"],[1547,28,1551,26],[1547,29,1551,27],[1547,31,1551,29,"languages"],[1547,40,1551,38],[1547,43,1551,41],[1547,47,1551,45],[1547,48,1551,46,"languageUtils"],[1547,61,1551,59],[1547,62,1551,60,"toResolveHierarchy"],[1547,80,1551,78],[1547,81,1551,79,"languages"],[1547,90,1551,88],[1547,91,1551,89],[1548,6,1552,4],[1548,10,1552,8,"isString"],[1548,18,1552,16],[1548,19,1552,17,"namespaces"],[1548,29,1552,27],[1548,30,1552,28],[1548,32,1552,30,"namespaces"],[1548,42,1552,40],[1548,45,1552,43],[1548,46,1552,44,"namespaces"],[1548,56,1552,54],[1548,57,1552,55],[1549,6,1553,4],[1549,12,1553,10,"toLoad"],[1549,18,1553,16],[1549,21,1553,19],[1549,25,1553,23],[1549,26,1553,24,"queueLoad"],[1549,35,1553,33],[1549,36,1553,34,"languages"],[1549,45,1553,43],[1549,47,1553,45,"namespaces"],[1549,57,1553,55],[1549,59,1553,57,"options"],[1549,66,1553,64],[1549,68,1553,66,"callback"],[1549,76,1553,74],[1549,77,1553,75],[1550,6,1554,4],[1550,10,1554,8],[1550,11,1554,9,"toLoad"],[1550,17,1554,15],[1550,18,1554,16,"toLoad"],[1550,24,1554,22],[1550,25,1554,23,"length"],[1550,31,1554,29],[1550,33,1554,31],[1551,8,1555,6],[1551,12,1555,10],[1551,13,1555,11,"toLoad"],[1551,19,1555,17],[1551,20,1555,18,"pending"],[1551,27,1555,25],[1551,28,1555,26,"length"],[1551,34,1555,32],[1551,36,1555,34,"callback"],[1551,44,1555,42],[1551,45,1555,43],[1551,46,1555,44],[1552,8,1556,6],[1552,15,1556,13],[1552,19,1556,17],[1553,6,1557,4],[1554,6,1558,4,"toLoad"],[1554,12,1558,10],[1554,13,1558,11,"toLoad"],[1554,19,1558,17],[1554,20,1558,18,"forEach"],[1554,27,1558,25],[1554,28,1558,26,"name"],[1554,32,1558,30],[1554,36,1558,34],[1555,8,1559,6],[1555,12,1559,10],[1555,13,1559,11,"loadOne"],[1555,20,1559,18],[1555,21,1559,19,"name"],[1555,25,1559,23],[1555,26,1559,24],[1556,6,1560,4],[1556,7,1560,5],[1556,8,1560,6],[1557,4,1561,2],[1558,4,1562,2,"load"],[1558,8,1562,6,"load"],[1558,9,1562,7,"languages"],[1558,18,1562,16],[1558,20,1562,18,"namespaces"],[1558,30,1562,28],[1558,32,1562,30,"callback"],[1558,40,1562,38],[1558,42,1562,40],[1559,6,1563,4],[1559,10,1563,8],[1559,11,1563,9,"prepareLoading"],[1559,25,1563,23],[1559,26,1563,24,"languages"],[1559,35,1563,33],[1559,37,1563,35,"namespaces"],[1559,47,1563,45],[1559,49,1563,47],[1559,50,1563,48],[1559,51,1563,49],[1559,53,1563,51,"callback"],[1559,61,1563,59],[1559,62,1563,60],[1560,4,1564,2],[1561,4,1565,2,"reload"],[1561,10,1565,8,"reload"],[1561,11,1565,9,"languages"],[1561,20,1565,18],[1561,22,1565,20,"namespaces"],[1561,32,1565,30],[1561,34,1565,32,"callback"],[1561,42,1565,40],[1561,44,1565,42],[1562,6,1566,4],[1562,10,1566,8],[1562,11,1566,9,"prepareLoading"],[1562,25,1566,23],[1562,26,1566,24,"languages"],[1562,35,1566,33],[1562,37,1566,35,"namespaces"],[1562,47,1566,45],[1562,49,1566,47],[1563,8,1567,6,"reload"],[1563,14,1567,12],[1563,16,1567,14],[1564,6,1568,4],[1564,7,1568,5],[1564,9,1568,7,"callback"],[1564,17,1568,15],[1564,18,1568,16],[1565,4,1569,2],[1566,4,1570,2,"loadOne"],[1566,11,1570,9,"loadOne"],[1566,12,1570,10,"name"],[1566,16,1570,14],[1566,18,1570,16,"prefix"],[1566,24,1570,22],[1566,27,1570,25],[1566,29,1570,27],[1566,31,1570,29],[1567,6,1571,4],[1567,12,1571,10,"s"],[1567,13,1571,11],[1567,16,1571,14,"name"],[1567,20,1571,18],[1567,21,1571,19,"split"],[1567,26,1571,24],[1567,27,1571,25],[1567,30,1571,28],[1567,31,1571,29],[1568,6,1572,4],[1568,12,1572,10,"lng"],[1568,15,1572,13],[1568,18,1572,16,"s"],[1568,19,1572,17],[1568,20,1572,18],[1568,21,1572,19],[1568,22,1572,20],[1569,6,1573,4],[1569,12,1573,10,"ns"],[1569,14,1573,12],[1569,17,1573,15,"s"],[1569,18,1573,16],[1569,19,1573,17],[1569,20,1573,18],[1569,21,1573,19],[1570,6,1574,4],[1570,10,1574,8],[1570,11,1574,9,"read"],[1570,15,1574,13],[1570,16,1574,14,"lng"],[1570,19,1574,17],[1570,21,1574,19,"ns"],[1570,23,1574,21],[1570,25,1574,23],[1570,31,1574,29],[1570,33,1574,31,"undefined"],[1570,42,1574,40],[1570,44,1574,42,"undefined"],[1570,53,1574,51],[1570,55,1574,53],[1570,56,1574,54,"err"],[1570,59,1574,57],[1570,61,1574,59,"data"],[1570,65,1574,63],[1570,70,1574,68],[1571,8,1575,6],[1571,12,1575,10,"err"],[1571,15,1575,13],[1571,17,1575,15],[1571,21,1575,19],[1571,22,1575,20,"logger"],[1571,28,1575,26],[1571,29,1575,27,"warn"],[1571,33,1575,31],[1571,34,1575,32],[1571,37,1575,35,"prefix"],[1571,43,1575,41],[1571,64,1575,62,"ns"],[1571,66,1575,64],[1571,83,1575,81,"lng"],[1571,86,1575,84],[1571,95,1575,93],[1571,97,1575,95,"err"],[1571,100,1575,98],[1571,101,1575,99],[1572,8,1576,6],[1572,12,1576,10],[1572,13,1576,11,"err"],[1572,16,1576,14],[1572,20,1576,18,"data"],[1572,24,1576,22],[1572,26,1576,24],[1572,30,1576,28],[1572,31,1576,29,"logger"],[1572,37,1576,35],[1572,38,1576,36,"log"],[1572,41,1576,39],[1572,42,1576,40],[1572,45,1576,43,"prefix"],[1572,51,1576,49],[1572,71,1576,69,"ns"],[1572,73,1576,71],[1572,90,1576,88,"lng"],[1572,93,1576,91],[1572,95,1576,93],[1572,97,1576,95,"data"],[1572,101,1576,99],[1572,102,1576,100],[1573,8,1577,6],[1573,12,1577,10],[1573,13,1577,11,"loaded"],[1573,19,1577,17],[1573,20,1577,18,"name"],[1573,24,1577,22],[1573,26,1577,24,"err"],[1573,29,1577,27],[1573,31,1577,29,"data"],[1573,35,1577,33],[1573,36,1577,34],[1574,6,1578,4],[1574,7,1578,5],[1574,8,1578,6],[1575,4,1579,2],[1576,4,1580,2,"saveMissing"],[1576,15,1580,13,"saveMissing"],[1576,16,1580,14,"languages"],[1576,25,1580,23],[1576,27,1580,25,"namespace"],[1576,36,1580,34],[1576,38,1580,36,"key"],[1576,41,1580,39],[1576,43,1580,41,"fallbackValue"],[1576,56,1580,54],[1576,58,1580,56,"isUpdate"],[1576,66,1580,64],[1576,68,1580,66,"options"],[1576,75,1580,73],[1576,78,1580,76],[1576,79,1580,77],[1576,80,1580,78],[1576,82,1580,80,"clb"],[1576,85,1580,83],[1576,88,1580,86,"clb"],[1576,89,1580,86],[1576,94,1580,92],[1576,95,1580,93],[1576,96,1580,94],[1576,98,1580,96],[1577,6,1581,4],[1577,10,1581,8],[1577,14,1581,12],[1577,15,1581,13,"services"],[1577,23,1581,21],[1577,25,1581,23,"utils"],[1577,30,1581,28],[1577,32,1581,30,"hasLoadedNamespace"],[1577,50,1581,48],[1577,54,1581,52],[1577,55,1581,53],[1577,59,1581,57],[1577,60,1581,58,"services"],[1577,68,1581,66],[1577,70,1581,68,"utils"],[1577,75,1581,73],[1577,77,1581,75,"hasLoadedNamespace"],[1577,95,1581,93],[1577,96,1581,94,"namespace"],[1577,105,1581,103],[1577,106,1581,104],[1577,108,1581,106],[1578,8,1582,6],[1578,12,1582,10],[1578,13,1582,11,"logger"],[1578,19,1582,17],[1578,20,1582,18,"warn"],[1578,24,1582,22],[1578,25,1582,23],[1578,46,1582,44,"key"],[1578,49,1582,47],[1578,72,1582,70,"namespace"],[1578,81,1582,79],[1578,103,1582,101],[1578,105,1582,103],[1578,323,1582,321],[1578,324,1582,322],[1579,8,1583,6],[1580,6,1584,4],[1581,6,1585,4],[1581,10,1585,8,"key"],[1581,13,1585,11],[1581,18,1585,16,"undefined"],[1581,27,1585,25],[1581,31,1585,29,"key"],[1581,34,1585,32],[1581,39,1585,37],[1581,43,1585,41],[1581,47,1585,45,"key"],[1581,50,1585,48],[1581,55,1585,53],[1581,57,1585,55],[1581,59,1585,57],[1582,6,1586,4],[1582,10,1586,8],[1582,14,1586,12],[1582,15,1586,13,"backend"],[1582,22,1586,20],[1582,24,1586,22,"create"],[1582,30,1586,28],[1582,32,1586,30],[1583,8,1587,6],[1583,14,1587,12,"opts"],[1583,18,1587,16],[1583,21,1587,19],[1584,10,1588,8],[1584,13,1588,11,"options"],[1584,20,1588,18],[1585,10,1589,8,"isUpdate"],[1586,8,1590,6],[1586,9,1590,7],[1587,8,1591,6],[1587,14,1591,12,"fc"],[1587,16,1591,14],[1587,19,1591,17],[1587,23,1591,21],[1587,24,1591,22,"backend"],[1587,31,1591,29],[1587,32,1591,30,"create"],[1587,38,1591,36],[1587,39,1591,37,"bind"],[1587,43,1591,41],[1587,44,1591,42],[1587,48,1591,46],[1587,49,1591,47,"backend"],[1587,56,1591,54],[1587,57,1591,55],[1588,8,1592,6],[1588,12,1592,10,"fc"],[1588,14,1592,12],[1588,15,1592,13,"length"],[1588,21,1592,19],[1588,24,1592,22],[1588,25,1592,23],[1588,27,1592,25],[1589,10,1593,8],[1589,14,1593,12],[1590,12,1594,10],[1590,16,1594,14,"r"],[1590,17,1594,15],[1591,12,1595,10],[1591,16,1595,14,"fc"],[1591,18,1595,16],[1591,19,1595,17,"length"],[1591,25,1595,23],[1591,30,1595,28],[1591,31,1595,29],[1591,33,1595,31],[1592,14,1596,12,"r"],[1592,15,1596,13],[1592,18,1596,16,"fc"],[1592,20,1596,18],[1592,21,1596,19,"languages"],[1592,30,1596,28],[1592,32,1596,30,"namespace"],[1592,41,1596,39],[1592,43,1596,41,"key"],[1592,46,1596,44],[1592,48,1596,46,"fallbackValue"],[1592,61,1596,59],[1592,63,1596,61,"opts"],[1592,67,1596,65],[1592,68,1596,66],[1593,12,1597,10],[1593,13,1597,11],[1593,19,1597,17],[1594,14,1598,12,"r"],[1594,15,1598,13],[1594,18,1598,16,"fc"],[1594,20,1598,18],[1594,21,1598,19,"languages"],[1594,30,1598,28],[1594,32,1598,30,"namespace"],[1594,41,1598,39],[1594,43,1598,41,"key"],[1594,46,1598,44],[1594,48,1598,46,"fallbackValue"],[1594,61,1598,59],[1594,62,1598,60],[1595,12,1599,10],[1596,12,1600,10],[1596,16,1600,14,"r"],[1596,17,1600,15],[1596,21,1600,19],[1596,28,1600,26,"r"],[1596,29,1600,27],[1596,30,1600,28,"then"],[1596,34,1600,32],[1596,39,1600,37],[1596,49,1600,47],[1596,51,1600,49],[1597,14,1601,12,"r"],[1597,15,1601,13],[1597,16,1601,14,"then"],[1597,20,1601,18],[1597,21,1601,19,"data"],[1597,25,1601,23],[1597,29,1601,27,"clb"],[1597,32,1601,30],[1597,33,1601,31],[1597,37,1601,35],[1597,39,1601,37,"data"],[1597,43,1601,41],[1597,44,1601,42],[1597,45,1601,43],[1597,46,1601,44,"catch"],[1597,51,1601,49],[1597,52,1601,50,"clb"],[1597,55,1601,53],[1597,56,1601,54],[1598,12,1602,10],[1598,13,1602,11],[1598,19,1602,17],[1599,14,1603,12,"clb"],[1599,17,1603,15],[1599,18,1603,16],[1599,22,1603,20],[1599,24,1603,22,"r"],[1599,25,1603,23],[1599,26,1603,24],[1600,12,1604,10],[1601,10,1605,8],[1601,11,1605,9],[1601,12,1605,10],[1601,19,1605,17,"err"],[1601,22,1605,20],[1601,24,1605,22],[1602,12,1606,10,"clb"],[1602,15,1606,13],[1602,16,1606,14,"err"],[1602,19,1606,17],[1602,20,1606,18],[1603,10,1607,8],[1604,8,1608,6],[1604,9,1608,7],[1604,15,1608,13],[1605,10,1609,8,"fc"],[1605,12,1609,10],[1605,13,1609,11,"languages"],[1605,22,1609,20],[1605,24,1609,22,"namespace"],[1605,33,1609,31],[1605,35,1609,33,"key"],[1605,38,1609,36],[1605,40,1609,38,"fallbackValue"],[1605,53,1609,51],[1605,55,1609,53,"clb"],[1605,58,1609,56],[1605,60,1609,58,"opts"],[1605,64,1609,62],[1605,65,1609,63],[1606,8,1610,6],[1607,6,1611,4],[1608,6,1612,4],[1608,10,1612,8],[1608,11,1612,9,"languages"],[1608,20,1612,18],[1608,24,1612,22],[1608,25,1612,23,"languages"],[1608,34,1612,32],[1608,35,1612,33],[1608,36,1612,34],[1608,37,1612,35],[1608,39,1612,37],[1609,6,1613,4],[1609,10,1613,8],[1609,11,1613,9,"store"],[1609,16,1613,14],[1609,17,1613,15,"addResource"],[1609,28,1613,26],[1609,29,1613,27,"languages"],[1609,38,1613,36],[1609,39,1613,37],[1609,40,1613,38],[1609,41,1613,39],[1609,43,1613,41,"namespace"],[1609,52,1613,50],[1609,54,1613,52,"key"],[1609,57,1613,55],[1609,59,1613,57,"fallbackValue"],[1609,72,1613,70],[1609,73,1613,71],[1610,4,1614,2],[1611,2,1615,0],[1612,2,1617,0],[1612,8,1617,6,"get"],[1612,11,1617,9],[1612,14,1617,12,"get"],[1612,15,1617,12],[1612,21,1617,19],[1613,4,1618,2,"debug"],[1613,9,1618,7],[1613,11,1618,9],[1613,16,1618,14],[1614,4,1619,2,"initAsync"],[1614,13,1619,11],[1614,15,1619,13],[1614,19,1619,17],[1615,4,1620,2,"ns"],[1615,6,1620,4],[1615,8,1620,6],[1615,9,1620,7],[1615,22,1620,20],[1615,23,1620,21],[1616,4,1621,2,"defaultNS"],[1616,13,1621,11],[1616,15,1621,13],[1616,16,1621,14],[1616,29,1621,27],[1616,30,1621,28],[1617,4,1622,2,"fallbackLng"],[1617,15,1622,13],[1617,17,1622,15],[1617,18,1622,16],[1617,23,1622,21],[1617,24,1622,22],[1618,4,1623,2,"fallbackNS"],[1618,14,1623,12],[1618,16,1623,14],[1618,21,1623,19],[1619,4,1624,2,"supportedLngs"],[1619,17,1624,15],[1619,19,1624,17],[1619,24,1624,22],[1620,4,1625,2,"nonExplicitSupportedLngs"],[1620,28,1625,26],[1620,30,1625,28],[1620,35,1625,33],[1621,4,1626,2,"load"],[1621,8,1626,6],[1621,10,1626,8],[1621,15,1626,13],[1622,4,1627,2,"preload"],[1622,11,1627,9],[1622,13,1627,11],[1622,18,1627,16],[1623,4,1628,2,"simplifyPluralSuffix"],[1623,24,1628,22],[1623,26,1628,24],[1623,30,1628,28],[1624,4,1629,2,"keySeparator"],[1624,16,1629,14],[1624,18,1629,16],[1624,21,1629,19],[1625,4,1630,2,"nsSeparator"],[1625,15,1630,13],[1625,17,1630,15],[1625,20,1630,18],[1626,4,1631,2,"pluralSeparator"],[1626,19,1631,17],[1626,21,1631,19],[1626,24,1631,22],[1627,4,1632,2,"contextSeparator"],[1627,20,1632,18],[1627,22,1632,20],[1627,25,1632,23],[1628,4,1633,2,"partialBundledLanguages"],[1628,27,1633,25],[1628,29,1633,27],[1628,34,1633,32],[1629,4,1634,2,"saveMissing"],[1629,15,1634,13],[1629,17,1634,15],[1629,22,1634,20],[1630,4,1635,2,"updateMissing"],[1630,17,1635,15],[1630,19,1635,17],[1630,24,1635,22],[1631,4,1636,2,"saveMissingTo"],[1631,17,1636,15],[1631,19,1636,17],[1631,29,1636,27],[1632,4,1637,2,"saveMissingPlurals"],[1632,22,1637,20],[1632,24,1637,22],[1632,28,1637,26],[1633,4,1638,2,"missingKeyHandler"],[1633,21,1638,19],[1633,23,1638,21],[1633,28,1638,26],[1634,4,1639,2,"missingInterpolationHandler"],[1634,31,1639,29],[1634,33,1639,31],[1634,38,1639,36],[1635,4,1640,2,"postProcess"],[1635,15,1640,13],[1635,17,1640,15],[1635,22,1640,20],[1636,4,1641,2,"postProcessPassResolved"],[1636,27,1641,25],[1636,29,1641,27],[1636,34,1641,32],[1637,4,1642,2,"returnNull"],[1637,14,1642,12],[1637,16,1642,14],[1637,21,1642,19],[1638,4,1643,2,"returnEmptyString"],[1638,21,1643,19],[1638,23,1643,21],[1638,27,1643,25],[1639,4,1644,2,"returnObjects"],[1639,17,1644,15],[1639,19,1644,17],[1639,24,1644,22],[1640,4,1645,2,"joinArrays"],[1640,14,1645,12],[1640,16,1645,14],[1640,21,1645,19],[1641,4,1646,2,"returnedObjectHandler"],[1641,25,1646,23],[1641,27,1646,25],[1641,32,1646,30],[1642,4,1647,2,"parseMissingKeyHandler"],[1642,26,1647,24],[1642,28,1647,26],[1642,33,1647,31],[1643,4,1648,2,"appendNamespaceToMissingKey"],[1643,31,1648,29],[1643,33,1648,31],[1643,38,1648,36],[1644,4,1649,2,"appendNamespaceToCIMode"],[1644,27,1649,25],[1644,29,1649,27],[1644,34,1649,32],[1645,4,1650,2,"overloadTranslationOptionHandler"],[1645,36,1650,34],[1645,38,1650,36,"args"],[1645,42,1650,40],[1645,46,1650,44],[1646,6,1651,4],[1646,10,1651,8,"ret"],[1646,13,1651,11],[1646,16,1651,14],[1646,17,1651,15],[1646,18,1651,16],[1647,6,1652,4],[1647,10,1652,8],[1647,17,1652,15,"args"],[1647,21,1652,19],[1647,22,1652,20],[1647,23,1652,21],[1647,24,1652,22],[1647,29,1652,27],[1647,37,1652,35],[1647,39,1652,37,"ret"],[1647,42,1652,40],[1647,45,1652,43,"args"],[1647,49,1652,47],[1647,50,1652,48],[1647,51,1652,49],[1647,52,1652,50],[1648,6,1653,4],[1648,10,1653,8,"isString"],[1648,18,1653,16],[1648,19,1653,17,"args"],[1648,23,1653,21],[1648,24,1653,22],[1648,25,1653,23],[1648,26,1653,24],[1648,27,1653,25],[1648,29,1653,27,"ret"],[1648,32,1653,30],[1648,33,1653,31,"defaultValue"],[1648,45,1653,43],[1648,48,1653,46,"args"],[1648,52,1653,50],[1648,53,1653,51],[1648,54,1653,52],[1648,55,1653,53],[1649,6,1654,4],[1649,10,1654,8,"isString"],[1649,18,1654,16],[1649,19,1654,17,"args"],[1649,23,1654,21],[1649,24,1654,22],[1649,25,1654,23],[1649,26,1654,24],[1649,27,1654,25],[1649,29,1654,27,"ret"],[1649,32,1654,30],[1649,33,1654,31,"tDescription"],[1649,45,1654,43],[1649,48,1654,46,"args"],[1649,52,1654,50],[1649,53,1654,51],[1649,54,1654,52],[1649,55,1654,53],[1650,6,1655,4],[1650,10,1655,8],[1650,17,1655,15,"args"],[1650,21,1655,19],[1650,22,1655,20],[1650,23,1655,21],[1650,24,1655,22],[1650,29,1655,27],[1650,37,1655,35],[1650,41,1655,39],[1650,48,1655,46,"args"],[1650,52,1655,50],[1650,53,1655,51],[1650,54,1655,52],[1650,55,1655,53],[1650,60,1655,58],[1650,68,1655,66],[1650,70,1655,68],[1651,8,1656,6],[1651,14,1656,12,"options"],[1651,21,1656,19],[1651,24,1656,22,"args"],[1651,28,1656,26],[1651,29,1656,27],[1651,30,1656,28],[1651,31,1656,29],[1651,35,1656,33,"args"],[1651,39,1656,37],[1651,40,1656,38],[1651,41,1656,39],[1651,42,1656,40],[1652,8,1657,6,"Object"],[1652,14,1657,12],[1652,15,1657,13,"keys"],[1652,19,1657,17],[1652,20,1657,18,"options"],[1652,27,1657,25],[1652,28,1657,26],[1652,29,1657,27,"forEach"],[1652,36,1657,34],[1652,37,1657,35,"key"],[1652,40,1657,38],[1652,44,1657,42],[1653,10,1658,8,"ret"],[1653,13,1658,11],[1653,14,1658,12,"key"],[1653,17,1658,15],[1653,18,1658,16],[1653,21,1658,19,"options"],[1653,28,1658,26],[1653,29,1658,27,"key"],[1653,32,1658,30],[1653,33,1658,31],[1654,8,1659,6],[1654,9,1659,7],[1654,10,1659,8],[1655,6,1660,4],[1656,6,1661,4],[1656,13,1661,11,"ret"],[1656,16,1661,14],[1657,4,1662,2],[1657,5,1662,3],[1658,4,1663,2,"interpolation"],[1658,17,1663,15],[1658,19,1663,17],[1659,6,1664,4,"escapeValue"],[1659,17,1664,15],[1659,19,1664,17],[1659,23,1664,21],[1660,6,1665,4,"format"],[1660,12,1665,10],[1660,14,1665,12,"value"],[1660,19,1665,17],[1660,23,1665,21,"value"],[1660,28,1665,26],[1661,6,1666,4,"prefix"],[1661,12,1666,10],[1661,14,1666,12],[1661,18,1666,16],[1662,6,1667,4,"suffix"],[1662,12,1667,10],[1662,14,1667,12],[1662,18,1667,16],[1663,6,1668,4,"formatSeparator"],[1663,21,1668,19],[1663,23,1668,21],[1663,26,1668,24],[1664,6,1669,4,"unescapePrefix"],[1664,20,1669,18],[1664,22,1669,20],[1664,25,1669,23],[1665,6,1670,4,"nestingPrefix"],[1665,19,1670,17],[1665,21,1670,19],[1665,26,1670,24],[1666,6,1671,4,"nestingSuffix"],[1666,19,1671,17],[1666,21,1671,19],[1666,24,1671,22],[1667,6,1672,4,"nestingOptionsSeparator"],[1667,29,1672,27],[1667,31,1672,29],[1667,34,1672,32],[1668,6,1673,4,"maxReplaces"],[1668,17,1673,15],[1668,19,1673,17],[1668,23,1673,21],[1669,6,1674,4,"skipOnVariables"],[1669,21,1674,19],[1669,23,1674,21],[1670,4,1675,2],[1670,5,1675,3],[1671,4,1676,2,"cacheInBuiltFormats"],[1671,23,1676,21],[1671,25,1676,23],[1672,2,1677,0],[1672,3,1677,1],[1672,4,1677,2],[1673,2,1678,0],[1673,8,1678,6,"transformOptions"],[1673,24,1678,22],[1673,27,1678,25,"options"],[1673,34,1678,32],[1673,38,1678,36],[1674,4,1679,2],[1674,8,1679,6,"isString"],[1674,16,1679,14],[1674,17,1679,15,"options"],[1674,24,1679,22],[1674,25,1679,23,"ns"],[1674,27,1679,25],[1674,28,1679,26],[1674,30,1679,28,"options"],[1674,37,1679,35],[1674,38,1679,36,"ns"],[1674,40,1679,38],[1674,43,1679,41],[1674,44,1679,42,"options"],[1674,51,1679,49],[1674,52,1679,50,"ns"],[1674,54,1679,52],[1674,55,1679,53],[1675,4,1680,2],[1675,8,1680,6,"isString"],[1675,16,1680,14],[1675,17,1680,15,"options"],[1675,24,1680,22],[1675,25,1680,23,"fallbackLng"],[1675,36,1680,34],[1675,37,1680,35],[1675,39,1680,37,"options"],[1675,46,1680,44],[1675,47,1680,45,"fallbackLng"],[1675,58,1680,56],[1675,61,1680,59],[1675,62,1680,60,"options"],[1675,69,1680,67],[1675,70,1680,68,"fallbackLng"],[1675,81,1680,79],[1675,82,1680,80],[1676,4,1681,2],[1676,8,1681,6,"isString"],[1676,16,1681,14],[1676,17,1681,15,"options"],[1676,24,1681,22],[1676,25,1681,23,"fallbackNS"],[1676,35,1681,33],[1676,36,1681,34],[1676,38,1681,36,"options"],[1676,45,1681,43],[1676,46,1681,44,"fallbackNS"],[1676,56,1681,54],[1676,59,1681,57],[1676,60,1681,58,"options"],[1676,67,1681,65],[1676,68,1681,66,"fallbackNS"],[1676,78,1681,76],[1676,79,1681,77],[1677,4,1682,2],[1677,8,1682,6,"options"],[1677,15,1682,13],[1677,16,1682,14,"supportedLngs"],[1677,29,1682,27],[1677,31,1682,29,"indexOf"],[1677,38,1682,36],[1677,41,1682,39],[1677,49,1682,47],[1677,50,1682,48],[1677,53,1682,51],[1677,54,1682,52],[1677,56,1682,54],[1678,6,1683,4,"options"],[1678,13,1683,11],[1678,14,1683,12,"supportedLngs"],[1678,27,1683,25],[1678,30,1683,28,"options"],[1678,37,1683,35],[1678,38,1683,36,"supportedLngs"],[1678,51,1683,49],[1678,52,1683,50,"concat"],[1678,58,1683,56],[1678,59,1683,57],[1678,60,1683,58],[1678,68,1683,66],[1678,69,1683,67],[1678,70,1683,68],[1679,4,1684,2],[1680,4,1685,2],[1680,8,1685,6],[1680,15,1685,13,"options"],[1680,22,1685,20],[1680,23,1685,21,"initImmediate"],[1680,36,1685,34],[1680,41,1685,39],[1680,50,1685,48],[1680,52,1685,50,"options"],[1680,59,1685,57],[1680,60,1685,58,"initAsync"],[1680,69,1685,67],[1680,72,1685,70,"options"],[1680,79,1685,77],[1680,80,1685,78,"initImmediate"],[1680,93,1685,91],[1681,4,1686,2],[1681,11,1686,9,"options"],[1681,18,1686,16],[1682,2,1687,0],[1682,3,1687,1],[1683,2,1689,0],[1683,8,1689,6,"noop"],[1683,12,1689,10],[1683,15,1689,13,"noop"],[1683,16,1689,13],[1683,21,1689,19],[1683,22,1689,20],[1683,23,1689,21],[1684,2,1690,0],[1684,8,1690,6,"bindMemberFunctions"],[1684,27,1690,25],[1684,30,1690,28,"inst"],[1684,34,1690,32],[1684,38,1690,36],[1685,4,1691,2],[1685,10,1691,8,"mems"],[1685,14,1691,12],[1685,17,1691,15,"Object"],[1685,23,1691,21],[1685,24,1691,22,"getOwnPropertyNames"],[1685,43,1691,41],[1685,44,1691,42,"Object"],[1685,50,1691,48],[1685,51,1691,49,"getPrototypeOf"],[1685,65,1691,63],[1685,66,1691,64,"inst"],[1685,70,1691,68],[1685,71,1691,69],[1685,72,1691,70],[1686,4,1692,2,"mems"],[1686,8,1692,6],[1686,9,1692,7,"forEach"],[1686,16,1692,14],[1686,17,1692,15,"mem"],[1686,20,1692,18],[1686,24,1692,22],[1687,6,1693,4],[1687,10,1693,8],[1687,17,1693,15,"inst"],[1687,21,1693,19],[1687,22,1693,20,"mem"],[1687,25,1693,23],[1687,26,1693,24],[1687,31,1693,29],[1687,41,1693,39],[1687,43,1693,41],[1688,8,1694,6,"inst"],[1688,12,1694,10],[1688,13,1694,11,"mem"],[1688,16,1694,14],[1688,17,1694,15],[1688,20,1694,18,"inst"],[1688,24,1694,22],[1688,25,1694,23,"mem"],[1688,28,1694,26],[1688,29,1694,27],[1688,30,1694,28,"bind"],[1688,34,1694,32],[1688,35,1694,33,"inst"],[1688,39,1694,37],[1688,40,1694,38],[1689,6,1695,4],[1690,4,1696,2],[1690,5,1696,3],[1690,6,1696,4],[1691,2,1697,0],[1691,3,1697,1],[1692,2,1698,0],[1692,8,1698,6,"I18n"],[1692,12,1698,10],[1692,21,1698,19,"EventEmitter"],[1692,33,1698,31],[1692,34,1698,32],[1693,4,1699,2,"constructor"],[1693,15,1699,13,"constructor"],[1693,16,1699,14,"options"],[1693,23,1699,21],[1693,26,1699,24],[1693,27,1699,25],[1693,28,1699,26],[1693,30,1699,28,"callback"],[1693,38,1699,36],[1693,40,1699,38],[1694,6,1700,4],[1694,11,1700,9],[1694,12,1700,10],[1694,13,1700,11],[1695,6,1701,4],[1695,10,1701,8],[1695,11,1701,9,"options"],[1695,18,1701,16],[1695,21,1701,19,"transformOptions"],[1695,37,1701,35],[1695,38,1701,36,"options"],[1695,45,1701,43],[1695,46,1701,44],[1696,6,1702,4],[1696,10,1702,8],[1696,11,1702,9,"services"],[1696,19,1702,17],[1696,22,1702,20],[1696,23,1702,21],[1696,24,1702,22],[1697,6,1703,4],[1697,10,1703,8],[1697,11,1703,9,"logger"],[1697,17,1703,15],[1697,20,1703,18,"baseLogger"],[1697,30,1703,28],[1698,6,1704,4],[1698,10,1704,8],[1698,11,1704,9,"modules"],[1698,18,1704,16],[1698,21,1704,19],[1699,8,1705,6,"external"],[1699,16,1705,14],[1699,18,1705,16],[1700,6,1706,4],[1700,7,1706,5],[1701,6,1707,4,"bindMemberFunctions"],[1701,25,1707,23],[1701,26,1707,24],[1701,30,1707,28],[1701,31,1707,29],[1702,6,1708,4],[1702,10,1708,8,"callback"],[1702,18,1708,16],[1702,22,1708,20],[1702,23,1708,21],[1702,27,1708,25],[1702,28,1708,26,"isInitialized"],[1702,41,1708,39],[1702,45,1708,43],[1702,46,1708,44,"options"],[1702,53,1708,51],[1702,54,1708,52,"isClone"],[1702,61,1708,59],[1702,63,1708,61],[1703,8,1709,6],[1703,12,1709,10],[1703,13,1709,11],[1703,17,1709,15],[1703,18,1709,16,"options"],[1703,25,1709,23],[1703,26,1709,24,"initAsync"],[1703,35,1709,33],[1703,37,1709,35],[1704,10,1710,8],[1704,14,1710,12],[1704,15,1710,13,"init"],[1704,19,1710,17],[1704,20,1710,18,"options"],[1704,27,1710,25],[1704,29,1710,27,"callback"],[1704,37,1710,35],[1704,38,1710,36],[1705,10,1711,8],[1705,17,1711,15],[1705,21,1711,19],[1706,8,1712,6],[1707,8,1713,6,"setTimeout"],[1707,18,1713,16],[1707,19,1713,17],[1707,25,1713,23],[1708,10,1714,8],[1708,14,1714,12],[1708,15,1714,13,"init"],[1708,19,1714,17],[1708,20,1714,18,"options"],[1708,27,1714,25],[1708,29,1714,27,"callback"],[1708,37,1714,35],[1708,38,1714,36],[1709,8,1715,6],[1709,9,1715,7],[1709,11,1715,9],[1709,12,1715,10],[1709,13,1715,11],[1710,6,1716,4],[1711,4,1717,2],[1712,4,1718,2,"init"],[1712,8,1718,6,"init"],[1712,9,1718,7,"options"],[1712,16,1718,14],[1712,19,1718,17],[1712,20,1718,18],[1712,21,1718,19],[1712,23,1718,21,"callback"],[1712,31,1718,29],[1712,33,1718,31],[1713,6,1719,4],[1713,10,1719,8],[1713,11,1719,9,"isInitializing"],[1713,25,1719,23],[1713,28,1719,26],[1713,32,1719,30],[1714,6,1720,4],[1714,10,1720,8],[1714,17,1720,15,"options"],[1714,24,1720,22],[1714,29,1720,27],[1714,39,1720,37],[1714,41,1720,39],[1715,8,1721,6,"callback"],[1715,16,1721,14],[1715,19,1721,17,"options"],[1715,26,1721,24],[1716,8,1722,6,"options"],[1716,15,1722,13],[1716,18,1722,16],[1716,19,1722,17],[1716,20,1722,18],[1717,6,1723,4],[1718,6,1724,4],[1718,10,1724,8,"options"],[1718,17,1724,15],[1718,18,1724,16,"defaultNS"],[1718,27,1724,25],[1718,31,1724,29],[1718,35,1724,33],[1718,39,1724,37,"options"],[1718,46,1724,44],[1718,47,1724,45,"ns"],[1718,49,1724,47],[1718,51,1724,49],[1719,8,1725,6],[1719,12,1725,10,"isString"],[1719,20,1725,18],[1719,21,1725,19,"options"],[1719,28,1725,26],[1719,29,1725,27,"ns"],[1719,31,1725,29],[1719,32,1725,30],[1719,34,1725,32],[1720,10,1726,8,"options"],[1720,17,1726,15],[1720,18,1726,16,"defaultNS"],[1720,27,1726,25],[1720,30,1726,28,"options"],[1720,37,1726,35],[1720,38,1726,36,"ns"],[1720,40,1726,38],[1721,8,1727,6],[1721,9,1727,7],[1721,15,1727,13],[1721,19,1727,17,"options"],[1721,26,1727,24],[1721,27,1727,25,"ns"],[1721,29,1727,27],[1721,30,1727,28,"indexOf"],[1721,37,1727,35],[1721,38,1727,36],[1721,51,1727,49],[1721,52,1727,50],[1721,55,1727,53],[1721,56,1727,54],[1721,58,1727,56],[1722,10,1728,8,"options"],[1722,17,1728,15],[1722,18,1728,16,"defaultNS"],[1722,27,1728,25],[1722,30,1728,28,"options"],[1722,37,1728,35],[1722,38,1728,36,"ns"],[1722,40,1728,38],[1722,41,1728,39],[1722,42,1728,40],[1722,43,1728,41],[1723,8,1729,6],[1724,6,1730,4],[1725,6,1731,4],[1725,12,1731,10,"defOpts"],[1725,19,1731,17],[1725,22,1731,20,"get"],[1725,25,1731,23],[1725,26,1731,24],[1725,27,1731,25],[1726,6,1732,4],[1726,10,1732,8],[1726,11,1732,9,"options"],[1726,18,1732,16],[1726,21,1732,19],[1727,8,1733,6],[1727,11,1733,9,"defOpts"],[1727,18,1733,16],[1728,8,1734,6],[1728,11,1734,9],[1728,15,1734,13],[1728,16,1734,14,"options"],[1728,23,1734,21],[1729,8,1735,6],[1729,11,1735,9,"transformOptions"],[1729,27,1735,25],[1729,28,1735,26,"options"],[1729,35,1735,33],[1730,6,1736,4],[1730,7,1736,5],[1731,6,1737,4],[1731,10,1737,8],[1731,11,1737,9,"options"],[1731,18,1737,16],[1731,19,1737,17,"interpolation"],[1731,32,1737,30],[1731,35,1737,33],[1732,8,1738,6],[1732,11,1738,9,"defOpts"],[1732,18,1738,16],[1732,19,1738,17,"interpolation"],[1732,32,1738,30],[1733,8,1739,6],[1733,11,1739,9],[1733,15,1739,13],[1733,16,1739,14,"options"],[1733,23,1739,21],[1733,24,1739,22,"interpolation"],[1734,6,1740,4],[1734,7,1740,5],[1735,6,1741,4],[1735,10,1741,8,"options"],[1735,17,1741,15],[1735,18,1741,16,"keySeparator"],[1735,30,1741,28],[1735,35,1741,33,"undefined"],[1735,44,1741,42],[1735,46,1741,44],[1736,8,1742,6],[1736,12,1742,10],[1736,13,1742,11,"options"],[1736,20,1742,18],[1736,21,1742,19,"userDefinedKeySeparator"],[1736,44,1742,42],[1736,47,1742,45,"options"],[1736,54,1742,52],[1736,55,1742,53,"keySeparator"],[1736,67,1742,65],[1737,6,1743,4],[1738,6,1744,4],[1738,10,1744,8,"options"],[1738,17,1744,15],[1738,18,1744,16,"nsSeparator"],[1738,29,1744,27],[1738,34,1744,32,"undefined"],[1738,43,1744,41],[1738,45,1744,43],[1739,8,1745,6],[1739,12,1745,10],[1739,13,1745,11,"options"],[1739,20,1745,18],[1739,21,1745,19,"userDefinedNsSeparator"],[1739,43,1745,41],[1739,46,1745,44,"options"],[1739,53,1745,51],[1739,54,1745,52,"nsSeparator"],[1739,65,1745,63],[1740,6,1746,4],[1741,6,1747,4],[1741,12,1747,10,"createClassOnDemand"],[1741,31,1747,29],[1741,34,1747,32,"ClassOrObject"],[1741,47,1747,45],[1741,51,1747,49],[1742,8,1748,6],[1742,12,1748,10],[1742,13,1748,11,"ClassOrObject"],[1742,26,1748,24],[1742,28,1748,26],[1742,35,1748,33],[1742,39,1748,37],[1743,8,1749,6],[1743,12,1749,10],[1743,19,1749,17,"ClassOrObject"],[1743,32,1749,30],[1743,37,1749,35],[1743,47,1749,45],[1743,49,1749,47],[1743,56,1749,54],[1743,60,1749,58,"ClassOrObject"],[1743,73,1749,71],[1743,74,1749,72],[1743,75,1749,73],[1744,8,1750,6],[1744,15,1750,13,"ClassOrObject"],[1744,28,1750,26],[1745,6,1751,4],[1745,7,1751,5],[1746,6,1752,4],[1746,10,1752,8],[1746,11,1752,9],[1746,15,1752,13],[1746,16,1752,14,"options"],[1746,23,1752,21],[1746,24,1752,22,"isClone"],[1746,31,1752,29],[1746,33,1752,31],[1747,8,1753,6],[1747,12,1753,10],[1747,16,1753,14],[1747,17,1753,15,"modules"],[1747,24,1753,22],[1747,25,1753,23,"logger"],[1747,31,1753,29],[1747,33,1753,31],[1748,10,1754,8,"baseLogger"],[1748,20,1754,18],[1748,21,1754,19,"init"],[1748,25,1754,23],[1748,26,1754,24,"createClassOnDemand"],[1748,45,1754,43],[1748,46,1754,44],[1748,50,1754,48],[1748,51,1754,49,"modules"],[1748,58,1754,56],[1748,59,1754,57,"logger"],[1748,65,1754,63],[1748,66,1754,64],[1748,68,1754,66],[1748,72,1754,70],[1748,73,1754,71,"options"],[1748,80,1754,78],[1748,81,1754,79],[1749,8,1755,6],[1749,9,1755,7],[1749,15,1755,13],[1750,10,1756,8,"baseLogger"],[1750,20,1756,18],[1750,21,1756,19,"init"],[1750,25,1756,23],[1750,26,1756,24],[1750,30,1756,28],[1750,32,1756,30],[1750,36,1756,34],[1750,37,1756,35,"options"],[1750,44,1756,42],[1750,45,1756,43],[1751,8,1757,6],[1752,8,1758,6],[1752,12,1758,10,"formatter"],[1752,21,1758,19],[1753,8,1759,6],[1753,12,1759,10],[1753,16,1759,14],[1753,17,1759,15,"modules"],[1753,24,1759,22],[1753,25,1759,23,"formatter"],[1753,34,1759,32],[1753,36,1759,34],[1754,10,1760,8,"formatter"],[1754,19,1760,17],[1754,22,1760,20],[1754,26,1760,24],[1754,27,1760,25,"modules"],[1754,34,1760,32],[1754,35,1760,33,"formatter"],[1754,44,1760,42],[1755,8,1761,6],[1755,9,1761,7],[1755,15,1761,13],[1756,10,1762,8,"formatter"],[1756,19,1762,17],[1756,22,1762,20,"Formatter"],[1756,31,1762,29],[1757,8,1763,6],[1758,8,1764,6],[1758,14,1764,12,"lu"],[1758,16,1764,14],[1758,19,1764,17],[1758,23,1764,21,"LanguageUtil"],[1758,35,1764,33],[1758,36,1764,34],[1758,40,1764,38],[1758,41,1764,39,"options"],[1758,48,1764,46],[1758,49,1764,47],[1759,8,1765,6],[1759,12,1765,10],[1759,13,1765,11,"store"],[1759,18,1765,16],[1759,21,1765,19],[1759,25,1765,23,"ResourceStore"],[1759,38,1765,36],[1759,39,1765,37],[1759,43,1765,41],[1759,44,1765,42,"options"],[1759,51,1765,49],[1759,52,1765,50,"resources"],[1759,61,1765,59],[1759,63,1765,61],[1759,67,1765,65],[1759,68,1765,66,"options"],[1759,75,1765,73],[1759,76,1765,74],[1760,8,1766,6],[1760,14,1766,12,"s"],[1760,15,1766,13],[1760,18,1766,16],[1760,22,1766,20],[1760,23,1766,21,"services"],[1760,31,1766,29],[1761,8,1767,6,"s"],[1761,9,1767,7],[1761,10,1767,8,"logger"],[1761,16,1767,14],[1761,19,1767,17,"baseLogger"],[1761,29,1767,27],[1762,8,1768,6,"s"],[1762,9,1768,7],[1762,10,1768,8,"resourceStore"],[1762,23,1768,21],[1762,26,1768,24],[1762,30,1768,28],[1762,31,1768,29,"store"],[1762,36,1768,34],[1763,8,1769,6,"s"],[1763,9,1769,7],[1763,10,1769,8,"languageUtils"],[1763,23,1769,21],[1763,26,1769,24,"lu"],[1763,28,1769,26],[1764,8,1770,6,"s"],[1764,9,1770,7],[1764,10,1770,8,"pluralResolver"],[1764,24,1770,22],[1764,27,1770,25],[1764,31,1770,29,"PluralResolver"],[1764,45,1770,43],[1764,46,1770,44,"lu"],[1764,48,1770,46],[1764,50,1770,48],[1765,10,1771,8,"prepend"],[1765,17,1771,15],[1765,19,1771,17],[1765,23,1771,21],[1765,24,1771,22,"options"],[1765,31,1771,29],[1765,32,1771,30,"pluralSeparator"],[1765,47,1771,45],[1766,10,1772,8,"simplifyPluralSuffix"],[1766,30,1772,28],[1766,32,1772,30],[1766,36,1772,34],[1766,37,1772,35,"options"],[1766,44,1772,42],[1766,45,1772,43,"simplifyPluralSuffix"],[1767,8,1773,6],[1767,9,1773,7],[1767,10,1773,8],[1768,8,1774,6],[1768,14,1774,12,"usingLegacyFormatFunction"],[1768,39,1774,37],[1768,42,1774,40],[1768,46,1774,44],[1768,47,1774,45,"options"],[1768,54,1774,52],[1768,55,1774,53,"interpolation"],[1768,68,1774,66],[1768,69,1774,67,"format"],[1768,75,1774,73],[1768,79,1774,77],[1768,83,1774,81],[1768,84,1774,82,"options"],[1768,91,1774,89],[1768,92,1774,90,"interpolation"],[1768,105,1774,103],[1768,106,1774,104,"format"],[1768,112,1774,110],[1768,117,1774,115,"defOpts"],[1768,124,1774,122],[1768,125,1774,123,"interpolation"],[1768,138,1774,136],[1768,139,1774,137,"format"],[1768,145,1774,143],[1769,8,1775,6],[1769,12,1775,10,"usingLegacyFormatFunction"],[1769,37,1775,35],[1769,39,1775,37],[1770,10,1776,8],[1770,14,1776,12],[1770,15,1776,13,"logger"],[1770,21,1776,19],[1770,22,1776,20,"deprecate"],[1770,31,1776,29],[1770,32,1776,30],[1770,172,1776,170],[1770,173,1776,171],[1771,8,1777,6],[1772,8,1778,6],[1772,12,1778,10,"formatter"],[1772,21,1778,19],[1772,26,1778,24],[1772,27,1778,25],[1772,31,1778,29],[1772,32,1778,30,"options"],[1772,39,1778,37],[1772,40,1778,38,"interpolation"],[1772,53,1778,51],[1772,54,1778,52,"format"],[1772,60,1778,58],[1772,64,1778,62],[1772,68,1778,66],[1772,69,1778,67,"options"],[1772,76,1778,74],[1772,77,1778,75,"interpolation"],[1772,90,1778,88],[1772,91,1778,89,"format"],[1772,97,1778,95],[1772,102,1778,100,"defOpts"],[1772,109,1778,107],[1772,110,1778,108,"interpolation"],[1772,123,1778,121],[1772,124,1778,122,"format"],[1772,130,1778,128],[1772,131,1778,129],[1772,133,1778,131],[1773,10,1779,8,"s"],[1773,11,1779,9],[1773,12,1779,10,"formatter"],[1773,21,1779,19],[1773,24,1779,22,"createClassOnDemand"],[1773,43,1779,41],[1773,44,1779,42,"formatter"],[1773,53,1779,51],[1773,54,1779,52],[1774,10,1780,8],[1774,14,1780,12,"s"],[1774,15,1780,13],[1774,16,1780,14,"formatter"],[1774,25,1780,23],[1774,26,1780,24,"init"],[1774,30,1780,28],[1774,32,1780,30,"s"],[1774,33,1780,31],[1774,34,1780,32,"formatter"],[1774,43,1780,41],[1774,44,1780,42,"init"],[1774,48,1780,46],[1774,49,1780,47,"s"],[1774,50,1780,48],[1774,52,1780,50],[1774,56,1780,54],[1774,57,1780,55,"options"],[1774,64,1780,62],[1774,65,1780,63],[1775,10,1781,8],[1775,14,1781,12],[1775,15,1781,13,"options"],[1775,22,1781,20],[1775,23,1781,21,"interpolation"],[1775,36,1781,34],[1775,37,1781,35,"format"],[1775,43,1781,41],[1775,46,1781,44,"s"],[1775,47,1781,45],[1775,48,1781,46,"formatter"],[1775,57,1781,55],[1775,58,1781,56,"format"],[1775,64,1781,62],[1775,65,1781,63,"bind"],[1775,69,1781,67],[1775,70,1781,68,"s"],[1775,71,1781,69],[1775,72,1781,70,"formatter"],[1775,81,1781,79],[1775,82,1781,80],[1776,8,1782,6],[1777,8,1783,6,"s"],[1777,9,1783,7],[1777,10,1783,8,"interpolator"],[1777,22,1783,20],[1777,25,1783,23],[1777,29,1783,27,"Interpolator"],[1777,41,1783,39],[1777,42,1783,40],[1777,46,1783,44],[1777,47,1783,45,"options"],[1777,54,1783,52],[1777,55,1783,53],[1778,8,1784,6,"s"],[1778,9,1784,7],[1778,10,1784,8,"utils"],[1778,15,1784,13],[1778,18,1784,16],[1779,10,1785,8,"hasLoadedNamespace"],[1779,28,1785,26],[1779,30,1785,28],[1779,34,1785,32],[1779,35,1785,33,"hasLoadedNamespace"],[1779,53,1785,51],[1779,54,1785,52,"bind"],[1779,58,1785,56],[1779,59,1785,57],[1779,63,1785,61],[1780,8,1786,6],[1780,9,1786,7],[1781,8,1787,6,"s"],[1781,9,1787,7],[1781,10,1787,8,"backendConnector"],[1781,26,1787,24],[1781,29,1787,27],[1781,33,1787,31,"Connector"],[1781,42,1787,40],[1781,43,1787,41,"createClassOnDemand"],[1781,62,1787,60],[1781,63,1787,61],[1781,67,1787,65],[1781,68,1787,66,"modules"],[1781,75,1787,73],[1781,76,1787,74,"backend"],[1781,83,1787,81],[1781,84,1787,82],[1781,86,1787,84,"s"],[1781,87,1787,85],[1781,88,1787,86,"resourceStore"],[1781,101,1787,99],[1781,103,1787,101,"s"],[1781,104,1787,102],[1781,106,1787,104],[1781,110,1787,108],[1781,111,1787,109,"options"],[1781,118,1787,116],[1781,119,1787,117],[1782,8,1788,6,"s"],[1782,9,1788,7],[1782,10,1788,8,"backendConnector"],[1782,26,1788,24],[1782,27,1788,25,"on"],[1782,29,1788,27],[1782,30,1788,28],[1782,33,1788,31],[1782,35,1788,33],[1782,36,1788,34,"event"],[1782,41,1788,39],[1782,43,1788,41],[1782,46,1788,44,"args"],[1782,50,1788,48],[1782,55,1788,53],[1783,10,1789,8],[1783,14,1789,12],[1783,15,1789,13,"emit"],[1783,19,1789,17],[1783,20,1789,18,"event"],[1783,25,1789,23],[1783,27,1789,25],[1783,30,1789,28,"args"],[1783,34,1789,32],[1783,35,1789,33],[1784,8,1790,6],[1784,9,1790,7],[1784,10,1790,8],[1785,8,1791,6],[1785,12,1791,10],[1785,16,1791,14],[1785,17,1791,15,"modules"],[1785,24,1791,22],[1785,25,1791,23,"languageDetector"],[1785,41,1791,39],[1785,43,1791,41],[1786,10,1792,8,"s"],[1786,11,1792,9],[1786,12,1792,10,"languageDetector"],[1786,28,1792,26],[1786,31,1792,29,"createClassOnDemand"],[1786,50,1792,48],[1786,51,1792,49],[1786,55,1792,53],[1786,56,1792,54,"modules"],[1786,63,1792,61],[1786,64,1792,62,"languageDetector"],[1786,80,1792,78],[1786,81,1792,79],[1787,10,1793,8],[1787,14,1793,12,"s"],[1787,15,1793,13],[1787,16,1793,14,"languageDetector"],[1787,32,1793,30],[1787,33,1793,31,"init"],[1787,37,1793,35],[1787,39,1793,37,"s"],[1787,40,1793,38],[1787,41,1793,39,"languageDetector"],[1787,57,1793,55],[1787,58,1793,56,"init"],[1787,62,1793,60],[1787,63,1793,61,"s"],[1787,64,1793,62],[1787,66,1793,64],[1787,70,1793,68],[1787,71,1793,69,"options"],[1787,78,1793,76],[1787,79,1793,77,"detection"],[1787,88,1793,86],[1787,90,1793,88],[1787,94,1793,92],[1787,95,1793,93,"options"],[1787,102,1793,100],[1787,103,1793,101],[1788,8,1794,6],[1789,8,1795,6],[1789,12,1795,10],[1789,16,1795,14],[1789,17,1795,15,"modules"],[1789,24,1795,22],[1789,25,1795,23,"i18nFormat"],[1789,35,1795,33],[1789,37,1795,35],[1790,10,1796,8,"s"],[1790,11,1796,9],[1790,12,1796,10,"i18nFormat"],[1790,22,1796,20],[1790,25,1796,23,"createClassOnDemand"],[1790,44,1796,42],[1790,45,1796,43],[1790,49,1796,47],[1790,50,1796,48,"modules"],[1790,57,1796,55],[1790,58,1796,56,"i18nFormat"],[1790,68,1796,66],[1790,69,1796,67],[1791,10,1797,8],[1791,14,1797,12,"s"],[1791,15,1797,13],[1791,16,1797,14,"i18nFormat"],[1791,26,1797,24],[1791,27,1797,25,"init"],[1791,31,1797,29],[1791,33,1797,31,"s"],[1791,34,1797,32],[1791,35,1797,33,"i18nFormat"],[1791,45,1797,43],[1791,46,1797,44,"init"],[1791,50,1797,48],[1791,51,1797,49],[1791,55,1797,53],[1791,56,1797,54],[1792,8,1798,6],[1793,8,1799,6],[1793,12,1799,10],[1793,13,1799,11,"translator"],[1793,23,1799,21],[1793,26,1799,24],[1793,30,1799,28,"Translator"],[1793,40,1799,38],[1793,41,1799,39],[1793,45,1799,43],[1793,46,1799,44,"services"],[1793,54,1799,52],[1793,56,1799,54],[1793,60,1799,58],[1793,61,1799,59,"options"],[1793,68,1799,66],[1793,69,1799,67],[1794,8,1800,6],[1794,12,1800,10],[1794,13,1800,11,"translator"],[1794,23,1800,21],[1794,24,1800,22,"on"],[1794,26,1800,24],[1794,27,1800,25],[1794,30,1800,28],[1794,32,1800,30],[1794,33,1800,31,"event"],[1794,38,1800,36],[1794,40,1800,38],[1794,43,1800,41,"args"],[1794,47,1800,45],[1794,52,1800,50],[1795,10,1801,8],[1795,14,1801,12],[1795,15,1801,13,"emit"],[1795,19,1801,17],[1795,20,1801,18,"event"],[1795,25,1801,23],[1795,27,1801,25],[1795,30,1801,28,"args"],[1795,34,1801,32],[1795,35,1801,33],[1796,8,1802,6],[1796,9,1802,7],[1796,10,1802,8],[1797,8,1803,6],[1797,12,1803,10],[1797,13,1803,11,"modules"],[1797,20,1803,18],[1797,21,1803,19,"external"],[1797,29,1803,27],[1797,30,1803,28,"forEach"],[1797,37,1803,35],[1797,38,1803,36,"m"],[1797,39,1803,37],[1797,43,1803,41],[1798,10,1804,8],[1798,14,1804,12,"m"],[1798,15,1804,13],[1798,16,1804,14,"init"],[1798,20,1804,18],[1798,22,1804,20,"m"],[1798,23,1804,21],[1798,24,1804,22,"init"],[1798,28,1804,26],[1798,29,1804,27],[1798,33,1804,31],[1798,34,1804,32],[1799,8,1805,6],[1799,9,1805,7],[1799,10,1805,8],[1800,6,1806,4],[1801,6,1807,4],[1801,10,1807,8],[1801,11,1807,9,"format"],[1801,17,1807,15],[1801,20,1807,18],[1801,24,1807,22],[1801,25,1807,23,"options"],[1801,32,1807,30],[1801,33,1807,31,"interpolation"],[1801,46,1807,44],[1801,47,1807,45,"format"],[1801,53,1807,51],[1802,6,1808,4],[1802,10,1808,8],[1802,11,1808,9,"callback"],[1802,19,1808,17],[1802,21,1808,19,"callback"],[1802,29,1808,27],[1802,32,1808,30,"noop"],[1802,36,1808,34],[1803,6,1809,4],[1803,10,1809,8],[1803,14,1809,12],[1803,15,1809,13,"options"],[1803,22,1809,20],[1803,23,1809,21,"fallbackLng"],[1803,34,1809,32],[1803,38,1809,36],[1803,39,1809,37],[1803,43,1809,41],[1803,44,1809,42,"services"],[1803,52,1809,50],[1803,53,1809,51,"languageDetector"],[1803,69,1809,67],[1803,73,1809,71],[1803,74,1809,72],[1803,78,1809,76],[1803,79,1809,77,"options"],[1803,86,1809,84],[1803,87,1809,85,"lng"],[1803,90,1809,88],[1803,92,1809,90],[1804,8,1810,6],[1804,14,1810,12,"codes"],[1804,19,1810,17],[1804,22,1810,20],[1804,26,1810,24],[1804,27,1810,25,"services"],[1804,35,1810,33],[1804,36,1810,34,"languageUtils"],[1804,49,1810,47],[1804,50,1810,48,"getFallbackCodes"],[1804,66,1810,64],[1804,67,1810,65],[1804,71,1810,69],[1804,72,1810,70,"options"],[1804,79,1810,77],[1804,80,1810,78,"fallbackLng"],[1804,91,1810,89],[1804,92,1810,90],[1805,8,1811,6],[1805,12,1811,10,"codes"],[1805,17,1811,15],[1805,18,1811,16,"length"],[1805,24,1811,22],[1805,27,1811,25],[1805,28,1811,26],[1805,32,1811,30,"codes"],[1805,37,1811,35],[1805,38,1811,36],[1805,39,1811,37],[1805,40,1811,38],[1805,45,1811,43],[1805,50,1811,48],[1805,52,1811,50],[1805,56,1811,54],[1805,57,1811,55,"options"],[1805,64,1811,62],[1805,65,1811,63,"lng"],[1805,68,1811,66],[1805,71,1811,69,"codes"],[1805,76,1811,74],[1805,77,1811,75],[1805,78,1811,76],[1805,79,1811,77],[1806,6,1812,4],[1807,6,1813,4],[1807,10,1813,8],[1807,11,1813,9],[1807,15,1813,13],[1807,16,1813,14,"services"],[1807,24,1813,22],[1807,25,1813,23,"languageDetector"],[1807,41,1813,39],[1807,45,1813,43],[1807,46,1813,44],[1807,50,1813,48],[1807,51,1813,49,"options"],[1807,58,1813,56],[1807,59,1813,57,"lng"],[1807,62,1813,60],[1807,64,1813,62],[1808,8,1814,6],[1808,12,1814,10],[1808,13,1814,11,"logger"],[1808,19,1814,17],[1808,20,1814,18,"warn"],[1808,24,1814,22],[1808,25,1814,23],[1808,82,1814,80],[1808,83,1814,81],[1809,6,1815,4],[1810,6,1816,4],[1810,12,1816,10,"storeApi"],[1810,20,1816,18],[1810,23,1816,21],[1810,24,1816,22],[1810,37,1816,35],[1810,39,1816,37],[1810,58,1816,56],[1810,60,1816,58],[1810,79,1816,77],[1810,81,1816,79],[1810,100,1816,98],[1810,101,1816,99],[1811,6,1817,4,"storeApi"],[1811,14,1817,12],[1811,15,1817,13,"forEach"],[1811,22,1817,20],[1811,23,1817,21,"fcName"],[1811,29,1817,27],[1811,33,1817,31],[1812,8,1818,6],[1812,12,1818,10],[1812,13,1818,11,"fcName"],[1812,19,1818,17],[1812,20,1818,18],[1812,23,1818,21],[1812,24,1818,22],[1812,27,1818,25,"args"],[1812,31,1818,29],[1812,36,1818,34],[1812,40,1818,38],[1812,41,1818,39,"store"],[1812,46,1818,44],[1812,47,1818,45,"fcName"],[1812,53,1818,51],[1812,54,1818,52],[1812,55,1818,53],[1812,58,1818,56,"args"],[1812,62,1818,60],[1812,63,1818,61],[1813,6,1819,4],[1813,7,1819,5],[1813,8,1819,6],[1814,6,1820,4],[1814,12,1820,10,"storeApiChained"],[1814,27,1820,25],[1814,30,1820,28],[1814,31,1820,29],[1814,44,1820,42],[1814,46,1820,44],[1814,60,1820,58],[1814,62,1820,60],[1814,81,1820,79],[1814,83,1820,81],[1814,105,1820,103],[1814,106,1820,104],[1815,6,1821,4,"storeApiChained"],[1815,21,1821,19],[1815,22,1821,20,"forEach"],[1815,29,1821,27],[1815,30,1821,28,"fcName"],[1815,36,1821,34],[1815,40,1821,38],[1816,8,1822,6],[1816,12,1822,10],[1816,13,1822,11,"fcName"],[1816,19,1822,17],[1816,20,1822,18],[1816,23,1822,21],[1816,24,1822,22],[1816,27,1822,25,"args"],[1816,31,1822,29],[1816,36,1822,34],[1817,10,1823,8],[1817,14,1823,12],[1817,15,1823,13,"store"],[1817,20,1823,18],[1817,21,1823,19,"fcName"],[1817,27,1823,25],[1817,28,1823,26],[1817,29,1823,27],[1817,32,1823,30,"args"],[1817,36,1823,34],[1817,37,1823,35],[1818,10,1824,8],[1818,17,1824,15],[1818,21,1824,19],[1819,8,1825,6],[1819,9,1825,7],[1820,6,1826,4],[1820,7,1826,5],[1820,8,1826,6],[1821,6,1827,4],[1821,12,1827,10,"deferred"],[1821,20,1827,18],[1821,23,1827,21,"defer"],[1821,28,1827,26],[1821,29,1827,27],[1821,30,1827,28],[1822,6,1828,4],[1822,12,1828,10,"load"],[1822,16,1828,14],[1822,19,1828,17,"load"],[1822,20,1828,17],[1822,25,1828,23],[1823,8,1829,6],[1823,14,1829,12,"finish"],[1823,20,1829,18],[1823,23,1829,21,"finish"],[1823,24,1829,22,"err"],[1823,27,1829,25],[1823,29,1829,27,"t"],[1823,30,1829,28],[1823,35,1829,33],[1824,10,1830,8],[1824,14,1830,12],[1824,15,1830,13,"isInitializing"],[1824,29,1830,27],[1824,32,1830,30],[1824,37,1830,35],[1825,10,1831,8],[1825,14,1831,12],[1825,18,1831,16],[1825,19,1831,17,"isInitialized"],[1825,32,1831,30],[1825,36,1831,34],[1825,37,1831,35],[1825,41,1831,39],[1825,42,1831,40,"initializedStoreOnce"],[1825,62,1831,60],[1825,64,1831,62],[1825,68,1831,66],[1825,69,1831,67,"logger"],[1825,75,1831,73],[1825,76,1831,74,"warn"],[1825,80,1831,78],[1825,81,1831,79],[1825,152,1831,150],[1825,153,1831,151],[1826,10,1832,8],[1826,14,1832,12],[1826,15,1832,13,"isInitialized"],[1826,28,1832,26],[1826,31,1832,29],[1826,35,1832,33],[1827,10,1833,8],[1827,14,1833,12],[1827,15,1833,13],[1827,19,1833,17],[1827,20,1833,18,"options"],[1827,27,1833,25],[1827,28,1833,26,"isClone"],[1827,35,1833,33],[1827,37,1833,35],[1827,41,1833,39],[1827,42,1833,40,"logger"],[1827,48,1833,46],[1827,49,1833,47,"log"],[1827,52,1833,50],[1827,53,1833,51],[1827,66,1833,64],[1827,68,1833,66],[1827,72,1833,70],[1827,73,1833,71,"options"],[1827,80,1833,78],[1827,81,1833,79],[1828,10,1834,8],[1828,14,1834,12],[1828,15,1834,13,"emit"],[1828,19,1834,17],[1828,20,1834,18],[1828,33,1834,31],[1828,35,1834,33],[1828,39,1834,37],[1828,40,1834,38,"options"],[1828,47,1834,45],[1828,48,1834,46],[1829,10,1835,8,"deferred"],[1829,18,1835,16],[1829,19,1835,17,"resolve"],[1829,26,1835,24],[1829,27,1835,25,"t"],[1829,28,1835,26],[1829,29,1835,27],[1830,10,1836,8,"callback"],[1830,18,1836,16],[1830,19,1836,17,"err"],[1830,22,1836,20],[1830,24,1836,22,"t"],[1830,25,1836,23],[1830,26,1836,24],[1831,8,1837,6],[1831,9,1837,7],[1832,8,1838,6],[1832,12,1838,10],[1832,16,1838,14],[1832,17,1838,15,"languages"],[1832,26,1838,24],[1832,30,1838,28],[1832,31,1838,29],[1832,35,1838,33],[1832,36,1838,34,"isInitialized"],[1832,49,1838,47],[1832,51,1838,49],[1832,58,1838,56,"finish"],[1832,64,1838,62],[1832,65,1838,63],[1832,69,1838,67],[1832,71,1838,69],[1832,75,1838,73],[1832,76,1838,74,"t"],[1832,77,1838,75],[1832,78,1838,76,"bind"],[1832,82,1838,80],[1832,83,1838,81],[1832,87,1838,85],[1832,88,1838,86],[1832,89,1838,87],[1833,8,1839,6],[1833,12,1839,10],[1833,13,1839,11,"changeLanguage"],[1833,27,1839,25],[1833,28,1839,26],[1833,32,1839,30],[1833,33,1839,31,"options"],[1833,40,1839,38],[1833,41,1839,39,"lng"],[1833,44,1839,42],[1833,46,1839,44,"finish"],[1833,52,1839,50],[1833,53,1839,51],[1834,6,1840,4],[1834,7,1840,5],[1835,6,1841,4],[1835,10,1841,8],[1835,14,1841,12],[1835,15,1841,13,"options"],[1835,22,1841,20],[1835,23,1841,21,"resources"],[1835,32,1841,30],[1835,36,1841,34],[1835,37,1841,35],[1835,41,1841,39],[1835,42,1841,40,"options"],[1835,49,1841,47],[1835,50,1841,48,"initAsync"],[1835,59,1841,57],[1835,61,1841,59],[1836,8,1842,6,"load"],[1836,12,1842,10],[1836,13,1842,11],[1836,14,1842,12],[1837,6,1843,4],[1837,7,1843,5],[1837,13,1843,11],[1838,8,1844,6,"setTimeout"],[1838,18,1844,16],[1838,19,1844,17,"load"],[1838,23,1844,21],[1838,25,1844,23],[1838,26,1844,24],[1838,27,1844,25],[1839,6,1845,4],[1840,6,1846,4],[1840,13,1846,11,"deferred"],[1840,21,1846,19],[1841,4,1847,2],[1842,4,1848,2,"loadResources"],[1842,17,1848,15,"loadResources"],[1842,18,1848,16,"language"],[1842,26,1848,24],[1842,28,1848,26,"callback"],[1842,36,1848,34],[1842,39,1848,37,"noop"],[1842,43,1848,41],[1842,45,1848,43],[1843,6,1849,4],[1843,10,1849,8,"usedCallback"],[1843,22,1849,20],[1843,25,1849,23,"callback"],[1843,33,1849,31],[1844,6,1850,4],[1844,12,1850,10,"usedLng"],[1844,19,1850,17],[1844,22,1850,20,"isString"],[1844,30,1850,28],[1844,31,1850,29,"language"],[1844,39,1850,37],[1844,40,1850,38],[1844,43,1850,41,"language"],[1844,51,1850,49],[1844,54,1850,52],[1844,58,1850,56],[1844,59,1850,57,"language"],[1844,67,1850,65],[1845,6,1851,4],[1845,10,1851,8],[1845,17,1851,15,"language"],[1845,25,1851,23],[1845,30,1851,28],[1845,40,1851,38],[1845,42,1851,40,"usedCallback"],[1845,54,1851,52],[1845,57,1851,55,"language"],[1845,65,1851,63],[1846,6,1852,4],[1846,10,1852,8],[1846,11,1852,9],[1846,15,1852,13],[1846,16,1852,14,"options"],[1846,23,1852,21],[1846,24,1852,22,"resources"],[1846,33,1852,31],[1846,37,1852,35],[1846,41,1852,39],[1846,42,1852,40,"options"],[1846,49,1852,47],[1846,50,1852,48,"partialBundledLanguages"],[1846,73,1852,71],[1846,75,1852,73],[1847,8,1853,6],[1847,12,1853,10,"usedLng"],[1847,19,1853,17],[1847,21,1853,19,"toLowerCase"],[1847,32,1853,30],[1847,33,1853,31],[1847,34,1853,32],[1847,39,1853,37],[1847,47,1853,45],[1847,52,1853,50],[1847,53,1853,51],[1847,57,1853,55],[1847,58,1853,56,"options"],[1847,65,1853,63],[1847,66,1853,64,"preload"],[1847,73,1853,71],[1847,77,1853,75],[1847,81,1853,79],[1847,82,1853,80,"options"],[1847,89,1853,87],[1847,90,1853,88,"preload"],[1847,97,1853,95],[1847,98,1853,96,"length"],[1847,104,1853,102],[1847,109,1853,107],[1847,110,1853,108],[1847,111,1853,109],[1847,113,1853,111],[1847,120,1853,118,"usedCallback"],[1847,132,1853,130],[1847,133,1853,131],[1847,134,1853,132],[1848,8,1854,6],[1848,14,1854,12,"toLoad"],[1848,20,1854,18],[1848,23,1854,21],[1848,25,1854,23],[1849,8,1855,6],[1849,14,1855,12,"append"],[1849,20,1855,18],[1849,23,1855,21,"lng"],[1849,26,1855,24],[1849,30,1855,28],[1850,10,1856,8],[1850,14,1856,12],[1850,15,1856,13,"lng"],[1850,18,1856,16],[1850,20,1856,18],[1851,10,1857,8],[1851,14,1857,12,"lng"],[1851,17,1857,15],[1851,22,1857,20],[1851,30,1857,28],[1851,32,1857,30],[1852,10,1858,8],[1852,16,1858,14,"lngs"],[1852,20,1858,18],[1852,23,1858,21],[1852,27,1858,25],[1852,28,1858,26,"services"],[1852,36,1858,34],[1852,37,1858,35,"languageUtils"],[1852,50,1858,48],[1852,51,1858,49,"toResolveHierarchy"],[1852,69,1858,67],[1852,70,1858,68,"lng"],[1852,73,1858,71],[1852,74,1858,72],[1853,10,1859,8,"lngs"],[1853,14,1859,12],[1853,15,1859,13,"forEach"],[1853,22,1859,20],[1853,23,1859,21,"l"],[1853,24,1859,22],[1853,28,1859,26],[1854,12,1860,10],[1854,16,1860,14,"l"],[1854,17,1860,15],[1854,22,1860,20],[1854,30,1860,28],[1854,32,1860,30],[1855,12,1861,10],[1855,16,1861,14,"toLoad"],[1855,22,1861,20],[1855,23,1861,21,"indexOf"],[1855,30,1861,28],[1855,31,1861,29,"l"],[1855,32,1861,30],[1855,33,1861,31],[1855,36,1861,34],[1855,37,1861,35],[1855,39,1861,37,"toLoad"],[1855,45,1861,43],[1855,46,1861,44,"push"],[1855,50,1861,48],[1855,51,1861,49,"l"],[1855,52,1861,50],[1855,53,1861,51],[1856,10,1862,8],[1856,11,1862,9],[1856,12,1862,10],[1857,8,1863,6],[1857,9,1863,7],[1858,8,1864,6],[1858,12,1864,10],[1858,13,1864,11,"usedLng"],[1858,20,1864,18],[1858,22,1864,20],[1859,10,1865,8],[1859,16,1865,14,"fallbacks"],[1859,25,1865,23],[1859,28,1865,26],[1859,32,1865,30],[1859,33,1865,31,"services"],[1859,41,1865,39],[1859,42,1865,40,"languageUtils"],[1859,55,1865,53],[1859,56,1865,54,"getFallbackCodes"],[1859,72,1865,70],[1859,73,1865,71],[1859,77,1865,75],[1859,78,1865,76,"options"],[1859,85,1865,83],[1859,86,1865,84,"fallbackLng"],[1859,97,1865,95],[1859,98,1865,96],[1860,10,1866,8,"fallbacks"],[1860,19,1866,17],[1860,20,1866,18,"forEach"],[1860,27,1866,25],[1860,28,1866,26,"l"],[1860,29,1866,27],[1860,33,1866,31,"append"],[1860,39,1866,37],[1860,40,1866,38,"l"],[1860,41,1866,39],[1860,42,1866,40],[1860,43,1866,41],[1861,8,1867,6],[1861,9,1867,7],[1861,15,1867,13],[1862,10,1868,8,"append"],[1862,16,1868,14],[1862,17,1868,15,"usedLng"],[1862,24,1868,22],[1862,25,1868,23],[1863,8,1869,6],[1864,8,1870,6],[1864,12,1870,10],[1864,13,1870,11,"options"],[1864,20,1870,18],[1864,21,1870,19,"preload"],[1864,28,1870,26],[1864,30,1870,28,"forEach"],[1864,37,1870,35],[1864,40,1870,38,"l"],[1864,41,1870,39],[1864,45,1870,43,"append"],[1864,51,1870,49],[1864,52,1870,50,"l"],[1864,53,1870,51],[1864,54,1870,52],[1864,55,1870,53],[1865,8,1871,6],[1865,12,1871,10],[1865,13,1871,11,"services"],[1865,21,1871,19],[1865,22,1871,20,"backendConnector"],[1865,38,1871,36],[1865,39,1871,37,"load"],[1865,43,1871,41],[1865,44,1871,42,"toLoad"],[1865,50,1871,48],[1865,52,1871,50],[1865,56,1871,54],[1865,57,1871,55,"options"],[1865,64,1871,62],[1865,65,1871,63,"ns"],[1865,67,1871,65],[1865,69,1871,67,"e"],[1865,70,1871,68],[1865,74,1871,72],[1866,10,1872,8],[1866,14,1872,12],[1866,15,1872,13,"e"],[1866,16,1872,14],[1866,20,1872,18],[1866,21,1872,19],[1866,25,1872,23],[1866,26,1872,24,"resolvedLanguage"],[1866,42,1872,40],[1866,46,1872,44],[1866,50,1872,48],[1866,51,1872,49,"language"],[1866,59,1872,57],[1866,61,1872,59],[1866,65,1872,63],[1866,66,1872,64,"setResolvedLanguage"],[1866,85,1872,83],[1866,86,1872,84],[1866,90,1872,88],[1866,91,1872,89,"language"],[1866,99,1872,97],[1866,100,1872,98],[1867,10,1873,8,"usedCallback"],[1867,22,1873,20],[1867,23,1873,21,"e"],[1867,24,1873,22],[1867,25,1873,23],[1868,8,1874,6],[1868,9,1874,7],[1868,10,1874,8],[1869,6,1875,4],[1869,7,1875,5],[1869,13,1875,11],[1870,8,1876,6,"usedCallback"],[1870,20,1876,18],[1870,21,1876,19],[1870,25,1876,23],[1870,26,1876,24],[1871,6,1877,4],[1872,4,1878,2],[1873,4,1879,2,"reloadResources"],[1873,19,1879,17,"reloadResources"],[1873,20,1879,18,"lngs"],[1873,24,1879,22],[1873,26,1879,24,"ns"],[1873,28,1879,26],[1873,30,1879,28,"callback"],[1873,38,1879,36],[1873,40,1879,38],[1874,6,1880,4],[1874,12,1880,10,"deferred"],[1874,20,1880,18],[1874,23,1880,21,"defer"],[1874,28,1880,26],[1874,29,1880,27],[1874,30,1880,28],[1875,6,1881,4],[1875,10,1881,8],[1875,17,1881,15,"lngs"],[1875,21,1881,19],[1875,26,1881,24],[1875,36,1881,34],[1875,38,1881,36],[1876,8,1882,6,"callback"],[1876,16,1882,14],[1876,19,1882,17,"lngs"],[1876,23,1882,21],[1877,8,1883,6,"lngs"],[1877,12,1883,10],[1877,15,1883,13,"undefined"],[1877,24,1883,22],[1878,6,1884,4],[1879,6,1885,4],[1879,10,1885,8],[1879,17,1885,15,"ns"],[1879,19,1885,17],[1879,24,1885,22],[1879,34,1885,32],[1879,36,1885,34],[1880,8,1886,6,"callback"],[1880,16,1886,14],[1880,19,1886,17,"ns"],[1880,21,1886,19],[1881,8,1887,6,"ns"],[1881,10,1887,8],[1881,13,1887,11,"undefined"],[1881,22,1887,20],[1882,6,1888,4],[1883,6,1889,4],[1883,10,1889,8],[1883,11,1889,9,"lngs"],[1883,15,1889,13],[1883,17,1889,15,"lngs"],[1883,21,1889,19],[1883,24,1889,22],[1883,28,1889,26],[1883,29,1889,27,"languages"],[1883,38,1889,36],[1884,6,1890,4],[1884,10,1890,8],[1884,11,1890,9,"ns"],[1884,13,1890,11],[1884,15,1890,13,"ns"],[1884,17,1890,15],[1884,20,1890,18],[1884,24,1890,22],[1884,25,1890,23,"options"],[1884,32,1890,30],[1884,33,1890,31,"ns"],[1884,35,1890,33],[1885,6,1891,4],[1885,10,1891,8],[1885,11,1891,9,"callback"],[1885,19,1891,17],[1885,21,1891,19,"callback"],[1885,29,1891,27],[1885,32,1891,30,"noop"],[1885,36,1891,34],[1886,6,1892,4],[1886,10,1892,8],[1886,11,1892,9,"services"],[1886,19,1892,17],[1886,20,1892,18,"backendConnector"],[1886,36,1892,34],[1886,37,1892,35,"reload"],[1886,43,1892,41],[1886,44,1892,42,"lngs"],[1886,48,1892,46],[1886,50,1892,48,"ns"],[1886,52,1892,50],[1886,54,1892,52,"err"],[1886,57,1892,55],[1886,61,1892,59],[1887,8,1893,6,"deferred"],[1887,16,1893,14],[1887,17,1893,15,"resolve"],[1887,24,1893,22],[1887,25,1893,23],[1887,26,1893,24],[1888,8,1894,6,"callback"],[1888,16,1894,14],[1888,17,1894,15,"err"],[1888,20,1894,18],[1888,21,1894,19],[1889,6,1895,4],[1889,7,1895,5],[1889,8,1895,6],[1890,6,1896,4],[1890,13,1896,11,"deferred"],[1890,21,1896,19],[1891,4,1897,2],[1892,4,1898,2,"use"],[1892,7,1898,5,"use"],[1892,8,1898,6,"module"],[1892,14,1898,12],[1892,16,1898,14],[1893,6,1899,4],[1893,10,1899,8],[1893,11,1899,9,"module"],[1893,17,1899,15],[1893,19,1899,17],[1893,25,1899,23],[1893,29,1899,27,"Error"],[1893,34,1899,32],[1893,35,1899,33],[1893,130,1899,128],[1893,131,1899,129],[1894,6,1900,4],[1894,10,1900,8],[1894,11,1900,9,"module"],[1894,17,1900,15],[1894,18,1900,16,"type"],[1894,22,1900,20],[1894,24,1900,22],[1894,30,1900,28],[1894,34,1900,32,"Error"],[1894,39,1900,37],[1894,40,1900,38],[1894,130,1900,128],[1894,131,1900,129],[1895,6,1901,4],[1895,10,1901,8,"module"],[1895,16,1901,14],[1895,17,1901,15,"type"],[1895,21,1901,19],[1895,26,1901,24],[1895,35,1901,33],[1895,37,1901,35],[1896,8,1902,6],[1896,12,1902,10],[1896,13,1902,11,"modules"],[1896,20,1902,18],[1896,21,1902,19,"backend"],[1896,28,1902,26],[1896,31,1902,29,"module"],[1896,37,1902,35],[1897,6,1903,4],[1898,6,1904,4],[1898,10,1904,8,"module"],[1898,16,1904,14],[1898,17,1904,15,"type"],[1898,21,1904,19],[1898,26,1904,24],[1898,34,1904,32],[1898,38,1904,36,"module"],[1898,44,1904,42],[1898,45,1904,43,"log"],[1898,48,1904,46],[1898,52,1904,50,"module"],[1898,58,1904,56],[1898,59,1904,57,"warn"],[1898,63,1904,61],[1898,67,1904,65,"module"],[1898,73,1904,71],[1898,74,1904,72,"error"],[1898,79,1904,77],[1898,81,1904,79],[1899,8,1905,6],[1899,12,1905,10],[1899,13,1905,11,"modules"],[1899,20,1905,18],[1899,21,1905,19,"logger"],[1899,27,1905,25],[1899,30,1905,28,"module"],[1899,36,1905,34],[1900,6,1906,4],[1901,6,1907,4],[1901,10,1907,8,"module"],[1901,16,1907,14],[1901,17,1907,15,"type"],[1901,21,1907,19],[1901,26,1907,24],[1901,44,1907,42],[1901,46,1907,44],[1902,8,1908,6],[1902,12,1908,10],[1902,13,1908,11,"modules"],[1902,20,1908,18],[1902,21,1908,19,"languageDetector"],[1902,37,1908,35],[1902,40,1908,38,"module"],[1902,46,1908,44],[1903,6,1909,4],[1904,6,1910,4],[1904,10,1910,8,"module"],[1904,16,1910,14],[1904,17,1910,15,"type"],[1904,21,1910,19],[1904,26,1910,24],[1904,38,1910,36],[1904,40,1910,38],[1905,8,1911,6],[1905,12,1911,10],[1905,13,1911,11,"modules"],[1905,20,1911,18],[1905,21,1911,19,"i18nFormat"],[1905,31,1911,29],[1905,34,1911,32,"module"],[1905,40,1911,38],[1906,6,1912,4],[1907,6,1913,4],[1907,10,1913,8,"module"],[1907,16,1913,14],[1907,17,1913,15,"type"],[1907,21,1913,19],[1907,26,1913,24],[1907,41,1913,39],[1907,43,1913,41],[1908,8,1914,6,"postProcessor"],[1908,21,1914,19],[1908,22,1914,20,"addPostProcessor"],[1908,38,1914,36],[1908,39,1914,37,"module"],[1908,45,1914,43],[1908,46,1914,44],[1909,6,1915,4],[1910,6,1916,4],[1910,10,1916,8,"module"],[1910,16,1916,14],[1910,17,1916,15,"type"],[1910,21,1916,19],[1910,26,1916,24],[1910,37,1916,35],[1910,39,1916,37],[1911,8,1917,6],[1911,12,1917,10],[1911,13,1917,11,"modules"],[1911,20,1917,18],[1911,21,1917,19,"formatter"],[1911,30,1917,28],[1911,33,1917,31,"module"],[1911,39,1917,37],[1912,6,1918,4],[1913,6,1919,4],[1913,10,1919,8,"module"],[1913,16,1919,14],[1913,17,1919,15,"type"],[1913,21,1919,19],[1913,26,1919,24],[1913,36,1919,34],[1913,38,1919,36],[1914,8,1920,6],[1914,12,1920,10],[1914,13,1920,11,"modules"],[1914,20,1920,18],[1914,21,1920,19,"external"],[1914,29,1920,27],[1914,30,1920,28,"push"],[1914,34,1920,32],[1914,35,1920,33,"module"],[1914,41,1920,39],[1914,42,1920,40],[1915,6,1921,4],[1916,6,1922,4],[1916,13,1922,11],[1916,17,1922,15],[1917,4,1923,2],[1918,4,1924,2,"setResolvedLanguage"],[1918,23,1924,21,"setResolvedLanguage"],[1918,24,1924,22,"l"],[1918,25,1924,23],[1918,27,1924,25],[1919,6,1925,4],[1919,10,1925,8],[1919,11,1925,9,"l"],[1919,12,1925,10],[1919,16,1925,14],[1919,17,1925,15],[1919,21,1925,19],[1919,22,1925,20,"languages"],[1919,31,1925,29],[1919,33,1925,31],[1920,6,1926,4],[1920,10,1926,8],[1920,11,1926,9],[1920,19,1926,17],[1920,21,1926,19],[1920,26,1926,24],[1920,27,1926,25],[1920,28,1926,26,"indexOf"],[1920,35,1926,33],[1920,36,1926,34,"l"],[1920,37,1926,35],[1920,38,1926,36],[1920,41,1926,39],[1920,42,1926,40],[1920,43,1926,41],[1920,45,1926,43],[1921,6,1927,4],[1921,11,1927,9],[1921,15,1927,13,"li"],[1921,17,1927,15],[1921,20,1927,18],[1921,21,1927,19],[1921,23,1927,21,"li"],[1921,25,1927,23],[1921,28,1927,26],[1921,32,1927,30],[1921,33,1927,31,"languages"],[1921,42,1927,40],[1921,43,1927,41,"length"],[1921,49,1927,47],[1921,51,1927,49,"li"],[1921,53,1927,51],[1921,55,1927,53],[1921,57,1927,55],[1922,8,1928,6],[1922,14,1928,12,"lngInLngs"],[1922,23,1928,21],[1922,26,1928,24],[1922,30,1928,28],[1922,31,1928,29,"languages"],[1922,40,1928,38],[1922,41,1928,39,"li"],[1922,43,1928,41],[1922,44,1928,42],[1923,8,1929,6],[1923,12,1929,10],[1923,13,1929,11],[1923,21,1929,19],[1923,23,1929,21],[1923,28,1929,26],[1923,29,1929,27],[1923,30,1929,28,"indexOf"],[1923,37,1929,35],[1923,38,1929,36,"lngInLngs"],[1923,47,1929,45],[1923,48,1929,46],[1923,51,1929,49],[1923,52,1929,50],[1923,53,1929,51],[1923,55,1929,53],[1924,8,1930,6],[1924,12,1930,10],[1924,16,1930,14],[1924,17,1930,15,"store"],[1924,22,1930,20],[1924,23,1930,21,"hasLanguageSomeTranslations"],[1924,50,1930,48],[1924,51,1930,49,"lngInLngs"],[1924,60,1930,58],[1924,61,1930,59],[1924,63,1930,61],[1925,10,1931,8],[1925,14,1931,12],[1925,15,1931,13,"resolvedLanguage"],[1925,31,1931,29],[1925,34,1931,32,"lngInLngs"],[1925,43,1931,41],[1926,10,1932,8],[1927,8,1933,6],[1928,6,1934,4],[1929,6,1935,4],[1929,10,1935,8],[1929,11,1935,9],[1929,15,1935,13],[1929,16,1935,14,"resolvedLanguage"],[1929,32,1935,30],[1929,36,1935,34],[1929,40,1935,38],[1929,41,1935,39,"languages"],[1929,50,1935,48],[1929,51,1935,49,"indexOf"],[1929,58,1935,56],[1929,59,1935,57,"l"],[1929,60,1935,58],[1929,61,1935,59],[1929,64,1935,62],[1929,65,1935,63],[1929,69,1935,67],[1929,73,1935,71],[1929,74,1935,72,"store"],[1929,79,1935,77],[1929,80,1935,78,"hasLanguageSomeTranslations"],[1929,107,1935,105],[1929,108,1935,106,"l"],[1929,109,1935,107],[1929,110,1935,108],[1929,112,1935,110],[1930,8,1936,6],[1930,12,1936,10],[1930,13,1936,11,"resolvedLanguage"],[1930,29,1936,27],[1930,32,1936,30,"l"],[1930,33,1936,31],[1931,8,1937,6],[1931,12,1937,10],[1931,13,1937,11,"languages"],[1931,22,1937,20],[1931,23,1937,21,"unshift"],[1931,30,1937,28],[1931,31,1937,29,"l"],[1931,32,1937,30],[1931,33,1937,31],[1932,6,1938,4],[1933,4,1939,2],[1934,4,1940,2,"changeLanguage"],[1934,18,1940,16,"changeLanguage"],[1934,19,1940,17,"lng"],[1934,22,1940,20],[1934,24,1940,22,"callback"],[1934,32,1940,30],[1934,34,1940,32],[1935,6,1941,4],[1935,10,1941,8],[1935,11,1941,9,"isLanguageChangingTo"],[1935,31,1941,29],[1935,34,1941,32,"lng"],[1935,37,1941,35],[1936,6,1942,4],[1936,12,1942,10,"deferred"],[1936,20,1942,18],[1936,23,1942,21,"defer"],[1936,28,1942,26],[1936,29,1942,27],[1936,30,1942,28],[1937,6,1943,4],[1937,10,1943,8],[1937,11,1943,9,"emit"],[1937,15,1943,13],[1937,16,1943,14],[1937,34,1943,32],[1937,36,1943,34,"lng"],[1937,39,1943,37],[1937,40,1943,38],[1938,6,1944,4],[1938,12,1944,10,"setLngProps"],[1938,23,1944,21],[1938,26,1944,24,"l"],[1938,27,1944,25],[1938,31,1944,29],[1939,8,1945,6],[1939,12,1945,10],[1939,13,1945,11,"language"],[1939,21,1945,19],[1939,24,1945,22,"l"],[1939,25,1945,23],[1940,8,1946,6],[1940,12,1946,10],[1940,13,1946,11,"languages"],[1940,22,1946,20],[1940,25,1946,23],[1940,29,1946,27],[1940,30,1946,28,"services"],[1940,38,1946,36],[1940,39,1946,37,"languageUtils"],[1940,52,1946,50],[1940,53,1946,51,"toResolveHierarchy"],[1940,71,1946,69],[1940,72,1946,70,"l"],[1940,73,1946,71],[1940,74,1946,72],[1941,8,1947,6],[1941,12,1947,10],[1941,13,1947,11,"resolvedLanguage"],[1941,29,1947,27],[1941,32,1947,30,"undefined"],[1941,41,1947,39],[1942,8,1948,6],[1942,12,1948,10],[1942,13,1948,11,"setResolvedLanguage"],[1942,32,1948,30],[1942,33,1948,31,"l"],[1942,34,1948,32],[1942,35,1948,33],[1943,6,1949,4],[1943,7,1949,5],[1944,6,1950,4],[1944,12,1950,10,"done"],[1944,16,1950,14],[1944,19,1950,17,"done"],[1944,20,1950,18,"err"],[1944,23,1950,21],[1944,25,1950,23,"l"],[1944,26,1950,24],[1944,31,1950,29],[1945,8,1951,6],[1945,12,1951,10,"l"],[1945,13,1951,11],[1945,15,1951,13],[1946,10,1952,8],[1946,14,1952,12],[1946,18,1952,16],[1946,19,1952,17,"isLanguageChangingTo"],[1946,39,1952,37],[1946,44,1952,42,"lng"],[1946,47,1952,45],[1946,49,1952,47],[1947,12,1953,10,"setLngProps"],[1947,23,1953,21],[1947,24,1953,22,"l"],[1947,25,1953,23],[1947,26,1953,24],[1948,12,1954,10],[1948,16,1954,14],[1948,17,1954,15,"translator"],[1948,27,1954,25],[1948,28,1954,26,"changeLanguage"],[1948,42,1954,40],[1948,43,1954,41,"l"],[1948,44,1954,42],[1948,45,1954,43],[1949,12,1955,10],[1949,16,1955,14],[1949,17,1955,15,"isLanguageChangingTo"],[1949,37,1955,35],[1949,40,1955,38,"undefined"],[1949,49,1955,47],[1950,12,1956,10],[1950,16,1956,14],[1950,17,1956,15,"emit"],[1950,21,1956,19],[1950,22,1956,20],[1950,39,1956,37],[1950,41,1956,39,"l"],[1950,42,1956,40],[1950,43,1956,41],[1951,12,1957,10],[1951,16,1957,14],[1951,17,1957,15,"logger"],[1951,23,1957,21],[1951,24,1957,22,"log"],[1951,27,1957,25],[1951,28,1957,26],[1951,45,1957,43],[1951,47,1957,45,"l"],[1951,48,1957,46],[1951,49,1957,47],[1952,10,1958,8],[1953,8,1959,6],[1953,9,1959,7],[1953,15,1959,13],[1954,10,1960,8],[1954,14,1960,12],[1954,15,1960,13,"isLanguageChangingTo"],[1954,35,1960,33],[1954,38,1960,36,"undefined"],[1954,47,1960,45],[1955,8,1961,6],[1956,8,1962,6,"deferred"],[1956,16,1962,14],[1956,17,1962,15,"resolve"],[1956,24,1962,22],[1956,25,1962,23],[1956,26,1962,24],[1956,29,1962,27,"args"],[1956,33,1962,31],[1956,38,1962,36],[1956,42,1962,40],[1956,43,1962,41,"t"],[1956,44,1962,42],[1956,45,1962,43],[1956,48,1962,46,"args"],[1956,52,1962,50],[1956,53,1962,51],[1956,54,1962,52],[1957,8,1963,6],[1957,12,1963,10,"callback"],[1957,20,1963,18],[1957,22,1963,20,"callback"],[1957,30,1963,28],[1957,31,1963,29,"err"],[1957,34,1963,32],[1957,36,1963,34],[1957,37,1963,35],[1957,40,1963,38,"args"],[1957,44,1963,42],[1957,49,1963,47],[1957,53,1963,51],[1957,54,1963,52,"t"],[1957,55,1963,53],[1957,56,1963,54],[1957,59,1963,57,"args"],[1957,63,1963,61],[1957,64,1963,62],[1957,65,1963,63],[1958,6,1964,4],[1958,7,1964,5],[1959,6,1965,4],[1959,12,1965,10,"setLng"],[1959,18,1965,16],[1959,21,1965,19,"lngs"],[1959,25,1965,23],[1959,29,1965,27],[1960,8,1966,6],[1960,12,1966,10],[1960,13,1966,11,"lng"],[1960,16,1966,14],[1960,20,1966,18],[1960,21,1966,19,"lngs"],[1960,25,1966,23],[1960,29,1966,27],[1960,33,1966,31],[1960,34,1966,32,"services"],[1960,42,1966,40],[1960,43,1966,41,"languageDetector"],[1960,59,1966,57],[1960,61,1966,59,"lngs"],[1960,65,1966,63],[1960,68,1966,66],[1960,70,1966,68],[1961,8,1967,6],[1961,14,1967,12,"fl"],[1961,16,1967,14],[1961,19,1967,17,"isString"],[1961,27,1967,25],[1961,28,1967,26,"lngs"],[1961,32,1967,30],[1961,33,1967,31],[1961,36,1967,34,"lngs"],[1961,40,1967,38],[1961,43,1967,41,"lngs"],[1961,47,1967,45],[1961,51,1967,49,"lngs"],[1961,55,1967,53],[1961,56,1967,54],[1961,57,1967,55],[1961,58,1967,56],[1962,8,1968,6],[1962,14,1968,12,"l"],[1962,15,1968,13],[1962,18,1968,16],[1962,22,1968,20],[1962,23,1968,21,"store"],[1962,28,1968,26],[1962,29,1968,27,"hasLanguageSomeTranslations"],[1962,56,1968,54],[1962,57,1968,55,"fl"],[1962,59,1968,57],[1962,60,1968,58],[1962,63,1968,61,"fl"],[1962,65,1968,63],[1962,68,1968,66],[1962,72,1968,70],[1962,73,1968,71,"services"],[1962,81,1968,79],[1962,82,1968,80,"languageUtils"],[1962,95,1968,93],[1962,96,1968,94,"getBestMatchFromCodes"],[1962,117,1968,115],[1962,118,1968,116,"isString"],[1962,126,1968,124],[1962,127,1968,125,"lngs"],[1962,131,1968,129],[1962,132,1968,130],[1962,135,1968,133],[1962,136,1968,134,"lngs"],[1962,140,1968,138],[1962,141,1968,139],[1962,144,1968,142,"lngs"],[1962,148,1968,146],[1962,149,1968,147],[1963,8,1969,6],[1963,12,1969,10,"l"],[1963,13,1969,11],[1963,15,1969,13],[1964,10,1970,8],[1964,14,1970,12],[1964,15,1970,13],[1964,19,1970,17],[1964,20,1970,18,"language"],[1964,28,1970,26],[1964,30,1970,28],[1965,12,1971,10,"setLngProps"],[1965,23,1971,21],[1965,24,1971,22,"l"],[1965,25,1971,23],[1965,26,1971,24],[1966,10,1972,8],[1967,10,1973,8],[1967,14,1973,12],[1967,15,1973,13],[1967,19,1973,17],[1967,20,1973,18,"translator"],[1967,30,1973,28],[1967,31,1973,29,"language"],[1967,39,1973,37],[1967,41,1973,39],[1967,45,1973,43],[1967,46,1973,44,"translator"],[1967,56,1973,54],[1967,57,1973,55,"changeLanguage"],[1967,71,1973,69],[1967,72,1973,70,"l"],[1967,73,1973,71],[1967,74,1973,72],[1968,10,1974,8],[1968,14,1974,12],[1968,15,1974,13,"services"],[1968,23,1974,21],[1968,24,1974,22,"languageDetector"],[1968,40,1974,38],[1968,42,1974,40,"cacheUserLanguage"],[1968,59,1974,57],[1968,62,1974,60,"l"],[1968,63,1974,61],[1968,64,1974,62],[1969,8,1975,6],[1970,8,1976,6],[1970,12,1976,10],[1970,13,1976,11,"loadResources"],[1970,26,1976,24],[1970,27,1976,25,"l"],[1970,28,1976,26],[1970,30,1976,28,"err"],[1970,33,1976,31],[1970,37,1976,35],[1971,10,1977,8,"done"],[1971,14,1977,12],[1971,15,1977,13,"err"],[1971,18,1977,16],[1971,20,1977,18,"l"],[1971,21,1977,19],[1971,22,1977,20],[1972,8,1978,6],[1972,9,1978,7],[1972,10,1978,8],[1973,6,1979,4],[1973,7,1979,5],[1974,6,1980,4],[1974,10,1980,8],[1974,11,1980,9,"lng"],[1974,14,1980,12],[1974,18,1980,16],[1974,22,1980,20],[1974,23,1980,21,"services"],[1974,31,1980,29],[1974,32,1980,30,"languageDetector"],[1974,48,1980,46],[1974,52,1980,50],[1974,53,1980,51],[1974,57,1980,55],[1974,58,1980,56,"services"],[1974,66,1980,64],[1974,67,1980,65,"languageDetector"],[1974,83,1980,81],[1974,84,1980,82,"async"],[1974,89,1980,87],[1974,91,1980,89],[1975,8,1981,6,"setLng"],[1975,14,1981,12],[1975,15,1981,13],[1975,19,1981,17],[1975,20,1981,18,"services"],[1975,28,1981,26],[1975,29,1981,27,"languageDetector"],[1975,45,1981,43],[1975,46,1981,44,"detect"],[1975,52,1981,50],[1975,53,1981,51],[1975,54,1981,52],[1975,55,1981,53],[1976,6,1982,4],[1976,7,1982,5],[1976,13,1982,11],[1976,17,1982,15],[1976,18,1982,16,"lng"],[1976,21,1982,19],[1976,25,1982,23],[1976,29,1982,27],[1976,30,1982,28,"services"],[1976,38,1982,36],[1976,39,1982,37,"languageDetector"],[1976,55,1982,53],[1976,59,1982,57],[1976,63,1982,61],[1976,64,1982,62,"services"],[1976,72,1982,70],[1976,73,1982,71,"languageDetector"],[1976,89,1982,87],[1976,90,1982,88,"async"],[1976,95,1982,93],[1976,97,1982,95],[1977,8,1983,6],[1977,12,1983,10],[1977,16,1983,14],[1977,17,1983,15,"services"],[1977,25,1983,23],[1977,26,1983,24,"languageDetector"],[1977,42,1983,40],[1977,43,1983,41,"detect"],[1977,49,1983,47],[1977,50,1983,48,"length"],[1977,56,1983,54],[1977,61,1983,59],[1977,62,1983,60],[1977,64,1983,62],[1978,10,1984,8],[1978,14,1984,12],[1978,15,1984,13,"services"],[1978,23,1984,21],[1978,24,1984,22,"languageDetector"],[1978,40,1984,38],[1978,41,1984,39,"detect"],[1978,47,1984,45],[1978,48,1984,46],[1978,49,1984,47],[1978,50,1984,48,"then"],[1978,54,1984,52],[1978,55,1984,53,"setLng"],[1978,61,1984,59],[1978,62,1984,60],[1979,8,1985,6],[1979,9,1985,7],[1979,15,1985,13],[1980,10,1986,8],[1980,14,1986,12],[1980,15,1986,13,"services"],[1980,23,1986,21],[1980,24,1986,22,"languageDetector"],[1980,40,1986,38],[1980,41,1986,39,"detect"],[1980,47,1986,45],[1980,48,1986,46,"setLng"],[1980,54,1986,52],[1980,55,1986,53],[1981,8,1987,6],[1982,6,1988,4],[1982,7,1988,5],[1982,13,1988,11],[1983,8,1989,6,"setLng"],[1983,14,1989,12],[1983,15,1989,13,"lng"],[1983,18,1989,16],[1983,19,1989,17],[1984,6,1990,4],[1985,6,1991,4],[1985,13,1991,11,"deferred"],[1985,21,1991,19],[1986,4,1992,2],[1987,4,1993,2,"getFixedT"],[1987,13,1993,11,"getFixedT"],[1987,14,1993,12,"lng"],[1987,17,1993,15],[1987,19,1993,17,"ns"],[1987,21,1993,19],[1987,23,1993,21,"keyPrefix"],[1987,32,1993,30],[1987,34,1993,32],[1988,6,1994,4],[1988,12,1994,10,"fixedT"],[1988,18,1994,16],[1988,21,1994,19,"fixedT"],[1988,22,1994,20,"key"],[1988,25,1994,23],[1988,27,1994,25,"opts"],[1988,31,1994,29],[1988,33,1994,31],[1988,36,1994,34,"rest"],[1988,40,1994,38],[1988,45,1994,43],[1989,8,1995,6],[1989,12,1995,10,"o"],[1989,13,1995,11],[1990,8,1996,6],[1990,12,1996,10],[1990,19,1996,17,"opts"],[1990,23,1996,21],[1990,28,1996,26],[1990,36,1996,34],[1990,38,1996,36],[1991,10,1997,8,"o"],[1991,11,1997,9],[1991,14,1997,12],[1991,18,1997,16],[1991,19,1997,17,"options"],[1991,26,1997,24],[1991,27,1997,25,"overloadTranslationOptionHandler"],[1991,59,1997,57],[1991,60,1997,58],[1991,61,1997,59,"key"],[1991,64,1997,62],[1991,66,1997,64,"opts"],[1991,70,1997,68],[1991,71,1997,69],[1991,72,1997,70,"concat"],[1991,78,1997,76],[1991,79,1997,77,"rest"],[1991,83,1997,81],[1991,84,1997,82],[1991,85,1997,83],[1992,8,1998,6],[1992,9,1998,7],[1992,15,1998,13],[1993,10,1999,8,"o"],[1993,11,1999,9],[1993,14,1999,12],[1994,12,2000,10],[1994,15,2000,13,"opts"],[1995,10,2001,8],[1995,11,2001,9],[1996,8,2002,6],[1997,8,2003,6,"o"],[1997,9,2003,7],[1997,10,2003,8,"lng"],[1997,13,2003,11],[1997,16,2003,14,"o"],[1997,17,2003,15],[1997,18,2003,16,"lng"],[1997,21,2003,19],[1997,25,2003,23,"fixedT"],[1997,31,2003,29],[1997,32,2003,30,"lng"],[1997,35,2003,33],[1998,8,2004,6,"o"],[1998,9,2004,7],[1998,10,2004,8,"lngs"],[1998,14,2004,12],[1998,17,2004,15,"o"],[1998,18,2004,16],[1998,19,2004,17,"lngs"],[1998,23,2004,21],[1998,27,2004,25,"fixedT"],[1998,33,2004,31],[1998,34,2004,32,"lngs"],[1998,38,2004,36],[1999,8,2005,6,"o"],[1999,9,2005,7],[1999,10,2005,8,"ns"],[1999,12,2005,10],[1999,15,2005,13,"o"],[1999,16,2005,14],[1999,17,2005,15,"ns"],[1999,19,2005,17],[1999,23,2005,21,"fixedT"],[1999,29,2005,27],[1999,30,2005,28,"ns"],[1999,32,2005,30],[2000,8,2006,6],[2000,12,2006,10,"o"],[2000,13,2006,11],[2000,14,2006,12,"keyPrefix"],[2000,23,2006,21],[2000,28,2006,26],[2000,30,2006,28],[2000,32,2006,30,"o"],[2000,33,2006,31],[2000,34,2006,32,"keyPrefix"],[2000,43,2006,41],[2000,46,2006,44,"o"],[2000,47,2006,45],[2000,48,2006,46,"keyPrefix"],[2000,57,2006,55],[2000,61,2006,59,"keyPrefix"],[2000,70,2006,68],[2000,74,2006,72,"fixedT"],[2000,80,2006,78],[2000,81,2006,79,"keyPrefix"],[2000,90,2006,88],[2001,8,2007,6],[2001,14,2007,12,"keySeparator"],[2001,26,2007,24],[2001,29,2007,27],[2001,33,2007,31],[2001,34,2007,32,"options"],[2001,41,2007,39],[2001,42,2007,40,"keySeparator"],[2001,54,2007,52],[2001,58,2007,56],[2001,61,2007,59],[2002,8,2008,6],[2002,12,2008,10,"resultKey"],[2002,21,2008,19],[2003,8,2009,6],[2003,12,2009,10,"o"],[2003,13,2009,11],[2003,14,2009,12,"keyPrefix"],[2003,23,2009,21],[2003,27,2009,25,"Array"],[2003,32,2009,30],[2003,33,2009,31,"isArray"],[2003,40,2009,38],[2003,41,2009,39,"key"],[2003,44,2009,42],[2003,45,2009,43],[2003,47,2009,45],[2004,10,2010,8,"resultKey"],[2004,19,2010,17],[2004,22,2010,20,"key"],[2004,25,2010,23],[2004,26,2010,24,"map"],[2004,29,2010,27],[2004,30,2010,28,"k"],[2004,31,2010,29],[2004,35,2010,33],[2005,12,2011,10],[2005,16,2011,14],[2005,23,2011,21,"k"],[2005,24,2011,22],[2005,29,2011,27],[2005,39,2011,37],[2005,41,2011,39,"k"],[2005,42,2011,40],[2005,45,2011,43,"keysFromSelector"],[2005,61,2011,59],[2005,62,2011,60,"k"],[2005,63,2011,61],[2005,65,2011,63],[2006,14,2012,12],[2006,17,2012,15],[2006,21,2012,19],[2006,22,2012,20,"options"],[2006,29,2012,27],[2007,14,2013,12],[2007,17,2013,15,"opts"],[2008,12,2014,10],[2008,13,2014,11],[2008,14,2014,12],[2009,12,2015,10],[2009,19,2015,17],[2009,22,2015,20,"o"],[2009,23,2015,21],[2009,24,2015,22,"keyPrefix"],[2009,33,2015,31],[2009,36,2015,34,"keySeparator"],[2009,48,2015,46],[2009,51,2015,49,"k"],[2009,52,2015,50],[2009,54,2015,52],[2010,10,2016,8],[2010,11,2016,9],[2010,12,2016,10],[2011,8,2017,6],[2011,9,2017,7],[2011,15,2017,13],[2012,10,2018,8],[2012,14,2018,12],[2012,21,2018,19,"key"],[2012,24,2018,22],[2012,29,2018,27],[2012,39,2018,37],[2012,41,2018,39,"key"],[2012,44,2018,42],[2012,47,2018,45,"keysFromSelector"],[2012,63,2018,61],[2012,64,2018,62,"key"],[2012,67,2018,65],[2012,69,2018,67],[2013,12,2019,10],[2013,15,2019,13],[2013,19,2019,17],[2013,20,2019,18,"options"],[2013,27,2019,25],[2014,12,2020,10],[2014,15,2020,13,"opts"],[2015,10,2021,8],[2015,11,2021,9],[2015,12,2021,10],[2016,10,2022,8,"resultKey"],[2016,19,2022,17],[2016,22,2022,20,"o"],[2016,23,2022,21],[2016,24,2022,22,"keyPrefix"],[2016,33,2022,31],[2016,36,2022,34],[2016,39,2022,37,"o"],[2016,40,2022,38],[2016,41,2022,39,"keyPrefix"],[2016,50,2022,48],[2016,53,2022,51,"keySeparator"],[2016,65,2022,63],[2016,68,2022,66,"key"],[2016,71,2022,69],[2016,73,2022,71],[2016,76,2022,74,"key"],[2016,79,2022,77],[2017,8,2023,6],[2018,8,2024,6],[2018,15,2024,13],[2018,19,2024,17],[2018,20,2024,18,"t"],[2018,21,2024,19],[2018,22,2024,20,"resultKey"],[2018,31,2024,29],[2018,33,2024,31,"o"],[2018,34,2024,32],[2018,35,2024,33],[2019,6,2025,4],[2019,7,2025,5],[2020,6,2026,4],[2020,10,2026,8,"isString"],[2020,18,2026,16],[2020,19,2026,17,"lng"],[2020,22,2026,20],[2020,23,2026,21],[2020,25,2026,23],[2021,8,2027,6,"fixedT"],[2021,14,2027,12],[2021,15,2027,13,"lng"],[2021,18,2027,16],[2021,21,2027,19,"lng"],[2021,24,2027,22],[2022,6,2028,4],[2022,7,2028,5],[2022,13,2028,11],[2023,8,2029,6,"fixedT"],[2023,14,2029,12],[2023,15,2029,13,"lngs"],[2023,19,2029,17],[2023,22,2029,20,"lng"],[2023,25,2029,23],[2024,6,2030,4],[2025,6,2031,4,"fixedT"],[2025,12,2031,10],[2025,13,2031,11,"ns"],[2025,15,2031,13],[2025,18,2031,16,"ns"],[2025,20,2031,18],[2026,6,2032,4,"fixedT"],[2026,12,2032,10],[2026,13,2032,11,"keyPrefix"],[2026,22,2032,20],[2026,25,2032,23,"keyPrefix"],[2026,34,2032,32],[2027,6,2033,4],[2027,13,2033,11,"fixedT"],[2027,19,2033,17],[2028,4,2034,2],[2029,4,2035,2,"t"],[2029,5,2035,3,"t"],[2029,6,2035,4],[2029,9,2035,7,"args"],[2029,13,2035,11],[2029,15,2035,13],[2030,6,2036,4],[2030,13,2036,11],[2030,17,2036,15],[2030,18,2036,16,"translator"],[2030,28,2036,26],[2030,30,2036,28,"translate"],[2030,39,2036,37],[2030,40,2036,38],[2030,43,2036,41,"args"],[2030,47,2036,45],[2030,48,2036,46],[2031,4,2037,2],[2032,4,2038,2,"exists"],[2032,10,2038,8,"exists"],[2032,11,2038,9],[2032,14,2038,12,"args"],[2032,18,2038,16],[2032,20,2038,18],[2033,6,2039,4],[2033,13,2039,11],[2033,17,2039,15],[2033,18,2039,16,"translator"],[2033,28,2039,26],[2033,30,2039,28,"exists"],[2033,36,2039,34],[2033,37,2039,35],[2033,40,2039,38,"args"],[2033,44,2039,42],[2033,45,2039,43],[2034,4,2040,2],[2035,4,2041,2,"setDefaultNamespace"],[2035,23,2041,21,"setDefaultNamespace"],[2035,24,2041,22,"ns"],[2035,26,2041,24],[2035,28,2041,26],[2036,6,2042,4],[2036,10,2042,8],[2036,11,2042,9,"options"],[2036,18,2042,16],[2036,19,2042,17,"defaultNS"],[2036,28,2042,26],[2036,31,2042,29,"ns"],[2036,33,2042,31],[2037,4,2043,2],[2038,4,2044,2,"hasLoadedNamespace"],[2038,22,2044,20,"hasLoadedNamespace"],[2038,23,2044,21,"ns"],[2038,25,2044,23],[2038,27,2044,25,"options"],[2038,34,2044,32],[2038,37,2044,35],[2038,38,2044,36],[2038,39,2044,37],[2038,41,2044,39],[2039,6,2045,4],[2039,10,2045,8],[2039,11,2045,9],[2039,15,2045,13],[2039,16,2045,14,"isInitialized"],[2039,29,2045,27],[2039,31,2045,29],[2040,8,2046,6],[2040,12,2046,10],[2040,13,2046,11,"logger"],[2040,19,2046,17],[2040,20,2046,18,"warn"],[2040,24,2046,22],[2040,25,2046,23],[2040,74,2046,72],[2040,76,2046,74],[2040,80,2046,78],[2040,81,2046,79,"languages"],[2040,90,2046,88],[2040,91,2046,89],[2041,8,2047,6],[2041,15,2047,13],[2041,20,2047,18],[2042,6,2048,4],[2043,6,2049,4],[2043,10,2049,8],[2043,11,2049,9],[2043,15,2049,13],[2043,16,2049,14,"languages"],[2043,25,2049,23],[2043,29,2049,27],[2043,30,2049,28],[2043,34,2049,32],[2043,35,2049,33,"languages"],[2043,44,2049,42],[2043,45,2049,43,"length"],[2043,51,2049,49],[2043,53,2049,51],[2044,8,2050,6],[2044,12,2050,10],[2044,13,2050,11,"logger"],[2044,19,2050,17],[2044,20,2050,18,"warn"],[2044,24,2050,22],[2044,25,2050,23],[2044,85,2050,83],[2044,87,2050,85],[2044,91,2050,89],[2044,92,2050,90,"languages"],[2044,101,2050,99],[2044,102,2050,100],[2045,8,2051,6],[2045,15,2051,13],[2045,20,2051,18],[2046,6,2052,4],[2047,6,2053,4],[2047,12,2053,10,"lng"],[2047,15,2053,13],[2047,18,2053,16,"options"],[2047,25,2053,23],[2047,26,2053,24,"lng"],[2047,29,2053,27],[2047,33,2053,31],[2047,37,2053,35],[2047,38,2053,36,"resolvedLanguage"],[2047,54,2053,52],[2047,58,2053,56],[2047,62,2053,60],[2047,63,2053,61,"languages"],[2047,72,2053,70],[2047,73,2053,71],[2047,74,2053,72],[2047,75,2053,73],[2048,6,2054,4],[2048,12,2054,10,"fallbackLng"],[2048,23,2054,21],[2048,26,2054,24],[2048,30,2054,28],[2048,31,2054,29,"options"],[2048,38,2054,36],[2048,41,2054,39],[2048,45,2054,43],[2048,46,2054,44,"options"],[2048,53,2054,51],[2048,54,2054,52,"fallbackLng"],[2048,65,2054,63],[2048,68,2054,66],[2048,73,2054,71],[2049,6,2055,4],[2049,12,2055,10,"lastLng"],[2049,19,2055,17],[2049,22,2055,20],[2049,26,2055,24],[2049,27,2055,25,"languages"],[2049,36,2055,34],[2049,37,2055,35],[2049,41,2055,39],[2049,42,2055,40,"languages"],[2049,51,2055,49],[2049,52,2055,50,"length"],[2049,58,2055,56],[2049,61,2055,59],[2049,62,2055,60],[2049,63,2055,61],[2050,6,2056,4],[2050,10,2056,8,"lng"],[2050,13,2056,11],[2050,14,2056,12,"toLowerCase"],[2050,25,2056,23],[2050,26,2056,24],[2050,27,2056,25],[2050,32,2056,30],[2050,40,2056,38],[2050,42,2056,40],[2050,49,2056,47],[2050,53,2056,51],[2051,6,2057,4],[2051,12,2057,10,"loadNotPending"],[2051,26,2057,24],[2051,29,2057,27,"loadNotPending"],[2051,30,2057,28,"l"],[2051,31,2057,29],[2051,33,2057,31,"n"],[2051,34,2057,32],[2051,39,2057,37],[2052,8,2058,6],[2052,14,2058,12,"loadState"],[2052,23,2058,21],[2052,26,2058,24],[2052,30,2058,28],[2052,31,2058,29,"services"],[2052,39,2058,37],[2052,40,2058,38,"backendConnector"],[2052,56,2058,54],[2052,57,2058,55,"state"],[2052,62,2058,60],[2052,63,2058,61],[2052,66,2058,64,"l"],[2052,67,2058,65],[2052,71,2058,69,"n"],[2052,72,2058,70],[2052,74,2058,72],[2052,75,2058,73],[2053,8,2059,6],[2053,15,2059,13,"loadState"],[2053,24,2059,22],[2053,29,2059,27],[2053,30,2059,28],[2053,31,2059,29],[2053,35,2059,33,"loadState"],[2053,44,2059,42],[2053,49,2059,47],[2053,50,2059,48],[2053,54,2059,52,"loadState"],[2053,63,2059,61],[2053,68,2059,66],[2053,69,2059,67],[2054,6,2060,4],[2054,7,2060,5],[2055,6,2061,4],[2055,10,2061,8,"options"],[2055,17,2061,15],[2055,18,2061,16,"precheck"],[2055,26,2061,24],[2055,28,2061,26],[2056,8,2062,6],[2056,14,2062,12,"preResult"],[2056,23,2062,21],[2056,26,2062,24,"options"],[2056,33,2062,31],[2056,34,2062,32,"precheck"],[2056,42,2062,40],[2056,43,2062,41],[2056,47,2062,45],[2056,49,2062,47,"loadNotPending"],[2056,63,2062,61],[2056,64,2062,62],[2057,8,2063,6],[2057,12,2063,10,"preResult"],[2057,21,2063,19],[2057,26,2063,24,"undefined"],[2057,35,2063,33],[2057,37,2063,35],[2057,44,2063,42,"preResult"],[2057,53,2063,51],[2058,6,2064,4],[2059,6,2065,4],[2059,10,2065,8],[2059,14,2065,12],[2059,15,2065,13,"hasResourceBundle"],[2059,32,2065,30],[2059,33,2065,31,"lng"],[2059,36,2065,34],[2059,38,2065,36,"ns"],[2059,40,2065,38],[2059,41,2065,39],[2059,43,2065,41],[2059,50,2065,48],[2059,54,2065,52],[2060,6,2066,4],[2060,10,2066,8],[2060,11,2066,9],[2060,15,2066,13],[2060,16,2066,14,"services"],[2060,24,2066,22],[2060,25,2066,23,"backendConnector"],[2060,41,2066,39],[2060,42,2066,40,"backend"],[2060,49,2066,47],[2060,53,2066,51],[2060,57,2066,55],[2060,58,2066,56,"options"],[2060,65,2066,63],[2060,66,2066,64,"resources"],[2060,75,2066,73],[2060,79,2066,77],[2060,80,2066,78],[2060,84,2066,82],[2060,85,2066,83,"options"],[2060,92,2066,90],[2060,93,2066,91,"partialBundledLanguages"],[2060,116,2066,114],[2060,118,2066,116],[2060,125,2066,123],[2060,129,2066,127],[2061,6,2067,4],[2061,10,2067,8,"loadNotPending"],[2061,24,2067,22],[2061,25,2067,23,"lng"],[2061,28,2067,26],[2061,30,2067,28,"ns"],[2061,32,2067,30],[2061,33,2067,31],[2061,38,2067,36],[2061,39,2067,37,"fallbackLng"],[2061,50,2067,48],[2061,54,2067,52,"loadNotPending"],[2061,68,2067,66],[2061,69,2067,67,"lastLng"],[2061,76,2067,74],[2061,78,2067,76,"ns"],[2061,80,2067,78],[2061,81,2067,79],[2061,82,2067,80],[2061,84,2067,82],[2061,91,2067,89],[2061,95,2067,93],[2062,6,2068,4],[2062,13,2068,11],[2062,18,2068,16],[2063,4,2069,2],[2064,4,2070,2,"loadNamespaces"],[2064,18,2070,16,"loadNamespaces"],[2064,19,2070,17,"ns"],[2064,21,2070,19],[2064,23,2070,21,"callback"],[2064,31,2070,29],[2064,33,2070,31],[2065,6,2071,4],[2065,12,2071,10,"deferred"],[2065,20,2071,18],[2065,23,2071,21,"defer"],[2065,28,2071,26],[2065,29,2071,27],[2065,30,2071,28],[2066,6,2072,4],[2066,10,2072,8],[2066,11,2072,9],[2066,15,2072,13],[2066,16,2072,14,"options"],[2066,23,2072,21],[2066,24,2072,22,"ns"],[2066,26,2072,24],[2066,28,2072,26],[2067,8,2073,6],[2067,12,2073,10,"callback"],[2067,20,2073,18],[2067,22,2073,20,"callback"],[2067,30,2073,28],[2067,31,2073,29],[2067,32,2073,30],[2068,8,2074,6],[2068,15,2074,13,"Promise"],[2068,22,2074,20],[2068,23,2074,21,"resolve"],[2068,30,2074,28],[2068,31,2074,29],[2068,32,2074,30],[2069,6,2075,4],[2070,6,2076,4],[2070,10,2076,8,"isString"],[2070,18,2076,16],[2070,19,2076,17,"ns"],[2070,21,2076,19],[2070,22,2076,20],[2070,24,2076,22,"ns"],[2070,26,2076,24],[2070,29,2076,27],[2070,30,2076,28,"ns"],[2070,32,2076,30],[2070,33,2076,31],[2071,6,2077,4,"ns"],[2071,8,2077,6],[2071,9,2077,7,"forEach"],[2071,16,2077,14],[2071,17,2077,15,"n"],[2071,18,2077,16],[2071,22,2077,20],[2072,8,2078,6],[2072,12,2078,10],[2072,16,2078,14],[2072,17,2078,15,"options"],[2072,24,2078,22],[2072,25,2078,23,"ns"],[2072,27,2078,25],[2072,28,2078,26,"indexOf"],[2072,35,2078,33],[2072,36,2078,34,"n"],[2072,37,2078,35],[2072,38,2078,36],[2072,41,2078,39],[2072,42,2078,40],[2072,44,2078,42],[2072,48,2078,46],[2072,49,2078,47,"options"],[2072,56,2078,54],[2072,57,2078,55,"ns"],[2072,59,2078,57],[2072,60,2078,58,"push"],[2072,64,2078,62],[2072,65,2078,63,"n"],[2072,66,2078,64],[2072,67,2078,65],[2073,6,2079,4],[2073,7,2079,5],[2073,8,2079,6],[2074,6,2080,4],[2074,10,2080,8],[2074,11,2080,9,"loadResources"],[2074,24,2080,22],[2074,25,2080,23,"err"],[2074,28,2080,26],[2074,32,2080,30],[2075,8,2081,6,"deferred"],[2075,16,2081,14],[2075,17,2081,15,"resolve"],[2075,24,2081,22],[2075,25,2081,23],[2075,26,2081,24],[2076,8,2082,6],[2076,12,2082,10,"callback"],[2076,20,2082,18],[2076,22,2082,20,"callback"],[2076,30,2082,28],[2076,31,2082,29,"err"],[2076,34,2082,32],[2076,35,2082,33],[2077,6,2083,4],[2077,7,2083,5],[2077,8,2083,6],[2078,6,2084,4],[2078,13,2084,11,"deferred"],[2078,21,2084,19],[2079,4,2085,2],[2080,4,2086,2,"loadLanguages"],[2080,17,2086,15,"loadLanguages"],[2080,18,2086,16,"lngs"],[2080,22,2086,20],[2080,24,2086,22,"callback"],[2080,32,2086,30],[2080,34,2086,32],[2081,6,2087,4],[2081,12,2087,10,"deferred"],[2081,20,2087,18],[2081,23,2087,21,"defer"],[2081,28,2087,26],[2081,29,2087,27],[2081,30,2087,28],[2082,6,2088,4],[2082,10,2088,8,"isString"],[2082,18,2088,16],[2082,19,2088,17,"lngs"],[2082,23,2088,21],[2082,24,2088,22],[2082,26,2088,24,"lngs"],[2082,30,2088,28],[2082,33,2088,31],[2082,34,2088,32,"lngs"],[2082,38,2088,36],[2082,39,2088,37],[2083,6,2089,4],[2083,12,2089,10,"preloaded"],[2083,21,2089,19],[2083,24,2089,22],[2083,28,2089,26],[2083,29,2089,27,"options"],[2083,36,2089,34],[2083,37,2089,35,"preload"],[2083,44,2089,42],[2083,48,2089,46],[2083,50,2089,48],[2084,6,2090,4],[2084,12,2090,10,"newLngs"],[2084,19,2090,17],[2084,22,2090,20,"lngs"],[2084,26,2090,24],[2084,27,2090,25,"filter"],[2084,33,2090,31],[2084,34,2090,32,"lng"],[2084,37,2090,35],[2084,41,2090,39,"preloaded"],[2084,50,2090,48],[2084,51,2090,49,"indexOf"],[2084,58,2090,56],[2084,59,2090,57,"lng"],[2084,62,2090,60],[2084,63,2090,61],[2084,66,2090,64],[2084,67,2090,65],[2084,71,2090,69],[2084,75,2090,73],[2084,76,2090,74,"services"],[2084,84,2090,82],[2084,85,2090,83,"languageUtils"],[2084,98,2090,96],[2084,99,2090,97,"isSupportedCode"],[2084,114,2090,112],[2084,115,2090,113,"lng"],[2084,118,2090,116],[2084,119,2090,117],[2084,120,2090,118],[2085,6,2091,4],[2085,10,2091,8],[2085,11,2091,9,"newLngs"],[2085,18,2091,16],[2085,19,2091,17,"length"],[2085,25,2091,23],[2085,27,2091,25],[2086,8,2092,6],[2086,12,2092,10,"callback"],[2086,20,2092,18],[2086,22,2092,20,"callback"],[2086,30,2092,28],[2086,31,2092,29],[2086,32,2092,30],[2087,8,2093,6],[2087,15,2093,13,"Promise"],[2087,22,2093,20],[2087,23,2093,21,"resolve"],[2087,30,2093,28],[2087,31,2093,29],[2087,32,2093,30],[2088,6,2094,4],[2089,6,2095,4],[2089,10,2095,8],[2089,11,2095,9,"options"],[2089,18,2095,16],[2089,19,2095,17,"preload"],[2089,26,2095,24],[2089,29,2095,27,"preloaded"],[2089,38,2095,36],[2089,39,2095,37,"concat"],[2089,45,2095,43],[2089,46,2095,44,"newLngs"],[2089,53,2095,51],[2089,54,2095,52],[2090,6,2096,4],[2090,10,2096,8],[2090,11,2096,9,"loadResources"],[2090,24,2096,22],[2090,25,2096,23,"err"],[2090,28,2096,26],[2090,32,2096,30],[2091,8,2097,6,"deferred"],[2091,16,2097,14],[2091,17,2097,15,"resolve"],[2091,24,2097,22],[2091,25,2097,23],[2091,26,2097,24],[2092,8,2098,6],[2092,12,2098,10,"callback"],[2092,20,2098,18],[2092,22,2098,20,"callback"],[2092,30,2098,28],[2092,31,2098,29,"err"],[2092,34,2098,32],[2092,35,2098,33],[2093,6,2099,4],[2093,7,2099,5],[2093,8,2099,6],[2094,6,2100,4],[2094,13,2100,11,"deferred"],[2094,21,2100,19],[2095,4,2101,2],[2096,4,2102,2,"dir"],[2096,7,2102,5,"dir"],[2096,8,2102,6,"lng"],[2096,11,2102,9],[2096,13,2102,11],[2097,6,2103,4],[2097,10,2103,8],[2097,11,2103,9,"lng"],[2097,14,2103,12],[2097,16,2103,14,"lng"],[2097,19,2103,17],[2097,22,2103,20],[2097,26,2103,24],[2097,27,2103,25,"resolvedLanguage"],[2097,43,2103,41],[2097,48,2103,46],[2097,52,2103,50],[2097,53,2103,51,"languages"],[2097,62,2103,60],[2097,64,2103,62,"length"],[2097,70,2103,68],[2097,73,2103,71],[2097,74,2103,72],[2097,77,2103,75],[2097,81,2103,79],[2097,82,2103,80,"languages"],[2097,91,2103,89],[2097,92,2103,90],[2097,93,2103,91],[2097,94,2103,92],[2097,97,2103,95],[2097,101,2103,99],[2097,102,2103,100,"language"],[2097,110,2103,108],[2097,111,2103,109],[2098,6,2104,4],[2098,10,2104,8],[2098,11,2104,9,"lng"],[2098,14,2104,12],[2098,16,2104,14],[2098,23,2104,21],[2098,28,2104,26],[2099,6,2105,4],[2099,10,2105,8],[2100,8,2106,6],[2100,14,2106,12,"l"],[2100,15,2106,13],[2100,18,2106,16],[2100,22,2106,20,"Intl"],[2100,26,2106,24],[2100,27,2106,25,"Locale"],[2100,33,2106,31],[2100,34,2106,32,"lng"],[2100,37,2106,35],[2100,38,2106,36],[2101,8,2107,6],[2101,12,2107,10,"l"],[2101,13,2107,11],[2101,17,2107,15,"l"],[2101,18,2107,16],[2101,19,2107,17,"getTextInfo"],[2101,30,2107,28],[2101,32,2107,30],[2102,10,2108,8],[2102,16,2108,14,"ti"],[2102,18,2108,16],[2102,21,2108,19,"l"],[2102,22,2108,20],[2102,23,2108,21,"getTextInfo"],[2102,34,2108,32],[2102,35,2108,33],[2102,36,2108,34],[2103,10,2109,8],[2103,14,2109,12,"ti"],[2103,16,2109,14],[2103,20,2109,18,"ti"],[2103,22,2109,20],[2103,23,2109,21,"direction"],[2103,32,2109,30],[2103,34,2109,32],[2103,41,2109,39,"ti"],[2103,43,2109,41],[2103,44,2109,42,"direction"],[2103,53,2109,51],[2104,8,2110,6],[2105,6,2111,4],[2105,7,2111,5],[2105,8,2111,6],[2105,15,2111,13,"e"],[2105,16,2111,14],[2105,18,2111,16],[2105,19,2111,17],[2106,6,2112,4],[2106,12,2112,10,"rtlLngs"],[2106,19,2112,17],[2106,22,2112,20],[2106,23,2112,21],[2106,27,2112,25],[2106,29,2112,27],[2106,34,2112,32],[2106,36,2112,34],[2106,41,2112,39],[2106,43,2112,41],[2106,48,2112,46],[2106,50,2112,48],[2106,55,2112,53],[2106,57,2112,55],[2106,62,2112,60],[2106,64,2112,62],[2106,69,2112,67],[2106,71,2112,69],[2106,76,2112,74],[2106,78,2112,76],[2106,83,2112,81],[2106,85,2112,83],[2106,90,2112,88],[2106,92,2112,90],[2106,97,2112,95],[2106,99,2112,97],[2106,104,2112,102],[2106,106,2112,104],[2106,111,2112,109],[2106,113,2112,111],[2106,118,2112,116],[2106,120,2112,118],[2106,125,2112,123],[2106,127,2112,125],[2106,132,2112,130],[2106,134,2112,132],[2106,139,2112,137],[2106,141,2112,139],[2106,146,2112,144],[2106,148,2112,146],[2106,153,2112,151],[2106,155,2112,153],[2106,160,2112,158],[2106,162,2112,160],[2106,167,2112,165],[2106,169,2112,167],[2106,174,2112,172],[2106,176,2112,174],[2106,181,2112,179],[2106,183,2112,181],[2106,188,2112,186],[2106,190,2112,188],[2106,195,2112,193],[2106,197,2112,195],[2106,202,2112,200],[2106,204,2112,202],[2106,209,2112,207],[2106,211,2112,209],[2106,216,2112,214],[2106,218,2112,216],[2106,223,2112,221],[2106,225,2112,223],[2106,230,2112,228],[2106,232,2112,230],[2106,237,2112,235],[2106,239,2112,237],[2106,244,2112,242],[2106,246,2112,244],[2106,251,2112,249],[2106,253,2112,251],[2106,258,2112,256],[2106,260,2112,258],[2106,265,2112,263],[2106,267,2112,265],[2106,272,2112,270],[2106,274,2112,272],[2106,278,2112,276],[2106,280,2112,278],[2106,284,2112,282],[2106,286,2112,284],[2106,290,2112,288],[2106,292,2112,290],[2106,297,2112,295],[2106,299,2112,297],[2106,304,2112,302],[2106,306,2112,304],[2106,311,2112,309],[2106,313,2112,311],[2106,318,2112,316],[2106,320,2112,318],[2106,325,2112,323],[2106,327,2112,325],[2106,331,2112,329],[2106,333,2112,331],[2106,337,2112,335],[2106,339,2112,337],[2106,344,2112,342],[2106,346,2112,344],[2106,351,2112,349],[2106,353,2112,351],[2106,358,2112,356],[2106,360,2112,358],[2106,364,2112,362],[2106,366,2112,364],[2106,370,2112,368],[2106,372,2112,370],[2106,377,2112,375],[2106,379,2112,377],[2106,384,2112,382],[2106,386,2112,384],[2106,391,2112,389],[2106,393,2112,391],[2106,397,2112,395],[2106,399,2112,397],[2106,404,2112,402],[2106,406,2112,404],[2106,411,2112,409],[2106,413,2112,411],[2106,418,2112,416],[2106,420,2112,418],[2106,425,2112,423],[2106,427,2112,425],[2106,431,2112,429],[2106,433,2112,431],[2106,438,2112,436],[2106,440,2112,438],[2106,445,2112,443],[2106,446,2112,444],[2107,6,2113,4],[2107,12,2113,10,"languageUtils"],[2107,25,2113,23],[2107,28,2113,26],[2107,32,2113,30],[2107,33,2113,31,"services"],[2107,41,2113,39],[2107,43,2113,41,"languageUtils"],[2107,56,2113,54],[2107,60,2113,58],[2107,64,2113,62,"LanguageUtil"],[2107,76,2113,74],[2107,77,2113,75,"get"],[2107,80,2113,78],[2107,81,2113,79],[2107,82,2113,80],[2107,83,2113,81],[2108,6,2114,4],[2108,10,2114,8,"lng"],[2108,13,2114,11],[2108,14,2114,12,"toLowerCase"],[2108,25,2114,23],[2108,26,2114,24],[2108,27,2114,25],[2108,28,2114,26,"indexOf"],[2108,35,2114,33],[2108,36,2114,34],[2108,43,2114,41],[2108,44,2114,42],[2108,47,2114,45],[2108,48,2114,46],[2108,50,2114,48],[2108,57,2114,55],[2108,62,2114,60],[2109,6,2115,4],[2109,13,2115,11,"rtlLngs"],[2109,20,2115,18],[2109,21,2115,19,"indexOf"],[2109,28,2115,26],[2109,29,2115,27,"languageUtils"],[2109,42,2115,40],[2109,43,2115,41,"getLanguagePartFromCode"],[2109,66,2115,64],[2109,67,2115,65,"lng"],[2109,70,2115,68],[2109,71,2115,69],[2109,72,2115,70],[2109,75,2115,73],[2109,76,2115,74],[2109,77,2115,75],[2109,81,2115,79,"lng"],[2109,84,2115,82],[2109,85,2115,83,"toLowerCase"],[2109,96,2115,94],[2109,97,2115,95],[2109,98,2115,96],[2109,99,2115,97,"indexOf"],[2109,106,2115,104],[2109,107,2115,105],[2109,114,2115,112],[2109,115,2115,113],[2109,118,2115,116],[2109,119,2115,117],[2109,122,2115,120],[2109,127,2115,125],[2109,130,2115,128],[2109,135,2115,133],[2110,4,2116,2],[2111,4,2117,2],[2111,11,2117,9,"createInstance"],[2111,25,2117,23,"createInstance"],[2111,26,2117,24,"options"],[2111,33,2117,31],[2111,36,2117,34],[2111,37,2117,35],[2111,38,2117,36],[2111,40,2117,38,"callback"],[2111,48,2117,46],[2111,50,2117,48],[2112,6,2118,4],[2112,13,2118,11],[2112,17,2118,15,"I18n"],[2112,21,2118,19],[2112,22,2118,20,"options"],[2112,29,2118,27],[2112,31,2118,29,"callback"],[2112,39,2118,37],[2112,40,2118,38],[2113,4,2119,2],[2114,4,2120,2,"cloneInstance"],[2114,17,2120,15,"cloneInstance"],[2114,18,2120,16,"options"],[2114,25,2120,23],[2114,28,2120,26],[2114,29,2120,27],[2114,30,2120,28],[2114,32,2120,30,"callback"],[2114,40,2120,38],[2114,43,2120,41,"noop"],[2114,47,2120,45],[2114,49,2120,47],[2115,6,2121,4],[2115,12,2121,10,"forkResourceStore"],[2115,29,2121,27],[2115,32,2121,30,"options"],[2115,39,2121,37],[2115,40,2121,38,"forkResourceStore"],[2115,57,2121,55],[2116,6,2122,4],[2116,10,2122,8,"forkResourceStore"],[2116,27,2122,25],[2116,29,2122,27],[2116,36,2122,34,"options"],[2116,43,2122,41],[2116,44,2122,42,"forkResourceStore"],[2116,61,2122,59],[2117,6,2123,4],[2117,12,2123,10,"mergedOptions"],[2117,25,2123,23],[2117,28,2123,26],[2118,8,2124,6],[2118,11,2124,9],[2118,15,2124,13],[2118,16,2124,14,"options"],[2118,23,2124,21],[2119,8,2125,6],[2119,11,2125,9,"options"],[2119,18,2125,16],[2120,8,2126,6],[2120,11,2126,9],[2121,10,2127,8,"isClone"],[2121,17,2127,15],[2121,19,2127,17],[2122,8,2128,6],[2123,6,2129,4],[2123,7,2129,5],[2124,6,2130,4],[2124,12,2130,10,"clone"],[2124,17,2130,15],[2124,20,2130,18],[2124,24,2130,22,"I18n"],[2124,28,2130,26],[2124,29,2130,27,"mergedOptions"],[2124,42,2130,40],[2124,43,2130,41],[2125,6,2131,4],[2125,10,2131,8,"options"],[2125,17,2131,15],[2125,18,2131,16,"debug"],[2125,23,2131,21],[2125,28,2131,26,"undefined"],[2125,37,2131,35],[2125,41,2131,39,"options"],[2125,48,2131,46],[2125,49,2131,47,"prefix"],[2125,55,2131,53],[2125,60,2131,58,"undefined"],[2125,69,2131,67],[2125,71,2131,69],[2126,8,2132,6,"clone"],[2126,13,2132,11],[2126,14,2132,12,"logger"],[2126,20,2132,18],[2126,23,2132,21,"clone"],[2126,28,2132,26],[2126,29,2132,27,"logger"],[2126,35,2132,33],[2126,36,2132,34,"clone"],[2126,41,2132,39],[2126,42,2132,40,"options"],[2126,49,2132,47],[2126,50,2132,48],[2127,6,2133,4],[2128,6,2134,4],[2128,12,2134,10,"membersToCopy"],[2128,25,2134,23],[2128,28,2134,26],[2128,29,2134,27],[2128,36,2134,34],[2128,38,2134,36],[2128,48,2134,46],[2128,50,2134,48],[2128,60,2134,58],[2128,61,2134,59],[2129,6,2135,4,"membersToCopy"],[2129,19,2135,17],[2129,20,2135,18,"forEach"],[2129,27,2135,25],[2129,28,2135,26,"m"],[2129,29,2135,27],[2129,33,2135,31],[2130,8,2136,6,"clone"],[2130,13,2136,11],[2130,14,2136,12,"m"],[2130,15,2136,13],[2130,16,2136,14],[2130,19,2136,17],[2130,23,2136,21],[2130,24,2136,22,"m"],[2130,25,2136,23],[2130,26,2136,24],[2131,6,2137,4],[2131,7,2137,5],[2131,8,2137,6],[2132,6,2138,4,"clone"],[2132,11,2138,9],[2132,12,2138,10,"services"],[2132,20,2138,18],[2132,23,2138,21],[2133,8,2139,6],[2133,11,2139,9],[2133,15,2139,13],[2133,16,2139,14,"services"],[2134,6,2140,4],[2134,7,2140,5],[2135,6,2141,4,"clone"],[2135,11,2141,9],[2135,12,2141,10,"services"],[2135,20,2141,18],[2135,21,2141,19,"utils"],[2135,26,2141,24],[2135,29,2141,27],[2136,8,2142,6,"hasLoadedNamespace"],[2136,26,2142,24],[2136,28,2142,26,"clone"],[2136,33,2142,31],[2136,34,2142,32,"hasLoadedNamespace"],[2136,52,2142,50],[2136,53,2142,51,"bind"],[2136,57,2142,55],[2136,58,2142,56,"clone"],[2136,63,2142,61],[2137,6,2143,4],[2137,7,2143,5],[2138,6,2144,4],[2138,10,2144,8,"forkResourceStore"],[2138,27,2144,25],[2138,29,2144,27],[2139,8,2145,6],[2139,14,2145,12,"clonedData"],[2139,24,2145,22],[2139,27,2145,25,"Object"],[2139,33,2145,31],[2139,34,2145,32,"keys"],[2139,38,2145,36],[2139,39,2145,37],[2139,43,2145,41],[2139,44,2145,42,"store"],[2139,49,2145,47],[2139,50,2145,48,"data"],[2139,54,2145,52],[2139,55,2145,53],[2139,56,2145,54,"reduce"],[2139,62,2145,60],[2139,63,2145,61],[2139,64,2145,62,"prev"],[2139,68,2145,66],[2139,70,2145,68,"l"],[2139,71,2145,69],[2139,76,2145,74],[2140,10,2146,8,"prev"],[2140,14,2146,12],[2140,15,2146,13,"l"],[2140,16,2146,14],[2140,17,2146,15],[2140,20,2146,18],[2141,12,2147,10],[2141,15,2147,13],[2141,19,2147,17],[2141,20,2147,18,"store"],[2141,25,2147,23],[2141,26,2147,24,"data"],[2141,30,2147,28],[2141,31,2147,29,"l"],[2141,32,2147,30],[2142,10,2148,8],[2142,11,2148,9],[2143,10,2149,8,"prev"],[2143,14,2149,12],[2143,15,2149,13,"l"],[2143,16,2149,14],[2143,17,2149,15],[2143,20,2149,18,"Object"],[2143,26,2149,24],[2143,27,2149,25,"keys"],[2143,31,2149,29],[2143,32,2149,30,"prev"],[2143,36,2149,34],[2143,37,2149,35,"l"],[2143,38,2149,36],[2143,39,2149,37],[2143,40,2149,38],[2143,41,2149,39,"reduce"],[2143,47,2149,45],[2143,48,2149,46],[2143,49,2149,47,"acc"],[2143,52,2149,50],[2143,54,2149,52,"n"],[2143,55,2149,53],[2143,60,2149,58],[2144,12,2150,10,"acc"],[2144,15,2150,13],[2144,16,2150,14,"n"],[2144,17,2150,15],[2144,18,2150,16],[2144,21,2150,19],[2145,14,2151,12],[2145,17,2151,15,"prev"],[2145,21,2151,19],[2145,22,2151,20,"l"],[2145,23,2151,21],[2145,24,2151,22],[2145,25,2151,23,"n"],[2145,26,2151,24],[2146,12,2152,10],[2146,13,2152,11],[2147,12,2153,10],[2147,19,2153,17,"acc"],[2147,22,2153,20],[2148,10,2154,8],[2148,11,2154,9],[2148,13,2154,11,"prev"],[2148,17,2154,15],[2148,18,2154,16,"l"],[2148,19,2154,17],[2148,20,2154,18],[2148,21,2154,19],[2149,10,2155,8],[2149,17,2155,15,"prev"],[2149,21,2155,19],[2150,8,2156,6],[2150,9,2156,7],[2150,11,2156,9],[2150,12,2156,10],[2150,13,2156,11],[2150,14,2156,12],[2151,8,2157,6,"clone"],[2151,13,2157,11],[2151,14,2157,12,"store"],[2151,19,2157,17],[2151,22,2157,20],[2151,26,2157,24,"ResourceStore"],[2151,39,2157,37],[2151,40,2157,38,"clonedData"],[2151,50,2157,48],[2151,52,2157,50,"mergedOptions"],[2151,65,2157,63],[2151,66,2157,64],[2152,8,2158,6,"clone"],[2152,13,2158,11],[2152,14,2158,12,"services"],[2152,22,2158,20],[2152,23,2158,21,"resourceStore"],[2152,36,2158,34],[2152,39,2158,37,"clone"],[2152,44,2158,42],[2152,45,2158,43,"store"],[2152,50,2158,48],[2153,6,2159,4],[2154,6,2160,4,"clone"],[2154,11,2160,9],[2154,12,2160,10,"translator"],[2154,22,2160,20],[2154,25,2160,23],[2154,29,2160,27,"Translator"],[2154,39,2160,37],[2154,40,2160,38,"clone"],[2154,45,2160,43],[2154,46,2160,44,"services"],[2154,54,2160,52],[2154,56,2160,54,"mergedOptions"],[2154,69,2160,67],[2154,70,2160,68],[2155,6,2161,4,"clone"],[2155,11,2161,9],[2155,12,2161,10,"translator"],[2155,22,2161,20],[2155,23,2161,21,"on"],[2155,25,2161,23],[2155,26,2161,24],[2155,29,2161,27],[2155,31,2161,29],[2155,32,2161,30,"event"],[2155,37,2161,35],[2155,39,2161,37],[2155,42,2161,40,"args"],[2155,46,2161,44],[2155,51,2161,49],[2156,8,2162,6,"clone"],[2156,13,2162,11],[2156,14,2162,12,"emit"],[2156,18,2162,16],[2156,19,2162,17,"event"],[2156,24,2162,22],[2156,26,2162,24],[2156,29,2162,27,"args"],[2156,33,2162,31],[2156,34,2162,32],[2157,6,2163,4],[2157,7,2163,5],[2157,8,2163,6],[2158,6,2164,4,"clone"],[2158,11,2164,9],[2158,12,2164,10,"init"],[2158,16,2164,14],[2158,17,2164,15,"mergedOptions"],[2158,30,2164,28],[2158,32,2164,30,"callback"],[2158,40,2164,38],[2158,41,2164,39],[2159,6,2165,4,"clone"],[2159,11,2165,9],[2159,12,2165,10,"translator"],[2159,22,2165,20],[2159,23,2165,21,"options"],[2159,30,2165,28],[2159,33,2165,31,"mergedOptions"],[2159,46,2165,44],[2160,6,2166,4,"clone"],[2160,11,2166,9],[2160,12,2166,10,"translator"],[2160,22,2166,20],[2160,23,2166,21,"backendConnector"],[2160,39,2166,37],[2160,40,2166,38,"services"],[2160,48,2166,46],[2160,49,2166,47,"utils"],[2160,54,2166,52],[2160,57,2166,55],[2161,8,2167,6,"hasLoadedNamespace"],[2161,26,2167,24],[2161,28,2167,26,"clone"],[2161,33,2167,31],[2161,34,2167,32,"hasLoadedNamespace"],[2161,52,2167,50],[2161,53,2167,51,"bind"],[2161,57,2167,55],[2161,58,2167,56,"clone"],[2161,63,2167,61],[2162,6,2168,4],[2162,7,2168,5],[2163,6,2169,4],[2163,13,2169,11,"clone"],[2163,18,2169,16],[2164,4,2170,2],[2165,4,2171,2,"toJSON"],[2165,10,2171,8,"toJSON"],[2165,11,2171,8],[2165,13,2171,11],[2166,6,2172,4],[2166,13,2172,11],[2167,8,2173,6,"options"],[2167,15,2173,13],[2167,17,2173,15],[2167,21,2173,19],[2167,22,2173,20,"options"],[2167,29,2173,27],[2168,8,2174,6,"store"],[2168,13,2174,11],[2168,15,2174,13],[2168,19,2174,17],[2168,20,2174,18,"store"],[2168,25,2174,23],[2169,8,2175,6,"language"],[2169,16,2175,14],[2169,18,2175,16],[2169,22,2175,20],[2169,23,2175,21,"language"],[2169,31,2175,29],[2170,8,2176,6,"languages"],[2170,17,2176,15],[2170,19,2176,17],[2170,23,2176,21],[2170,24,2176,22,"languages"],[2170,33,2176,31],[2171,8,2177,6,"resolvedLanguage"],[2171,24,2177,22],[2171,26,2177,24],[2171,30,2177,28],[2171,31,2177,29,"resolvedLanguage"],[2172,6,2178,4],[2172,7,2178,5],[2173,4,2179,2],[2174,2,2180,0],[2175,2,2181,0],[2175,8,2181,6,"instance"],[2175,16,2181,14],[2175,19,2181,14,"exports"],[2175,26,2181,14],[2175,27,2181,14,"default"],[2175,34,2181,14],[2175,37,2181,17,"I18n"],[2175,41,2181,21],[2175,42,2181,22,"createInstance"],[2175,56,2181,36],[2175,57,2181,37],[2175,58,2181,38],[2176,2,2182,0,"instance"],[2176,10,2182,8],[2176,11,2182,9,"createInstance"],[2176,25,2182,23],[2176,28,2182,26,"I18n"],[2176,32,2182,30],[2176,33,2182,31,"createInstance"],[2176,47,2182,45],[2177,2,2184,0],[2177,8,2184,6,"createInstance"],[2177,22,2184,20],[2177,25,2184,20,"exports"],[2177,32,2184,20],[2177,33,2184,20,"createInstance"],[2177,47,2184,20],[2177,50,2184,23,"instance"],[2177,58,2184,31],[2177,59,2184,32,"createInstance"],[2177,73,2184,46],[2178,2,2185,0],[2178,8,2185,6,"dir"],[2178,11,2185,9],[2178,14,2185,9,"exports"],[2178,21,2185,9],[2178,22,2185,9,"dir"],[2178,25,2185,9],[2178,28,2185,12,"instance"],[2178,36,2185,20],[2178,37,2185,21,"dir"],[2178,40,2185,24],[2179,2,2186,0],[2179,8,2186,6,"init"],[2179,12,2186,10],[2179,15,2186,10,"exports"],[2179,22,2186,10],[2179,23,2186,10,"init"],[2179,27,2186,10],[2179,30,2186,13,"instance"],[2179,38,2186,21],[2179,39,2186,22,"init"],[2179,43,2186,26],[2180,2,2187,0],[2180,8,2187,6,"loadResources"],[2180,21,2187,19],[2180,24,2187,19,"exports"],[2180,31,2187,19],[2180,32,2187,19,"loadResources"],[2180,45,2187,19],[2180,48,2187,22,"instance"],[2180,56,2187,30],[2180,57,2187,31,"loadResources"],[2180,70,2187,44],[2181,2,2188,0],[2181,8,2188,6,"reloadResources"],[2181,23,2188,21],[2181,26,2188,21,"exports"],[2181,33,2188,21],[2181,34,2188,21,"reloadResources"],[2181,49,2188,21],[2181,52,2188,24,"instance"],[2181,60,2188,32],[2181,61,2188,33,"reloadResources"],[2181,76,2188,48],[2182,2,2189,0],[2182,8,2189,6,"use"],[2182,11,2189,9],[2182,14,2189,9,"exports"],[2182,21,2189,9],[2182,22,2189,9,"use"],[2182,25,2189,9],[2182,28,2189,12,"instance"],[2182,36,2189,20],[2182,37,2189,21,"use"],[2182,40,2189,24],[2183,2,2190,0],[2183,8,2190,6,"changeLanguage"],[2183,22,2190,20],[2183,25,2190,20,"exports"],[2183,32,2190,20],[2183,33,2190,20,"changeLanguage"],[2183,47,2190,20],[2183,50,2190,23,"instance"],[2183,58,2190,31],[2183,59,2190,32,"changeLanguage"],[2183,73,2190,46],[2184,2,2191,0],[2184,8,2191,6,"getFixedT"],[2184,17,2191,15],[2184,20,2191,15,"exports"],[2184,27,2191,15],[2184,28,2191,15,"getFixedT"],[2184,37,2191,15],[2184,40,2191,18,"instance"],[2184,48,2191,26],[2184,49,2191,27,"getFixedT"],[2184,58,2191,36],[2185,2,2192,0],[2185,8,2192,6,"t"],[2185,9,2192,7],[2185,12,2192,7,"exports"],[2185,19,2192,7],[2185,20,2192,7,"t"],[2185,21,2192,7],[2185,24,2192,10,"instance"],[2185,32,2192,18],[2185,33,2192,19,"t"],[2185,34,2192,20],[2186,2,2193,0],[2186,8,2193,6,"exists"],[2186,14,2193,12],[2186,17,2193,12,"exports"],[2186,24,2193,12],[2186,25,2193,12,"exists"],[2186,31,2193,12],[2186,34,2193,15,"instance"],[2186,42,2193,23],[2186,43,2193,24,"exists"],[2186,49,2193,30],[2187,2,2194,0],[2187,8,2194,6,"setDefaultNamespace"],[2187,27,2194,25],[2187,30,2194,25,"exports"],[2187,37,2194,25],[2187,38,2194,25,"setDefaultNamespace"],[2187,57,2194,25],[2187,60,2194,28,"instance"],[2187,68,2194,36],[2187,69,2194,37,"setDefaultNamespace"],[2187,88,2194,56],[2188,2,2195,0],[2188,8,2195,6,"hasLoadedNamespace"],[2188,26,2195,24],[2188,29,2195,24,"exports"],[2188,36,2195,24],[2188,37,2195,24,"hasLoadedNamespace"],[2188,55,2195,24],[2188,58,2195,27,"instance"],[2188,66,2195,35],[2188,67,2195,36,"hasLoadedNamespace"],[2188,85,2195,54],[2189,2,2196,0],[2189,8,2196,6,"loadNamespaces"],[2189,22,2196,20],[2189,25,2196,20,"exports"],[2189,32,2196,20],[2189,33,2196,20,"loadNamespaces"],[2189,47,2196,20],[2189,50,2196,23,"instance"],[2189,58,2196,31],[2189,59,2196,32,"loadNamespaces"],[2189,73,2196,46],[2190,2,2197,0],[2190,8,2197,6,"loadLanguages"],[2190,21,2197,19],[2190,24,2197,19,"exports"],[2190,31,2197,19],[2190,32,2197,19,"loadLanguages"],[2190,45,2197,19],[2190,48,2197,22,"instance"],[2190,56,2197,30],[2190,57,2197,31,"loadLanguages"],[2190,70,2197,44],[2191,0,2197,45],[2191,3]],"functionMap":{"names":["<global>","isString","defer","Promise$argument_0","makeString","copy","a.forEach$argument_0","cleanKey","canNotTraverseDeeper","getLastOfPath","setPath","pushPath","getPath","getPathWithDefaults","deepExtend","regexEscape","escape","data.replace$argument_1","RegExpCache","RegExpCache#constructor","RegExpCache#getRegExp","looksLikeObjectPath","chars.filter$argument_0","possibleChars.map$argument_0","deepFind","getCleanedCode","consoleLogger.log","consoleLogger.warn","consoleLogger.error","consoleLogger.output","Logger","Logger#constructor","Logger#init","Logger#log","Logger#warn","Logger#error","Logger#deprecate","Logger#forward","Logger#create","Logger#clone","EventEmitter","EventEmitter#constructor","EventEmitter#on","events.split.forEach$argument_0","EventEmitter#off","EventEmitter#emit","cloned.forEach$argument_0","ResourceStore","ResourceStore#constructor","ResourceStore#addNamespaces","ResourceStore#removeNamespaces","ResourceStore#getResource","ResourceStore#addResource","ResourceStore#addResources","ResourceStore#addResourceBundle","ResourceStore#removeResourceBundle","ResourceStore#hasResourceBundle","ResourceStore#getResourceBundle","ResourceStore#getDataByLanguage","ResourceStore#hasLanguageSomeTranslations","n.find$argument_0","ResourceStore#toJSON","postProcessor.addPostProcessor","postProcessor.handle","processors.forEach$argument_0","createProxy","handler.get","keysFromSelector","shouldHandleAsObject","Translator","Translator#constructor","Translator#changeLanguage","Translator#exists","Translator#extractFromKey","Translator#translate","send","lngs.forEach$argument_0","suffixes.forEach$argument_0","Translator#extendTranslation","interpolator.nest$argument_1","Translator#resolve","keys.forEach$argument_0","namespaces.forEach$argument_0","codes.forEach$argument_0","Translator#isValidLookup","Translator#getResource","Translator#getUsedParamsDetails","Translator.hasDefaultValue","LanguageUtil","LanguageUtil#constructor","LanguageUtil#getScriptPartFromCode","LanguageUtil#getLanguagePartFromCode","LanguageUtil#formatLanguageCode","LanguageUtil#isSupportedCode","LanguageUtil#getBestMatchFromCodes","options.supportedLngs.find$argument_0","LanguageUtil#getFallbackCodes","LanguageUtil#toResolveHierarchy","addCode","fallbackCodes.forEach$argument_0","dummyRule.select","dummyRule.resolvedOptions","PluralResolver","PluralResolver#constructor","PluralResolver#addRule","PluralResolver#clearCache","PluralResolver#getRule","PluralResolver#needsPlural","PluralResolver#getPluralFormsOfKey","getSuffixes.map$argument_0","PluralResolver#getSuffixes","rule.resolvedOptions.pluralCategories.sort$argument_0","rule.resolvedOptions.pluralCategories.sort.map$argument_0","PluralResolver#getSuffix","deepFindWithDefaults","regexSafe","Interpolator","Interpolator#constructor","<anonymous>","Interpolator#init","Interpolator#reset","Interpolator#resetRegExp","getOrResetRegExp","Interpolator#interpolate","handleFormat","safeValue","todos.forEach$argument_0","Interpolator#nest","handleHasOptions","match._.slice.split.map$argument_0","formatters.reduce$argument_0","parseFormatStr","opts.forEach$argument_0","createCachedFormatter","createNonCachedFormatter","Formatter","Formatter#constructor","Formatter#init","cf$argument_0","Formatter#add","Formatter#addCached","Formatter#format","formats.find$argument_0","formats.findIndex$argument_0","formats.reduce$argument_0","removePending","Connector","Connector#constructor","Connector#queueLoad","languages.forEach$argument_0","Connector#loaded","queue.forEach$argument_0","Object.keys.forEach$argument_0","loadedKeys.forEach$argument_0","queue.filter$argument_0","Connector#read","resolver","setTimeout$argument_0","r.then$argument_0","Connector#prepareLoading","toLoad.toLoad.forEach$argument_0","Connector#load","Connector#reload","Connector#loadOne","read$argument_5","Connector#saveMissing","get","overloadTranslationOptionHandler","interpolation.format","transformOptions","noop","bindMemberFunctions","mems.forEach$argument_0","I18n","I18n#constructor","I18n#init","createClassOnDemand","s.backendConnector.on$argument_1","translator.on$argument_1","modules.external.forEach$argument_0","storeApi.forEach$argument_0","fcName","storeApiChained.forEach$argument_0","load","finish","I18n#loadResources","append","fallbacks.forEach$argument_0","options.preload.forEach$argument_0","services.backendConnector.load$argument_2","I18n#reloadResources","services.backendConnector.reload$argument_2","I18n#use","I18n#setResolvedLanguage","I18n#changeLanguage","setLngProps","done","deferred.resolve$argument_0","callback$argument_1","setLng","loadResources$argument_1","I18n#getFixedT","fixedT","key.map$argument_0","I18n#t","I18n#exists","I18n#setDefaultNamespace","I18n#hasLoadedNamespace","loadNotPending","I18n#loadNamespaces","ns.forEach$argument_0","loadResources$argument_0","I18n#loadLanguages","lngs.filter$argument_0","I18n#dir","I18n.createInstance","I18n#cloneInstance","membersToCopy.forEach$argument_0","Object.keys.reduce$argument_0","clone.translator.on$argument_1","I18n#toJSON"],"mappings":"AAA,iBC,8BD;cEC;8BCG;GDG;CFI;mBIC;CJG;aKC;YCC;GDE;CLC;iBOE,yFP;6BQC,qCR;sBSC;CTmB;gBUC;CVqB;iBWC;CXO;gBYC;CZQ;4BaC;CbM;mBcC;Cde;oBeC,iEf;egBS;sCCE,kBD;ChBG;AkBC;ECC;GDI;EEC;GFY;ClBC;4BqBG;qCCG,8DD;2EEE,0BF;CrBS;iBwBC;CxB+B;uByBC,+BzB;E0BI;G1BE;E2BC;G3BE;E4BC;G5BE;E6BC;G7BE;A8BE;ECC;GDE;EEC;GFK;EGC;GHE;EIC;GJE;EKC;GLE;EMC;GNE;EOC;GPI;EQC;GRO;ESC;GTI;C9BC;AwCG;ECC;GDE;EEC;8BCC;KDI;GFE;EIC;GJO;EKC;qBCG;ODI;qBCI;ODI;GLE;CxCC;A+CE;ECC;GDa;EEC;GFI;EGC;GHK;EIC;GJ0B;EKC;GLc;EMC;GNS;EOC;GPwB;EQC;GRM;ESC;GTE;EUC;GVG;EWC;GXE;EYC;oBCG,+CD;GZC;EcC;GdE;C/CC;E8DI;G9DE;E+DC;uBCC;KDE;G/DE;AiEI;gBCI;GDM;CjEE;AmEC;CnEK;6BoEG,4EpE;AqEC;ECC;GDQ;EEC;GFE;EGC;GHS;EIC;GJuB;EKC;qBC8J;SDQ;yBEG;+BCK;eDE;aFC;GLoB;ESC;gECoC;ODM;GTe;EWC;iBCO;yBCW;sBCO;SDyC;ODC;KDC;GXQ;EeC;GfE;EgBC;GhBG;EiBC;GjBsB;EkBC;GlBQ;CrEC;AwFE;ECC;GDI;EEC;GFQ;EGC;GHK;EIC;GJgB;EKC;GLK;EMC;kBXG;KWI;oBXE;gDYM;SZK;OWC;GNI;EQC;GRY;ESC;oBCG;KDO;0BEQ;KFE;GTE;CxFC;UoGW,sCpG;mBqGC;IrGE;AsGE;ECC;GDK;EEC;GFE;EGC;GHE;EIC;GJ0B;EKC;GLI;EMC;+CCC,2BD;GNC;EQC;wDCI,qGD,ME,sHF;GRC;EWC;GXO;CtGC;6BkHE;ClHO;kBmHC,iCnH;AoHC;ECC;qDCG,cD;GDE;EGC;GHqC;EIC;GJE;EKC;6BCC;KDM;GLI;EOC;yBCK;KDiB;iBEM,qBF;iBEG,sEF;kBGE;KHkC;GPE;EWC;6BCI;KDwB;iFEW,mBF;kCGW;UHG;GXM;CpHC;uBmIE;mBCa;ODU;CnIO;8BqIC;SfE;Gee;CrIC;iCsIC,MhB,wCtH;AuIC;ECC;GDI;EEC;iBCM;epBI,4BoB;ODC;mBCC;epBK,4BoB;ODC;mBCC;epBI,4BoB;ODC;uBCC;epBI,gDoB;ODC;eCC;epBI,4BoB;ODC;GFE;EIC;GJE;EKC;GLE;EMC;yGCE,wBD;0CEC,wBF;kCGG;KHuB;GNE;CvIC;sBiJE;CjJK;AkJC;ECC;GDgB;EEC;sBCK;yBnEE;OmEa;KDE;GFgB;EIC;uBCa;sCCK;+BCI;aDE;SDE;KDQ;mCIE,YJ;GJC;ESC;qBCc;mBCO;SDE;KDI;iBGM,4BH;GTU;EaC;0BCY;KDE;GbC;EeC;GfE;EgBC;GhBI;EiBC;qDCI;KDI;GjBC;EmBC,oF/C,Q+C;mBPqB,uBO;GnBa;ClJC;YsKE;oCCiC;mCfO;OeE;GDG;YEG,cF;EtKY;yByKC;CzKS;a0KE,Q1K;4B2KC;eCE;GDI;C3KC;A6KC;ECC;iBjBc;OiBE;GDE;EEC;gCC6B;KDI;iCEqC;OFE;8BGU;OHE;oCIC;OJE;qBKY;qBCC,wCD;KLC;4BOE;qBDC;OCG;KPC;iBQE;qBCC;ODQ;KRG;GFO;EYC;qBCO;qB9GI;S8GG;ODC;0BEG,cF;sCGI,cH;mEIC;OJG;GZI;EiBC;oDCa;KDG;GjBE;EmBC;GnByB;EoBC;GpBe;EqBC;wBCI;KDK;iBEC;uBCY,4BD;kCEC,4BF;KFC;mBKC;4BCW;ODE;KLC;GrBa;E4BC;mBCC;4BCgB;SDM;KDS;G5BS;E+BC;G/BE;EgCC;GhCE;EiCC;GjCE;EkCC;2BCa;KDG;GlCS;EoCC;eCO;KDE;uBEC;KFG;GpCE;EuCC;gCCI,qFD;uBDM;KCG;GvCE;EyCC;GzCc;E0CC;G1CE;E2CC;0BCe;KDE;6DEQ;OFW;6BGK;KHE;G3CO;E+CC;G/CQ;C7KC"}},"type":"js/module"}]}