{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"]}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":26,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useVPNStore = void 0;\n  var _env2 = require(_dependencyMap[1], \"expo/virtual/env\");\n  var _zustand = require(_dependencyMap[2], \"zustand\");\n  var _axios = _interopRequireDefault(require(_dependencyMap[3], \"axios\"));\n  const API_BASE_URL = _env2.env.EXPO_PUBLIC_BACKEND_URL + '/api';\n  const useVPNStore = exports.useVPNStore = (0, _zustand.create)((set, get) => ({\n    isConnected: false,\n    connectionStatus: 'disconnected',\n    selectedServer: null,\n    servers: [],\n    isLoadingServers: false,\n    connect: () => {\n      const {\n        selectedServer\n      } = get();\n      if (!selectedServer) return;\n      set({\n        connectionStatus: 'connecting'\n      });\n\n      // Simulate connection process\n      setTimeout(() => {\n        set({\n          isConnected: true,\n          connectionStatus: 'connected'\n        });\n      }, 2000);\n    },\n    disconnect: () => {\n      set({\n        connectionStatus: 'disconnecting'\n      });\n\n      // Simulate disconnection process\n      setTimeout(() => {\n        set({\n          isConnected: false,\n          connectionStatus: 'disconnected'\n        });\n      }, 1000);\n    },\n    selectServer: server => {\n      set({\n        selectedServer: server\n      });\n    },\n    fetchServers: async () => {\n      try {\n        set({\n          isLoadingServers: true\n        });\n        const response = await _axios.default.get(`${API_BASE_URL}/proxies`);\n        const servers = response.data;\n        set({\n          servers,\n          isLoadingServers: false\n        });\n\n        // Auto-select first server if none selected\n        const {\n          selectedServer\n        } = get();\n        if (!selectedServer && servers.length > 0) {\n          set({\n            selectedServer: servers[0]\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch servers:', error);\n        set({\n          isLoadingServers: false\n        });\n      }\n    }\n  }));\n});","lineCount":81,"map":[[8,2,1,0],[8,6,1,0,"_zustand"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,2,0],[9,6,2,0,"_axios"],[9,12,2,0],[9,15,2,0,"_interopRequireDefault"],[9,37,2,0],[9,38,2,0,"require"],[9,45,2,0],[9,46,2,0,"_dependencyMap"],[9,60,2,0],[10,2,4,0],[10,8,4,6,"API_BASE_URL"],[10,20,4,18],[10,23,4,21,"_env2"],[10,28,4,21],[10,29,4,21,"env"],[10,32,4,21],[10,33,4,21,"EXPO_PUBLIC_BACKEND_URL"],[10,56,4,21],[10,59,4,59],[10,65,4,65],[11,2,35,7],[11,8,35,13,"useVPNStore"],[11,19,35,24],[11,22,35,24,"exports"],[11,29,35,24],[11,30,35,24,"useVPNStore"],[11,41,35,24],[11,44,35,27],[11,48,35,27,"create"],[11,63,35,33],[11,65,35,44],[11,66,35,45,"set"],[11,69,35,48],[11,71,35,50,"get"],[11,74,35,53],[11,80,35,59],[12,4,36,2,"isConnected"],[12,15,36,13],[12,17,36,15],[12,22,36,20],[13,4,37,2,"connectionStatus"],[13,20,37,18],[13,22,37,20],[13,36,37,34],[14,4,38,2,"selectedServer"],[14,18,38,16],[14,20,38,18],[14,24,38,22],[15,4,39,2,"servers"],[15,11,39,9],[15,13,39,11],[15,15,39,13],[16,4,40,2,"isLoadingServers"],[16,20,40,18],[16,22,40,20],[16,27,40,25],[17,4,42,2,"connect"],[17,11,42,9],[17,13,42,11,"connect"],[17,14,42,11],[17,19,42,17],[18,6,43,4],[18,12,43,10],[19,8,43,12,"selectedServer"],[20,6,43,27],[20,7,43,28],[20,10,43,31,"get"],[20,13,43,34],[20,14,43,35],[20,15,43,36],[21,6,44,4],[21,10,44,8],[21,11,44,9,"selectedServer"],[21,25,44,23],[21,27,44,25],[22,6,46,4,"set"],[22,9,46,7],[22,10,46,8],[23,8,46,10,"connectionStatus"],[23,24,46,26],[23,26,46,28],[24,6,46,41],[24,7,46,42],[24,8,46,43],[26,6,48,4],[27,6,49,4,"setTimeout"],[27,16,49,14],[27,17,49,15],[27,23,49,21],[28,8,50,6,"set"],[28,11,50,9],[28,12,50,10],[29,10,51,8,"isConnected"],[29,21,51,19],[29,23,51,21],[29,27,51,25],[30,10,52,8,"connectionStatus"],[30,26,52,24],[30,28,52,26],[31,8,53,6],[31,9,53,7],[31,10,53,8],[32,6,54,4],[32,7,54,5],[32,9,54,7],[32,13,54,11],[32,14,54,12],[33,4,55,2],[33,5,55,3],[34,4,57,2,"disconnect"],[34,14,57,12],[34,16,57,14,"disconnect"],[34,17,57,14],[34,22,57,20],[35,6,58,4,"set"],[35,9,58,7],[35,10,58,8],[36,8,58,10,"connectionStatus"],[36,24,58,26],[36,26,58,28],[37,6,58,44],[37,7,58,45],[37,8,58,46],[39,6,60,4],[40,6,61,4,"setTimeout"],[40,16,61,14],[40,17,61,15],[40,23,61,21],[41,8,62,6,"set"],[41,11,62,9],[41,12,62,10],[42,10,63,8,"isConnected"],[42,21,63,19],[42,23,63,21],[42,28,63,26],[43,10,64,8,"connectionStatus"],[43,26,64,24],[43,28,64,26],[44,8,65,6],[44,9,65,7],[44,10,65,8],[45,6,66,4],[45,7,66,5],[45,9,66,7],[45,13,66,11],[45,14,66,12],[46,4,67,2],[46,5,67,3],[47,4,69,2,"selectServer"],[47,16,69,14],[47,18,69,17,"server"],[47,24,69,36],[47,28,69,41],[48,6,70,4,"set"],[48,9,70,7],[48,10,70,8],[49,8,70,10,"selectedServer"],[49,22,70,24],[49,24,70,26,"server"],[50,6,70,33],[50,7,70,34],[50,8,70,35],[51,4,71,2],[51,5,71,3],[52,4,73,2,"fetchServers"],[52,16,73,14],[52,18,73,16],[52,24,73,16,"fetchServers"],[52,25,73,16],[52,30,73,28],[53,6,74,4],[53,10,74,8],[54,8,75,6,"set"],[54,11,75,9],[54,12,75,10],[55,10,75,12,"isLoadingServers"],[55,26,75,28],[55,28,75,30],[56,8,75,35],[56,9,75,36],[56,10,75,37],[57,8,77,6],[57,14,77,12,"response"],[57,22,77,20],[57,25,77,23],[57,31,77,29,"axios"],[57,45,77,34],[57,46,77,35,"get"],[57,49,77,38],[57,50,77,39],[57,53,77,42,"API_BASE_URL"],[57,65,77,54],[57,75,77,64],[57,76,77,65],[58,8,78,6],[58,14,78,12,"servers"],[58,21,78,19],[58,24,78,22,"response"],[58,32,78,30],[58,33,78,31,"data"],[58,37,78,35],[59,8,80,6,"set"],[59,11,80,9],[59,12,80,10],[60,10,81,8,"servers"],[60,17,81,15],[61,10,82,8,"isLoadingServers"],[61,26,82,24],[61,28,82,26],[62,8,83,6],[62,9,83,7],[62,10,83,8],[64,8,85,6],[65,8,86,6],[65,14,86,12],[66,10,86,14,"selectedServer"],[67,8,86,29],[67,9,86,30],[67,12,86,33,"get"],[67,15,86,36],[67,16,86,37],[67,17,86,38],[68,8,87,6],[68,12,87,10],[68,13,87,11,"selectedServer"],[68,27,87,25],[68,31,87,29,"servers"],[68,38,87,36],[68,39,87,37,"length"],[68,45,87,43],[68,48,87,46],[68,49,87,47],[68,51,87,49],[69,10,88,8,"set"],[69,13,88,11],[69,14,88,12],[70,12,88,14,"selectedServer"],[70,26,88,28],[70,28,88,30,"servers"],[70,35,88,37],[70,36,88,38],[70,37,88,39],[71,10,88,41],[71,11,88,42],[71,12,88,43],[72,8,89,6],[73,6,90,4],[73,7,90,5],[73,8,90,6],[73,15,90,13,"error"],[73,20,90,18],[73,22,90,20],[74,8,91,6,"console"],[74,15,91,13],[74,16,91,14,"error"],[74,21,91,19],[74,22,91,20],[74,48,91,46],[74,50,91,48,"error"],[74,55,91,53],[74,56,91,54],[75,8,92,6,"set"],[75,11,92,9],[75,12,92,10],[76,10,92,12,"isLoadingServers"],[76,26,92,28],[76,28,92,30],[77,8,92,36],[77,9,92,37],[77,10,92,38],[78,6,93,4],[79,4,94,2],[80,2,95,0],[80,3,95,1],[80,4,95,2],[80,5,95,3],[81,0,95,4],[81,3]],"functionMap":{"names":["<global>","create$argument_0","connect","setTimeout$argument_0","disconnect","selectServer","fetchServers"],"mappings":"AAA;4CCkC;WCO;eCO;KDK;GDC;cGE;eDI;KCK;GHC;gBIE;GJE;gBKE;GLqB;EDC"}},"type":"js/module"}]}