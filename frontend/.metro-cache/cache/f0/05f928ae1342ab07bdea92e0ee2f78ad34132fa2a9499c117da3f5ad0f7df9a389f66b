{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":77,"index":77}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./context.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":78},"end":{"line":2,"column":83,"index":161}}],"key":"ciyJyVp8PjcMvRLY+pcKnPpy50E=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":162},"end":{"line":3,"column":109,"index":271}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useTranslation = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _context = require(_dependencyMap[1], \"./context.js\");\n  var _utils = require(_dependencyMap[2], \"./utils.js\");\n  const usePrevious = (value, ignore) => {\n    const ref = (0, _react.useRef)();\n    (0, _react.useEffect)(() => {\n      ref.current = ignore ? ref.current : value;\n    }, [value, ignore]);\n    return ref.current;\n  };\n  const alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\n  const useMemoizedT = (i18n, language, namespace, keyPrefix) => (0, _react.useCallback)(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n  const useTranslation = (ns, props = {}) => {\n    const {\n      i18n: i18nFromProps\n    } = props;\n    const {\n      i18n: i18nFromContext,\n      defaultNS: defaultNSFromContext\n    } = (0, _react.useContext)(_context.I18nContext) || {};\n    const i18n = i18nFromProps || i18nFromContext || (0, _context.getI18n)();\n    if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new _context.ReportNamespaces();\n    if (!i18n) {\n      (0, _utils.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n      const notReadyT = (k, optsOrDefaultValue) => {\n        if ((0, _utils.isString)(optsOrDefaultValue)) return optsOrDefaultValue;\n        if ((0, _utils.isObject)(optsOrDefaultValue) && (0, _utils.isString)(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n        return Array.isArray(k) ? k[k.length - 1] : k;\n      };\n      const retNotReady = [notReadyT, {}, false];\n      retNotReady.t = notReadyT;\n      retNotReady.i18n = {};\n      retNotReady.ready = false;\n      return retNotReady;\n    }\n    if (i18n.options.react?.wait) (0, _utils.warnOnce)(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n    const i18nOptions = {\n      ...(0, _context.getDefaults)(),\n      ...i18n.options.react,\n      ...props\n    };\n    const {\n      useSuspense,\n      keyPrefix\n    } = i18nOptions;\n    let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n    namespaces = (0, _utils.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n    const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => (0, _utils.hasLoadedNamespace)(n, i18n, i18nOptions));\n    const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n    const getT = () => memoGetT;\n    const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n    const [t, setT] = (0, _react.useState)(getT);\n    let joinedNS = namespaces.join();\n    if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n    const previousJoinedNS = usePrevious(joinedNS);\n    const isMounted = (0, _react.useRef)(true);\n    (0, _react.useEffect)(() => {\n      const {\n        bindI18n,\n        bindI18nStore\n      } = i18nOptions;\n      isMounted.current = true;\n      if (!ready && !useSuspense) {\n        if (props.lng) {\n          (0, _utils.loadLanguages)(i18n, props.lng, namespaces, () => {\n            if (isMounted.current) setT(getNewT);\n          });\n        } else {\n          (0, _utils.loadNamespaces)(i18n, namespaces, () => {\n            if (isMounted.current) setT(getNewT);\n          });\n        }\n      }\n      if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n        setT(getNewT);\n      }\n      const boundReset = () => {\n        if (isMounted.current) setT(getNewT);\n      };\n      if (bindI18n) i18n?.on(bindI18n, boundReset);\n      if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n      return () => {\n        isMounted.current = false;\n        if (i18n && bindI18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n        if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n      };\n    }, [i18n, joinedNS]);\n    (0, _react.useEffect)(() => {\n      if (isMounted.current && ready) {\n        setT(getT);\n      }\n    }, [i18n, keyPrefix, ready]);\n    const ret = [t, i18n, ready];\n    ret.t = t;\n    ret.i18n = i18n;\n    ret.ready = ready;\n    if (ready) return ret;\n    if (!ready && !useSuspense) return ret;\n    throw new Promise(resolve => {\n      if (props.lng) {\n        (0, _utils.loadLanguages)(i18n, props.lng, namespaces, () => resolve());\n      } else {\n        (0, _utils.loadNamespaces)(i18n, namespaces, () => resolve());\n      }\n    });\n  };\n  exports.useTranslation = useTranslation;\n});","lineCount":114,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_context"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,3,0],[8,6,3,0,"_utils"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,4,0],[9,8,4,6,"usePrevious"],[9,19,4,17],[9,22,4,20,"usePrevious"],[9,23,4,21,"value"],[9,28,4,26],[9,30,4,28,"ignore"],[9,36,4,34],[9,41,4,39],[10,4,5,2],[10,10,5,8,"ref"],[10,13,5,11],[10,16,5,14],[10,20,5,14,"useRef"],[10,33,5,20],[10,35,5,21],[10,36,5,22],[11,4,6,2],[11,8,6,2,"useEffect"],[11,24,6,11],[11,26,6,12],[11,32,6,18],[12,6,7,4,"ref"],[12,9,7,7],[12,10,7,8,"current"],[12,17,7,15],[12,20,7,18,"ignore"],[12,26,7,24],[12,29,7,27,"ref"],[12,32,7,30],[12,33,7,31,"current"],[12,40,7,38],[12,43,7,41,"value"],[12,48,7,46],[13,4,8,2],[13,5,8,3],[13,7,8,5],[13,8,8,6,"value"],[13,13,8,11],[13,15,8,13,"ignore"],[13,21,8,19],[13,22,8,20],[13,23,8,21],[14,4,9,2],[14,11,9,9,"ref"],[14,14,9,12],[14,15,9,13,"current"],[14,22,9,20],[15,2,10,0],[15,3,10,1],[16,2,11,0],[16,8,11,6,"alwaysNewT"],[16,18,11,16],[16,21,11,19,"alwaysNewT"],[16,22,11,20,"i18n"],[16,26,11,24],[16,28,11,26,"language"],[16,36,11,34],[16,38,11,36,"namespace"],[16,47,11,45],[16,49,11,47,"keyPrefix"],[16,58,11,56],[16,63,11,61,"i18n"],[16,67,11,65],[16,68,11,66,"getFixedT"],[16,77,11,75],[16,78,11,76,"language"],[16,86,11,84],[16,88,11,86,"namespace"],[16,97,11,95],[16,99,11,97,"keyPrefix"],[16,108,11,106],[16,109,11,107],[17,2,12,0],[17,8,12,6,"useMemoizedT"],[17,20,12,18],[17,23,12,21,"useMemoizedT"],[17,24,12,22,"i18n"],[17,28,12,26],[17,30,12,28,"language"],[17,38,12,36],[17,40,12,38,"namespace"],[17,49,12,47],[17,51,12,49,"keyPrefix"],[17,60,12,58],[17,65,12,63],[17,69,12,63,"useCallback"],[17,87,12,74],[17,89,12,75,"alwaysNewT"],[17,99,12,85],[17,100,12,86,"i18n"],[17,104,12,90],[17,106,12,92,"language"],[17,114,12,100],[17,116,12,102,"namespace"],[17,125,12,111],[17,127,12,113,"keyPrefix"],[17,136,12,122],[17,137,12,123],[17,139,12,125],[17,140,12,126,"i18n"],[17,144,12,130],[17,146,12,132,"language"],[17,154,12,140],[17,156,12,142,"namespace"],[17,165,12,151],[17,167,12,153,"keyPrefix"],[17,176,12,162],[17,177,12,163],[17,178,12,164],[18,2,13,7],[18,8,13,13,"useTranslation"],[18,22,13,27],[18,25,13,30,"useTranslation"],[18,26,13,31,"ns"],[18,28,13,33],[18,30,13,35,"props"],[18,35,13,40],[18,38,13,43],[18,39,13,44],[18,40,13,45],[18,45,13,50],[19,4,14,2],[19,10,14,8],[20,6,15,4,"i18n"],[20,10,15,8],[20,12,15,10,"i18nFromProps"],[21,4,16,2],[21,5,16,3],[21,8,16,6,"props"],[21,13,16,11],[22,4,17,2],[22,10,17,8],[23,6,18,4,"i18n"],[23,10,18,8],[23,12,18,10,"i18nFromContext"],[23,27,18,25],[24,6,19,4,"defaultNS"],[24,15,19,13],[24,17,19,15,"defaultNSFromContext"],[25,4,20,2],[25,5,20,3],[25,8,20,6],[25,12,20,6,"useContext"],[25,29,20,16],[25,31,20,17,"I18nContext"],[25,51,20,28],[25,52,20,29],[25,56,20,33],[25,57,20,34],[25,58,20,35],[26,4,21,2],[26,10,21,8,"i18n"],[26,14,21,12],[26,17,21,15,"i18nFromProps"],[26,30,21,28],[26,34,21,32,"i18nFromContext"],[26,49,21,47],[26,53,21,51],[26,57,21,51,"getI18n"],[26,73,21,58],[26,75,21,59],[26,76,21,60],[27,4,22,2],[27,8,22,6,"i18n"],[27,12,22,10],[27,16,22,14],[27,17,22,15,"i18n"],[27,21,22,19],[27,22,22,20,"reportNamespaces"],[27,38,22,36],[27,40,22,38,"i18n"],[27,44,22,42],[27,45,22,43,"reportNamespaces"],[27,61,22,59],[27,64,22,62],[27,68,22,66,"ReportNamespaces"],[27,93,22,82],[27,94,22,83],[27,95,22,84],[28,4,23,2],[28,8,23,6],[28,9,23,7,"i18n"],[28,13,23,11],[28,15,23,13],[29,6,24,4],[29,10,24,4,"warnOnce"],[29,25,24,12],[29,27,24,13,"i18n"],[29,31,24,17],[29,33,24,19],[29,54,24,40],[29,56,24,42],[29,144,24,130],[29,145,24,131],[30,6,25,4],[30,12,25,10,"notReadyT"],[30,21,25,19],[30,24,25,22,"notReadyT"],[30,25,25,23,"k"],[30,26,25,24],[30,28,25,26,"optsOrDefaultValue"],[30,46,25,44],[30,51,25,49],[31,8,26,6],[31,12,26,10],[31,16,26,10,"isString"],[31,31,26,18],[31,33,26,19,"optsOrDefaultValue"],[31,51,26,37],[31,52,26,38],[31,54,26,40],[31,61,26,47,"optsOrDefaultValue"],[31,79,26,65],[32,8,27,6],[32,12,27,10],[32,16,27,10,"isObject"],[32,31,27,18],[32,33,27,19,"optsOrDefaultValue"],[32,51,27,37],[32,52,27,38],[32,56,27,42],[32,60,27,42,"isString"],[32,75,27,50],[32,77,27,51,"optsOrDefaultValue"],[32,95,27,69],[32,96,27,70,"defaultValue"],[32,108,27,82],[32,109,27,83],[32,111,27,85],[32,118,27,92,"optsOrDefaultValue"],[32,136,27,110],[32,137,27,111,"defaultValue"],[32,149,27,123],[33,8,28,6],[33,15,28,13,"Array"],[33,20,28,18],[33,21,28,19,"isArray"],[33,28,28,26],[33,29,28,27,"k"],[33,30,28,28],[33,31,28,29],[33,34,28,32,"k"],[33,35,28,33],[33,36,28,34,"k"],[33,37,28,35],[33,38,28,36,"length"],[33,44,28,42],[33,47,28,45],[33,48,28,46],[33,49,28,47],[33,52,28,50,"k"],[33,53,28,51],[34,6,29,4],[34,7,29,5],[35,6,30,4],[35,12,30,10,"retNotReady"],[35,23,30,21],[35,26,30,24],[35,27,30,25,"notReadyT"],[35,36,30,34],[35,38,30,36],[35,39,30,37],[35,40,30,38],[35,42,30,40],[35,47,30,45],[35,48,30,46],[36,6,31,4,"retNotReady"],[36,17,31,15],[36,18,31,16,"t"],[36,19,31,17],[36,22,31,20,"notReadyT"],[36,31,31,29],[37,6,32,4,"retNotReady"],[37,17,32,15],[37,18,32,16,"i18n"],[37,22,32,20],[37,25,32,23],[37,26,32,24],[37,27,32,25],[38,6,33,4,"retNotReady"],[38,17,33,15],[38,18,33,16,"ready"],[38,23,33,21],[38,26,33,24],[38,31,33,29],[39,6,34,4],[39,13,34,11,"retNotReady"],[39,24,34,22],[40,4,35,2],[41,4,36,2],[41,8,36,6,"i18n"],[41,12,36,10],[41,13,36,11,"options"],[41,20,36,18],[41,21,36,19,"react"],[41,26,36,24],[41,28,36,26,"wait"],[41,32,36,30],[41,34,36,32],[41,38,36,32,"warnOnce"],[41,53,36,40],[41,55,36,41,"i18n"],[41,59,36,45],[41,61,36,47],[41,80,36,66],[41,82,36,68],[41,199,36,185],[41,200,36,186],[42,4,37,2],[42,10,37,8,"i18nOptions"],[42,21,37,19],[42,24,37,22],[43,6,38,4],[43,9,38,7],[43,13,38,7,"getDefaults"],[43,33,38,18],[43,35,38,19],[43,36,38,20],[44,6,39,4],[44,9,39,7,"i18n"],[44,13,39,11],[44,14,39,12,"options"],[44,21,39,19],[44,22,39,20,"react"],[44,27,39,25],[45,6,40,4],[45,9,40,7,"props"],[46,4,41,2],[46,5,41,3],[47,4,42,2],[47,10,42,8],[48,6,43,4,"useSuspense"],[48,17,43,15],[49,6,44,4,"keyPrefix"],[50,4,45,2],[50,5,45,3],[50,8,45,6,"i18nOptions"],[50,19,45,17],[51,4,46,2],[51,8,46,6,"namespaces"],[51,18,46,16],[51,21,46,19,"ns"],[51,23,46,21],[51,27,46,25,"defaultNSFromContext"],[51,47,46,45],[51,51,46,49,"i18n"],[51,55,46,53],[51,56,46,54,"options"],[51,63,46,61],[51,65,46,63,"defaultNS"],[51,74,46,72],[52,4,47,2,"namespaces"],[52,14,47,12],[52,17,47,15],[52,21,47,15,"isString"],[52,36,47,23],[52,38,47,24,"namespaces"],[52,48,47,34],[52,49,47,35],[52,52,47,38],[52,53,47,39,"namespaces"],[52,63,47,49],[52,64,47,50],[52,67,47,53,"namespaces"],[52,77,47,63],[52,81,47,67],[52,82,47,68],[52,95,47,81],[52,96,47,82],[53,4,48,2,"i18n"],[53,8,48,6],[53,9,48,7,"reportNamespaces"],[53,25,48,23],[53,26,48,24,"addUsedNamespaces"],[53,43,48,41],[53,46,48,44,"namespaces"],[53,56,48,54],[53,57,48,55],[54,4,49,2],[54,10,49,8,"ready"],[54,15,49,13],[54,18,49,16],[54,19,49,17,"i18n"],[54,23,49,21],[54,24,49,22,"isInitialized"],[54,37,49,35],[54,41,49,39,"i18n"],[54,45,49,43],[54,46,49,44,"initializedStoreOnce"],[54,66,49,64],[54,71,49,69,"namespaces"],[54,81,49,79],[54,82,49,80,"every"],[54,87,49,85],[54,88,49,86,"n"],[54,89,49,87],[54,93,49,91],[54,97,49,91,"hasLoadedNamespace"],[54,122,49,109],[54,124,49,110,"n"],[54,125,49,111],[54,127,49,113,"i18n"],[54,131,49,117],[54,133,49,119,"i18nOptions"],[54,144,49,130],[54,145,49,131],[54,146,49,132],[55,4,50,2],[55,10,50,8,"memoGetT"],[55,18,50,16],[55,21,50,19,"useMemoizedT"],[55,33,50,31],[55,34,50,32,"i18n"],[55,38,50,36],[55,40,50,38,"props"],[55,45,50,43],[55,46,50,44,"lng"],[55,49,50,47],[55,53,50,51],[55,57,50,55],[55,59,50,57,"i18nOptions"],[55,70,50,68],[55,71,50,69,"nsMode"],[55,77,50,75],[55,82,50,80],[55,92,50,90],[55,95,50,93,"namespaces"],[55,105,50,103],[55,108,50,106,"namespaces"],[55,118,50,116],[55,119,50,117],[55,120,50,118],[55,121,50,119],[55,123,50,121,"keyPrefix"],[55,132,50,130],[55,133,50,131],[56,4,51,2],[56,10,51,8,"getT"],[56,14,51,12],[56,17,51,15,"getT"],[56,18,51,15],[56,23,51,21,"memoGetT"],[56,31,51,29],[57,4,52,2],[57,10,52,8,"getNewT"],[57,17,52,15],[57,20,52,18,"getNewT"],[57,21,52,18],[57,26,52,24,"alwaysNewT"],[57,36,52,34],[57,37,52,35,"i18n"],[57,41,52,39],[57,43,52,41,"props"],[57,48,52,46],[57,49,52,47,"lng"],[57,52,52,50],[57,56,52,54],[57,60,52,58],[57,62,52,60,"i18nOptions"],[57,73,52,71],[57,74,52,72,"nsMode"],[57,80,52,78],[57,85,52,83],[57,95,52,93],[57,98,52,96,"namespaces"],[57,108,52,106],[57,111,52,109,"namespaces"],[57,121,52,119],[57,122,52,120],[57,123,52,121],[57,124,52,122],[57,126,52,124,"keyPrefix"],[57,135,52,133],[57,136,52,134],[58,4,53,2],[58,10,53,8],[58,11,53,9,"t"],[58,12,53,10],[58,14,53,12,"setT"],[58,18,53,16],[58,19,53,17],[58,22,53,20],[58,26,53,20,"useState"],[58,41,53,28],[58,43,53,29,"getT"],[58,47,53,33],[58,48,53,34],[59,4,54,2],[59,8,54,6,"joinedNS"],[59,16,54,14],[59,19,54,17,"namespaces"],[59,29,54,27],[59,30,54,28,"join"],[59,34,54,32],[59,35,54,33],[59,36,54,34],[60,4,55,2],[60,8,55,6,"props"],[60,13,55,11],[60,14,55,12,"lng"],[60,17,55,15],[60,19,55,17,"joinedNS"],[60,27,55,25],[60,30,55,28],[60,33,55,31,"props"],[60,38,55,36],[60,39,55,37,"lng"],[60,42,55,40],[60,45,55,43,"joinedNS"],[60,53,55,51],[60,55,55,53],[61,4,56,2],[61,10,56,8,"previousJoinedNS"],[61,26,56,24],[61,29,56,27,"usePrevious"],[61,40,56,38],[61,41,56,39,"joinedNS"],[61,49,56,47],[61,50,56,48],[62,4,57,2],[62,10,57,8,"isMounted"],[62,19,57,17],[62,22,57,20],[62,26,57,20,"useRef"],[62,39,57,26],[62,41,57,27],[62,45,57,31],[62,46,57,32],[63,4,58,2],[63,8,58,2,"useEffect"],[63,24,58,11],[63,26,58,12],[63,32,58,18],[64,6,59,4],[64,12,59,10],[65,8,60,6,"bindI18n"],[65,16,60,14],[66,8,61,6,"bindI18nStore"],[67,6,62,4],[67,7,62,5],[67,10,62,8,"i18nOptions"],[67,21,62,19],[68,6,63,4,"isMounted"],[68,15,63,13],[68,16,63,14,"current"],[68,23,63,21],[68,26,63,24],[68,30,63,28],[69,6,64,4],[69,10,64,8],[69,11,64,9,"ready"],[69,16,64,14],[69,20,64,18],[69,21,64,19,"useSuspense"],[69,32,64,30],[69,34,64,32],[70,8,65,6],[70,12,65,10,"props"],[70,17,65,15],[70,18,65,16,"lng"],[70,21,65,19],[70,23,65,21],[71,10,66,8],[71,14,66,8,"loadLanguages"],[71,34,66,21],[71,36,66,22,"i18n"],[71,40,66,26],[71,42,66,28,"props"],[71,47,66,33],[71,48,66,34,"lng"],[71,51,66,37],[71,53,66,39,"namespaces"],[71,63,66,49],[71,65,66,51],[71,71,66,57],[72,12,67,10],[72,16,67,14,"isMounted"],[72,25,67,23],[72,26,67,24,"current"],[72,33,67,31],[72,35,67,33,"setT"],[72,39,67,37],[72,40,67,38,"getNewT"],[72,47,67,45],[72,48,67,46],[73,10,68,8],[73,11,68,9],[73,12,68,10],[74,8,69,6],[74,9,69,7],[74,15,69,13],[75,10,70,8],[75,14,70,8,"loadNamespaces"],[75,35,70,22],[75,37,70,23,"i18n"],[75,41,70,27],[75,43,70,29,"namespaces"],[75,53,70,39],[75,55,70,41],[75,61,70,47],[76,12,71,10],[76,16,71,14,"isMounted"],[76,25,71,23],[76,26,71,24,"current"],[76,33,71,31],[76,35,71,33,"setT"],[76,39,71,37],[76,40,71,38,"getNewT"],[76,47,71,45],[76,48,71,46],[77,10,72,8],[77,11,72,9],[77,12,72,10],[78,8,73,6],[79,6,74,4],[80,6,75,4],[80,10,75,8,"ready"],[80,15,75,13],[80,19,75,17,"previousJoinedNS"],[80,35,75,33],[80,39,75,37,"previousJoinedNS"],[80,55,75,53],[80,60,75,58,"joinedNS"],[80,68,75,66],[80,72,75,70,"isMounted"],[80,81,75,79],[80,82,75,80,"current"],[80,89,75,87],[80,91,75,89],[81,8,76,6,"setT"],[81,12,76,10],[81,13,76,11,"getNewT"],[81,20,76,18],[81,21,76,19],[82,6,77,4],[83,6,78,4],[83,12,78,10,"boundReset"],[83,22,78,20],[83,25,78,23,"boundReset"],[83,26,78,23],[83,31,78,29],[84,8,79,6],[84,12,79,10,"isMounted"],[84,21,79,19],[84,22,79,20,"current"],[84,29,79,27],[84,31,79,29,"setT"],[84,35,79,33],[84,36,79,34,"getNewT"],[84,43,79,41],[84,44,79,42],[85,6,80,4],[85,7,80,5],[86,6,81,4],[86,10,81,8,"bindI18n"],[86,18,81,16],[86,20,81,18,"i18n"],[86,24,81,22],[86,26,81,24,"on"],[86,28,81,26],[86,29,81,27,"bindI18n"],[86,37,81,35],[86,39,81,37,"boundReset"],[86,49,81,47],[86,50,81,48],[87,6,82,4],[87,10,82,8,"bindI18nStore"],[87,23,82,21],[87,25,82,23,"i18n"],[87,29,82,27],[87,31,82,29,"store"],[87,36,82,34],[87,37,82,35,"on"],[87,39,82,37],[87,40,82,38,"bindI18nStore"],[87,53,82,51],[87,55,82,53,"boundReset"],[87,65,82,63],[87,66,82,64],[88,6,83,4],[88,13,83,11],[88,19,83,17],[89,8,84,6,"isMounted"],[89,17,84,15],[89,18,84,16,"current"],[89,25,84,23],[89,28,84,26],[89,33,84,31],[90,8,85,6],[90,12,85,10,"i18n"],[90,16,85,14],[90,20,85,18,"bindI18n"],[90,28,85,26],[90,30,85,28,"bindI18n"],[90,38,85,36],[90,40,85,38,"split"],[90,45,85,43],[90,46,85,44],[90,49,85,47],[90,50,85,48],[90,51,85,49,"forEach"],[90,58,85,56],[90,59,85,57,"e"],[90,60,85,58],[90,64,85,62,"i18n"],[90,68,85,66],[90,69,85,67,"off"],[90,72,85,70],[90,73,85,71,"e"],[90,74,85,72],[90,76,85,74,"boundReset"],[90,86,85,84],[90,87,85,85],[90,88,85,86],[91,8,86,6],[91,12,86,10,"bindI18nStore"],[91,25,86,23],[91,29,86,27,"i18n"],[91,33,86,31],[91,35,86,33,"bindI18nStore"],[91,48,86,46],[91,49,86,47,"split"],[91,54,86,52],[91,55,86,53],[91,58,86,56],[91,59,86,57],[91,60,86,58,"forEach"],[91,67,86,65],[91,68,86,66,"e"],[91,69,86,67],[91,73,86,71,"i18n"],[91,77,86,75],[91,78,86,76,"store"],[91,83,86,81],[91,84,86,82,"off"],[91,87,86,85],[91,88,86,86,"e"],[91,89,86,87],[91,91,86,89,"boundReset"],[91,101,86,99],[91,102,86,100],[91,103,86,101],[92,6,87,4],[92,7,87,5],[93,4,88,2],[93,5,88,3],[93,7,88,5],[93,8,88,6,"i18n"],[93,12,88,10],[93,14,88,12,"joinedNS"],[93,22,88,20],[93,23,88,21],[93,24,88,22],[94,4,89,2],[94,8,89,2,"useEffect"],[94,24,89,11],[94,26,89,12],[94,32,89,18],[95,6,90,4],[95,10,90,8,"isMounted"],[95,19,90,17],[95,20,90,18,"current"],[95,27,90,25],[95,31,90,29,"ready"],[95,36,90,34],[95,38,90,36],[96,8,91,6,"setT"],[96,12,91,10],[96,13,91,11,"getT"],[96,17,91,15],[96,18,91,16],[97,6,92,4],[98,4,93,2],[98,5,93,3],[98,7,93,5],[98,8,93,6,"i18n"],[98,12,93,10],[98,14,93,12,"keyPrefix"],[98,23,93,21],[98,25,93,23,"ready"],[98,30,93,28],[98,31,93,29],[98,32,93,30],[99,4,94,2],[99,10,94,8,"ret"],[99,13,94,11],[99,16,94,14],[99,17,94,15,"t"],[99,18,94,16],[99,20,94,18,"i18n"],[99,24,94,22],[99,26,94,24,"ready"],[99,31,94,29],[99,32,94,30],[100,4,95,2,"ret"],[100,7,95,5],[100,8,95,6,"t"],[100,9,95,7],[100,12,95,10,"t"],[100,13,95,11],[101,4,96,2,"ret"],[101,7,96,5],[101,8,96,6,"i18n"],[101,12,96,10],[101,15,96,13,"i18n"],[101,19,96,17],[102,4,97,2,"ret"],[102,7,97,5],[102,8,97,6,"ready"],[102,13,97,11],[102,16,97,14,"ready"],[102,21,97,19],[103,4,98,2],[103,8,98,6,"ready"],[103,13,98,11],[103,15,98,13],[103,22,98,20,"ret"],[103,25,98,23],[104,4,99,2],[104,8,99,6],[104,9,99,7,"ready"],[104,14,99,12],[104,18,99,16],[104,19,99,17,"useSuspense"],[104,30,99,28],[104,32,99,30],[104,39,99,37,"ret"],[104,42,99,40],[105,4,100,2],[105,10,100,8],[105,14,100,12,"Promise"],[105,21,100,19],[105,22,100,20,"resolve"],[105,29,100,27],[105,33,100,31],[106,6,101,4],[106,10,101,8,"props"],[106,15,101,13],[106,16,101,14,"lng"],[106,19,101,17],[106,21,101,19],[107,8,102,6],[107,12,102,6,"loadLanguages"],[107,32,102,19],[107,34,102,20,"i18n"],[107,38,102,24],[107,40,102,26,"props"],[107,45,102,31],[107,46,102,32,"lng"],[107,49,102,35],[107,51,102,37,"namespaces"],[107,61,102,47],[107,63,102,49],[107,69,102,55,"resolve"],[107,76,102,62],[107,77,102,63],[107,78,102,64],[107,79,102,65],[108,6,103,4],[108,7,103,5],[108,13,103,11],[109,8,104,6],[109,12,104,6,"loadNamespaces"],[109,33,104,20],[109,35,104,21,"i18n"],[109,39,104,25],[109,41,104,27,"namespaces"],[109,51,104,37],[109,53,104,39],[109,59,104,45,"resolve"],[109,66,104,52],[109,67,104,53],[109,68,104,54],[109,69,104,55],[110,6,105,4],[111,4,106,2],[111,5,106,3],[111,6,106,4],[112,2,107,0],[112,3,107,1],[113,2,107,2,"exports"],[113,9,107,2],[113,10,107,2,"useTranslation"],[113,24,107,2],[113,27,107,2,"useTranslation"],[113,41,107,2],[114,0,107,2],[114,3]],"functionMap":{"names":["<global>","usePrevious","useEffect$argument_0","alwaysNewT","useMemoizedT","useTranslation","notReadyT","namespaces.every$argument_0","getT","getNewT","loadLanguages$argument_3","loadNamespaces$argument_2","boundReset","<anonymous>","bindI18n.split.forEach$argument_0","bindI18nStore.split.forEach$argument_0","Promise$argument_0"],"mappings":"AAA;oBCG;YCE;GDE;CDE;mBGC,wFH;qBIC,+IJ;8BKC;sBCY;KDI;sFEoB,6CF;eGE,cH;kBIC,oHJ;YHM;mDQQ;SRE;yCSE;STE;uBUM;KVE;WWG;yDCE,4BD;kEEC,kCF;KXC;GGC;YHC;GGI;oBWO;iDNE,eM;uCLE,eK;GXE;CLC"}},"type":"js/module"}]}