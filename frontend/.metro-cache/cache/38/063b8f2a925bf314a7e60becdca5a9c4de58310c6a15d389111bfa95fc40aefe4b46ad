{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.init = exports.hasLoadedNamespace = exports.getFixedT = exports.exists = exports.dir = exports.default = exports.createInstance = exports.changeLanguage = void 0;\n  exports.keyFromSelector = keysFromSelector;\n  exports.use = exports.t = exports.setDefaultNamespace = exports.reloadResources = exports.loadResources = exports.loadNamespaces = exports.loadLanguages = void 0;\n  const isString = obj => typeof obj === 'string';\n  const defer = () => {\n    let res;\n    let rej;\n    const promise = new Promise((resolve, reject) => {\n      res = resolve;\n      rej = reject;\n    });\n    promise.resolve = res;\n    promise.reject = rej;\n    return promise;\n  };\n  const makeString = object => {\n    if (object == null) return '';\n    return '' + object;\n  };\n  const copy = (a, s, t) => {\n    a.forEach(m => {\n      if (s[m]) t[m] = s[m];\n    });\n  };\n  const lastOfPathSeparatorRegExp = /###/g;\n  const cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\n  const canNotTraverseDeeper = object => !object || isString(object);\n  const getLastOfPath = (object, path, Empty) => {\n    const stack = !isString(path) ? path : path.split('.');\n    let stackIndex = 0;\n    while (stackIndex < stack.length - 1) {\n      if (canNotTraverseDeeper(object)) return {};\n      const key = cleanKey(stack[stackIndex]);\n      if (!object[key] && Empty) object[key] = new Empty();\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        object = object[key];\n      } else {\n        object = {};\n      }\n      ++stackIndex;\n    }\n    if (canNotTraverseDeeper(object)) return {};\n    return {\n      obj: object,\n      k: cleanKey(stack[stackIndex])\n    };\n  };\n  const setPath = (object, path, newValue) => {\n    const {\n      obj,\n      k\n    } = getLastOfPath(object, path, Object);\n    if (obj !== undefined || path.length === 1) {\n      obj[k] = newValue;\n      return;\n    }\n    let e = path[path.length - 1];\n    let p = path.slice(0, path.length - 1);\n    let last = getLastOfPath(object, p, Object);\n    while (last.obj === undefined && p.length) {\n      e = `${p[p.length - 1]}.${e}`;\n      p = p.slice(0, p.length - 1);\n      last = getLastOfPath(object, p, Object);\n      if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n        last.obj = undefined;\n      }\n    }\n    last.obj[`${last.k}.${e}`] = newValue;\n  };\n  const pushPath = (object, path, newValue, concat) => {\n    const {\n      obj,\n      k\n    } = getLastOfPath(object, path, Object);\n    obj[k] = obj[k] || [];\n    obj[k].push(newValue);\n  };\n  const getPath = (object, path) => {\n    const {\n      obj,\n      k\n    } = getLastOfPath(object, path);\n    if (!obj) return undefined;\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n    return obj[k];\n  };\n  const getPathWithDefaults = (data, defaultData, key) => {\n    const value = getPath(data, key);\n    if (value !== undefined) {\n      return value;\n    }\n    return getPath(defaultData, key);\n  };\n  const deepExtend = (target, source, overwrite) => {\n    for (const prop in source) {\n      if (prop !== '__proto__' && prop !== 'constructor') {\n        if (prop in target) {\n          if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n            if (overwrite) target[prop] = source[prop];\n          } else {\n            deepExtend(target[prop], source[prop], overwrite);\n          }\n        } else {\n          target[prop] = source[prop];\n        }\n      }\n    }\n    return target;\n  };\n  const regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n  var _entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;'\n  };\n  const escape = data => {\n    if (isString(data)) {\n      return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n    }\n    return data;\n  };\n  class RegExpCache {\n    constructor(capacity) {\n      this.capacity = capacity;\n      this.regExpMap = new Map();\n      this.regExpQueue = [];\n    }\n    getRegExp(pattern) {\n      const regExpFromCache = this.regExpMap.get(pattern);\n      if (regExpFromCache !== undefined) {\n        return regExpFromCache;\n      }\n      const regExpNew = new RegExp(pattern);\n      if (this.regExpQueue.length === this.capacity) {\n        this.regExpMap.delete(this.regExpQueue.shift());\n      }\n      this.regExpMap.set(pattern, regExpNew);\n      this.regExpQueue.push(pattern);\n      return regExpNew;\n    }\n  }\n  const chars = [' ', ',', '?', '!', ';'];\n  const looksLikeObjectPathRegExpCache = new RegExpCache(20);\n  const looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n    nsSeparator = nsSeparator || '';\n    keySeparator = keySeparator || '';\n    const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n    if (possibleChars.length === 0) return true;\n    const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n    let matched = !r.test(key);\n    if (!matched) {\n      const ki = key.indexOf(keySeparator);\n      if (ki > 0 && !r.test(key.substring(0, ki))) {\n        matched = true;\n      }\n    }\n    return matched;\n  };\n  const deepFind = (obj, path, keySeparator = '.') => {\n    if (!obj) return undefined;\n    if (obj[path]) {\n      if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n      return obj[path];\n    }\n    const tokens = path.split(keySeparator);\n    let current = obj;\n    for (let i = 0; i < tokens.length;) {\n      if (!current || typeof current !== 'object') {\n        return undefined;\n      }\n      let next;\n      let nextPath = '';\n      for (let j = i; j < tokens.length; ++j) {\n        if (j !== i) {\n          nextPath += keySeparator;\n        }\n        nextPath += tokens[j];\n        next = current[nextPath];\n        if (next !== undefined) {\n          if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n            continue;\n          }\n          i += j - i + 1;\n          break;\n        }\n      }\n      current = next;\n    }\n    return current;\n  };\n  const getCleanedCode = code => code?.replace('_', '-');\n  const consoleLogger = {\n    type: 'logger',\n    log(args) {\n      this.output('log', args);\n    },\n    warn(args) {\n      this.output('warn', args);\n    },\n    error(args) {\n      this.output('error', args);\n    },\n    output(type, args) {\n      console?.[type]?.apply?.(console, args);\n    }\n  };\n  class Logger {\n    constructor(concreteLogger, options = {}) {\n      this.init(concreteLogger, options);\n    }\n    init(concreteLogger, options = {}) {\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n    log(...args) {\n      return this.forward(args, 'log', '', true);\n    }\n    warn(...args) {\n      return this.forward(args, 'warn', '', true);\n    }\n    error(...args) {\n      return this.forward(args, 'error', '');\n    }\n    deprecate(...args) {\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n    forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n      return this.logger[lvl](args);\n    }\n    create(moduleName) {\n      return new Logger(this.logger, Object.assign({}, {\n        prefix: `${this.prefix}:${moduleName}:`\n      }, this.options));\n    }\n    clone(options) {\n      options = options || this.options;\n      options.prefix = options.prefix || this.prefix;\n      return new Logger(this.logger, options);\n    }\n  }\n  var baseLogger = new Logger();\n  class EventEmitter {\n    constructor() {\n      this.observers = {};\n    }\n    on(events, listener) {\n      events.split(' ').forEach(event => {\n        if (!this.observers[event]) this.observers[event] = new Map();\n        const numListeners = this.observers[event].get(listener) || 0;\n        this.observers[event].set(listener, numListeners + 1);\n      });\n      return this;\n    }\n    off(event, listener) {\n      if (!this.observers[event]) return;\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n      this.observers[event].delete(listener);\n    }\n    emit(event, ...args) {\n      if (this.observers[event]) {\n        const cloned = Array.from(this.observers[event].entries());\n        cloned.forEach(([observer, numTimesAdded]) => {\n          for (let i = 0; i < numTimesAdded; i++) {\n            observer(...args);\n          }\n        });\n      }\n      if (this.observers['*']) {\n        const cloned = Array.from(this.observers['*'].entries());\n        cloned.forEach(([observer, numTimesAdded]) => {\n          for (let i = 0; i < numTimesAdded; i++) {\n            observer.apply(observer, [event, ...args]);\n          }\n        });\n      }\n    }\n  }\n  class ResourceStore extends EventEmitter {\n    constructor(data, options = {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    }) {\n      super();\n      this.data = data || {};\n      this.options = options;\n      if (this.options.keySeparator === undefined) {\n        this.options.keySeparator = '.';\n      }\n      if (this.options.ignoreJSONStructure === undefined) {\n        this.options.ignoreJSONStructure = true;\n      }\n    }\n    addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n    removeNamespaces(ns) {\n      const index = this.options.ns.indexOf(ns);\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n    getResource(lng, ns, key, options = {}) {\n      const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      let path;\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      } else {\n        path = [lng, ns];\n        if (key) {\n          if (Array.isArray(key)) {\n            path.push(...key);\n          } else if (isString(key) && keySeparator) {\n            path.push(...key.split(keySeparator));\n          } else {\n            path.push(key);\n          }\n        }\n      }\n      const result = getPath(this.data, path);\n      if (!result && !ns && !key && lng.indexOf('.') > -1) {\n        lng = path[0];\n        ns = path[1];\n        key = path.slice(2).join('.');\n      }\n      if (result || !ignoreJSONStructure || !isString(key)) return result;\n      return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n    }\n    addResource(lng, ns, key, value, options = {\n      silent: false\n    }) {\n      const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      let path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n    addResources(lng, ns, resources, options = {\n      silent: false\n    }) {\n      for (const m in resources) {\n        if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n    addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n      silent: false,\n      skipCopy: false\n    }) {\n      let path = [lng, ns];\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      let pack = getPath(this.data, path) || {};\n      if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = Object.assign({}, pack, resources);\n      }\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n    removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n    hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n    getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      return this.getResource(lng, ns);\n    }\n    getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n    hasLanguageSomeTranslations(lng) {\n      const data = this.getDataByLanguage(lng);\n      const n = data && Object.keys(data) || [];\n      return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n    }\n    toJSON() {\n      return this.data;\n    }\n  }\n  var postProcessor = {\n    processors: {},\n    addPostProcessor(module) {\n      this.processors[module.name] = module;\n    },\n    handle(processors, value, key, options, translator) {\n      processors.forEach(processor => {\n        value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n      });\n      return value;\n    }\n  };\n  const PATH_KEY = Symbol('i18next/PATH_KEY');\n  function createProxy() {\n    const state = [];\n    const handler = Object.create(null);\n    let proxy;\n    handler.get = (target, key) => {\n      proxy?.revoke?.();\n      if (key === PATH_KEY) return state;\n      state.push(key);\n      proxy = Proxy.revocable(target, handler);\n      return proxy.proxy;\n    };\n    return Proxy.revocable(Object.create(null), handler).proxy;\n  }\n  function keysFromSelector(selector, opts) {\n    const {\n      [PATH_KEY]: path\n    } = selector(createProxy());\n    return path.join(opts?.keySeparator ?? '.');\n  }\n  const checkedLoadedFor = {};\n  const shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\n  class Translator extends EventEmitter {\n    constructor(services, options = {}) {\n      super();\n      copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n      this.options = options;\n      if (this.options.keySeparator === undefined) {\n        this.options.keySeparator = '.';\n      }\n      this.logger = baseLogger.create('translator');\n    }\n    changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n    exists(key, o = {\n      interpolation: {}\n    }) {\n      const opt = Object.assign({}, o);\n      if (key == null) return false;\n      const resolved = this.resolve(key, opt);\n      return resolved?.res !== undefined;\n    }\n    extractFromKey(key, opt) {\n      let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n      let namespaces = opt.ns || this.options.defaultNS || [];\n      const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n      const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n      if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n        const m = key.match(this.interpolator.nestingRegexp);\n        if (m && m.length > 0) {\n          return {\n            key,\n            namespaces: isString(namespaces) ? [namespaces] : namespaces\n          };\n        }\n        const parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n      return {\n        key,\n        namespaces: isString(namespaces) ? [namespaces] : namespaces\n      };\n    }\n    translate(keys, o, lastKey) {\n      let opt = typeof o === 'object' ? Object.assign({}, o) : o;\n      if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n        opt = this.options.overloadTranslationOptionHandler(arguments);\n      }\n      if (typeof opt === 'object') opt = Object.assign({}, opt);\n      if (!opt) opt = {};\n      if (keys == null) return '';\n      if (typeof keys === 'function') keys = keysFromSelector(keys, Object.assign({}, this.options, opt));\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n      const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n      const {\n        key,\n        namespaces\n      } = this.extractFromKey(keys[keys.length - 1], opt);\n      const namespace = namespaces[namespaces.length - 1];\n      let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      const lng = opt.lng || this.language;\n      const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n      if (lng?.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          if (returnDetails) {\n            return {\n              res: `${namespace}${nsSeparator}${key}`,\n              usedKey: key,\n              exactUsedKey: key,\n              usedLng: lng,\n              usedNS: namespace,\n              usedParams: this.getUsedParamsDetails(opt)\n            };\n          }\n          return `${namespace}${nsSeparator}${key}`;\n        }\n        if (returnDetails) {\n          return {\n            res: key,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return key;\n      }\n      const resolved = this.resolve(keys, opt);\n      let res = resolved?.res;\n      const resUsedKey = resolved?.usedKey || key;\n      const resExactUsedKey = resolved?.exactUsedKey || key;\n      const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n      const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const hasDefaultValue = Translator.hasDefaultValue(opt);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n      const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n      let resForObjHndl = res;\n      if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n        resForObjHndl = defaultValue;\n      }\n      const handleAsObject = shouldHandleAsObject(resForObjHndl);\n      const resType = Object.prototype.toString.apply(resForObjHndl);\n      if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n        if (!opt.returnObjects && !this.options.returnObjects) {\n          if (!this.options.returnedObjectHandler) {\n            this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          }\n          const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, Object.assign({}, opt, {\n            ns: namespaces\n          })) : `key '${key} (${this.language})' returned an object instead of string.`;\n          if (returnDetails) {\n            resolved.res = r;\n            resolved.usedParams = this.getUsedParamsDetails(opt);\n            return resolved;\n          }\n          return r;\n        }\n        if (keySeparator) {\n          const resTypeIsArray = Array.isArray(resForObjHndl);\n          const copy = resTypeIsArray ? [] : {};\n          const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n          for (const m in resForObjHndl) {\n            if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n              const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n              if (hasDefaultValue && !res) {\n                copy[m] = this.translate(deepKey, Object.assign({}, opt, {\n                  defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined\n                }, {\n                  joinArrays: false,\n                  ns: namespaces\n                }));\n              } else {\n                copy[m] = this.translate(deepKey, Object.assign({}, opt, {\n                  joinArrays: false,\n                  ns: namespaces\n                }));\n              }\n              if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n            }\n          }\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n      } else {\n        let usedDefault = false;\n        let usedKey = false;\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n        const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n        const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n        const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n          if (keySeparator) {\n            const fk = this.resolve(key, Object.assign({}, opt, {\n              keySeparator: false\n            }));\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n          let lngs = [];\n          const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (let i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n          } else {\n            lngs.push(opt.lng || this.language);\n          }\n          const send = (l, k, specificDefaultValue) => {\n            const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n            if (this.options.missingKeyHandler) {\n              this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n            } else if (this.backendConnector?.saveMissing) {\n              this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n            }\n            this.emit('missingKey', l, namespace, k, res);\n          };\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(language => {\n                const suffixes = this.pluralResolver.getSuffixes(language, opt);\n                if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                  suffixes.push(`${this.options.pluralSeparator}zero`);\n                }\n                suffixes.forEach(suffix => {\n                  send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n        res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n          res = `${namespace}${nsSeparator}${key}`;\n        }\n        if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n        }\n      }\n      if (returnDetails) {\n        resolved.res = res;\n        resolved.usedParams = this.getUsedParamsDetails(opt);\n        return resolved;\n      }\n      return res;\n    }\n    extendTranslation(res, key, opt, resolved, lastKey) {\n      if (this.i18nFormat?.parse) {\n        res = this.i18nFormat.parse(res, Object.assign({}, this.options.interpolation.defaultVariables, opt), opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved\n        });\n      } else if (!opt.skipInterpolation) {\n        if (opt.interpolation) this.interpolator.init(Object.assign({}, opt, {\n          interpolation: Object.assign({}, this.options.interpolation, opt.interpolation)\n        }));\n        const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n        let nestBef;\n        if (skipOnVariables) {\n          const nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n        let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n        if (this.options.interpolation.defaultVariables) data = Object.assign({}, this.options.interpolation.defaultVariables, data);\n        res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n        if (skipOnVariables) {\n          const na = res.match(this.interpolator.nestingRegexp);\n          const nestAft = na && na.length;\n          if (nestBef < nestAft) opt.nest = false;\n        }\n        if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n        if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n          if (lastKey?.[0] === args[0] && !opt.context) {\n            this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n            return null;\n          }\n          return this.translate(...args, key);\n        }, opt);\n        if (opt.interpolation) this.interpolator.reset();\n      }\n      const postProcess = opt.postProcess || this.options.postProcess;\n      const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n      if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? Object.assign({\n          i18nResolved: Object.assign({}, resolved, {\n            usedParams: this.getUsedParamsDetails(opt)\n          })\n        }, opt) : opt, this);\n      }\n      return res;\n    }\n    resolve(keys, opt = {}) {\n      let found;\n      let usedKey;\n      let exactUsedKey;\n      let usedLng;\n      let usedNS;\n      if (isString(keys)) keys = [keys];\n      keys.forEach(k => {\n        if (this.isValidLookup(found)) return;\n        const extracted = this.extractFromKey(k, opt);\n        const key = extracted.key;\n        usedKey = key;\n        let namespaces = extracted.namespaces;\n        if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n        const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n        const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n        const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n        const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n        namespaces.forEach(ns => {\n          if (this.isValidLookup(found)) return;\n          usedNS = ns;\n          if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n            this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n          codes.forEach(code => {\n            if (this.isValidLookup(found)) return;\n            usedLng = code;\n            const finalKeys = [key];\n            if (this.i18nFormat?.addLookupKeys) {\n              this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n            } else {\n              let pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n              const zeroSuffix = `${this.options.pluralSeparator}zero`;\n              const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(key + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(key + zeroSuffix);\n                }\n              }\n              if (needsContextHandling) {\n                const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n                finalKeys.push(contextKey);\n                if (needsPluralHandling) {\n                  if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                    finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                  }\n                  finalKeys.push(contextKey + pluralSuffix);\n                  if (needsZeroSuffixLookup) {\n                    finalKeys.push(contextKey + zeroSuffix);\n                  }\n                }\n              }\n            }\n            let possibleKey;\n            while (possibleKey = finalKeys.pop()) {\n              if (!this.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = this.getResource(code, ns, possibleKey, opt);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey,\n        exactUsedKey,\n        usedLng,\n        usedNS\n      };\n    }\n    isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n    getResource(code, ns, key, options = {}) {\n      if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n    getUsedParamsDetails(options = {}) {\n      const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n      const useOptionsReplaceForData = options.replace && !isString(options.replace);\n      let data = useOptionsReplaceForData ? options.replace : options;\n      if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n        data.count = options.count;\n      }\n      if (this.options.interpolation.defaultVariables) {\n        data = Object.assign({}, this.options.interpolation.defaultVariables, data);\n      }\n      if (!useOptionsReplaceForData) {\n        data = Object.assign({}, data);\n        for (const key of optionsKeys) {\n          delete data[key];\n        }\n      }\n      return data;\n    }\n    static hasDefaultValue(options) {\n      const prefix = 'defaultValue';\n      for (const option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n  class LanguageUtil {\n    constructor(options) {\n      this.options = options;\n      this.supportedLngs = this.options.supportedLngs || false;\n      this.logger = baseLogger.create('languageUtils');\n    }\n    getScriptPartFromCode(code) {\n      code = getCleanedCode(code);\n      if (!code || code.indexOf('-') < 0) return null;\n      const p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n    getLanguagePartFromCode(code) {\n      code = getCleanedCode(code);\n      if (!code || code.indexOf('-') < 0) return code;\n      const p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n    formatLanguageCode(code) {\n      if (isString(code) && code.indexOf('-') > -1) {\n        let formattedCode;\n        try {\n          formattedCode = Intl.getCanonicalLocales(code)[0];\n        } catch (e) {}\n        if (formattedCode && this.options.lowerCaseLng) {\n          formattedCode = formattedCode.toLowerCase();\n        }\n        if (formattedCode) return formattedCode;\n        if (this.options.lowerCaseLng) {\n          return code.toLowerCase();\n        }\n        return code;\n      }\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n    isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n    getBestMatchFromCodes(codes) {\n      if (!codes) return null;\n      let found;\n      codes.forEach(code => {\n        if (found) return;\n        const cleanedLng = this.formatLanguageCode(code);\n        if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(code => {\n          if (found) return;\n          const lngScOnly = this.getScriptPartFromCode(code);\n          if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n          const lngOnly = this.getLanguagePartFromCode(code);\n          if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = this.options.supportedLngs.find(supportedLng => {\n            if (supportedLng === lngOnly) return supportedLng;\n            if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n            if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n            if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n          });\n        });\n      }\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n    getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (isString(fallbacks)) fallbacks = [fallbacks];\n      if (Array.isArray(fallbacks)) return fallbacks;\n      if (!code) return fallbacks.default || [];\n      let found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks.default;\n      return found || [];\n    }\n    toResolveHierarchy(code, fallbackCode) {\n      const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n      const codes = [];\n      const addCode = c => {\n        if (!c) return;\n        if (this.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n        }\n      };\n      if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (isString(code)) {\n        addCode(this.formatLanguageCode(code));\n      }\n      fallbackCodes.forEach(fc => {\n        if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }\n  const suffixesOrder = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    few: 3,\n    many: 4,\n    other: 5\n  };\n  const dummyRule = {\n    select: count => count === 1 ? 'one' : 'other',\n    resolvedOptions: () => ({\n      pluralCategories: ['one', 'other']\n    })\n  };\n  class PluralResolver {\n    constructor(languageUtils, options = {}) {\n      this.languageUtils = languageUtils;\n      this.options = options;\n      this.logger = baseLogger.create('pluralResolver');\n      this.pluralRulesCache = {};\n    }\n    addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n    clearCache() {\n      this.pluralRulesCache = {};\n    }\n    getRule(code, options = {}) {\n      const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n      const type = options.ordinal ? 'ordinal' : 'cardinal';\n      const cacheKey = JSON.stringify({\n        cleanedCode,\n        type\n      });\n      if (cacheKey in this.pluralRulesCache) {\n        return this.pluralRulesCache[cacheKey];\n      }\n      let rule;\n      try {\n        rule = new Intl.PluralRules(cleanedCode, {\n          type\n        });\n      } catch (err) {\n        if (!Intl) {\n          this.logger.error('No Intl support, please use an Intl polyfill!');\n          return dummyRule;\n        }\n        if (!code.match(/-|_/)) return dummyRule;\n        const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n        rule = this.getRule(lngPart, options);\n      }\n      this.pluralRulesCache[cacheKey] = rule;\n      return rule;\n    }\n    needsPlural(code, options = {}) {\n      let rule = this.getRule(code, options);\n      if (!rule) rule = this.getRule('dev', options);\n      return rule?.resolvedOptions().pluralCategories.length > 1;\n    }\n    getPluralFormsOfKey(code, key, options = {}) {\n      return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n    }\n    getSuffixes(code, options = {}) {\n      let rule = this.getRule(code, options);\n      if (!rule) rule = this.getRule('dev', options);\n      if (!rule) return [];\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    getSuffix(code, count, options = {}) {\n      const rule = this.getRule(code, options);\n      if (rule) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      this.logger.warn(`no plural rule found for: ${code}`);\n      return this.getSuffix('dev', count, options);\n    }\n  }\n  const deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n    let path = getPathWithDefaults(data, defaultData, key);\n    if (!path && ignoreJSONStructure && isString(key)) {\n      path = deepFind(data, key, keySeparator);\n      if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n    }\n    return path;\n  };\n  const regexSafe = val => val.replace(/\\$/g, '$$$$');\n  class Interpolator {\n    constructor(options = {}) {\n      this.logger = baseLogger.create('interpolator');\n      this.options = options;\n      this.format = options?.interpolation?.format || (value => value);\n      this.init(options);\n    }\n    init(options = {}) {\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      const {\n        escape: escape$1,\n        escapeValue,\n        useRawValueToEscape,\n        prefix,\n        prefixEscaped,\n        suffix,\n        suffixEscaped,\n        formatSeparator,\n        unescapeSuffix,\n        unescapePrefix,\n        nestingPrefix,\n        nestingPrefixEscaped,\n        nestingSuffix,\n        nestingSuffixEscaped,\n        nestingOptionsSeparator,\n        maxReplaces,\n        alwaysFormat\n      } = options.interpolation;\n      this.escape = escape$1 !== undefined ? escape$1 : escape;\n      this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n      this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n      this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n      this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n      this.formatSeparator = formatSeparator || ',';\n      this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n      this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n      this.maxReplaces = maxReplaces || 1000;\n      this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n      this.resetRegExp();\n    }\n    reset() {\n      if (this.options) this.init(this.options);\n    }\n    resetRegExp() {\n      const getOrResetRegExp = (existingRegExp, pattern) => {\n        if (existingRegExp?.source === pattern) {\n          existingRegExp.lastIndex = 0;\n          return existingRegExp;\n        }\n        return new RegExp(pattern, 'g');\n      };\n      this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n      this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n      this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n    }\n    interpolate(str, data, lng, options) {\n      let match;\n      let value;\n      let replaces;\n      const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n      const handleFormat = key => {\n        if (key.indexOf(this.formatSeparator) < 0) {\n          const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n          return this.alwaysFormat ? this.format(path, undefined, lng, Object.assign({}, options, data, {\n            interpolationkey: key\n          })) : path;\n        }\n        const p = key.split(this.formatSeparator);\n        const k = p.shift().trim();\n        const f = p.join(this.formatSeparator).trim();\n        return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, Object.assign({}, options, data, {\n          interpolationkey: k\n        }));\n      };\n      this.resetRegExp();\n      const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n      const todos = [{\n        regex: this.regexpUnescape,\n        safeValue: val => regexSafe(val)\n      }, {\n        regex: this.regexp,\n        safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n      }];\n      todos.forEach(todo => {\n        replaces = 0;\n        while (match = todo.regex.exec(str)) {\n          const matchedVar = match[1].trim();\n          value = handleFormat(matchedVar);\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              const temp = missingInterpolationHandler(str, match, options);\n              value = isString(temp) ? temp : '';\n            } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n              value = '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n              value = '';\n            }\n          } else if (!isString(value) && !this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n          const safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n          if (skipOnVariables) {\n            todo.regex.lastIndex += value.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n          replaces++;\n          if (replaces >= this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n    nest(str, fc, options = {}) {\n      let match;\n      let value;\n      let clonedOptions;\n      const handleHasOptions = (key, inheritedOptions) => {\n        const sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        const c = key.split(new RegExp(`${sep}[ ]*{`));\n        let optionsString = `{${c[1]}`;\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        const matchedSingleQuotes = optionsString.match(/'/g);\n        const matchedDoubleQuotes = optionsString.match(/\"/g);\n        if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n          optionsString = optionsString.replace(/'/g, '\"');\n        }\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = Object.assign({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n          return `${key}${sep}${optionsString}`;\n        }\n        if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n        return key;\n      };\n      while (match = this.nestingRegexp.exec(str)) {\n        let formatters = [];\n        clonedOptions = Object.assign({}, options);\n        clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n        clonedOptions.applyPostProcessor = false;\n        delete clonedOptions.defaultValue;\n        const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n        if (keyEndIndex !== -1) {\n          formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n          match[1] = match[1].slice(0, keyEndIndex);\n        }\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && !isString(value)) return value;\n        if (!isString(value)) value = makeString(value);\n        if (!value) {\n          this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n          value = '';\n        }\n        if (formatters.length) {\n          value = formatters.reduce((v, f) => this.format(v, f, options.lng, Object.assign({}, options, {\n            interpolationkey: match[1].trim()\n          })), value.trim());\n        }\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n      return str;\n    }\n  }\n  const parseFormatStr = formatStr => {\n    let formatName = formatStr.toLowerCase().trim();\n    const formatOptions = {};\n    if (formatStr.indexOf('(') > -1) {\n      const p = formatStr.split('(');\n      formatName = p[0].toLowerCase().trim();\n      const optStr = p[1].substring(0, p[1].length - 1);\n      if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n        if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n      } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n        if (!formatOptions.range) formatOptions.range = optStr.trim();\n      } else {\n        const opts = optStr.split(';');\n        opts.forEach(opt => {\n          if (opt) {\n            const [key, ...rest] = opt.split(':');\n            const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n            const trimmedKey = key.trim();\n            if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n            if (val === 'false') formatOptions[trimmedKey] = false;\n            if (val === 'true') formatOptions[trimmedKey] = true;\n            if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n          }\n        });\n      }\n    }\n    return {\n      formatName,\n      formatOptions\n    };\n  };\n  const createCachedFormatter = fn => {\n    const cache = {};\n    return (v, l, o) => {\n      let optForCache = o;\n      if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n        optForCache = Object.assign({}, optForCache, {\n          [o.interpolationkey]: undefined\n        });\n      }\n      const key = l + JSON.stringify(optForCache);\n      let frm = cache[key];\n      if (!frm) {\n        frm = fn(getCleanedCode(l), o);\n        cache[key] = frm;\n      }\n      return frm(v);\n    };\n  };\n  const createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\n  class Formatter {\n    constructor(options = {}) {\n      this.logger = baseLogger.create('formatter');\n      this.options = options;\n      this.init(options);\n    }\n    init(services, options = {\n      interpolation: {}\n    }) {\n      this.formatSeparator = options.interpolation.formatSeparator || ',';\n      const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n      this.formats = {\n        number: cf((lng, opt) => {\n          const formatter = new Intl.NumberFormat(lng, Object.assign({}, opt));\n          return val => formatter.format(val);\n        }),\n        currency: cf((lng, opt) => {\n          const formatter = new Intl.NumberFormat(lng, Object.assign({}, opt, {\n            style: 'currency'\n          }));\n          return val => formatter.format(val);\n        }),\n        datetime: cf((lng, opt) => {\n          const formatter = new Intl.DateTimeFormat(lng, Object.assign({}, opt));\n          return val => formatter.format(val);\n        }),\n        relativetime: cf((lng, opt) => {\n          const formatter = new Intl.RelativeTimeFormat(lng, Object.assign({}, opt));\n          return val => formatter.format(val, opt.range || 'day');\n        }),\n        list: cf((lng, opt) => {\n          const formatter = new Intl.ListFormat(lng, Object.assign({}, opt));\n          return val => formatter.format(val);\n        })\n      };\n    }\n    add(name, fc) {\n      this.formats[name.toLowerCase().trim()] = fc;\n    }\n    addCached(name, fc) {\n      this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n    }\n    format(value, format, lng, options = {}) {\n      const formats = format.split(this.formatSeparator);\n      if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n        const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n        formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n      }\n      const result = formats.reduce((mem, f) => {\n        const {\n          formatName,\n          formatOptions\n        } = parseFormatStr(f);\n        if (this.formats[formatName]) {\n          let formatted = mem;\n          try {\n            const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n            const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n            formatted = this.formats[formatName](mem, l, Object.assign({}, formatOptions, options, valOptions));\n          } catch (error) {\n            this.logger.warn(error);\n          }\n          return formatted;\n        } else {\n          this.logger.warn(`there was no format function for ${formatName}`);\n        }\n        return mem;\n      }, value);\n      return result;\n    }\n  }\n  const removePending = (q, name) => {\n    if (q.pending[name] !== undefined) {\n      delete q.pending[name];\n      q.pendingCount--;\n    }\n  };\n  class Connector extends EventEmitter {\n    constructor(backend, store, services, options = {}) {\n      super();\n      this.backend = backend;\n      this.store = store;\n      this.services = services;\n      this.languageUtils = services.languageUtils;\n      this.options = options;\n      this.logger = baseLogger.create('backendConnector');\n      this.waitingReads = [];\n      this.maxParallelReads = options.maxParallelReads || 10;\n      this.readingCalls = 0;\n      this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n      this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n      this.state = {};\n      this.queue = [];\n      this.backend?.init?.(services, options.backend, options);\n    }\n    queueLoad(languages, namespaces, options, callback) {\n      const toLoad = {};\n      const pending = {};\n      const toLoadLanguages = {};\n      const toLoadNamespaces = {};\n      languages.forEach(lng => {\n        let hasAllNamespaces = true;\n        namespaces.forEach(ns => {\n          const name = `${lng}|${ns}`;\n          if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n            this.state[name] = 2;\n          } else if (this.state[name] < 0) ;else if (this.state[name] === 1) {\n            if (pending[name] === undefined) pending[name] = true;\n          } else {\n            this.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending[name] === undefined) pending[name] = true;\n            if (toLoad[name] === undefined) toLoad[name] = true;\n            if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n      });\n      if (Object.keys(toLoad).length || Object.keys(pending).length) {\n        this.queue.push({\n          pending,\n          pendingCount: Object.keys(pending).length,\n          loaded: {},\n          errors: [],\n          callback\n        });\n      }\n      return {\n        toLoad: Object.keys(toLoad),\n        pending: Object.keys(pending),\n        toLoadLanguages: Object.keys(toLoadLanguages),\n        toLoadNamespaces: Object.keys(toLoadNamespaces)\n      };\n    }\n    loaded(name, err, data) {\n      const s = name.split('|');\n      const lng = s[0];\n      const ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n      if (!err && data) {\n        this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n          skipCopy: true\n        });\n      }\n      this.state[name] = err ? -1 : 2;\n      if (err && data) this.state[name] = 0;\n      const loaded = {};\n      this.queue.forEach(q => {\n        pushPath(q.loaded, [lng], ns);\n        removePending(q, name);\n        if (err) q.errors.push(err);\n        if (q.pendingCount === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(l => {\n            if (!loaded[l]) loaded[l] = {};\n            const loadedKeys = q.loaded[l];\n            if (loadedKeys.length) {\n              loadedKeys.forEach(n => {\n                if (loaded[l][n] === undefined) loaded[l][n] = true;\n              });\n            }\n          });\n          q.done = true;\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(q => !q.done);\n    }\n    read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n      if (!lng.length) return callback(null, {});\n      if (this.readingCalls >= this.maxParallelReads) {\n        this.waitingReads.push({\n          lng,\n          ns,\n          fcName,\n          tried,\n          wait,\n          callback\n        });\n        return;\n      }\n      this.readingCalls++;\n      const resolver = (err, data) => {\n        this.readingCalls--;\n        if (this.waitingReads.length > 0) {\n          const next = this.waitingReads.shift();\n          this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n        }\n        if (err && data && tried < this.maxRetries) {\n          setTimeout(() => {\n            this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n        callback(err, data);\n      };\n      const fc = this.backend[fcName].bind(this.backend);\n      if (fc.length === 2) {\n        try {\n          const r = fc(lng, ns);\n          if (r && typeof r.then === 'function') {\n            r.then(data => resolver(null, data)).catch(resolver);\n          } else {\n            resolver(null, r);\n          }\n        } catch (err) {\n          resolver(err);\n        }\n        return;\n      }\n      return fc(lng, ns, resolver);\n    }\n    prepareLoading(languages, namespaces, options = {}, callback) {\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n      if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n      if (isString(namespaces)) namespaces = [namespaces];\n      const toLoad = this.queueLoad(languages, namespaces, options, callback);\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n      toLoad.toLoad.forEach(name => {\n        this.loadOne(name);\n      });\n    }\n    load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n    reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n    loadOne(name, prefix = '') {\n      const s = name.split('|');\n      const lng = s[0];\n      const ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n        if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n        if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n        this.loaded(name, err, data);\n      });\n    }\n    saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n      if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n        this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n      if (key === undefined || key === null || key === '') return;\n      if (this.backend?.create) {\n        const opts = Object.assign({}, options, {\n          isUpdate\n        });\n        const fc = this.backend.create.bind(this.backend);\n        if (fc.length < 6) {\n          try {\n            let r;\n            if (fc.length === 5) {\n              r = fc(languages, namespace, key, fallbackValue, opts);\n            } else {\n              r = fc(languages, namespace, key, fallbackValue);\n            }\n            if (r && typeof r.then === 'function') {\n              r.then(data => clb(null, data)).catch(clb);\n            } else {\n              clb(null, r);\n            }\n          } catch (err) {\n            clb(err);\n          }\n        } else {\n          fc(languages, namespace, key, fallbackValue, clb, opts);\n        }\n      }\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }\n  const get = () => ({\n    debug: false,\n    initAsync: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: false,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: args => {\n      let ret = {};\n      if (typeof args[1] === 'object') ret = args[1];\n      if (isString(args[1])) ret.defaultValue = args[1];\n      if (isString(args[2])) ret.tDescription = args[2];\n      if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n        const options = args[3] || args[2];\n        Object.keys(options).forEach(key => {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: value => value,\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    },\n    cacheInBuiltFormats: true\n  });\n  const transformOptions = options => {\n    if (isString(options.ns)) options.ns = [options.ns];\n    if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n    if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n    if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n      options.supportedLngs = options.supportedLngs.concat(['cimode']);\n    }\n    if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n    return options;\n  };\n  const noop = () => {};\n  const bindMemberFunctions = inst => {\n    const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n    mems.forEach(mem => {\n      if (typeof inst[mem] === 'function') {\n        inst[mem] = inst[mem].bind(inst);\n      }\n    });\n  };\n  class I18n extends EventEmitter {\n    constructor(options = {}, callback) {\n      super();\n      this.options = transformOptions(options);\n      this.services = {};\n      this.logger = baseLogger;\n      this.modules = {\n        external: []\n      };\n      bindMemberFunctions(this);\n      if (callback && !this.isInitialized && !options.isClone) {\n        if (!this.options.initAsync) {\n          this.init(options, callback);\n          return this;\n        }\n        setTimeout(() => {\n          this.init(options, callback);\n        }, 0);\n      }\n    }\n    init(options = {}, callback) {\n      this.isInitializing = true;\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      if (options.defaultNS == null && options.ns) {\n        if (isString(options.ns)) {\n          options.defaultNS = options.ns;\n        } else if (options.ns.indexOf('translation') < 0) {\n          options.defaultNS = options.ns[0];\n        }\n      }\n      const defOpts = get();\n      this.options = Object.assign({}, defOpts, this.options, transformOptions(options));\n      this.options.interpolation = Object.assign({}, defOpts.interpolation, this.options.interpolation);\n      if (options.keySeparator !== undefined) {\n        this.options.userDefinedKeySeparator = options.keySeparator;\n      }\n      if (options.nsSeparator !== undefined) {\n        this.options.userDefinedNsSeparator = options.nsSeparator;\n      }\n      const createClassOnDemand = ClassOrObject => {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      };\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n        let formatter;\n        if (this.modules.formatter) {\n          formatter = this.modules.formatter;\n        } else {\n          formatter = Formatter;\n        }\n        const lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        const s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n        if (usingLegacyFormatFunction) {\n          this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n        }\n        if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n          s.formatter = createClassOnDemand(formatter);\n          if (s.formatter.init) s.formatter.init(s, this.options);\n          this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n        }\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', (event, ...args) => {\n          this.emit(event, ...args);\n        });\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n        }\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', (event, ...args) => {\n          this.emit(event, ...args);\n        });\n        this.modules.external.forEach(m => {\n          if (m.init) m.init(this);\n        });\n      }\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n      const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(fcName => {\n        this[fcName] = (...args) => this.store[fcName](...args);\n      });\n      const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(fcName => {\n        this[fcName] = (...args) => {\n          this.store[fcName](...args);\n          return this;\n        };\n      });\n      const deferred = defer();\n      const load = () => {\n        const finish = (err, t) => {\n          this.isInitializing = false;\n          if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n          this.isInitialized = true;\n          if (!this.options.isClone) this.logger.log('initialized', this.options);\n          this.emit('initialized', this.options);\n          deferred.resolve(t);\n          callback(err, t);\n        };\n        if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n        this.changeLanguage(this.options.lng, finish);\n      };\n      if (this.options.resources || !this.options.initAsync) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n      return deferred;\n    }\n    loadResources(language, callback = noop) {\n      let usedCallback = callback;\n      const usedLng = isString(language) ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n        const toLoad = [];\n        const append = lng => {\n          if (!lng) return;\n          if (lng === 'cimode') return;\n          const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n          lngs.forEach(l => {\n            if (l === 'cimode') return;\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n        if (!usedLng) {\n          const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(l => append(l));\n        } else {\n          append(usedLng);\n        }\n        this.options.preload?.forEach?.(l => append(l));\n        this.services.backendConnector.load(toLoad, this.options.ns, e => {\n          if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n          usedCallback(e);\n        });\n      } else {\n        usedCallback(null);\n      }\n    }\n    reloadResources(lngs, ns, callback) {\n      const deferred = defer();\n      if (typeof lngs === 'function') {\n        callback = lngs;\n        lngs = undefined;\n      }\n      if (typeof ns === 'function') {\n        callback = ns;\n        ns = undefined;\n      }\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, err => {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n    use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n      if (module.type === 'formatter') {\n        this.modules.formatter = module;\n      }\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n      return this;\n    }\n    setResolvedLanguage(l) {\n      if (!l || !this.languages) return;\n      if (['cimode', 'dev'].indexOf(l) > -1) return;\n      for (let li = 0; li < this.languages.length; li++) {\n        const lngInLngs = this.languages[li];\n        if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n        if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n          this.resolvedLanguage = lngInLngs;\n          break;\n        }\n      }\n      if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n        this.resolvedLanguage = l;\n        this.languages.unshift(l);\n      }\n    }\n    changeLanguage(lng, callback) {\n      this.isLanguageChangingTo = lng;\n      const deferred = defer();\n      this.emit('languageChanging', lng);\n      const setLngProps = l => {\n        this.language = l;\n        this.languages = this.services.languageUtils.toResolveHierarchy(l);\n        this.resolvedLanguage = undefined;\n        this.setResolvedLanguage(l);\n      };\n      const done = (err, l) => {\n        if (l) {\n          if (this.isLanguageChangingTo === lng) {\n            setLngProps(l);\n            this.translator.changeLanguage(l);\n            this.isLanguageChangingTo = undefined;\n            this.emit('languageChanged', l);\n            this.logger.log('languageChanged', l);\n          }\n        } else {\n          this.isLanguageChangingTo = undefined;\n        }\n        deferred.resolve((...args) => this.t(...args));\n        if (callback) callback(err, (...args) => this.t(...args));\n      };\n      const setLng = lngs => {\n        if (!lng && !lngs && this.services.languageDetector) lngs = [];\n        const fl = isString(lngs) ? lngs : lngs && lngs[0];\n        const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n        if (l) {\n          if (!this.language) {\n            setLngProps(l);\n          }\n          if (!this.translator.language) this.translator.changeLanguage(l);\n          this.services.languageDetector?.cacheUserLanguage?.(l);\n        }\n        this.loadResources(l, err => {\n          done(err, l);\n        });\n      };\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        if (this.services.languageDetector.detect.length === 0) {\n          this.services.languageDetector.detect().then(setLng);\n        } else {\n          this.services.languageDetector.detect(setLng);\n        }\n      } else {\n        setLng(lng);\n      }\n      return deferred;\n    }\n    getFixedT(lng, ns, keyPrefix) {\n      const fixedT = (key, opts, ...rest) => {\n        let o;\n        if (typeof opts !== 'object') {\n          o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          o = Object.assign({}, opts);\n        }\n        o.lng = o.lng || fixedT.lng;\n        o.lngs = o.lngs || fixedT.lngs;\n        o.ns = o.ns || fixedT.ns;\n        if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n        const keySeparator = this.options.keySeparator || '.';\n        let resultKey;\n        if (o.keyPrefix && Array.isArray(key)) {\n          resultKey = key.map(k => {\n            if (typeof k === 'function') k = keysFromSelector(k, Object.assign({}, this.options, opts));\n            return `${o.keyPrefix}${keySeparator}${k}`;\n          });\n        } else {\n          if (typeof key === 'function') key = keysFromSelector(key, Object.assign({}, this.options, opts));\n          resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n        }\n        return this.t(resultKey, o);\n      };\n      if (isString(lng)) {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n      fixedT.ns = ns;\n      fixedT.keyPrefix = keyPrefix;\n      return fixedT;\n    }\n    t(...args) {\n      return this.translator?.translate(...args);\n    }\n    exists(...args) {\n      return this.translator?.exists(...args);\n    }\n    setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n    hasLoadedNamespace(ns, options = {}) {\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n      const lng = options.lng || this.resolvedLanguage || this.languages[0];\n      const fallbackLng = this.options ? this.options.fallbackLng : false;\n      const lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n      const loadNotPending = (l, n) => {\n        const loadState = this.services.backendConnector.state[`${l}|${n}`];\n        return loadState === -1 || loadState === 0 || loadState === 2;\n      };\n      if (options.precheck) {\n        const preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n    loadNamespaces(ns, callback) {\n      const deferred = defer();\n      if (!this.options.ns) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n      if (isString(ns)) ns = [ns];\n      ns.forEach(n => {\n        if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n      });\n      this.loadResources(err => {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n    loadLanguages(lngs, callback) {\n      const deferred = defer();\n      if (isString(lngs)) lngs = [lngs];\n      const preloaded = this.options.preload || [];\n      const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(err => {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n    dir(lng) {\n      if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n      if (!lng) return 'rtl';\n      try {\n        const l = new Intl.Locale(lng);\n        if (l && l.getTextInfo) {\n          const ti = l.getTextInfo();\n          if (ti && ti.direction) return ti.direction;\n        }\n      } catch (e) {}\n      const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n      const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n      if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n      return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n    }\n    static createInstance(options = {}, callback) {\n      return new I18n(options, callback);\n    }\n    cloneInstance(options = {}, callback = noop) {\n      const forkResourceStore = options.forkResourceStore;\n      if (forkResourceStore) delete options.forkResourceStore;\n      const mergedOptions = Object.assign({}, this.options, options, {\n        isClone: true\n      });\n      const clone = new I18n(mergedOptions);\n      if (options.debug !== undefined || options.prefix !== undefined) {\n        clone.logger = clone.logger.clone(options);\n      }\n      const membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(m => {\n        clone[m] = this[m];\n      });\n      clone.services = Object.assign({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      if (forkResourceStore) {\n        const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n          prev[l] = Object.assign({}, this.store.data[l]);\n          prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n            acc[n] = Object.assign({}, prev[l][n]);\n            return acc;\n          }, prev[l]);\n          return prev;\n        }, {});\n        clone.store = new ResourceStore(clonedData, mergedOptions);\n        clone.services.resourceStore = clone.store;\n      }\n      clone.translator = new Translator(clone.services, mergedOptions);\n      clone.translator.on('*', (event, ...args) => {\n        clone.emit(event, ...args);\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = mergedOptions;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n    toJSON() {\n      return {\n        options: this.options,\n        store: this.store,\n        language: this.language,\n        languages: this.languages,\n        resolvedLanguage: this.resolvedLanguage\n      };\n    }\n  }\n  const instance = exports.default = I18n.createInstance();\n  instance.createInstance = I18n.createInstance;\n  const createInstance = exports.createInstance = instance.createInstance;\n  const dir = exports.dir = instance.dir;\n  const init = exports.init = instance.init;\n  const loadResources = exports.loadResources = instance.loadResources;\n  const reloadResources = exports.reloadResources = instance.reloadResources;\n  const use = exports.use = instance.use;\n  const changeLanguage = exports.changeLanguage = instance.changeLanguage;\n  const getFixedT = exports.getFixedT = instance.getFixedT;\n  const t = exports.t = instance.t;\n  const exists = exports.exists = instance.exists;\n  const setDefaultNamespace = exports.setDefaultNamespace = instance.setDefaultNamespace;\n  const hasLoadedNamespace = exports.hasLoadedNamespace = instance.hasLoadedNamespace;\n  const loadNamespaces = exports.loadNamespaces = instance.loadNamespaces;\n  const loadLanguages = exports.loadLanguages = instance.loadLanguages;\n});","lineCount":2100,"map":[[8,2,1,0],[8,8,1,6,"isString"],[8,16,1,14],[8,19,1,17,"obj"],[8,22,1,20],[8,26,1,24],[8,33,1,31,"obj"],[8,36,1,34],[8,41,1,39],[8,49,1,47],[9,2,2,0],[9,8,2,6,"defer"],[9,13,2,11],[9,16,2,14,"defer"],[9,17,2,14],[9,22,2,20],[10,4,3,2],[10,8,3,6,"res"],[10,11,3,9],[11,4,4,2],[11,8,4,6,"rej"],[11,11,4,9],[12,4,5,2],[12,10,5,8,"promise"],[12,17,5,15],[12,20,5,18],[12,24,5,22,"Promise"],[12,31,5,29],[12,32,5,30],[12,33,5,31,"resolve"],[12,40,5,38],[12,42,5,40,"reject"],[12,48,5,46],[12,53,5,51],[13,6,6,4,"res"],[13,9,6,7],[13,12,6,10,"resolve"],[13,19,6,17],[14,6,7,4,"rej"],[14,9,7,7],[14,12,7,10,"reject"],[14,18,7,16],[15,4,8,2],[15,5,8,3],[15,6,8,4],[16,4,9,2,"promise"],[16,11,9,9],[16,12,9,10,"resolve"],[16,19,9,17],[16,22,9,20,"res"],[16,25,9,23],[17,4,10,2,"promise"],[17,11,10,9],[17,12,10,10,"reject"],[17,18,10,16],[17,21,10,19,"rej"],[17,24,10,22],[18,4,11,2],[18,11,11,9,"promise"],[18,18,11,16],[19,2,12,0],[19,3,12,1],[20,2,13,0],[20,8,13,6,"makeString"],[20,18,13,16],[20,21,13,19,"object"],[20,27,13,25],[20,31,13,29],[21,4,14,2],[21,8,14,6,"object"],[21,14,14,12],[21,18,14,16],[21,22,14,20],[21,24,14,22],[21,31,14,29],[21,33,14,31],[22,4,15,2],[22,11,15,9],[22,13,15,11],[22,16,15,14,"object"],[22,22,15,20],[23,2,16,0],[23,3,16,1],[24,2,17,0],[24,8,17,6,"copy"],[24,12,17,10],[24,15,17,13,"copy"],[24,16,17,14,"a"],[24,17,17,15],[24,19,17,17,"s"],[24,20,17,18],[24,22,17,20,"t"],[24,23,17,21],[24,28,17,26],[25,4,18,2,"a"],[25,5,18,3],[25,6,18,4,"forEach"],[25,13,18,11],[25,14,18,12,"m"],[25,15,18,13],[25,19,18,17],[26,6,19,4],[26,10,19,8,"s"],[26,11,19,9],[26,12,19,10,"m"],[26,13,19,11],[26,14,19,12],[26,16,19,14,"t"],[26,17,19,15],[26,18,19,16,"m"],[26,19,19,17],[26,20,19,18],[26,23,19,21,"s"],[26,24,19,22],[26,25,19,23,"m"],[26,26,19,24],[26,27,19,25],[27,4,20,2],[27,5,20,3],[27,6,20,4],[28,2,21,0],[28,3,21,1],[29,2,22,0],[29,8,22,6,"lastOfPathSeparatorRegExp"],[29,33,22,31],[29,36,22,34],[29,42,22,40],[30,2,23,0],[30,8,23,6,"cleanKey"],[30,16,23,14],[30,19,23,17,"key"],[30,22,23,20],[30,26,23,24,"key"],[30,29,23,27],[30,33,23,31,"key"],[30,36,23,34],[30,37,23,35,"indexOf"],[30,44,23,42],[30,45,23,43],[30,50,23,48],[30,51,23,49],[30,54,23,52],[30,55,23,53],[30,56,23,54],[30,59,23,57,"key"],[30,62,23,60],[30,63,23,61,"replace"],[30,70,23,68],[30,71,23,69,"lastOfPathSeparatorRegExp"],[30,96,23,94],[30,98,23,96],[30,101,23,99],[30,102,23,100],[30,105,23,103,"key"],[30,108,23,106],[31,2,24,0],[31,8,24,6,"canNotTraverseDeeper"],[31,28,24,26],[31,31,24,29,"object"],[31,37,24,35],[31,41,24,39],[31,42,24,40,"object"],[31,48,24,46],[31,52,24,50,"isString"],[31,60,24,58],[31,61,24,59,"object"],[31,67,24,65],[31,68,24,66],[32,2,25,0],[32,8,25,6,"getLastOfPath"],[32,21,25,19],[32,24,25,22,"getLastOfPath"],[32,25,25,23,"object"],[32,31,25,29],[32,33,25,31,"path"],[32,37,25,35],[32,39,25,37,"Empty"],[32,44,25,42],[32,49,25,47],[33,4,26,2],[33,10,26,8,"stack"],[33,15,26,13],[33,18,26,16],[33,19,26,17,"isString"],[33,27,26,25],[33,28,26,26,"path"],[33,32,26,30],[33,33,26,31],[33,36,26,34,"path"],[33,40,26,38],[33,43,26,41,"path"],[33,47,26,45],[33,48,26,46,"split"],[33,53,26,51],[33,54,26,52],[33,57,26,55],[33,58,26,56],[34,4,27,2],[34,8,27,6,"stackIndex"],[34,18,27,16],[34,21,27,19],[34,22,27,20],[35,4,28,2],[35,11,28,9,"stackIndex"],[35,21,28,19],[35,24,28,22,"stack"],[35,29,28,27],[35,30,28,28,"length"],[35,36,28,34],[35,39,28,37],[35,40,28,38],[35,42,28,40],[36,6,29,4],[36,10,29,8,"canNotTraverseDeeper"],[36,30,29,28],[36,31,29,29,"object"],[36,37,29,35],[36,38,29,36],[36,40,29,38],[36,47,29,45],[36,48,29,46],[36,49,29,47],[37,6,30,4],[37,12,30,10,"key"],[37,15,30,13],[37,18,30,16,"cleanKey"],[37,26,30,24],[37,27,30,25,"stack"],[37,32,30,30],[37,33,30,31,"stackIndex"],[37,43,30,41],[37,44,30,42],[37,45,30,43],[38,6,31,4],[38,10,31,8],[38,11,31,9,"object"],[38,17,31,15],[38,18,31,16,"key"],[38,21,31,19],[38,22,31,20],[38,26,31,24,"Empty"],[38,31,31,29],[38,33,31,31,"object"],[38,39,31,37],[38,40,31,38,"key"],[38,43,31,41],[38,44,31,42],[38,47,31,45],[38,51,31,49,"Empty"],[38,56,31,54],[38,57,31,55],[38,58,31,56],[39,6,32,4],[39,10,32,8,"Object"],[39,16,32,14],[39,17,32,15,"prototype"],[39,26,32,24],[39,27,32,25,"hasOwnProperty"],[39,41,32,39],[39,42,32,40,"call"],[39,46,32,44],[39,47,32,45,"object"],[39,53,32,51],[39,55,32,53,"key"],[39,58,32,56],[39,59,32,57],[39,61,32,59],[40,8,33,6,"object"],[40,14,33,12],[40,17,33,15,"object"],[40,23,33,21],[40,24,33,22,"key"],[40,27,33,25],[40,28,33,26],[41,6,34,4],[41,7,34,5],[41,13,34,11],[42,8,35,6,"object"],[42,14,35,12],[42,17,35,15],[42,18,35,16],[42,19,35,17],[43,6,36,4],[44,6,37,4],[44,8,37,6,"stackIndex"],[44,18,37,16],[45,4,38,2],[46,4,39,2],[46,8,39,6,"canNotTraverseDeeper"],[46,28,39,26],[46,29,39,27,"object"],[46,35,39,33],[46,36,39,34],[46,38,39,36],[46,45,39,43],[46,46,39,44],[46,47,39,45],[47,4,40,2],[47,11,40,9],[48,6,41,4,"obj"],[48,9,41,7],[48,11,41,9,"object"],[48,17,41,15],[49,6,42,4,"k"],[49,7,42,5],[49,9,42,7,"cleanKey"],[49,17,42,15],[49,18,42,16,"stack"],[49,23,42,21],[49,24,42,22,"stackIndex"],[49,34,42,32],[49,35,42,33],[50,4,43,2],[50,5,43,3],[51,2,44,0],[51,3,44,1],[52,2,45,0],[52,8,45,6,"setPath"],[52,15,45,13],[52,18,45,16,"setPath"],[52,19,45,17,"object"],[52,25,45,23],[52,27,45,25,"path"],[52,31,45,29],[52,33,45,31,"newValue"],[52,41,45,39],[52,46,45,44],[53,4,46,2],[53,10,46,8],[54,6,47,4,"obj"],[54,9,47,7],[55,6,48,4,"k"],[56,4,49,2],[56,5,49,3],[56,8,49,6,"getLastOfPath"],[56,21,49,19],[56,22,49,20,"object"],[56,28,49,26],[56,30,49,28,"path"],[56,34,49,32],[56,36,49,34,"Object"],[56,42,49,40],[56,43,49,41],[57,4,50,2],[57,8,50,6,"obj"],[57,11,50,9],[57,16,50,14,"undefined"],[57,25,50,23],[57,29,50,27,"path"],[57,33,50,31],[57,34,50,32,"length"],[57,40,50,38],[57,45,50,43],[57,46,50,44],[57,48,50,46],[58,6,51,4,"obj"],[58,9,51,7],[58,10,51,8,"k"],[58,11,51,9],[58,12,51,10],[58,15,51,13,"newValue"],[58,23,51,21],[59,6,52,4],[60,4,53,2],[61,4,54,2],[61,8,54,6,"e"],[61,9,54,7],[61,12,54,10,"path"],[61,16,54,14],[61,17,54,15,"path"],[61,21,54,19],[61,22,54,20,"length"],[61,28,54,26],[61,31,54,29],[61,32,54,30],[61,33,54,31],[62,4,55,2],[62,8,55,6,"p"],[62,9,55,7],[62,12,55,10,"path"],[62,16,55,14],[62,17,55,15,"slice"],[62,22,55,20],[62,23,55,21],[62,24,55,22],[62,26,55,24,"path"],[62,30,55,28],[62,31,55,29,"length"],[62,37,55,35],[62,40,55,38],[62,41,55,39],[62,42,55,40],[63,4,56,2],[63,8,56,6,"last"],[63,12,56,10],[63,15,56,13,"getLastOfPath"],[63,28,56,26],[63,29,56,27,"object"],[63,35,56,33],[63,37,56,35,"p"],[63,38,56,36],[63,40,56,38,"Object"],[63,46,56,44],[63,47,56,45],[64,4,57,2],[64,11,57,9,"last"],[64,15,57,13],[64,16,57,14,"obj"],[64,19,57,17],[64,24,57,22,"undefined"],[64,33,57,31],[64,37,57,35,"p"],[64,38,57,36],[64,39,57,37,"length"],[64,45,57,43],[64,47,57,45],[65,6,58,4,"e"],[65,7,58,5],[65,10,58,8],[65,13,58,11,"p"],[65,14,58,12],[65,15,58,13,"p"],[65,16,58,14],[65,17,58,15,"length"],[65,23,58,21],[65,26,58,24],[65,27,58,25],[65,28,58,26],[65,32,58,30,"e"],[65,33,58,31],[65,35,58,33],[66,6,59,4,"p"],[66,7,59,5],[66,10,59,8,"p"],[66,11,59,9],[66,12,59,10,"slice"],[66,17,59,15],[66,18,59,16],[66,19,59,17],[66,21,59,19,"p"],[66,22,59,20],[66,23,59,21,"length"],[66,29,59,27],[66,32,59,30],[66,33,59,31],[66,34,59,32],[67,6,60,4,"last"],[67,10,60,8],[67,13,60,11,"getLastOfPath"],[67,26,60,24],[67,27,60,25,"object"],[67,33,60,31],[67,35,60,33,"p"],[67,36,60,34],[67,38,60,36,"Object"],[67,44,60,42],[67,45,60,43],[68,6,61,4],[68,10,61,8,"last"],[68,14,61,12],[68,16,61,14,"obj"],[68,19,61,17],[68,23,61,21],[68,30,61,28,"last"],[68,34,61,32],[68,35,61,33,"obj"],[68,38,61,36],[68,39,61,37],[68,42,61,40,"last"],[68,46,61,44],[68,47,61,45,"k"],[68,48,61,46],[68,52,61,50,"e"],[68,53,61,51],[68,55,61,53],[68,56,61,54],[68,61,61,59],[68,72,61,70],[68,74,61,72],[69,8,62,6,"last"],[69,12,62,10],[69,13,62,11,"obj"],[69,16,62,14],[69,19,62,17,"undefined"],[69,28,62,26],[70,6,63,4],[71,4,64,2],[72,4,65,2,"last"],[72,8,65,6],[72,9,65,7,"obj"],[72,12,65,10],[72,13,65,11],[72,16,65,14,"last"],[72,20,65,18],[72,21,65,19,"k"],[72,22,65,20],[72,26,65,24,"e"],[72,27,65,25],[72,29,65,27],[72,30,65,28],[72,33,65,31,"newValue"],[72,41,65,39],[73,2,66,0],[73,3,66,1],[74,2,67,0],[74,8,67,6,"pushPath"],[74,16,67,14],[74,19,67,17,"pushPath"],[74,20,67,18,"object"],[74,26,67,24],[74,28,67,26,"path"],[74,32,67,30],[74,34,67,32,"newValue"],[74,42,67,40],[74,44,67,42,"concat"],[74,50,67,48],[74,55,67,53],[75,4,68,2],[75,10,68,8],[76,6,69,4,"obj"],[76,9,69,7],[77,6,70,4,"k"],[78,4,71,2],[78,5,71,3],[78,8,71,6,"getLastOfPath"],[78,21,71,19],[78,22,71,20,"object"],[78,28,71,26],[78,30,71,28,"path"],[78,34,71,32],[78,36,71,34,"Object"],[78,42,71,40],[78,43,71,41],[79,4,72,2,"obj"],[79,7,72,5],[79,8,72,6,"k"],[79,9,72,7],[79,10,72,8],[79,13,72,11,"obj"],[79,16,72,14],[79,17,72,15,"k"],[79,18,72,16],[79,19,72,17],[79,23,72,21],[79,25,72,23],[80,4,73,2,"obj"],[80,7,73,5],[80,8,73,6,"k"],[80,9,73,7],[80,10,73,8],[80,11,73,9,"push"],[80,15,73,13],[80,16,73,14,"newValue"],[80,24,73,22],[80,25,73,23],[81,2,74,0],[81,3,74,1],[82,2,75,0],[82,8,75,6,"getPath"],[82,15,75,13],[82,18,75,16,"getPath"],[82,19,75,17,"object"],[82,25,75,23],[82,27,75,25,"path"],[82,31,75,29],[82,36,75,34],[83,4,76,2],[83,10,76,8],[84,6,77,4,"obj"],[84,9,77,7],[85,6,78,4,"k"],[86,4,79,2],[86,5,79,3],[86,8,79,6,"getLastOfPath"],[86,21,79,19],[86,22,79,20,"object"],[86,28,79,26],[86,30,79,28,"path"],[86,34,79,32],[86,35,79,33],[87,4,80,2],[87,8,80,6],[87,9,80,7,"obj"],[87,12,80,10],[87,14,80,12],[87,21,80,19,"undefined"],[87,30,80,28],[88,4,81,2],[88,8,81,6],[88,9,81,7,"Object"],[88,15,81,13],[88,16,81,14,"prototype"],[88,25,81,23],[88,26,81,24,"hasOwnProperty"],[88,40,81,38],[88,41,81,39,"call"],[88,45,81,43],[88,46,81,44,"obj"],[88,49,81,47],[88,51,81,49,"k"],[88,52,81,50],[88,53,81,51],[88,55,81,53],[88,62,81,60,"undefined"],[88,71,81,69],[89,4,82,2],[89,11,82,9,"obj"],[89,14,82,12],[89,15,82,13,"k"],[89,16,82,14],[89,17,82,15],[90,2,83,0],[90,3,83,1],[91,2,84,0],[91,8,84,6,"getPathWithDefaults"],[91,27,84,25],[91,30,84,28,"getPathWithDefaults"],[91,31,84,29,"data"],[91,35,84,33],[91,37,84,35,"defaultData"],[91,48,84,46],[91,50,84,48,"key"],[91,53,84,51],[91,58,84,56],[92,4,85,2],[92,10,85,8,"value"],[92,15,85,13],[92,18,85,16,"getPath"],[92,25,85,23],[92,26,85,24,"data"],[92,30,85,28],[92,32,85,30,"key"],[92,35,85,33],[92,36,85,34],[93,4,86,2],[93,8,86,6,"value"],[93,13,86,11],[93,18,86,16,"undefined"],[93,27,86,25],[93,29,86,27],[94,6,87,4],[94,13,87,11,"value"],[94,18,87,16],[95,4,88,2],[96,4,89,2],[96,11,89,9,"getPath"],[96,18,89,16],[96,19,89,17,"defaultData"],[96,30,89,28],[96,32,89,30,"key"],[96,35,89,33],[96,36,89,34],[97,2,90,0],[97,3,90,1],[98,2,91,0],[98,8,91,6,"deepExtend"],[98,18,91,16],[98,21,91,19,"deepExtend"],[98,22,91,20,"target"],[98,28,91,26],[98,30,91,28,"source"],[98,36,91,34],[98,38,91,36,"overwrite"],[98,47,91,45],[98,52,91,50],[99,4,92,2],[99,9,92,7],[99,15,92,13,"prop"],[99,19,92,17],[99,23,92,21,"source"],[99,29,92,27],[99,31,92,29],[100,6,93,4],[100,10,93,8,"prop"],[100,14,93,12],[100,19,93,17],[100,30,93,28],[100,34,93,32,"prop"],[100,38,93,36],[100,43,93,41],[100,56,93,54],[100,58,93,56],[101,8,94,6],[101,12,94,10,"prop"],[101,16,94,14],[101,20,94,18,"target"],[101,26,94,24],[101,28,94,26],[102,10,95,8],[102,14,95,12,"isString"],[102,22,95,20],[102,23,95,21,"target"],[102,29,95,27],[102,30,95,28,"prop"],[102,34,95,32],[102,35,95,33],[102,36,95,34],[102,40,95,38,"target"],[102,46,95,44],[102,47,95,45,"prop"],[102,51,95,49],[102,52,95,50],[102,64,95,62,"String"],[102,70,95,68],[102,74,95,72,"isString"],[102,82,95,80],[102,83,95,81,"source"],[102,89,95,87],[102,90,95,88,"prop"],[102,94,95,92],[102,95,95,93],[102,96,95,94],[102,100,95,98,"source"],[102,106,95,104],[102,107,95,105,"prop"],[102,111,95,109],[102,112,95,110],[102,124,95,122,"String"],[102,130,95,128],[102,132,95,130],[103,12,96,10],[103,16,96,14,"overwrite"],[103,25,96,23],[103,27,96,25,"target"],[103,33,96,31],[103,34,96,32,"prop"],[103,38,96,36],[103,39,96,37],[103,42,96,40,"source"],[103,48,96,46],[103,49,96,47,"prop"],[103,53,96,51],[103,54,96,52],[104,10,97,8],[104,11,97,9],[104,17,97,15],[105,12,98,10,"deepExtend"],[105,22,98,20],[105,23,98,21,"target"],[105,29,98,27],[105,30,98,28,"prop"],[105,34,98,32],[105,35,98,33],[105,37,98,35,"source"],[105,43,98,41],[105,44,98,42,"prop"],[105,48,98,46],[105,49,98,47],[105,51,98,49,"overwrite"],[105,60,98,58],[105,61,98,59],[106,10,99,8],[107,8,100,6],[107,9,100,7],[107,15,100,13],[108,10,101,8,"target"],[108,16,101,14],[108,17,101,15,"prop"],[108,21,101,19],[108,22,101,20],[108,25,101,23,"source"],[108,31,101,29],[108,32,101,30,"prop"],[108,36,101,34],[108,37,101,35],[109,8,102,6],[110,6,103,4],[111,4,104,2],[112,4,105,2],[112,11,105,9,"target"],[112,17,105,15],[113,2,106,0],[113,3,106,1],[114,2,107,0],[114,8,107,6,"regexEscape"],[114,19,107,17],[114,22,107,20,"str"],[114,25,107,23],[114,29,107,27,"str"],[114,32,107,30],[114,33,107,31,"replace"],[114,40,107,38],[114,41,107,39],[114,78,107,76],[114,80,107,78],[114,86,107,84],[114,87,107,85],[115,2,108,0],[115,6,108,4,"_entityMap"],[115,16,108,14],[115,19,108,17],[116,4,109,2],[116,7,109,5],[116,9,109,7],[116,16,109,14],[117,4,110,2],[117,7,110,5],[117,9,110,7],[117,15,110,13],[118,4,111,2],[118,7,111,5],[118,9,111,7],[118,15,111,13],[119,4,112,2],[119,7,112,5],[119,9,112,7],[119,17,112,15],[120,4,113,2],[120,7,113,5],[120,9,113,7],[120,16,113,14],[121,4,114,2],[121,7,114,5],[121,9,114,7],[122,2,115,0],[122,3,115,1],[123,2,116,0],[123,8,116,6,"escape"],[123,14,116,12],[123,17,116,15,"data"],[123,21,116,19],[123,25,116,23],[124,4,117,2],[124,8,117,6,"isString"],[124,16,117,14],[124,17,117,15,"data"],[124,21,117,19],[124,22,117,20],[124,24,117,22],[125,6,118,4],[125,13,118,11,"data"],[125,17,118,15],[125,18,118,16,"replace"],[125,25,118,23],[125,26,118,24],[125,38,118,36],[125,40,118,38,"s"],[125,41,118,39],[125,45,118,43,"_entityMap"],[125,55,118,53],[125,56,118,54,"s"],[125,57,118,55],[125,58,118,56],[125,59,118,57],[126,4,119,2],[127,4,120,2],[127,11,120,9,"data"],[127,15,120,13],[128,2,121,0],[128,3,121,1],[129,2,122,0],[129,8,122,6,"RegExpCache"],[129,19,122,17],[129,20,122,18],[130,4,123,2,"constructor"],[130,15,123,13,"constructor"],[130,16,123,14,"capacity"],[130,24,123,22],[130,26,123,24],[131,6,124,4],[131,10,124,8],[131,11,124,9,"capacity"],[131,19,124,17],[131,22,124,20,"capacity"],[131,30,124,28],[132,6,125,4],[132,10,125,8],[132,11,125,9,"regExpMap"],[132,20,125,18],[132,23,125,21],[132,27,125,25,"Map"],[132,30,125,28],[132,31,125,29],[132,32,125,30],[133,6,126,4],[133,10,126,8],[133,11,126,9,"regExpQueue"],[133,22,126,20],[133,25,126,23],[133,27,126,25],[134,4,127,2],[135,4,128,2,"getRegExp"],[135,13,128,11,"getRegExp"],[135,14,128,12,"pattern"],[135,21,128,19],[135,23,128,21],[136,6,129,4],[136,12,129,10,"regExpFromCache"],[136,27,129,25],[136,30,129,28],[136,34,129,32],[136,35,129,33,"regExpMap"],[136,44,129,42],[136,45,129,43,"get"],[136,48,129,46],[136,49,129,47,"pattern"],[136,56,129,54],[136,57,129,55],[137,6,130,4],[137,10,130,8,"regExpFromCache"],[137,25,130,23],[137,30,130,28,"undefined"],[137,39,130,37],[137,41,130,39],[138,8,131,6],[138,15,131,13,"regExpFromCache"],[138,30,131,28],[139,6,132,4],[140,6,133,4],[140,12,133,10,"regExpNew"],[140,21,133,19],[140,24,133,22],[140,28,133,26,"RegExp"],[140,34,133,32],[140,35,133,33,"pattern"],[140,42,133,40],[140,43,133,41],[141,6,134,4],[141,10,134,8],[141,14,134,12],[141,15,134,13,"regExpQueue"],[141,26,134,24],[141,27,134,25,"length"],[141,33,134,31],[141,38,134,36],[141,42,134,40],[141,43,134,41,"capacity"],[141,51,134,49],[141,53,134,51],[142,8,135,6],[142,12,135,10],[142,13,135,11,"regExpMap"],[142,22,135,20],[142,23,135,21,"delete"],[142,29,135,27],[142,30,135,28],[142,34,135,32],[142,35,135,33,"regExpQueue"],[142,46,135,44],[142,47,135,45,"shift"],[142,52,135,50],[142,53,135,51],[142,54,135,52],[142,55,135,53],[143,6,136,4],[144,6,137,4],[144,10,137,8],[144,11,137,9,"regExpMap"],[144,20,137,18],[144,21,137,19,"set"],[144,24,137,22],[144,25,137,23,"pattern"],[144,32,137,30],[144,34,137,32,"regExpNew"],[144,43,137,41],[144,44,137,42],[145,6,138,4],[145,10,138,8],[145,11,138,9,"regExpQueue"],[145,22,138,20],[145,23,138,21,"push"],[145,27,138,25],[145,28,138,26,"pattern"],[145,35,138,33],[145,36,138,34],[146,6,139,4],[146,13,139,11,"regExpNew"],[146,22,139,20],[147,4,140,2],[148,2,141,0],[149,2,142,0],[149,8,142,6,"chars"],[149,13,142,11],[149,16,142,14],[149,17,142,15],[149,20,142,18],[149,22,142,20],[149,25,142,23],[149,27,142,25],[149,30,142,28],[149,32,142,30],[149,35,142,33],[149,37,142,35],[149,40,142,38],[149,41,142,39],[150,2,143,0],[150,8,143,6,"looksLikeObjectPathRegExpCache"],[150,38,143,36],[150,41,143,39],[150,45,143,43,"RegExpCache"],[150,56,143,54],[150,57,143,55],[150,59,143,57],[150,60,143,58],[151,2,144,0],[151,8,144,6,"looksLikeObjectPath"],[151,27,144,25],[151,30,144,28,"looksLikeObjectPath"],[151,31,144,29,"key"],[151,34,144,32],[151,36,144,34,"nsSeparator"],[151,47,144,45],[151,49,144,47,"keySeparator"],[151,61,144,59],[151,66,144,64],[152,4,145,2,"nsSeparator"],[152,15,145,13],[152,18,145,16,"nsSeparator"],[152,29,145,27],[152,33,145,31],[152,35,145,33],[153,4,146,2,"keySeparator"],[153,16,146,14],[153,19,146,17,"keySeparator"],[153,31,146,29],[153,35,146,33],[153,37,146,35],[154,4,147,2],[154,10,147,8,"possibleChars"],[154,23,147,21],[154,26,147,24,"chars"],[154,31,147,29],[154,32,147,30,"filter"],[154,38,147,36],[154,39,147,37,"c"],[154,40,147,38],[154,44,147,42,"nsSeparator"],[154,55,147,53],[154,56,147,54,"indexOf"],[154,63,147,61],[154,64,147,62,"c"],[154,65,147,63],[154,66,147,64],[154,69,147,67],[154,70,147,68],[154,74,147,72,"keySeparator"],[154,86,147,84],[154,87,147,85,"indexOf"],[154,94,147,92],[154,95,147,93,"c"],[154,96,147,94],[154,97,147,95],[154,100,147,98],[154,101,147,99],[154,102,147,100],[155,4,148,2],[155,8,148,6,"possibleChars"],[155,21,148,19],[155,22,148,20,"length"],[155,28,148,26],[155,33,148,31],[155,34,148,32],[155,36,148,34],[155,43,148,41],[155,47,148,45],[156,4,149,2],[156,10,149,8,"r"],[156,11,149,9],[156,14,149,12,"looksLikeObjectPathRegExpCache"],[156,44,149,42],[156,45,149,43,"getRegExp"],[156,54,149,52],[156,55,149,53],[156,59,149,57,"possibleChars"],[156,72,149,70],[156,73,149,71,"map"],[156,76,149,74],[156,77,149,75,"c"],[156,78,149,76],[156,82,149,80,"c"],[156,83,149,81],[156,88,149,86],[156,91,149,89],[156,94,149,92],[156,99,149,97],[156,102,149,100,"c"],[156,103,149,101],[156,104,149,102],[156,105,149,103,"join"],[156,109,149,107],[156,110,149,108],[156,113,149,111],[156,114,149,112],[156,117,149,115],[156,118,149,116],[157,4,150,2],[157,8,150,6,"matched"],[157,15,150,13],[157,18,150,16],[157,19,150,17,"r"],[157,20,150,18],[157,21,150,19,"test"],[157,25,150,23],[157,26,150,24,"key"],[157,29,150,27],[157,30,150,28],[158,4,151,2],[158,8,151,6],[158,9,151,7,"matched"],[158,16,151,14],[158,18,151,16],[159,6,152,4],[159,12,152,10,"ki"],[159,14,152,12],[159,17,152,15,"key"],[159,20,152,18],[159,21,152,19,"indexOf"],[159,28,152,26],[159,29,152,27,"keySeparator"],[159,41,152,39],[159,42,152,40],[160,6,153,4],[160,10,153,8,"ki"],[160,12,153,10],[160,15,153,13],[160,16,153,14],[160,20,153,18],[160,21,153,19,"r"],[160,22,153,20],[160,23,153,21,"test"],[160,27,153,25],[160,28,153,26,"key"],[160,31,153,29],[160,32,153,30,"substring"],[160,41,153,39],[160,42,153,40],[160,43,153,41],[160,45,153,43,"ki"],[160,47,153,45],[160,48,153,46],[160,49,153,47],[160,51,153,49],[161,8,154,6,"matched"],[161,15,154,13],[161,18,154,16],[161,22,154,20],[162,6,155,4],[163,4,156,2],[164,4,157,2],[164,11,157,9,"matched"],[164,18,157,16],[165,2,158,0],[165,3,158,1],[166,2,159,0],[166,8,159,6,"deepFind"],[166,16,159,14],[166,19,159,17,"deepFind"],[166,20,159,18,"obj"],[166,23,159,21],[166,25,159,23,"path"],[166,29,159,27],[166,31,159,29,"keySeparator"],[166,43,159,41],[166,46,159,44],[166,49,159,47],[166,54,159,52],[167,4,160,2],[167,8,160,6],[167,9,160,7,"obj"],[167,12,160,10],[167,14,160,12],[167,21,160,19,"undefined"],[167,30,160,28],[168,4,161,2],[168,8,161,6,"obj"],[168,11,161,9],[168,12,161,10,"path"],[168,16,161,14],[168,17,161,15],[168,19,161,17],[169,6,162,4],[169,10,162,8],[169,11,162,9,"Object"],[169,17,162,15],[169,18,162,16,"prototype"],[169,27,162,25],[169,28,162,26,"hasOwnProperty"],[169,42,162,40],[169,43,162,41,"call"],[169,47,162,45],[169,48,162,46,"obj"],[169,51,162,49],[169,53,162,51,"path"],[169,57,162,55],[169,58,162,56],[169,60,162,58],[169,67,162,65,"undefined"],[169,76,162,74],[170,6,163,4],[170,13,163,11,"obj"],[170,16,163,14],[170,17,163,15,"path"],[170,21,163,19],[170,22,163,20],[171,4,164,2],[172,4,165,2],[172,10,165,8,"tokens"],[172,16,165,14],[172,19,165,17,"path"],[172,23,165,21],[172,24,165,22,"split"],[172,29,165,27],[172,30,165,28,"keySeparator"],[172,42,165,40],[172,43,165,41],[173,4,166,2],[173,8,166,6,"current"],[173,15,166,13],[173,18,166,16,"obj"],[173,21,166,19],[174,4,167,2],[174,9,167,7],[174,13,167,11,"i"],[174,14,167,12],[174,17,167,15],[174,18,167,16],[174,20,167,18,"i"],[174,21,167,19],[174,24,167,22,"tokens"],[174,30,167,28],[174,31,167,29,"length"],[174,37,167,35],[174,40,167,38],[175,6,168,4],[175,10,168,8],[175,11,168,9,"current"],[175,18,168,16],[175,22,168,20],[175,29,168,27,"current"],[175,36,168,34],[175,41,168,39],[175,49,168,47],[175,51,168,49],[176,8,169,6],[176,15,169,13,"undefined"],[176,24,169,22],[177,6,170,4],[178,6,171,4],[178,10,171,8,"next"],[178,14,171,12],[179,6,172,4],[179,10,172,8,"nextPath"],[179,18,172,16],[179,21,172,19],[179,23,172,21],[180,6,173,4],[180,11,173,9],[180,15,173,13,"j"],[180,16,173,14],[180,19,173,17,"i"],[180,20,173,18],[180,22,173,20,"j"],[180,23,173,21],[180,26,173,24,"tokens"],[180,32,173,30],[180,33,173,31,"length"],[180,39,173,37],[180,41,173,39],[180,43,173,41,"j"],[180,44,173,42],[180,46,173,44],[181,8,174,6],[181,12,174,10,"j"],[181,13,174,11],[181,18,174,16,"i"],[181,19,174,17],[181,21,174,19],[182,10,175,8,"nextPath"],[182,18,175,16],[182,22,175,20,"keySeparator"],[182,34,175,32],[183,8,176,6],[184,8,177,6,"nextPath"],[184,16,177,14],[184,20,177,18,"tokens"],[184,26,177,24],[184,27,177,25,"j"],[184,28,177,26],[184,29,177,27],[185,8,178,6,"next"],[185,12,178,10],[185,15,178,13,"current"],[185,22,178,20],[185,23,178,21,"nextPath"],[185,31,178,29],[185,32,178,30],[186,8,179,6],[186,12,179,10,"next"],[186,16,179,14],[186,21,179,19,"undefined"],[186,30,179,28],[186,32,179,30],[187,10,180,8],[187,14,180,12],[187,15,180,13],[187,23,180,21],[187,25,180,23],[187,33,180,31],[187,35,180,33],[187,44,180,42],[187,45,180,43],[187,46,180,44,"indexOf"],[187,53,180,51],[187,54,180,52],[187,61,180,59,"next"],[187,65,180,63],[187,66,180,64],[187,69,180,67],[187,70,180,68],[187,71,180,69],[187,75,180,73,"j"],[187,76,180,74],[187,79,180,77,"tokens"],[187,85,180,83],[187,86,180,84,"length"],[187,92,180,90],[187,95,180,93],[187,96,180,94],[187,98,180,96],[188,12,181,10],[189,10,182,8],[190,10,183,8,"i"],[190,11,183,9],[190,15,183,13,"j"],[190,16,183,14],[190,19,183,17,"i"],[190,20,183,18],[190,23,183,21],[190,24,183,22],[191,10,184,8],[192,8,185,6],[193,6,186,4],[194,6,187,4,"current"],[194,13,187,11],[194,16,187,14,"next"],[194,20,187,18],[195,4,188,2],[196,4,189,2],[196,11,189,9,"current"],[196,18,189,16],[197,2,190,0],[197,3,190,1],[198,2,191,0],[198,8,191,6,"getCleanedCode"],[198,22,191,20],[198,25,191,23,"code"],[198,29,191,27],[198,33,191,31,"code"],[198,37,191,35],[198,39,191,37,"replace"],[198,46,191,44],[198,47,191,45],[198,50,191,48],[198,52,191,50],[198,55,191,53],[198,56,191,54],[199,2,193,0],[199,8,193,6,"consoleLogger"],[199,21,193,19],[199,24,193,22],[200,4,194,2,"type"],[200,8,194,6],[200,10,194,8],[200,18,194,16],[201,4,195,2,"log"],[201,7,195,5,"log"],[201,8,195,6,"args"],[201,12,195,10],[201,14,195,12],[202,6,196,4],[202,10,196,8],[202,11,196,9,"output"],[202,17,196,15],[202,18,196,16],[202,23,196,21],[202,25,196,23,"args"],[202,29,196,27],[202,30,196,28],[203,4,197,2],[203,5,197,3],[204,4,198,2,"warn"],[204,8,198,6,"warn"],[204,9,198,7,"args"],[204,13,198,11],[204,15,198,13],[205,6,199,4],[205,10,199,8],[205,11,199,9,"output"],[205,17,199,15],[205,18,199,16],[205,24,199,22],[205,26,199,24,"args"],[205,30,199,28],[205,31,199,29],[206,4,200,2],[206,5,200,3],[207,4,201,2,"error"],[207,9,201,7,"error"],[207,10,201,8,"args"],[207,14,201,12],[207,16,201,14],[208,6,202,4],[208,10,202,8],[208,11,202,9,"output"],[208,17,202,15],[208,18,202,16],[208,25,202,23],[208,27,202,25,"args"],[208,31,202,29],[208,32,202,30],[209,4,203,2],[209,5,203,3],[210,4,204,2,"output"],[210,10,204,8,"output"],[210,11,204,9,"type"],[210,15,204,13],[210,17,204,15,"args"],[210,21,204,19],[210,23,204,21],[211,6,205,4,"console"],[211,13,205,11],[211,16,205,14,"type"],[211,20,205,18],[211,21,205,19],[211,23,205,21,"apply"],[211,28,205,26],[211,31,205,29,"console"],[211,38,205,36],[211,40,205,38,"args"],[211,44,205,42],[211,45,205,43],[212,4,206,2],[213,2,207,0],[213,3,207,1],[214,2,208,0],[214,8,208,6,"Logger"],[214,14,208,12],[214,15,208,13],[215,4,209,2,"constructor"],[215,15,209,13,"constructor"],[215,16,209,14,"concreteLogger"],[215,30,209,28],[215,32,209,30,"options"],[215,39,209,37],[215,42,209,40],[215,43,209,41],[215,44,209,42],[215,46,209,44],[216,6,210,4],[216,10,210,8],[216,11,210,9,"init"],[216,15,210,13],[216,16,210,14,"concreteLogger"],[216,30,210,28],[216,32,210,30,"options"],[216,39,210,37],[216,40,210,38],[217,4,211,2],[218,4,212,2,"init"],[218,8,212,6,"init"],[218,9,212,7,"concreteLogger"],[218,23,212,21],[218,25,212,23,"options"],[218,32,212,30],[218,35,212,33],[218,36,212,34],[218,37,212,35],[218,39,212,37],[219,6,213,4],[219,10,213,8],[219,11,213,9,"prefix"],[219,17,213,15],[219,20,213,18,"options"],[219,27,213,25],[219,28,213,26,"prefix"],[219,34,213,32],[219,38,213,36],[219,48,213,46],[220,6,214,4],[220,10,214,8],[220,11,214,9,"logger"],[220,17,214,15],[220,20,214,18,"concreteLogger"],[220,34,214,32],[220,38,214,36,"consoleLogger"],[220,51,214,49],[221,6,215,4],[221,10,215,8],[221,11,215,9,"options"],[221,18,215,16],[221,21,215,19,"options"],[221,28,215,26],[222,6,216,4],[222,10,216,8],[222,11,216,9,"debug"],[222,16,216,14],[222,19,216,17,"options"],[222,26,216,24],[222,27,216,25,"debug"],[222,32,216,30],[223,4,217,2],[224,4,218,2,"log"],[224,7,218,5,"log"],[224,8,218,6],[224,11,218,9,"args"],[224,15,218,13],[224,17,218,15],[225,6,219,4],[225,13,219,11],[225,17,219,15],[225,18,219,16,"forward"],[225,25,219,23],[225,26,219,24,"args"],[225,30,219,28],[225,32,219,30],[225,37,219,35],[225,39,219,37],[225,41,219,39],[225,43,219,41],[225,47,219,45],[225,48,219,46],[226,4,220,2],[227,4,221,2,"warn"],[227,8,221,6,"warn"],[227,9,221,7],[227,12,221,10,"args"],[227,16,221,14],[227,18,221,16],[228,6,222,4],[228,13,222,11],[228,17,222,15],[228,18,222,16,"forward"],[228,25,222,23],[228,26,222,24,"args"],[228,30,222,28],[228,32,222,30],[228,38,222,36],[228,40,222,38],[228,42,222,40],[228,44,222,42],[228,48,222,46],[228,49,222,47],[229,4,223,2],[230,4,224,2,"error"],[230,9,224,7,"error"],[230,10,224,8],[230,13,224,11,"args"],[230,17,224,15],[230,19,224,17],[231,6,225,4],[231,13,225,11],[231,17,225,15],[231,18,225,16,"forward"],[231,25,225,23],[231,26,225,24,"args"],[231,30,225,28],[231,32,225,30],[231,39,225,37],[231,41,225,39],[231,43,225,41],[231,44,225,42],[232,4,226,2],[233,4,227,2,"deprecate"],[233,13,227,11,"deprecate"],[233,14,227,12],[233,17,227,15,"args"],[233,21,227,19],[233,23,227,21],[234,6,228,4],[234,13,228,11],[234,17,228,15],[234,18,228,16,"forward"],[234,25,228,23],[234,26,228,24,"args"],[234,30,228,28],[234,32,228,30],[234,38,228,36],[234,40,228,38],[234,62,228,60],[234,64,228,62],[234,68,228,66],[234,69,228,67],[235,4,229,2],[236,4,230,2,"forward"],[236,11,230,9,"forward"],[236,12,230,10,"args"],[236,16,230,14],[236,18,230,16,"lvl"],[236,21,230,19],[236,23,230,21,"prefix"],[236,29,230,27],[236,31,230,29,"debugOnly"],[236,40,230,38],[236,42,230,40],[237,6,231,4],[237,10,231,8,"debugOnly"],[237,19,231,17],[237,23,231,21],[237,24,231,22],[237,28,231,26],[237,29,231,27,"debug"],[237,34,231,32],[237,36,231,34],[237,43,231,41],[237,47,231,45],[238,6,232,4],[238,10,232,8,"isString"],[238,18,232,16],[238,19,232,17,"args"],[238,23,232,21],[238,24,232,22],[238,25,232,23],[238,26,232,24],[238,27,232,25],[238,29,232,27,"args"],[238,33,232,31],[238,34,232,32],[238,35,232,33],[238,36,232,34],[238,39,232,37],[238,42,232,40,"prefix"],[238,48,232,46],[238,51,232,49],[238,55,232,53],[238,56,232,54,"prefix"],[238,62,232,60],[238,66,232,64,"args"],[238,70,232,68],[238,71,232,69],[238,72,232,70],[238,73,232,71],[238,75,232,73],[239,6,233,4],[239,13,233,11],[239,17,233,15],[239,18,233,16,"logger"],[239,24,233,22],[239,25,233,23,"lvl"],[239,28,233,26],[239,29,233,27],[239,30,233,28,"args"],[239,34,233,32],[239,35,233,33],[240,4,234,2],[241,4,235,2,"create"],[241,10,235,8,"create"],[241,11,235,9,"moduleName"],[241,21,235,19],[241,23,235,21],[242,6,236,4],[242,13,236,11],[242,17,236,15,"Logger"],[242,23,236,21],[242,24,236,22],[242,28,236,26],[242,29,236,27,"logger"],[242,35,236,33],[242,37,236,33,"Object"],[242,43,236,33],[242,44,236,33,"assign"],[242,50,236,33],[242,55,237,9],[243,8,238,8,"prefix"],[243,14,238,14],[243,16,238,16],[243,19,238,19],[243,23,238,23],[243,24,238,24,"prefix"],[243,30,238,30],[243,34,238,34,"moduleName"],[243,44,238,44],[244,6,239,6],[244,7,239,7],[244,9,240,9],[244,13,240,13],[244,14,240,14,"options"],[244,21,240,21],[244,22,241,5],[244,23,241,6],[245,4,242,2],[246,4,243,2,"clone"],[246,9,243,7,"clone"],[246,10,243,8,"options"],[246,17,243,15],[246,19,243,17],[247,6,244,4,"options"],[247,13,244,11],[247,16,244,14,"options"],[247,23,244,21],[247,27,244,25],[247,31,244,29],[247,32,244,30,"options"],[247,39,244,37],[248,6,245,4,"options"],[248,13,245,11],[248,14,245,12,"prefix"],[248,20,245,18],[248,23,245,21,"options"],[248,30,245,28],[248,31,245,29,"prefix"],[248,37,245,35],[248,41,245,39],[248,45,245,43],[248,46,245,44,"prefix"],[248,52,245,50],[249,6,246,4],[249,13,246,11],[249,17,246,15,"Logger"],[249,23,246,21],[249,24,246,22],[249,28,246,26],[249,29,246,27,"logger"],[249,35,246,33],[249,37,246,35,"options"],[249,44,246,42],[249,45,246,43],[250,4,247,2],[251,2,248,0],[252,2,249,0],[252,6,249,4,"baseLogger"],[252,16,249,14],[252,19,249,17],[252,23,249,21,"Logger"],[252,29,249,27],[252,30,249,28],[252,31,249,29],[253,2,251,0],[253,8,251,6,"EventEmitter"],[253,20,251,18],[253,21,251,19],[254,4,252,2,"constructor"],[254,15,252,13,"constructor"],[254,16,252,13],[254,18,252,16],[255,6,253,4],[255,10,253,8],[255,11,253,9,"observers"],[255,20,253,18],[255,23,253,21],[255,24,253,22],[255,25,253,23],[256,4,254,2],[257,4,255,2,"on"],[257,6,255,4,"on"],[257,7,255,5,"events"],[257,13,255,11],[257,15,255,13,"listener"],[257,23,255,21],[257,25,255,23],[258,6,256,4,"events"],[258,12,256,10],[258,13,256,11,"split"],[258,18,256,16],[258,19,256,17],[258,22,256,20],[258,23,256,21],[258,24,256,22,"forEach"],[258,31,256,29],[258,32,256,30,"event"],[258,37,256,35],[258,41,256,39],[259,8,257,6],[259,12,257,10],[259,13,257,11],[259,17,257,15],[259,18,257,16,"observers"],[259,27,257,25],[259,28,257,26,"event"],[259,33,257,31],[259,34,257,32],[259,36,257,34],[259,40,257,38],[259,41,257,39,"observers"],[259,50,257,48],[259,51,257,49,"event"],[259,56,257,54],[259,57,257,55],[259,60,257,58],[259,64,257,62,"Map"],[259,67,257,65],[259,68,257,66],[259,69,257,67],[260,8,258,6],[260,14,258,12,"numListeners"],[260,26,258,24],[260,29,258,27],[260,33,258,31],[260,34,258,32,"observers"],[260,43,258,41],[260,44,258,42,"event"],[260,49,258,47],[260,50,258,48],[260,51,258,49,"get"],[260,54,258,52],[260,55,258,53,"listener"],[260,63,258,61],[260,64,258,62],[260,68,258,66],[260,69,258,67],[261,8,259,6],[261,12,259,10],[261,13,259,11,"observers"],[261,22,259,20],[261,23,259,21,"event"],[261,28,259,26],[261,29,259,27],[261,30,259,28,"set"],[261,33,259,31],[261,34,259,32,"listener"],[261,42,259,40],[261,44,259,42,"numListeners"],[261,56,259,54],[261,59,259,57],[261,60,259,58],[261,61,259,59],[262,6,260,4],[262,7,260,5],[262,8,260,6],[263,6,261,4],[263,13,261,11],[263,17,261,15],[264,4,262,2],[265,4,263,2,"off"],[265,7,263,5,"off"],[265,8,263,6,"event"],[265,13,263,11],[265,15,263,13,"listener"],[265,23,263,21],[265,25,263,23],[266,6,264,4],[266,10,264,8],[266,11,264,9],[266,15,264,13],[266,16,264,14,"observers"],[266,25,264,23],[266,26,264,24,"event"],[266,31,264,29],[266,32,264,30],[266,34,264,32],[267,6,265,4],[267,10,265,8],[267,11,265,9,"listener"],[267,19,265,17],[267,21,265,19],[268,8,266,6],[268,15,266,13],[268,19,266,17],[268,20,266,18,"observers"],[268,29,266,27],[268,30,266,28,"event"],[268,35,266,33],[268,36,266,34],[269,8,267,6],[270,6,268,4],[271,6,269,4],[271,10,269,8],[271,11,269,9,"observers"],[271,20,269,18],[271,21,269,19,"event"],[271,26,269,24],[271,27,269,25],[271,28,269,26,"delete"],[271,34,269,32],[271,35,269,33,"listener"],[271,43,269,41],[271,44,269,42],[272,4,270,2],[273,4,271,2,"emit"],[273,8,271,6,"emit"],[273,9,271,7,"event"],[273,14,271,12],[273,16,271,14],[273,19,271,17,"args"],[273,23,271,21],[273,25,271,23],[274,6,272,4],[274,10,272,8],[274,14,272,12],[274,15,272,13,"observers"],[274,24,272,22],[274,25,272,23,"event"],[274,30,272,28],[274,31,272,29],[274,33,272,31],[275,8,273,6],[275,14,273,12,"cloned"],[275,20,273,18],[275,23,273,21,"Array"],[275,28,273,26],[275,29,273,27,"from"],[275,33,273,31],[275,34,273,32],[275,38,273,36],[275,39,273,37,"observers"],[275,48,273,46],[275,49,273,47,"event"],[275,54,273,52],[275,55,273,53],[275,56,273,54,"entries"],[275,63,273,61],[275,64,273,62],[275,65,273,63],[275,66,273,64],[276,8,274,6,"cloned"],[276,14,274,12],[276,15,274,13,"forEach"],[276,22,274,20],[276,23,274,21],[276,24,274,22],[276,25,274,23,"observer"],[276,33,274,31],[276,35,274,33,"numTimesAdded"],[276,48,274,46],[276,49,274,47],[276,54,274,52],[277,10,275,8],[277,15,275,13],[277,19,275,17,"i"],[277,20,275,18],[277,23,275,21],[277,24,275,22],[277,26,275,24,"i"],[277,27,275,25],[277,30,275,28,"numTimesAdded"],[277,43,275,41],[277,45,275,43,"i"],[277,46,275,44],[277,48,275,46],[277,50,275,48],[278,12,276,10,"observer"],[278,20,276,18],[278,21,276,19],[278,24,276,22,"args"],[278,28,276,26],[278,29,276,27],[279,10,277,8],[280,8,278,6],[280,9,278,7],[280,10,278,8],[281,6,279,4],[282,6,280,4],[282,10,280,8],[282,14,280,12],[282,15,280,13,"observers"],[282,24,280,22],[282,25,280,23],[282,28,280,26],[282,29,280,27],[282,31,280,29],[283,8,281,6],[283,14,281,12,"cloned"],[283,20,281,18],[283,23,281,21,"Array"],[283,28,281,26],[283,29,281,27,"from"],[283,33,281,31],[283,34,281,32],[283,38,281,36],[283,39,281,37,"observers"],[283,48,281,46],[283,49,281,47],[283,52,281,50],[283,53,281,51],[283,54,281,52,"entries"],[283,61,281,59],[283,62,281,60],[283,63,281,61],[283,64,281,62],[284,8,282,6,"cloned"],[284,14,282,12],[284,15,282,13,"forEach"],[284,22,282,20],[284,23,282,21],[284,24,282,22],[284,25,282,23,"observer"],[284,33,282,31],[284,35,282,33,"numTimesAdded"],[284,48,282,46],[284,49,282,47],[284,54,282,52],[285,10,283,8],[285,15,283,13],[285,19,283,17,"i"],[285,20,283,18],[285,23,283,21],[285,24,283,22],[285,26,283,24,"i"],[285,27,283,25],[285,30,283,28,"numTimesAdded"],[285,43,283,41],[285,45,283,43,"i"],[285,46,283,44],[285,48,283,46],[285,50,283,48],[286,12,284,10,"observer"],[286,20,284,18],[286,21,284,19,"apply"],[286,26,284,24],[286,27,284,25,"observer"],[286,35,284,33],[286,37,284,35],[286,38,284,36,"event"],[286,43,284,41],[286,45,284,43],[286,48,284,46,"args"],[286,52,284,50],[286,53,284,51],[286,54,284,52],[287,10,285,8],[288,8,286,6],[288,9,286,7],[288,10,286,8],[289,6,287,4],[290,4,288,2],[291,2,289,0],[292,2,291,0],[292,8,291,6,"ResourceStore"],[292,21,291,19],[292,30,291,28,"EventEmitter"],[292,42,291,40],[292,43,291,41],[293,4,292,2,"constructor"],[293,15,292,13,"constructor"],[293,16,292,14,"data"],[293,20,292,18],[293,22,292,20,"options"],[293,29,292,27],[293,32,292,30],[294,6,293,4,"ns"],[294,8,293,6],[294,10,293,8],[294,11,293,9],[294,24,293,22],[294,25,293,23],[295,6,294,4,"defaultNS"],[295,15,294,13],[295,17,294,15],[296,4,295,2],[296,5,295,3],[296,7,295,5],[297,6,296,4],[297,11,296,9],[297,12,296,10],[297,13,296,11],[298,6,297,4],[298,10,297,8],[298,11,297,9,"data"],[298,15,297,13],[298,18,297,16,"data"],[298,22,297,20],[298,26,297,24],[298,27,297,25],[298,28,297,26],[299,6,298,4],[299,10,298,8],[299,11,298,9,"options"],[299,18,298,16],[299,21,298,19,"options"],[299,28,298,26],[300,6,299,4],[300,10,299,8],[300,14,299,12],[300,15,299,13,"options"],[300,22,299,20],[300,23,299,21,"keySeparator"],[300,35,299,33],[300,40,299,38,"undefined"],[300,49,299,47],[300,51,299,49],[301,8,300,6],[301,12,300,10],[301,13,300,11,"options"],[301,20,300,18],[301,21,300,19,"keySeparator"],[301,33,300,31],[301,36,300,34],[301,39,300,37],[302,6,301,4],[303,6,302,4],[303,10,302,8],[303,14,302,12],[303,15,302,13,"options"],[303,22,302,20],[303,23,302,21,"ignoreJSONStructure"],[303,42,302,40],[303,47,302,45,"undefined"],[303,56,302,54],[303,58,302,56],[304,8,303,6],[304,12,303,10],[304,13,303,11,"options"],[304,20,303,18],[304,21,303,19,"ignoreJSONStructure"],[304,40,303,38],[304,43,303,41],[304,47,303,45],[305,6,304,4],[306,4,305,2],[307,4,306,2,"addNamespaces"],[307,17,306,15,"addNamespaces"],[307,18,306,16,"ns"],[307,20,306,18],[307,22,306,20],[308,6,307,4],[308,10,307,8],[308,14,307,12],[308,15,307,13,"options"],[308,22,307,20],[308,23,307,21,"ns"],[308,25,307,23],[308,26,307,24,"indexOf"],[308,33,307,31],[308,34,307,32,"ns"],[308,36,307,34],[308,37,307,35],[308,40,307,38],[308,41,307,39],[308,43,307,41],[309,8,308,6],[309,12,308,10],[309,13,308,11,"options"],[309,20,308,18],[309,21,308,19,"ns"],[309,23,308,21],[309,24,308,22,"push"],[309,28,308,26],[309,29,308,27,"ns"],[309,31,308,29],[309,32,308,30],[310,6,309,4],[311,4,310,2],[312,4,311,2,"removeNamespaces"],[312,20,311,18,"removeNamespaces"],[312,21,311,19,"ns"],[312,23,311,21],[312,25,311,23],[313,6,312,4],[313,12,312,10,"index"],[313,17,312,15],[313,20,312,18],[313,24,312,22],[313,25,312,23,"options"],[313,32,312,30],[313,33,312,31,"ns"],[313,35,312,33],[313,36,312,34,"indexOf"],[313,43,312,41],[313,44,312,42,"ns"],[313,46,312,44],[313,47,312,45],[314,6,313,4],[314,10,313,8,"index"],[314,15,313,13],[314,18,313,16],[314,19,313,17],[314,20,313,18],[314,22,313,20],[315,8,314,6],[315,12,314,10],[315,13,314,11,"options"],[315,20,314,18],[315,21,314,19,"ns"],[315,23,314,21],[315,24,314,22,"splice"],[315,30,314,28],[315,31,314,29,"index"],[315,36,314,34],[315,38,314,36],[315,39,314,37],[315,40,314,38],[316,6,315,4],[317,4,316,2],[318,4,317,2,"getResource"],[318,15,317,13,"getResource"],[318,16,317,14,"lng"],[318,19,317,17],[318,21,317,19,"ns"],[318,23,317,21],[318,25,317,23,"key"],[318,28,317,26],[318,30,317,28,"options"],[318,37,317,35],[318,40,317,38],[318,41,317,39],[318,42,317,40],[318,44,317,42],[319,6,318,4],[319,12,318,10,"keySeparator"],[319,24,318,22],[319,27,318,25,"options"],[319,34,318,32],[319,35,318,33,"keySeparator"],[319,47,318,45],[319,52,318,50,"undefined"],[319,61,318,59],[319,64,318,62,"options"],[319,71,318,69],[319,72,318,70,"keySeparator"],[319,84,318,82],[319,87,318,85],[319,91,318,89],[319,92,318,90,"options"],[319,99,318,97],[319,100,318,98,"keySeparator"],[319,112,318,110],[320,6,319,4],[320,12,319,10,"ignoreJSONStructure"],[320,31,319,29],[320,34,319,32,"options"],[320,41,319,39],[320,42,319,40,"ignoreJSONStructure"],[320,61,319,59],[320,66,319,64,"undefined"],[320,75,319,73],[320,78,319,76,"options"],[320,85,319,83],[320,86,319,84,"ignoreJSONStructure"],[320,105,319,103],[320,108,319,106],[320,112,319,110],[320,113,319,111,"options"],[320,120,319,118],[320,121,319,119,"ignoreJSONStructure"],[320,140,319,138],[321,6,320,4],[321,10,320,8,"path"],[321,14,320,12],[322,6,321,4],[322,10,321,8,"lng"],[322,13,321,11],[322,14,321,12,"indexOf"],[322,21,321,19],[322,22,321,20],[322,25,321,23],[322,26,321,24],[322,29,321,27],[322,30,321,28],[322,31,321,29],[322,33,321,31],[323,8,322,6,"path"],[323,12,322,10],[323,15,322,13,"lng"],[323,18,322,16],[323,19,322,17,"split"],[323,24,322,22],[323,25,322,23],[323,28,322,26],[323,29,322,27],[324,6,323,4],[324,7,323,5],[324,13,323,11],[325,8,324,6,"path"],[325,12,324,10],[325,15,324,13],[325,16,324,14,"lng"],[325,19,324,17],[325,21,324,19,"ns"],[325,23,324,21],[325,24,324,22],[326,8,325,6],[326,12,325,10,"key"],[326,15,325,13],[326,17,325,15],[327,10,326,8],[327,14,326,12,"Array"],[327,19,326,17],[327,20,326,18,"isArray"],[327,27,326,25],[327,28,326,26,"key"],[327,31,326,29],[327,32,326,30],[327,34,326,32],[328,12,327,10,"path"],[328,16,327,14],[328,17,327,15,"push"],[328,21,327,19],[328,22,327,20],[328,25,327,23,"key"],[328,28,327,26],[328,29,327,27],[329,10,328,8],[329,11,328,9],[329,17,328,15],[329,21,328,19,"isString"],[329,29,328,27],[329,30,328,28,"key"],[329,33,328,31],[329,34,328,32],[329,38,328,36,"keySeparator"],[329,50,328,48],[329,52,328,50],[330,12,329,10,"path"],[330,16,329,14],[330,17,329,15,"push"],[330,21,329,19],[330,22,329,20],[330,25,329,23,"key"],[330,28,329,26],[330,29,329,27,"split"],[330,34,329,32],[330,35,329,33,"keySeparator"],[330,47,329,45],[330,48,329,46],[330,49,329,47],[331,10,330,8],[331,11,330,9],[331,17,330,15],[332,12,331,10,"path"],[332,16,331,14],[332,17,331,15,"push"],[332,21,331,19],[332,22,331,20,"key"],[332,25,331,23],[332,26,331,24],[333,10,332,8],[334,8,333,6],[335,6,334,4],[336,6,335,4],[336,12,335,10,"result"],[336,18,335,16],[336,21,335,19,"getPath"],[336,28,335,26],[336,29,335,27],[336,33,335,31],[336,34,335,32,"data"],[336,38,335,36],[336,40,335,38,"path"],[336,44,335,42],[336,45,335,43],[337,6,336,4],[337,10,336,8],[337,11,336,9,"result"],[337,17,336,15],[337,21,336,19],[337,22,336,20,"ns"],[337,24,336,22],[337,28,336,26],[337,29,336,27,"key"],[337,32,336,30],[337,36,336,34,"lng"],[337,39,336,37],[337,40,336,38,"indexOf"],[337,47,336,45],[337,48,336,46],[337,51,336,49],[337,52,336,50],[337,55,336,53],[337,56,336,54],[337,57,336,55],[337,59,336,57],[338,8,337,6,"lng"],[338,11,337,9],[338,14,337,12,"path"],[338,18,337,16],[338,19,337,17],[338,20,337,18],[338,21,337,19],[339,8,338,6,"ns"],[339,10,338,8],[339,13,338,11,"path"],[339,17,338,15],[339,18,338,16],[339,19,338,17],[339,20,338,18],[340,8,339,6,"key"],[340,11,339,9],[340,14,339,12,"path"],[340,18,339,16],[340,19,339,17,"slice"],[340,24,339,22],[340,25,339,23],[340,26,339,24],[340,27,339,25],[340,28,339,26,"join"],[340,32,339,30],[340,33,339,31],[340,36,339,34],[340,37,339,35],[341,6,340,4],[342,6,341,4],[342,10,341,8,"result"],[342,16,341,14],[342,20,341,18],[342,21,341,19,"ignoreJSONStructure"],[342,40,341,38],[342,44,341,42],[342,45,341,43,"isString"],[342,53,341,51],[342,54,341,52,"key"],[342,57,341,55],[342,58,341,56],[342,60,341,58],[342,67,341,65,"result"],[342,73,341,71],[343,6,342,4],[343,13,342,11,"deepFind"],[343,21,342,19],[343,22,342,20],[343,26,342,24],[343,27,342,25,"data"],[343,31,342,29],[343,34,342,32,"lng"],[343,37,342,35],[343,38,342,36],[343,41,342,39,"ns"],[343,43,342,41],[343,44,342,42],[343,46,342,44,"key"],[343,49,342,47],[343,51,342,49,"keySeparator"],[343,63,342,61],[343,64,342,62],[344,4,343,2],[345,4,344,2,"addResource"],[345,15,344,13,"addResource"],[345,16,344,14,"lng"],[345,19,344,17],[345,21,344,19,"ns"],[345,23,344,21],[345,25,344,23,"key"],[345,28,344,26],[345,30,344,28,"value"],[345,35,344,33],[345,37,344,35,"options"],[345,44,344,42],[345,47,344,45],[346,6,345,4,"silent"],[346,12,345,10],[346,14,345,12],[347,4,346,2],[347,5,346,3],[347,7,346,5],[348,6,347,4],[348,12,347,10,"keySeparator"],[348,24,347,22],[348,27,347,25,"options"],[348,34,347,32],[348,35,347,33,"keySeparator"],[348,47,347,45],[348,52,347,50,"undefined"],[348,61,347,59],[348,64,347,62,"options"],[348,71,347,69],[348,72,347,70,"keySeparator"],[348,84,347,82],[348,87,347,85],[348,91,347,89],[348,92,347,90,"options"],[348,99,347,97],[348,100,347,98,"keySeparator"],[348,112,347,110],[349,6,348,4],[349,10,348,8,"path"],[349,14,348,12],[349,17,348,15],[349,18,348,16,"lng"],[349,21,348,19],[349,23,348,21,"ns"],[349,25,348,23],[349,26,348,24],[350,6,349,4],[350,10,349,8,"key"],[350,13,349,11],[350,15,349,13,"path"],[350,19,349,17],[350,22,349,20,"path"],[350,26,349,24],[350,27,349,25,"concat"],[350,33,349,31],[350,34,349,32,"keySeparator"],[350,46,349,44],[350,49,349,47,"key"],[350,52,349,50],[350,53,349,51,"split"],[350,58,349,56],[350,59,349,57,"keySeparator"],[350,71,349,69],[350,72,349,70],[350,75,349,73,"key"],[350,78,349,76],[350,79,349,77],[351,6,350,4],[351,10,350,8,"lng"],[351,13,350,11],[351,14,350,12,"indexOf"],[351,21,350,19],[351,22,350,20],[351,25,350,23],[351,26,350,24],[351,29,350,27],[351,30,350,28],[351,31,350,29],[351,33,350,31],[352,8,351,6,"path"],[352,12,351,10],[352,15,351,13,"lng"],[352,18,351,16],[352,19,351,17,"split"],[352,24,351,22],[352,25,351,23],[352,28,351,26],[352,29,351,27],[353,8,352,6,"value"],[353,13,352,11],[353,16,352,14,"ns"],[353,18,352,16],[354,8,353,6,"ns"],[354,10,353,8],[354,13,353,11,"path"],[354,17,353,15],[354,18,353,16],[354,19,353,17],[354,20,353,18],[355,6,354,4],[356,6,355,4],[356,10,355,8],[356,11,355,9,"addNamespaces"],[356,24,355,22],[356,25,355,23,"ns"],[356,27,355,25],[356,28,355,26],[357,6,356,4,"setPath"],[357,13,356,11],[357,14,356,12],[357,18,356,16],[357,19,356,17,"data"],[357,23,356,21],[357,25,356,23,"path"],[357,29,356,27],[357,31,356,29,"value"],[357,36,356,34],[357,37,356,35],[358,6,357,4],[358,10,357,8],[358,11,357,9,"options"],[358,18,357,16],[358,19,357,17,"silent"],[358,25,357,23],[358,27,357,25],[358,31,357,29],[358,32,357,30,"emit"],[358,36,357,34],[358,37,357,35],[358,44,357,42],[358,46,357,44,"lng"],[358,49,357,47],[358,51,357,49,"ns"],[358,53,357,51],[358,55,357,53,"key"],[358,58,357,56],[358,60,357,58,"value"],[358,65,357,63],[358,66,357,64],[359,4,358,2],[360,4,359,2,"addResources"],[360,16,359,14,"addResources"],[360,17,359,15,"lng"],[360,20,359,18],[360,22,359,20,"ns"],[360,24,359,22],[360,26,359,24,"resources"],[360,35,359,33],[360,37,359,35,"options"],[360,44,359,42],[360,47,359,45],[361,6,360,4,"silent"],[361,12,360,10],[361,14,360,12],[362,4,361,2],[362,5,361,3],[362,7,361,5],[363,6,362,4],[363,11,362,9],[363,17,362,15,"m"],[363,18,362,16],[363,22,362,20,"resources"],[363,31,362,29],[363,33,362,31],[364,8,363,6],[364,12,363,10,"isString"],[364,20,363,18],[364,21,363,19,"resources"],[364,30,363,28],[364,31,363,29,"m"],[364,32,363,30],[364,33,363,31],[364,34,363,32],[364,38,363,36,"Array"],[364,43,363,41],[364,44,363,42,"isArray"],[364,51,363,49],[364,52,363,50,"resources"],[364,61,363,59],[364,62,363,60,"m"],[364,63,363,61],[364,64,363,62],[364,65,363,63],[364,67,363,65],[364,71,363,69],[364,72,363,70,"addResource"],[364,83,363,81],[364,84,363,82,"lng"],[364,87,363,85],[364,89,363,87,"ns"],[364,91,363,89],[364,93,363,91,"m"],[364,94,363,92],[364,96,363,94,"resources"],[364,105,363,103],[364,106,363,104,"m"],[364,107,363,105],[364,108,363,106],[364,110,363,108],[365,10,364,8,"silent"],[365,16,364,14],[365,18,364,16],[366,8,365,6],[366,9,365,7],[366,10,365,8],[367,6,366,4],[368,6,367,4],[368,10,367,8],[368,11,367,9,"options"],[368,18,367,16],[368,19,367,17,"silent"],[368,25,367,23],[368,27,367,25],[368,31,367,29],[368,32,367,30,"emit"],[368,36,367,34],[368,37,367,35],[368,44,367,42],[368,46,367,44,"lng"],[368,49,367,47],[368,51,367,49,"ns"],[368,53,367,51],[368,55,367,53,"resources"],[368,64,367,62],[368,65,367,63],[369,4,368,2],[370,4,369,2,"addResourceBundle"],[370,21,369,19,"addResourceBundle"],[370,22,369,20,"lng"],[370,25,369,23],[370,27,369,25,"ns"],[370,29,369,27],[370,31,369,29,"resources"],[370,40,369,38],[370,42,369,40,"deep"],[370,46,369,44],[370,48,369,46,"overwrite"],[370,57,369,55],[370,59,369,57,"options"],[370,66,369,64],[370,69,369,67],[371,6,370,4,"silent"],[371,12,370,10],[371,14,370,12],[371,19,370,17],[372,6,371,4,"skipCopy"],[372,14,371,12],[372,16,371,14],[373,4,372,2],[373,5,372,3],[373,7,372,5],[374,6,373,4],[374,10,373,8,"path"],[374,14,373,12],[374,17,373,15],[374,18,373,16,"lng"],[374,21,373,19],[374,23,373,21,"ns"],[374,25,373,23],[374,26,373,24],[375,6,374,4],[375,10,374,8,"lng"],[375,13,374,11],[375,14,374,12,"indexOf"],[375,21,374,19],[375,22,374,20],[375,25,374,23],[375,26,374,24],[375,29,374,27],[375,30,374,28],[375,31,374,29],[375,33,374,31],[376,8,375,6,"path"],[376,12,375,10],[376,15,375,13,"lng"],[376,18,375,16],[376,19,375,17,"split"],[376,24,375,22],[376,25,375,23],[376,28,375,26],[376,29,375,27],[377,8,376,6,"deep"],[377,12,376,10],[377,15,376,13,"resources"],[377,24,376,22],[378,8,377,6,"resources"],[378,17,377,15],[378,20,377,18,"ns"],[378,22,377,20],[379,8,378,6,"ns"],[379,10,378,8],[379,13,378,11,"path"],[379,17,378,15],[379,18,378,16],[379,19,378,17],[379,20,378,18],[380,6,379,4],[381,6,380,4],[381,10,380,8],[381,11,380,9,"addNamespaces"],[381,24,380,22],[381,25,380,23,"ns"],[381,27,380,25],[381,28,380,26],[382,6,381,4],[382,10,381,8,"pack"],[382,14,381,12],[382,17,381,15,"getPath"],[382,24,381,22],[382,25,381,23],[382,29,381,27],[382,30,381,28,"data"],[382,34,381,32],[382,36,381,34,"path"],[382,40,381,38],[382,41,381,39],[382,45,381,43],[382,46,381,44],[382,47,381,45],[383,6,382,4],[383,10,382,8],[383,11,382,9,"options"],[383,18,382,16],[383,19,382,17,"skipCopy"],[383,27,382,25],[383,29,382,27,"resources"],[383,38,382,36],[383,41,382,39,"JSON"],[383,45,382,43],[383,46,382,44,"parse"],[383,51,382,49],[383,52,382,50,"JSON"],[383,56,382,54],[383,57,382,55,"stringify"],[383,66,382,64],[383,67,382,65,"resources"],[383,76,382,74],[383,77,382,75],[383,78,382,76],[384,6,383,4],[384,10,383,8,"deep"],[384,14,383,12],[384,16,383,14],[385,8,384,6,"deepExtend"],[385,18,384,16],[385,19,384,17,"pack"],[385,23,384,21],[385,25,384,23,"resources"],[385,34,384,32],[385,36,384,34,"overwrite"],[385,45,384,43],[385,46,384,44],[386,6,385,4],[386,7,385,5],[386,13,385,11],[387,8,386,6,"pack"],[387,12,386,10],[387,15,386,10,"Object"],[387,21,386,10],[387,22,386,10,"assign"],[387,28,386,10],[387,33,387,11,"pack"],[387,37,387,15],[387,39,388,11,"resources"],[387,48,388,20],[387,49,389,7],[388,6,390,4],[389,6,391,4,"setPath"],[389,13,391,11],[389,14,391,12],[389,18,391,16],[389,19,391,17,"data"],[389,23,391,21],[389,25,391,23,"path"],[389,29,391,27],[389,31,391,29,"pack"],[389,35,391,33],[389,36,391,34],[390,6,392,4],[390,10,392,8],[390,11,392,9,"options"],[390,18,392,16],[390,19,392,17,"silent"],[390,25,392,23],[390,27,392,25],[390,31,392,29],[390,32,392,30,"emit"],[390,36,392,34],[390,37,392,35],[390,44,392,42],[390,46,392,44,"lng"],[390,49,392,47],[390,51,392,49,"ns"],[390,53,392,51],[390,55,392,53,"resources"],[390,64,392,62],[390,65,392,63],[391,4,393,2],[392,4,394,2,"removeResourceBundle"],[392,24,394,22,"removeResourceBundle"],[392,25,394,23,"lng"],[392,28,394,26],[392,30,394,28,"ns"],[392,32,394,30],[392,34,394,32],[393,6,395,4],[393,10,395,8],[393,14,395,12],[393,15,395,13,"hasResourceBundle"],[393,32,395,30],[393,33,395,31,"lng"],[393,36,395,34],[393,38,395,36,"ns"],[393,40,395,38],[393,41,395,39],[393,43,395,41],[394,8,396,6],[394,15,396,13],[394,19,396,17],[394,20,396,18,"data"],[394,24,396,22],[394,25,396,23,"lng"],[394,28,396,26],[394,29,396,27],[394,30,396,28,"ns"],[394,32,396,30],[394,33,396,31],[395,6,397,4],[396,6,398,4],[396,10,398,8],[396,11,398,9,"removeNamespaces"],[396,27,398,25],[396,28,398,26,"ns"],[396,30,398,28],[396,31,398,29],[397,6,399,4],[397,10,399,8],[397,11,399,9,"emit"],[397,15,399,13],[397,16,399,14],[397,25,399,23],[397,27,399,25,"lng"],[397,30,399,28],[397,32,399,30,"ns"],[397,34,399,32],[397,35,399,33],[398,4,400,2],[399,4,401,2,"hasResourceBundle"],[399,21,401,19,"hasResourceBundle"],[399,22,401,20,"lng"],[399,25,401,23],[399,27,401,25,"ns"],[399,29,401,27],[399,31,401,29],[400,6,402,4],[400,13,402,11],[400,17,402,15],[400,18,402,16,"getResource"],[400,29,402,27],[400,30,402,28,"lng"],[400,33,402,31],[400,35,402,33,"ns"],[400,37,402,35],[400,38,402,36],[400,43,402,41,"undefined"],[400,52,402,50],[401,4,403,2],[402,4,404,2,"getResourceBundle"],[402,21,404,19,"getResourceBundle"],[402,22,404,20,"lng"],[402,25,404,23],[402,27,404,25,"ns"],[402,29,404,27],[402,31,404,29],[403,6,405,4],[403,10,405,8],[403,11,405,9,"ns"],[403,13,405,11],[403,15,405,13,"ns"],[403,17,405,15],[403,20,405,18],[403,24,405,22],[403,25,405,23,"options"],[403,32,405,30],[403,33,405,31,"defaultNS"],[403,42,405,40],[404,6,406,4],[404,13,406,11],[404,17,406,15],[404,18,406,16,"getResource"],[404,29,406,27],[404,30,406,28,"lng"],[404,33,406,31],[404,35,406,33,"ns"],[404,37,406,35],[404,38,406,36],[405,4,407,2],[406,4,408,2,"getDataByLanguage"],[406,21,408,19,"getDataByLanguage"],[406,22,408,20,"lng"],[406,25,408,23],[406,27,408,25],[407,6,409,4],[407,13,409,11],[407,17,409,15],[407,18,409,16,"data"],[407,22,409,20],[407,23,409,21,"lng"],[407,26,409,24],[407,27,409,25],[408,4,410,2],[409,4,411,2,"hasLanguageSomeTranslations"],[409,31,411,29,"hasLanguageSomeTranslations"],[409,32,411,30,"lng"],[409,35,411,33],[409,37,411,35],[410,6,412,4],[410,12,412,10,"data"],[410,16,412,14],[410,19,412,17],[410,23,412,21],[410,24,412,22,"getDataByLanguage"],[410,41,412,39],[410,42,412,40,"lng"],[410,45,412,43],[410,46,412,44],[411,6,413,4],[411,12,413,10,"n"],[411,13,413,11],[411,16,413,14,"data"],[411,20,413,18],[411,24,413,22,"Object"],[411,30,413,28],[411,31,413,29,"keys"],[411,35,413,33],[411,36,413,34,"data"],[411,40,413,38],[411,41,413,39],[411,45,413,43],[411,47,413,45],[412,6,414,4],[412,13,414,11],[412,14,414,12],[412,15,414,13,"n"],[412,16,414,14],[412,17,414,15,"find"],[412,21,414,19],[412,22,414,20,"v"],[412,23,414,21],[412,27,414,25,"data"],[412,31,414,29],[412,32,414,30,"v"],[412,33,414,31],[412,34,414,32],[412,38,414,36,"Object"],[412,44,414,42],[412,45,414,43,"keys"],[412,49,414,47],[412,50,414,48,"data"],[412,54,414,52],[412,55,414,53,"v"],[412,56,414,54],[412,57,414,55],[412,58,414,56],[412,59,414,57,"length"],[412,65,414,63],[412,68,414,66],[412,69,414,67],[412,70,414,68],[413,4,415,2],[414,4,416,2,"toJSON"],[414,10,416,8,"toJSON"],[414,11,416,8],[414,13,416,11],[415,6,417,4],[415,13,417,11],[415,17,417,15],[415,18,417,16,"data"],[415,22,417,20],[416,4,418,2],[417,2,419,0],[418,2,421,0],[418,6,421,4,"postProcessor"],[418,19,421,17],[418,22,421,20],[419,4,422,2,"processors"],[419,14,422,12],[419,16,422,14],[419,17,422,15],[419,18,422,16],[420,4,423,2,"addPostProcessor"],[420,20,423,18,"addPostProcessor"],[420,21,423,19,"module"],[420,27,423,25],[420,29,423,27],[421,6,424,4],[421,10,424,8],[421,11,424,9,"processors"],[421,21,424,19],[421,22,424,20,"module"],[421,28,424,26],[421,29,424,27,"name"],[421,33,424,31],[421,34,424,32],[421,37,424,35,"module"],[421,43,424,41],[422,4,425,2],[422,5,425,3],[423,4,426,2,"handle"],[423,10,426,8,"handle"],[423,11,426,9,"processors"],[423,21,426,19],[423,23,426,21,"value"],[423,28,426,26],[423,30,426,28,"key"],[423,33,426,31],[423,35,426,33,"options"],[423,42,426,40],[423,44,426,42,"translator"],[423,54,426,52],[423,56,426,54],[424,6,427,4,"processors"],[424,16,427,14],[424,17,427,15,"forEach"],[424,24,427,22],[424,25,427,23,"processor"],[424,34,427,32],[424,38,427,36],[425,8,428,6,"value"],[425,13,428,11],[425,16,428,14],[425,20,428,18],[425,21,428,19,"processors"],[425,31,428,29],[425,32,428,30,"processor"],[425,41,428,39],[425,42,428,40],[425,44,428,42,"process"],[425,51,428,49],[425,52,428,50,"value"],[425,57,428,55],[425,59,428,57,"key"],[425,62,428,60],[425,64,428,62,"options"],[425,71,428,69],[425,73,428,71,"translator"],[425,83,428,81],[425,84,428,82],[425,88,428,86,"value"],[425,93,428,91],[426,6,429,4],[426,7,429,5],[426,8,429,6],[427,6,430,4],[427,13,430,11,"value"],[427,18,430,16],[428,4,431,2],[429,2,432,0],[429,3,432,1],[430,2,434,0],[430,8,434,6,"PATH_KEY"],[430,16,434,14],[430,19,434,17,"Symbol"],[430,25,434,23],[430,26,434,24],[430,44,434,42],[430,45,434,43],[431,2,435,0],[431,11,435,9,"createProxy"],[431,22,435,20,"createProxy"],[431,23,435,20],[431,25,435,23],[432,4,436,2],[432,10,436,8,"state"],[432,15,436,13],[432,18,436,16],[432,20,436,18],[433,4,437,2],[433,10,437,8,"handler"],[433,17,437,15],[433,20,437,18,"Object"],[433,26,437,24],[433,27,437,25,"create"],[433,33,437,31],[433,34,437,32],[433,38,437,36],[433,39,437,37],[434,4,438,2],[434,8,438,6,"proxy"],[434,13,438,11],[435,4,439,2,"handler"],[435,11,439,9],[435,12,439,10,"get"],[435,15,439,13],[435,18,439,16],[435,19,439,17,"target"],[435,25,439,23],[435,27,439,25,"key"],[435,30,439,28],[435,35,439,33],[436,6,440,4,"proxy"],[436,11,440,9],[436,13,440,11,"revoke"],[436,19,440,17],[436,22,440,20],[436,23,440,21],[437,6,441,4],[437,10,441,8,"key"],[437,13,441,11],[437,18,441,16,"PATH_KEY"],[437,26,441,24],[437,28,441,26],[437,35,441,33,"state"],[437,40,441,38],[438,6,442,4,"state"],[438,11,442,9],[438,12,442,10,"push"],[438,16,442,14],[438,17,442,15,"key"],[438,20,442,18],[438,21,442,19],[439,6,443,4,"proxy"],[439,11,443,9],[439,14,443,12,"Proxy"],[439,19,443,17],[439,20,443,18,"revocable"],[439,29,443,27],[439,30,443,28,"target"],[439,36,443,34],[439,38,443,36,"handler"],[439,45,443,43],[439,46,443,44],[440,6,444,4],[440,13,444,11,"proxy"],[440,18,444,16],[440,19,444,17,"proxy"],[440,24,444,22],[441,4,445,2],[441,5,445,3],[442,4,446,2],[442,11,446,9,"Proxy"],[442,16,446,14],[442,17,446,15,"revocable"],[442,26,446,24],[442,27,446,25,"Object"],[442,33,446,31],[442,34,446,32,"create"],[442,40,446,38],[442,41,446,39],[442,45,446,43],[442,46,446,44],[442,48,446,46,"handler"],[442,55,446,53],[442,56,446,54],[442,57,446,55,"proxy"],[442,62,446,60],[443,2,447,0],[444,2,448,0],[444,11,448,9,"keysFromSelector"],[444,27,448,25,"keysFromSelector"],[444,28,448,26,"selector"],[444,36,448,34],[444,38,448,36,"opts"],[444,42,448,40],[444,44,448,42],[445,4,449,2],[445,10,449,8],[446,6,450,4],[446,7,450,5,"PATH_KEY"],[446,15,450,13],[446,18,450,16,"path"],[447,4,451,2],[447,5,451,3],[447,8,451,6,"selector"],[447,16,451,14],[447,17,451,15,"createProxy"],[447,28,451,26],[447,29,451,27],[447,30,451,28],[447,31,451,29],[448,4,452,2],[448,11,452,9,"path"],[448,15,452,13],[448,16,452,14,"join"],[448,20,452,18],[448,21,452,19,"opts"],[448,25,452,23],[448,27,452,25,"keySeparator"],[448,39,452,37],[448,43,452,41],[448,46,452,44],[448,47,452,45],[449,2,453,0],[450,2,455,0],[450,8,455,6,"checkedLoadedFor"],[450,24,455,22],[450,27,455,25],[450,28,455,26],[450,29,455,27],[451,2,456,0],[451,8,456,6,"shouldHandleAsObject"],[451,28,456,26],[451,31,456,29,"res"],[451,34,456,32],[451,38,456,36],[451,39,456,37,"isString"],[451,47,456,45],[451,48,456,46,"res"],[451,51,456,49],[451,52,456,50],[451,56,456,54],[451,63,456,61,"res"],[451,66,456,64],[451,71,456,69],[451,80,456,78],[451,84,456,82],[451,91,456,89,"res"],[451,94,456,92],[451,99,456,97],[451,107,456,105],[452,2,457,0],[452,8,457,6,"Translator"],[452,18,457,16],[452,27,457,25,"EventEmitter"],[452,39,457,37],[452,40,457,38],[453,4,458,2,"constructor"],[453,15,458,13,"constructor"],[453,16,458,14,"services"],[453,24,458,22],[453,26,458,24,"options"],[453,33,458,31],[453,36,458,34],[453,37,458,35],[453,38,458,36],[453,40,458,38],[454,6,459,4],[454,11,459,9],[454,12,459,10],[454,13,459,11],[455,6,460,4,"copy"],[455,10,460,8],[455,11,460,9],[455,12,460,10],[455,27,460,25],[455,29,460,27],[455,44,460,42],[455,46,460,44],[455,62,460,60],[455,64,460,62],[455,78,460,76],[455,80,460,78],[455,98,460,96],[455,100,460,98],[455,112,460,110],[455,114,460,112],[455,121,460,119],[455,122,460,120],[455,124,460,122,"services"],[455,132,460,130],[455,134,460,132],[455,138,460,136],[455,139,460,137],[456,6,461,4],[456,10,461,8],[456,11,461,9,"options"],[456,18,461,16],[456,21,461,19,"options"],[456,28,461,26],[457,6,462,4],[457,10,462,8],[457,14,462,12],[457,15,462,13,"options"],[457,22,462,20],[457,23,462,21,"keySeparator"],[457,35,462,33],[457,40,462,38,"undefined"],[457,49,462,47],[457,51,462,49],[458,8,463,6],[458,12,463,10],[458,13,463,11,"options"],[458,20,463,18],[458,21,463,19,"keySeparator"],[458,33,463,31],[458,36,463,34],[458,39,463,37],[459,6,464,4],[460,6,465,4],[460,10,465,8],[460,11,465,9,"logger"],[460,17,465,15],[460,20,465,18,"baseLogger"],[460,30,465,28],[460,31,465,29,"create"],[460,37,465,35],[460,38,465,36],[460,50,465,48],[460,51,465,49],[461,4,466,2],[462,4,467,2,"changeLanguage"],[462,18,467,16,"changeLanguage"],[462,19,467,17,"lng"],[462,22,467,20],[462,24,467,22],[463,6,468,4],[463,10,468,8,"lng"],[463,13,468,11],[463,15,468,13],[463,19,468,17],[463,20,468,18,"language"],[463,28,468,26],[463,31,468,29,"lng"],[463,34,468,32],[464,4,469,2],[465,4,470,2,"exists"],[465,10,470,8,"exists"],[465,11,470,9,"key"],[465,14,470,12],[465,16,470,14,"o"],[465,17,470,15],[465,20,470,18],[466,6,471,4,"interpolation"],[466,19,471,17],[466,21,471,19],[466,22,471,20],[467,4,472,2],[467,5,472,3],[467,7,472,5],[468,6,473,4],[468,12,473,10,"opt"],[468,15,473,13],[468,18,473,13,"Object"],[468,24,473,13],[468,25,473,13,"assign"],[468,31,473,13],[468,36,474,9,"o"],[468,37,474,10],[468,38,475,5],[469,6,476,4],[469,10,476,8,"key"],[469,13,476,11],[469,17,476,15],[469,21,476,19],[469,23,476,21],[469,30,476,28],[469,35,476,33],[470,6,477,4],[470,12,477,10,"resolved"],[470,20,477,18],[470,23,477,21],[470,27,477,25],[470,28,477,26,"resolve"],[470,35,477,33],[470,36,477,34,"key"],[470,39,477,37],[470,41,477,39,"opt"],[470,44,477,42],[470,45,477,43],[471,6,478,4],[471,13,478,11,"resolved"],[471,21,478,19],[471,23,478,21,"res"],[471,26,478,24],[471,31,478,29,"undefined"],[471,40,478,38],[472,4,479,2],[473,4,480,2,"extractFromKey"],[473,18,480,16,"extractFromKey"],[473,19,480,17,"key"],[473,22,480,20],[473,24,480,22,"opt"],[473,27,480,25],[473,29,480,27],[474,6,481,4],[474,10,481,8,"nsSeparator"],[474,21,481,19],[474,24,481,22,"opt"],[474,27,481,25],[474,28,481,26,"nsSeparator"],[474,39,481,37],[474,44,481,42,"undefined"],[474,53,481,51],[474,56,481,54,"opt"],[474,59,481,57],[474,60,481,58,"nsSeparator"],[474,71,481,69],[474,74,481,72],[474,78,481,76],[474,79,481,77,"options"],[474,86,481,84],[474,87,481,85,"nsSeparator"],[474,98,481,96],[475,6,482,4],[475,10,482,8,"nsSeparator"],[475,21,482,19],[475,26,482,24,"undefined"],[475,35,482,33],[475,37,482,35,"nsSeparator"],[475,48,482,46],[475,51,482,49],[475,54,482,52],[476,6,483,4],[476,12,483,10,"keySeparator"],[476,24,483,22],[476,27,483,25,"opt"],[476,30,483,28],[476,31,483,29,"keySeparator"],[476,43,483,41],[476,48,483,46,"undefined"],[476,57,483,55],[476,60,483,58,"opt"],[476,63,483,61],[476,64,483,62,"keySeparator"],[476,76,483,74],[476,79,483,77],[476,83,483,81],[476,84,483,82,"options"],[476,91,483,89],[476,92,483,90,"keySeparator"],[476,104,483,102],[477,6,484,4],[477,10,484,8,"namespaces"],[477,20,484,18],[477,23,484,21,"opt"],[477,26,484,24],[477,27,484,25,"ns"],[477,29,484,27],[477,33,484,31],[477,37,484,35],[477,38,484,36,"options"],[477,45,484,43],[477,46,484,44,"defaultNS"],[477,55,484,53],[477,59,484,57],[477,61,484,59],[478,6,485,4],[478,12,485,10,"wouldCheckForNsInKey"],[478,32,485,30],[478,35,485,33,"nsSeparator"],[478,46,485,44],[478,50,485,48,"key"],[478,53,485,51],[478,54,485,52,"indexOf"],[478,61,485,59],[478,62,485,60,"nsSeparator"],[478,73,485,71],[478,74,485,72],[478,77,485,75],[478,78,485,76],[478,79,485,77],[479,6,486,4],[479,12,486,10,"seemsNaturalLanguage"],[479,32,486,30],[479,35,486,33],[479,36,486,34],[479,40,486,38],[479,41,486,39,"options"],[479,48,486,46],[479,49,486,47,"userDefinedKeySeparator"],[479,72,486,70],[479,76,486,74],[479,77,486,75,"opt"],[479,80,486,78],[479,81,486,79,"keySeparator"],[479,93,486,91],[479,97,486,95],[479,98,486,96],[479,102,486,100],[479,103,486,101,"options"],[479,110,486,108],[479,111,486,109,"userDefinedNsSeparator"],[479,133,486,131],[479,137,486,135],[479,138,486,136,"opt"],[479,141,486,139],[479,142,486,140,"nsSeparator"],[479,153,486,151],[479,157,486,155],[479,158,486,156,"looksLikeObjectPath"],[479,177,486,175],[479,178,486,176,"key"],[479,181,486,179],[479,183,486,181,"nsSeparator"],[479,194,486,192],[479,196,486,194,"keySeparator"],[479,208,486,206],[479,209,486,207],[480,6,487,4],[480,10,487,8,"wouldCheckForNsInKey"],[480,30,487,28],[480,34,487,32],[480,35,487,33,"seemsNaturalLanguage"],[480,55,487,53],[480,57,487,55],[481,8,488,6],[481,14,488,12,"m"],[481,15,488,13],[481,18,488,16,"key"],[481,21,488,19],[481,22,488,20,"match"],[481,27,488,25],[481,28,488,26],[481,32,488,30],[481,33,488,31,"interpolator"],[481,45,488,43],[481,46,488,44,"nestingRegexp"],[481,59,488,57],[481,60,488,58],[482,8,489,6],[482,12,489,10,"m"],[482,13,489,11],[482,17,489,15,"m"],[482,18,489,16],[482,19,489,17,"length"],[482,25,489,23],[482,28,489,26],[482,29,489,27],[482,31,489,29],[483,10,490,8],[483,17,490,15],[484,12,491,10,"key"],[484,15,491,13],[485,12,492,10,"namespaces"],[485,22,492,20],[485,24,492,22,"isString"],[485,32,492,30],[485,33,492,31,"namespaces"],[485,43,492,41],[485,44,492,42],[485,47,492,45],[485,48,492,46,"namespaces"],[485,58,492,56],[485,59,492,57],[485,62,492,60,"namespaces"],[486,10,493,8],[486,11,493,9],[487,8,494,6],[488,8,495,6],[488,14,495,12,"parts"],[488,19,495,17],[488,22,495,20,"key"],[488,25,495,23],[488,26,495,24,"split"],[488,31,495,29],[488,32,495,30,"nsSeparator"],[488,43,495,41],[488,44,495,42],[489,8,496,6],[489,12,496,10,"nsSeparator"],[489,23,496,21],[489,28,496,26,"keySeparator"],[489,40,496,38],[489,44,496,42,"nsSeparator"],[489,55,496,53],[489,60,496,58,"keySeparator"],[489,72,496,70],[489,76,496,74],[489,80,496,78],[489,81,496,79,"options"],[489,88,496,86],[489,89,496,87,"ns"],[489,91,496,89],[489,92,496,90,"indexOf"],[489,99,496,97],[489,100,496,98,"parts"],[489,105,496,103],[489,106,496,104],[489,107,496,105],[489,108,496,106],[489,109,496,107],[489,112,496,110],[489,113,496,111],[489,114,496,112],[489,116,496,114,"namespaces"],[489,126,496,124],[489,129,496,127,"parts"],[489,134,496,132],[489,135,496,133,"shift"],[489,140,496,138],[489,141,496,139],[489,142,496,140],[490,8,497,6,"key"],[490,11,497,9],[490,14,497,12,"parts"],[490,19,497,17],[490,20,497,18,"join"],[490,24,497,22],[490,25,497,23,"keySeparator"],[490,37,497,35],[490,38,497,36],[491,6,498,4],[492,6,499,4],[492,13,499,11],[493,8,500,6,"key"],[493,11,500,9],[494,8,501,6,"namespaces"],[494,18,501,16],[494,20,501,18,"isString"],[494,28,501,26],[494,29,501,27,"namespaces"],[494,39,501,37],[494,40,501,38],[494,43,501,41],[494,44,501,42,"namespaces"],[494,54,501,52],[494,55,501,53],[494,58,501,56,"namespaces"],[495,6,502,4],[495,7,502,5],[496,4,503,2],[497,4,504,2,"translate"],[497,13,504,11,"translate"],[497,14,504,12,"keys"],[497,18,504,16],[497,20,504,18,"o"],[497,21,504,19],[497,23,504,21,"lastKey"],[497,30,504,28],[497,32,504,30],[498,6,505,4],[498,10,505,8,"opt"],[498,13,505,11],[498,16,505,14],[498,23,505,21,"o"],[498,24,505,22],[498,29,505,27],[498,37,505,35],[498,40,505,35,"Object"],[498,46,505,35],[498,47,505,35,"assign"],[498,53,505,35],[498,58,506,9,"o"],[498,59,506,10],[498,63,507,8,"o"],[498,64,507,9],[499,6,508,4],[499,10,508,8],[499,17,508,15,"opt"],[499,20,508,18],[499,25,508,23],[499,33,508,31],[499,37,508,35],[499,41,508,39],[499,42,508,40,"options"],[499,49,508,47],[499,50,508,48,"overloadTranslationOptionHandler"],[499,82,508,80],[499,84,508,82],[500,8,509,6,"opt"],[500,11,509,9],[500,14,509,12],[500,18,509,16],[500,19,509,17,"options"],[500,26,509,24],[500,27,509,25,"overloadTranslationOptionHandler"],[500,59,509,57],[500,60,509,58,"arguments"],[500,69,509,67],[500,70,509,68],[501,6,510,4],[502,6,511,4],[502,10,511,8],[502,17,511,15,"opt"],[502,20,511,18],[502,25,511,23],[502,33,511,31],[502,35,511,33,"opt"],[502,38,511,36],[502,41,511,36,"Object"],[502,47,511,36],[502,48,511,36,"assign"],[502,54,511,36],[502,59,512,9,"opt"],[502,62,512,12],[502,63,513,5],[503,6,514,4],[503,10,514,8],[503,11,514,9,"opt"],[503,14,514,12],[503,16,514,14,"opt"],[503,19,514,17],[503,22,514,20],[503,23,514,21],[503,24,514,22],[504,6,515,4],[504,10,515,8,"keys"],[504,14,515,12],[504,18,515,16],[504,22,515,20],[504,24,515,22],[504,31,515,29],[504,33,515,31],[505,6,516,4],[505,10,516,8],[505,17,516,15,"keys"],[505,21,516,19],[505,26,516,24],[505,36,516,34],[505,38,516,36,"keys"],[505,42,516,40],[505,45,516,43,"keysFromSelector"],[505,61,516,59],[505,62,516,60,"keys"],[505,66,516,64],[505,68,516,64,"Object"],[505,74,516,64],[505,75,516,64,"assign"],[505,81,516,64],[505,86,517,9],[505,90,517,13],[505,91,517,14,"options"],[505,98,517,21],[505,100,518,9,"opt"],[505,103,518,12],[505,104,519,5],[505,105,519,6],[506,6,520,4],[506,10,520,8],[506,11,520,9,"Array"],[506,16,520,14],[506,17,520,15,"isArray"],[506,24,520,22],[506,25,520,23,"keys"],[506,29,520,27],[506,30,520,28],[506,32,520,30,"keys"],[506,36,520,34],[506,39,520,37],[506,40,520,38,"String"],[506,46,520,44],[506,47,520,45,"keys"],[506,51,520,49],[506,52,520,50],[506,53,520,51],[507,6,521,4],[507,12,521,10,"returnDetails"],[507,25,521,23],[507,28,521,26,"opt"],[507,31,521,29],[507,32,521,30,"returnDetails"],[507,45,521,43],[507,50,521,48,"undefined"],[507,59,521,57],[507,62,521,60,"opt"],[507,65,521,63],[507,66,521,64,"returnDetails"],[507,79,521,77],[507,82,521,80],[507,86,521,84],[507,87,521,85,"options"],[507,94,521,92],[507,95,521,93,"returnDetails"],[507,108,521,106],[508,6,522,4],[508,12,522,10,"keySeparator"],[508,24,522,22],[508,27,522,25,"opt"],[508,30,522,28],[508,31,522,29,"keySeparator"],[508,43,522,41],[508,48,522,46,"undefined"],[508,57,522,55],[508,60,522,58,"opt"],[508,63,522,61],[508,64,522,62,"keySeparator"],[508,76,522,74],[508,79,522,77],[508,83,522,81],[508,84,522,82,"options"],[508,91,522,89],[508,92,522,90,"keySeparator"],[508,104,522,102],[509,6,523,4],[509,12,523,10],[510,8,524,6,"key"],[510,11,524,9],[511,8,525,6,"namespaces"],[512,6,526,4],[512,7,526,5],[512,10,526,8],[512,14,526,12],[512,15,526,13,"extractFromKey"],[512,29,526,27],[512,30,526,28,"keys"],[512,34,526,32],[512,35,526,33,"keys"],[512,39,526,37],[512,40,526,38,"length"],[512,46,526,44],[512,49,526,47],[512,50,526,48],[512,51,526,49],[512,53,526,51,"opt"],[512,56,526,54],[512,57,526,55],[513,6,527,4],[513,12,527,10,"namespace"],[513,21,527,19],[513,24,527,22,"namespaces"],[513,34,527,32],[513,35,527,33,"namespaces"],[513,45,527,43],[513,46,527,44,"length"],[513,52,527,50],[513,55,527,53],[513,56,527,54],[513,57,527,55],[514,6,528,4],[514,10,528,8,"nsSeparator"],[514,21,528,19],[514,24,528,22,"opt"],[514,27,528,25],[514,28,528,26,"nsSeparator"],[514,39,528,37],[514,44,528,42,"undefined"],[514,53,528,51],[514,56,528,54,"opt"],[514,59,528,57],[514,60,528,58,"nsSeparator"],[514,71,528,69],[514,74,528,72],[514,78,528,76],[514,79,528,77,"options"],[514,86,528,84],[514,87,528,85,"nsSeparator"],[514,98,528,96],[515,6,529,4],[515,10,529,8,"nsSeparator"],[515,21,529,19],[515,26,529,24,"undefined"],[515,35,529,33],[515,37,529,35,"nsSeparator"],[515,48,529,46],[515,51,529,49],[515,54,529,52],[516,6,530,4],[516,12,530,10,"lng"],[516,15,530,13],[516,18,530,16,"opt"],[516,21,530,19],[516,22,530,20,"lng"],[516,25,530,23],[516,29,530,27],[516,33,530,31],[516,34,530,32,"language"],[516,42,530,40],[517,6,531,4],[517,12,531,10,"appendNamespaceToCIMode"],[517,35,531,33],[517,38,531,36,"opt"],[517,41,531,39],[517,42,531,40,"appendNamespaceToCIMode"],[517,65,531,63],[517,69,531,67],[517,73,531,71],[517,74,531,72,"options"],[517,81,531,79],[517,82,531,80,"appendNamespaceToCIMode"],[517,105,531,103],[518,6,532,4],[518,10,532,8,"lng"],[518,13,532,11],[518,15,532,13,"toLowerCase"],[518,26,532,24],[518,27,532,25],[518,28,532,26],[518,33,532,31],[518,41,532,39],[518,43,532,41],[519,8,533,6],[519,12,533,10,"appendNamespaceToCIMode"],[519,35,533,33],[519,37,533,35],[520,10,534,8],[520,14,534,12,"returnDetails"],[520,27,534,25],[520,29,534,27],[521,12,535,10],[521,19,535,17],[522,14,536,12,"res"],[522,17,536,15],[522,19,536,17],[522,22,536,20,"namespace"],[522,31,536,29],[522,34,536,32,"nsSeparator"],[522,45,536,43],[522,48,536,46,"key"],[522,51,536,49],[522,53,536,51],[523,14,537,12,"usedKey"],[523,21,537,19],[523,23,537,21,"key"],[523,26,537,24],[524,14,538,12,"exactUsedKey"],[524,26,538,24],[524,28,538,26,"key"],[524,31,538,29],[525,14,539,12,"usedLng"],[525,21,539,19],[525,23,539,21,"lng"],[525,26,539,24],[526,14,540,12,"usedNS"],[526,20,540,18],[526,22,540,20,"namespace"],[526,31,540,29],[527,14,541,12,"usedParams"],[527,24,541,22],[527,26,541,24],[527,30,541,28],[527,31,541,29,"getUsedParamsDetails"],[527,51,541,49],[527,52,541,50,"opt"],[527,55,541,53],[528,12,542,10],[528,13,542,11],[529,10,543,8],[530,10,544,8],[530,17,544,15],[530,20,544,18,"namespace"],[530,29,544,27],[530,32,544,30,"nsSeparator"],[530,43,544,41],[530,46,544,44,"key"],[530,49,544,47],[530,51,544,49],[531,8,545,6],[532,8,546,6],[532,12,546,10,"returnDetails"],[532,25,546,23],[532,27,546,25],[533,10,547,8],[533,17,547,15],[534,12,548,10,"res"],[534,15,548,13],[534,17,548,15,"key"],[534,20,548,18],[535,12,549,10,"usedKey"],[535,19,549,17],[535,21,549,19,"key"],[535,24,549,22],[536,12,550,10,"exactUsedKey"],[536,24,550,22],[536,26,550,24,"key"],[536,29,550,27],[537,12,551,10,"usedLng"],[537,19,551,17],[537,21,551,19,"lng"],[537,24,551,22],[538,12,552,10,"usedNS"],[538,18,552,16],[538,20,552,18,"namespace"],[538,29,552,27],[539,12,553,10,"usedParams"],[539,22,553,20],[539,24,553,22],[539,28,553,26],[539,29,553,27,"getUsedParamsDetails"],[539,49,553,47],[539,50,553,48,"opt"],[539,53,553,51],[540,10,554,8],[540,11,554,9],[541,8,555,6],[542,8,556,6],[542,15,556,13,"key"],[542,18,556,16],[543,6,557,4],[544,6,558,4],[544,12,558,10,"resolved"],[544,20,558,18],[544,23,558,21],[544,27,558,25],[544,28,558,26,"resolve"],[544,35,558,33],[544,36,558,34,"keys"],[544,40,558,38],[544,42,558,40,"opt"],[544,45,558,43],[544,46,558,44],[545,6,559,4],[545,10,559,8,"res"],[545,13,559,11],[545,16,559,14,"resolved"],[545,24,559,22],[545,26,559,24,"res"],[545,29,559,27],[546,6,560,4],[546,12,560,10,"resUsedKey"],[546,22,560,20],[546,25,560,23,"resolved"],[546,33,560,31],[546,35,560,33,"usedKey"],[546,42,560,40],[546,46,560,44,"key"],[546,49,560,47],[547,6,561,4],[547,12,561,10,"resExactUsedKey"],[547,27,561,25],[547,30,561,28,"resolved"],[547,38,561,36],[547,40,561,38,"exactUsedKey"],[547,52,561,50],[547,56,561,54,"key"],[547,59,561,57],[548,6,562,4],[548,12,562,10,"noObject"],[548,20,562,18],[548,23,562,21],[548,24,562,22],[548,41,562,39],[548,43,562,41],[548,62,562,60],[548,64,562,62],[548,81,562,79],[548,82,562,80],[549,6,563,4],[549,12,563,10,"joinArrays"],[549,22,563,20],[549,25,563,23,"opt"],[549,28,563,26],[549,29,563,27,"joinArrays"],[549,39,563,37],[549,44,563,42,"undefined"],[549,53,563,51],[549,56,563,54,"opt"],[549,59,563,57],[549,60,563,58,"joinArrays"],[549,70,563,68],[549,73,563,71],[549,77,563,75],[549,78,563,76,"options"],[549,85,563,83],[549,86,563,84,"joinArrays"],[549,96,563,94],[550,6,564,4],[550,12,564,10,"handleAsObjectInI18nFormat"],[550,38,564,36],[550,41,564,39],[550,42,564,40],[550,46,564,44],[550,47,564,45,"i18nFormat"],[550,57,564,55],[550,61,564,59],[550,65,564,63],[550,66,564,64,"i18nFormat"],[550,76,564,74],[550,77,564,75,"handleAsObject"],[550,91,564,89],[551,6,565,4],[551,12,565,10,"needsPluralHandling"],[551,31,565,29],[551,34,565,32,"opt"],[551,37,565,35],[551,38,565,36,"count"],[551,43,565,41],[551,48,565,46,"undefined"],[551,57,565,55],[551,61,565,59],[551,62,565,60,"isString"],[551,70,565,68],[551,71,565,69,"opt"],[551,74,565,72],[551,75,565,73,"count"],[551,80,565,78],[551,81,565,79],[552,6,566,4],[552,12,566,10,"hasDefaultValue"],[552,27,566,25],[552,30,566,28,"Translator"],[552,40,566,38],[552,41,566,39,"hasDefaultValue"],[552,56,566,54],[552,57,566,55,"opt"],[552,60,566,58],[552,61,566,59],[553,6,567,4],[553,12,567,10,"defaultValueSuffix"],[553,30,567,28],[553,33,567,31,"needsPluralHandling"],[553,52,567,50],[553,55,567,53],[553,59,567,57],[553,60,567,58,"pluralResolver"],[553,74,567,72],[553,75,567,73,"getSuffix"],[553,84,567,82],[553,85,567,83,"lng"],[553,88,567,86],[553,90,567,88,"opt"],[553,93,567,91],[553,94,567,92,"count"],[553,99,567,97],[553,101,567,99,"opt"],[553,104,567,102],[553,105,567,103],[553,108,567,106],[553,110,567,108],[554,6,568,4],[554,12,568,10,"defaultValueSuffixOrdinalFallback"],[554,45,568,43],[554,48,568,46,"opt"],[554,51,568,49],[554,52,568,50,"ordinal"],[554,59,568,57],[554,63,568,61,"needsPluralHandling"],[554,82,568,80],[554,85,568,83],[554,89,568,87],[554,90,568,88,"pluralResolver"],[554,104,568,102],[554,105,568,103,"getSuffix"],[554,114,568,112],[554,115,568,113,"lng"],[554,118,568,116],[554,120,568,118,"opt"],[554,123,568,121],[554,124,568,122,"count"],[554,129,568,127],[554,131,568,129],[555,8,569,6,"ordinal"],[555,15,569,13],[555,17,569,15],[556,6,570,4],[556,7,570,5],[556,8,570,6],[556,11,570,9],[556,13,570,11],[557,6,571,4],[557,12,571,10,"needsZeroSuffixLookup"],[557,33,571,31],[557,36,571,34,"needsPluralHandling"],[557,55,571,53],[557,59,571,57],[557,60,571,58,"opt"],[557,63,571,61],[557,64,571,62,"ordinal"],[557,71,571,69],[557,75,571,73,"opt"],[557,78,571,76],[557,79,571,77,"count"],[557,84,571,82],[557,89,571,87],[557,90,571,88],[558,6,572,4],[558,12,572,10,"defaultValue"],[558,24,572,22],[558,27,572,25,"needsZeroSuffixLookup"],[558,48,572,46],[558,52,572,50,"opt"],[558,55,572,53],[558,56,572,54],[558,71,572,69],[558,75,572,73],[558,76,572,74,"options"],[558,83,572,81],[558,84,572,82,"pluralSeparator"],[558,99,572,97],[558,105,572,103],[558,106,572,104],[558,110,572,108,"opt"],[558,113,572,111],[558,114,572,112],[558,129,572,127,"defaultValueSuffix"],[558,147,572,145],[558,149,572,147],[558,150,572,148],[558,154,572,152,"opt"],[558,157,572,155],[558,158,572,156],[558,173,572,171,"defaultValueSuffixOrdinalFallback"],[558,206,572,204],[558,208,572,206],[558,209,572,207],[558,213,572,211,"opt"],[558,216,572,214],[558,217,572,215,"defaultValue"],[558,229,572,227],[559,6,573,4],[559,10,573,8,"resForObjHndl"],[559,23,573,21],[559,26,573,24,"res"],[559,29,573,27],[560,6,574,4],[560,10,574,8,"handleAsObjectInI18nFormat"],[560,36,574,34],[560,40,574,38],[560,41,574,39,"res"],[560,44,574,42],[560,48,574,46,"hasDefaultValue"],[560,63,574,61],[560,65,574,63],[561,8,575,6,"resForObjHndl"],[561,21,575,19],[561,24,575,22,"defaultValue"],[561,36,575,34],[562,6,576,4],[563,6,577,4],[563,12,577,10,"handleAsObject"],[563,26,577,24],[563,29,577,27,"shouldHandleAsObject"],[563,49,577,47],[563,50,577,48,"resForObjHndl"],[563,63,577,61],[563,64,577,62],[564,6,578,4],[564,12,578,10,"resType"],[564,19,578,17],[564,22,578,20,"Object"],[564,28,578,26],[564,29,578,27,"prototype"],[564,38,578,36],[564,39,578,37,"toString"],[564,47,578,45],[564,48,578,46,"apply"],[564,53,578,51],[564,54,578,52,"resForObjHndl"],[564,67,578,65],[564,68,578,66],[565,6,579,4],[565,10,579,8,"handleAsObjectInI18nFormat"],[565,36,579,34],[565,40,579,38,"resForObjHndl"],[565,53,579,51],[565,57,579,55,"handleAsObject"],[565,71,579,69],[565,75,579,73,"noObject"],[565,83,579,81],[565,84,579,82,"indexOf"],[565,91,579,89],[565,92,579,90,"resType"],[565,99,579,97],[565,100,579,98],[565,103,579,101],[565,104,579,102],[565,108,579,106],[565,110,579,108,"isString"],[565,118,579,116],[565,119,579,117,"joinArrays"],[565,129,579,127],[565,130,579,128],[565,134,579,132,"Array"],[565,139,579,137],[565,140,579,138,"isArray"],[565,147,579,145],[565,148,579,146,"resForObjHndl"],[565,161,579,159],[565,162,579,160],[565,163,579,161],[565,165,579,163],[566,8,580,6],[566,12,580,10],[566,13,580,11,"opt"],[566,16,580,14],[566,17,580,15,"returnObjects"],[566,30,580,28],[566,34,580,32],[566,35,580,33],[566,39,580,37],[566,40,580,38,"options"],[566,47,580,45],[566,48,580,46,"returnObjects"],[566,61,580,59],[566,63,580,61],[567,10,581,8],[567,14,581,12],[567,15,581,13],[567,19,581,17],[567,20,581,18,"options"],[567,27,581,25],[567,28,581,26,"returnedObjectHandler"],[567,49,581,47],[567,51,581,49],[568,12,582,10],[568,16,582,14],[568,17,582,15,"logger"],[568,23,582,21],[568,24,582,22,"warn"],[568,28,582,26],[568,29,582,27],[568,94,582,92],[568,95,582,93],[569,10,583,8],[570,10,584,8],[570,16,584,14,"r"],[570,17,584,15],[570,20,584,18],[570,24,584,22],[570,25,584,23,"options"],[570,32,584,30],[570,33,584,31,"returnedObjectHandler"],[570,54,584,52],[570,57,584,55],[570,61,584,59],[570,62,584,60,"options"],[570,69,584,67],[570,70,584,68,"returnedObjectHandler"],[570,91,584,89],[570,92,584,90,"resUsedKey"],[570,102,584,100],[570,104,584,102,"resForObjHndl"],[570,117,584,115],[570,119,584,115,"Object"],[570,125,584,115],[570,126,584,115,"assign"],[570,132,584,115],[570,137,585,13,"opt"],[570,140,585,16],[571,12,586,10,"ns"],[571,14,586,12],[571,16,586,14,"namespaces"],[572,10,586,24],[572,12,587,9],[572,13,587,10],[572,16,587,13],[572,24,587,21,"key"],[572,27,587,24],[572,32,587,29],[572,36,587,33],[572,37,587,34,"language"],[572,45,587,42],[572,87,587,84],[573,10,588,8],[573,14,588,12,"returnDetails"],[573,27,588,25],[573,29,588,27],[574,12,589,10,"resolved"],[574,20,589,18],[574,21,589,19,"res"],[574,24,589,22],[574,27,589,25,"r"],[574,28,589,26],[575,12,590,10,"resolved"],[575,20,590,18],[575,21,590,19,"usedParams"],[575,31,590,29],[575,34,590,32],[575,38,590,36],[575,39,590,37,"getUsedParamsDetails"],[575,59,590,57],[575,60,590,58,"opt"],[575,63,590,61],[575,64,590,62],[576,12,591,10],[576,19,591,17,"resolved"],[576,27,591,25],[577,10,592,8],[578,10,593,8],[578,17,593,15,"r"],[578,18,593,16],[579,8,594,6],[580,8,595,6],[580,12,595,10,"keySeparator"],[580,24,595,22],[580,26,595,24],[581,10,596,8],[581,16,596,14,"resTypeIsArray"],[581,30,596,28],[581,33,596,31,"Array"],[581,38,596,36],[581,39,596,37,"isArray"],[581,46,596,44],[581,47,596,45,"resForObjHndl"],[581,60,596,58],[581,61,596,59],[582,10,597,8],[582,16,597,14,"copy"],[582,20,597,18],[582,23,597,21,"resTypeIsArray"],[582,37,597,35],[582,40,597,38],[582,42,597,40],[582,45,597,43],[582,46,597,44],[582,47,597,45],[583,10,598,8],[583,16,598,14,"newKeyToUse"],[583,27,598,25],[583,30,598,28,"resTypeIsArray"],[583,44,598,42],[583,47,598,45,"resExactUsedKey"],[583,62,598,60],[583,65,598,63,"resUsedKey"],[583,75,598,73],[584,10,599,8],[584,15,599,13],[584,21,599,19,"m"],[584,22,599,20],[584,26,599,24,"resForObjHndl"],[584,39,599,37],[584,41,599,39],[585,12,600,10],[585,16,600,14,"Object"],[585,22,600,20],[585,23,600,21,"prototype"],[585,32,600,30],[585,33,600,31,"hasOwnProperty"],[585,47,600,45],[585,48,600,46,"call"],[585,52,600,50],[585,53,600,51,"resForObjHndl"],[585,66,600,64],[585,68,600,66,"m"],[585,69,600,67],[585,70,600,68],[585,72,600,70],[586,14,601,12],[586,20,601,18,"deepKey"],[586,27,601,25],[586,30,601,28],[586,33,601,31,"newKeyToUse"],[586,44,601,42],[586,47,601,45,"keySeparator"],[586,59,601,57],[586,62,601,60,"m"],[586,63,601,61],[586,65,601,63],[587,14,602,12],[587,18,602,16,"hasDefaultValue"],[587,33,602,31],[587,37,602,35],[587,38,602,36,"res"],[587,41,602,39],[587,43,602,41],[588,16,603,14,"copy"],[588,20,603,18],[588,21,603,19,"m"],[588,22,603,20],[588,23,603,21],[588,26,603,24],[588,30,603,28],[588,31,603,29,"translate"],[588,40,603,38],[588,41,603,39,"deepKey"],[588,48,603,46],[588,50,603,46,"Object"],[588,56,603,46],[588,57,603,46,"assign"],[588,63,603,46],[588,68,604,19,"opt"],[588,71,604,22],[589,18,605,16,"defaultValue"],[589,30,605,28],[589,32,605,30,"shouldHandleAsObject"],[589,52,605,50],[589,53,605,51,"defaultValue"],[589,65,605,63],[589,66,605,64],[589,69,605,67,"defaultValue"],[589,81,605,79],[589,82,605,80,"m"],[589,83,605,81],[589,84,605,82],[589,87,605,85,"undefined"],[590,16,605,94],[590,19,606,19],[591,18,607,18,"joinArrays"],[591,28,607,28],[591,30,607,30],[591,35,607,35],[592,18,608,18,"ns"],[592,20,608,20],[592,22,608,22,"namespaces"],[593,16,609,16],[593,17,609,17],[593,18,610,15],[593,19,610,16],[594,14,611,12],[594,15,611,13],[594,21,611,19],[595,16,612,14,"copy"],[595,20,612,18],[595,21,612,19,"m"],[595,22,612,20],[595,23,612,21],[595,26,612,24],[595,30,612,28],[595,31,612,29,"translate"],[595,40,612,38],[595,41,612,39,"deepKey"],[595,48,612,46],[595,50,612,46,"Object"],[595,56,612,46],[595,57,612,46,"assign"],[595,63,612,46],[595,68,613,19,"opt"],[595,71,613,22],[595,73,614,19],[596,18,615,18,"joinArrays"],[596,28,615,28],[596,30,615,30],[596,35,615,35],[597,18,616,18,"ns"],[597,20,616,20],[597,22,616,22,"namespaces"],[598,16,617,16],[598,17,617,17],[598,18,618,15],[598,19,618,16],[599,14,619,12],[600,14,620,12],[600,18,620,16,"copy"],[600,22,620,20],[600,23,620,21,"m"],[600,24,620,22],[600,25,620,23],[600,30,620,28,"deepKey"],[600,37,620,35],[600,39,620,37,"copy"],[600,43,620,41],[600,44,620,42,"m"],[600,45,620,43],[600,46,620,44],[600,49,620,47,"resForObjHndl"],[600,62,620,60],[600,63,620,61,"m"],[600,64,620,62],[600,65,620,63],[601,12,621,10],[602,10,622,8],[603,10,623,8,"res"],[603,13,623,11],[603,16,623,14,"copy"],[603,20,623,18],[604,8,624,6],[605,6,625,4],[605,7,625,5],[605,13,625,11],[605,17,625,15,"handleAsObjectInI18nFormat"],[605,43,625,41],[605,47,625,45,"isString"],[605,55,625,53],[605,56,625,54,"joinArrays"],[605,66,625,64],[605,67,625,65],[605,71,625,69,"Array"],[605,76,625,74],[605,77,625,75,"isArray"],[605,84,625,82],[605,85,625,83,"res"],[605,88,625,86],[605,89,625,87],[605,91,625,89],[606,8,626,6,"res"],[606,11,626,9],[606,14,626,12,"res"],[606,17,626,15],[606,18,626,16,"join"],[606,22,626,20],[606,23,626,21,"joinArrays"],[606,33,626,31],[606,34,626,32],[607,8,627,6],[607,12,627,10,"res"],[607,15,627,13],[607,17,627,15,"res"],[607,20,627,18],[607,23,627,21],[607,27,627,25],[607,28,627,26,"extendTranslation"],[607,45,627,43],[607,46,627,44,"res"],[607,49,627,47],[607,51,627,49,"keys"],[607,55,627,53],[607,57,627,55,"opt"],[607,60,627,58],[607,62,627,60,"lastKey"],[607,69,627,67],[607,70,627,68],[608,6,628,4],[608,7,628,5],[608,13,628,11],[609,8,629,6],[609,12,629,10,"usedDefault"],[609,23,629,21],[609,26,629,24],[609,31,629,29],[610,8,630,6],[610,12,630,10,"usedKey"],[610,19,630,17],[610,22,630,20],[610,27,630,25],[611,8,631,6],[611,12,631,10],[611,13,631,11],[611,17,631,15],[611,18,631,16,"isValidLookup"],[611,31,631,29],[611,32,631,30,"res"],[611,35,631,33],[611,36,631,34],[611,40,631,38,"hasDefaultValue"],[611,55,631,53],[611,57,631,55],[612,10,632,8,"usedDefault"],[612,21,632,19],[612,24,632,22],[612,28,632,26],[613,10,633,8,"res"],[613,13,633,11],[613,16,633,14,"defaultValue"],[613,28,633,26],[614,8,634,6],[615,8,635,6],[615,12,635,10],[615,13,635,11],[615,17,635,15],[615,18,635,16,"isValidLookup"],[615,31,635,29],[615,32,635,30,"res"],[615,35,635,33],[615,36,635,34],[615,38,635,36],[616,10,636,8,"usedKey"],[616,17,636,15],[616,20,636,18],[616,24,636,22],[617,10,637,8,"res"],[617,13,637,11],[617,16,637,14,"key"],[617,19,637,17],[618,8,638,6],[619,8,639,6],[619,14,639,12,"missingKeyNoValueFallbackToKey"],[619,44,639,42],[619,47,639,45,"opt"],[619,50,639,48],[619,51,639,49,"missingKeyNoValueFallbackToKey"],[619,81,639,79],[619,85,639,83],[619,89,639,87],[619,90,639,88,"options"],[619,97,639,95],[619,98,639,96,"missingKeyNoValueFallbackToKey"],[619,128,639,126],[620,8,640,6],[620,14,640,12,"resForMissing"],[620,27,640,25],[620,30,640,28,"missingKeyNoValueFallbackToKey"],[620,60,640,58],[620,64,640,62,"usedKey"],[620,71,640,69],[620,74,640,72,"undefined"],[620,83,640,81],[620,86,640,84,"res"],[620,89,640,87],[621,8,641,6],[621,14,641,12,"updateMissing"],[621,27,641,25],[621,30,641,28,"hasDefaultValue"],[621,45,641,43],[621,49,641,47,"defaultValue"],[621,61,641,59],[621,66,641,64,"res"],[621,69,641,67],[621,73,641,71],[621,77,641,75],[621,78,641,76,"options"],[621,85,641,83],[621,86,641,84,"updateMissing"],[621,99,641,97],[622,8,642,6],[622,12,642,10,"usedKey"],[622,19,642,17],[622,23,642,21,"usedDefault"],[622,34,642,32],[622,38,642,36,"updateMissing"],[622,51,642,49],[622,53,642,51],[623,10,643,8],[623,14,643,12],[623,15,643,13,"logger"],[623,21,643,19],[623,22,643,20,"log"],[623,25,643,23],[623,26,643,24,"updateMissing"],[623,39,643,37],[623,42,643,40],[623,53,643,51],[623,56,643,54],[623,68,643,66],[623,70,643,68,"lng"],[623,73,643,71],[623,75,643,73,"namespace"],[623,84,643,82],[623,86,643,84,"key"],[623,89,643,87],[623,91,643,89,"updateMissing"],[623,104,643,102],[623,107,643,105,"defaultValue"],[623,119,643,117],[623,122,643,120,"res"],[623,125,643,123],[623,126,643,124],[624,10,644,8],[624,14,644,12,"keySeparator"],[624,26,644,24],[624,28,644,26],[625,12,645,10],[625,18,645,16,"fk"],[625,20,645,18],[625,23,645,21],[625,27,645,25],[625,28,645,26,"resolve"],[625,35,645,33],[625,36,645,34,"key"],[625,39,645,37],[625,41,645,37,"Object"],[625,47,645,37],[625,48,645,37,"assign"],[625,54,645,37],[625,59,646,15,"opt"],[625,62,646,18],[626,14,647,12,"keySeparator"],[626,26,647,24],[626,28,647,26],[627,12,647,31],[627,14,648,11],[627,15,648,12],[628,12,649,10],[628,16,649,14,"fk"],[628,18,649,16],[628,22,649,20,"fk"],[628,24,649,22],[628,25,649,23,"res"],[628,28,649,26],[628,30,649,28],[628,34,649,32],[628,35,649,33,"logger"],[628,41,649,39],[628,42,649,40,"warn"],[628,46,649,44],[628,47,649,45],[628,224,649,222],[628,225,649,223],[629,10,650,8],[630,10,651,8],[630,14,651,12,"lngs"],[630,18,651,16],[630,21,651,19],[630,23,651,21],[631,10,652,8],[631,16,652,14,"fallbackLngs"],[631,28,652,26],[631,31,652,29],[631,35,652,33],[631,36,652,34,"languageUtils"],[631,49,652,47],[631,50,652,48,"getFallbackCodes"],[631,66,652,64],[631,67,652,65],[631,71,652,69],[631,72,652,70,"options"],[631,79,652,77],[631,80,652,78,"fallbackLng"],[631,91,652,89],[631,93,652,91,"opt"],[631,96,652,94],[631,97,652,95,"lng"],[631,100,652,98],[631,104,652,102],[631,108,652,106],[631,109,652,107,"language"],[631,117,652,115],[631,118,652,116],[632,10,653,8],[632,14,653,12],[632,18,653,16],[632,19,653,17,"options"],[632,26,653,24],[632,27,653,25,"saveMissingTo"],[632,40,653,38],[632,45,653,43],[632,55,653,53],[632,59,653,57,"fallbackLngs"],[632,71,653,69],[632,75,653,73,"fallbackLngs"],[632,87,653,85],[632,88,653,86],[632,89,653,87],[632,90,653,88],[632,92,653,90],[633,12,654,10],[633,17,654,15],[633,21,654,19,"i"],[633,22,654,20],[633,25,654,23],[633,26,654,24],[633,28,654,26,"i"],[633,29,654,27],[633,32,654,30,"fallbackLngs"],[633,44,654,42],[633,45,654,43,"length"],[633,51,654,49],[633,53,654,51,"i"],[633,54,654,52],[633,56,654,54],[633,58,654,56],[634,14,655,12,"lngs"],[634,18,655,16],[634,19,655,17,"push"],[634,23,655,21],[634,24,655,22,"fallbackLngs"],[634,36,655,34],[634,37,655,35,"i"],[634,38,655,36],[634,39,655,37],[634,40,655,38],[635,12,656,10],[636,10,657,8],[636,11,657,9],[636,17,657,15],[636,21,657,19],[636,25,657,23],[636,26,657,24,"options"],[636,33,657,31],[636,34,657,32,"saveMissingTo"],[636,47,657,45],[636,52,657,50],[636,57,657,55],[636,59,657,57],[637,12,658,10,"lngs"],[637,16,658,14],[637,19,658,17],[637,23,658,21],[637,24,658,22,"languageUtils"],[637,37,658,35],[637,38,658,36,"toResolveHierarchy"],[637,56,658,54],[637,57,658,55,"opt"],[637,60,658,58],[637,61,658,59,"lng"],[637,64,658,62],[637,68,658,66],[637,72,658,70],[637,73,658,71,"language"],[637,81,658,79],[637,82,658,80],[638,10,659,8],[638,11,659,9],[638,17,659,15],[639,12,660,10,"lngs"],[639,16,660,14],[639,17,660,15,"push"],[639,21,660,19],[639,22,660,20,"opt"],[639,25,660,23],[639,26,660,24,"lng"],[639,29,660,27],[639,33,660,31],[639,37,660,35],[639,38,660,36,"language"],[639,46,660,44],[639,47,660,45],[640,10,661,8],[641,10,662,8],[641,16,662,14,"send"],[641,20,662,18],[641,23,662,21,"send"],[641,24,662,22,"l"],[641,25,662,23],[641,27,662,25,"k"],[641,28,662,26],[641,30,662,28,"specificDefaultValue"],[641,50,662,48],[641,55,662,53],[642,12,663,10],[642,18,663,16,"defaultForMissing"],[642,35,663,33],[642,38,663,36,"hasDefaultValue"],[642,53,663,51],[642,57,663,55,"specificDefaultValue"],[642,77,663,75],[642,82,663,80,"res"],[642,85,663,83],[642,88,663,86,"specificDefaultValue"],[642,108,663,106],[642,111,663,109,"resForMissing"],[642,124,663,122],[643,12,664,10],[643,16,664,14],[643,20,664,18],[643,21,664,19,"options"],[643,28,664,26],[643,29,664,27,"missingKeyHandler"],[643,46,664,44],[643,48,664,46],[644,14,665,12],[644,18,665,16],[644,19,665,17,"options"],[644,26,665,24],[644,27,665,25,"missingKeyHandler"],[644,44,665,42],[644,45,665,43,"l"],[644,46,665,44],[644,48,665,46,"namespace"],[644,57,665,55],[644,59,665,57,"k"],[644,60,665,58],[644,62,665,60,"defaultForMissing"],[644,79,665,77],[644,81,665,79,"updateMissing"],[644,94,665,92],[644,96,665,94,"opt"],[644,99,665,97],[644,100,665,98],[645,12,666,10],[645,13,666,11],[645,19,666,17],[645,23,666,21],[645,27,666,25],[645,28,666,26,"backendConnector"],[645,44,666,42],[645,46,666,44,"saveMissing"],[645,57,666,55],[645,59,666,57],[646,14,667,12],[646,18,667,16],[646,19,667,17,"backendConnector"],[646,35,667,33],[646,36,667,34,"saveMissing"],[646,47,667,45],[646,48,667,46,"l"],[646,49,667,47],[646,51,667,49,"namespace"],[646,60,667,58],[646,62,667,60,"k"],[646,63,667,61],[646,65,667,63,"defaultForMissing"],[646,82,667,80],[646,84,667,82,"updateMissing"],[646,97,667,95],[646,99,667,97,"opt"],[646,102,667,100],[646,103,667,101],[647,12,668,10],[648,12,669,10],[648,16,669,14],[648,17,669,15,"emit"],[648,21,669,19],[648,22,669,20],[648,34,669,32],[648,36,669,34,"l"],[648,37,669,35],[648,39,669,37,"namespace"],[648,48,669,46],[648,50,669,48,"k"],[648,51,669,49],[648,53,669,51,"res"],[648,56,669,54],[648,57,669,55],[649,10,670,8],[649,11,670,9],[650,10,671,8],[650,14,671,12],[650,18,671,16],[650,19,671,17,"options"],[650,26,671,24],[650,27,671,25,"saveMissing"],[650,38,671,36],[650,40,671,38],[651,12,672,10],[651,16,672,14],[651,20,672,18],[651,21,672,19,"options"],[651,28,672,26],[651,29,672,27,"saveMissingPlurals"],[651,47,672,45],[651,51,672,49,"needsPluralHandling"],[651,70,672,68],[651,72,672,70],[652,14,673,12,"lngs"],[652,18,673,16],[652,19,673,17,"forEach"],[652,26,673,24],[652,27,673,25,"language"],[652,35,673,33],[652,39,673,37],[653,16,674,14],[653,22,674,20,"suffixes"],[653,30,674,28],[653,33,674,31],[653,37,674,35],[653,38,674,36,"pluralResolver"],[653,52,674,50],[653,53,674,51,"getSuffixes"],[653,64,674,62],[653,65,674,63,"language"],[653,73,674,71],[653,75,674,73,"opt"],[653,78,674,76],[653,79,674,77],[654,16,675,14],[654,20,675,18,"needsZeroSuffixLookup"],[654,41,675,39],[654,45,675,43,"opt"],[654,48,675,46],[654,49,675,47],[654,64,675,62],[654,68,675,66],[654,69,675,67,"options"],[654,76,675,74],[654,77,675,75,"pluralSeparator"],[654,92,675,90],[654,98,675,96],[654,99,675,97],[654,103,675,101,"suffixes"],[654,111,675,109],[654,112,675,110,"indexOf"],[654,119,675,117],[654,120,675,118],[654,123,675,121],[654,127,675,125],[654,128,675,126,"options"],[654,135,675,133],[654,136,675,134,"pluralSeparator"],[654,151,675,149],[654,157,675,155],[654,158,675,156],[654,161,675,159],[654,162,675,160],[654,164,675,162],[655,18,676,16,"suffixes"],[655,26,676,24],[655,27,676,25,"push"],[655,31,676,29],[655,32,676,30],[655,35,676,33],[655,39,676,37],[655,40,676,38,"options"],[655,47,676,45],[655,48,676,46,"pluralSeparator"],[655,63,676,61],[655,69,676,67],[655,70,676,68],[656,16,677,14],[657,16,678,14,"suffixes"],[657,24,678,22],[657,25,678,23,"forEach"],[657,32,678,30],[657,33,678,31,"suffix"],[657,39,678,37],[657,43,678,41],[658,18,679,16,"send"],[658,22,679,20],[658,23,679,21],[658,24,679,22,"language"],[658,32,679,30],[658,33,679,31],[658,35,679,33,"key"],[658,38,679,36],[658,41,679,39,"suffix"],[658,47,679,45],[658,49,679,47,"opt"],[658,52,679,50],[658,53,679,51],[658,68,679,66,"suffix"],[658,74,679,72],[658,76,679,74],[658,77,679,75],[658,81,679,79,"defaultValue"],[658,93,679,91],[658,94,679,92],[659,16,680,14],[659,17,680,15],[659,18,680,16],[660,14,681,12],[660,15,681,13],[660,16,681,14],[661,12,682,10],[661,13,682,11],[661,19,682,17],[662,14,683,12,"send"],[662,18,683,16],[662,19,683,17,"lngs"],[662,23,683,21],[662,25,683,23,"key"],[662,28,683,26],[662,30,683,28,"defaultValue"],[662,42,683,40],[662,43,683,41],[663,12,684,10],[664,10,685,8],[665,8,686,6],[666,8,687,6,"res"],[666,11,687,9],[666,14,687,12],[666,18,687,16],[666,19,687,17,"extendTranslation"],[666,36,687,34],[666,37,687,35,"res"],[666,40,687,38],[666,42,687,40,"keys"],[666,46,687,44],[666,48,687,46,"opt"],[666,51,687,49],[666,53,687,51,"resolved"],[666,61,687,59],[666,63,687,61,"lastKey"],[666,70,687,68],[666,71,687,69],[667,8,688,6],[667,12,688,10,"usedKey"],[667,19,688,17],[667,23,688,21,"res"],[667,26,688,24],[667,31,688,29,"key"],[667,34,688,32],[667,38,688,36],[667,42,688,40],[667,43,688,41,"options"],[667,50,688,48],[667,51,688,49,"appendNamespaceToMissingKey"],[667,78,688,76],[667,80,688,78],[668,10,689,8,"res"],[668,13,689,11],[668,16,689,14],[668,19,689,17,"namespace"],[668,28,689,26],[668,31,689,29,"nsSeparator"],[668,42,689,40],[668,45,689,43,"key"],[668,48,689,46],[668,50,689,48],[669,8,690,6],[670,8,691,6],[670,12,691,10],[670,13,691,11,"usedKey"],[670,20,691,18],[670,24,691,22,"usedDefault"],[670,35,691,33],[670,40,691,38],[670,44,691,42],[670,45,691,43,"options"],[670,52,691,50],[670,53,691,51,"parseMissingKeyHandler"],[670,75,691,73],[670,77,691,75],[671,10,692,8,"res"],[671,13,692,11],[671,16,692,14],[671,20,692,18],[671,21,692,19,"options"],[671,28,692,26],[671,29,692,27,"parseMissingKeyHandler"],[671,51,692,49],[671,52,692,50],[671,56,692,54],[671,57,692,55,"options"],[671,64,692,62],[671,65,692,63,"appendNamespaceToMissingKey"],[671,92,692,90],[671,95,692,93],[671,98,692,96,"namespace"],[671,107,692,105],[671,110,692,108,"nsSeparator"],[671,121,692,119],[671,124,692,122,"key"],[671,127,692,125],[671,129,692,127],[671,132,692,130,"key"],[671,135,692,133],[671,137,692,135,"usedDefault"],[671,148,692,146],[671,151,692,149,"res"],[671,154,692,152],[671,157,692,155,"undefined"],[671,166,692,164],[671,168,692,166,"opt"],[671,171,692,169],[671,172,692,170],[672,8,693,6],[673,6,694,4],[674,6,695,4],[674,10,695,8,"returnDetails"],[674,23,695,21],[674,25,695,23],[675,8,696,6,"resolved"],[675,16,696,14],[675,17,696,15,"res"],[675,20,696,18],[675,23,696,21,"res"],[675,26,696,24],[676,8,697,6,"resolved"],[676,16,697,14],[676,17,697,15,"usedParams"],[676,27,697,25],[676,30,697,28],[676,34,697,32],[676,35,697,33,"getUsedParamsDetails"],[676,55,697,53],[676,56,697,54,"opt"],[676,59,697,57],[676,60,697,58],[677,8,698,6],[677,15,698,13,"resolved"],[677,23,698,21],[678,6,699,4],[679,6,700,4],[679,13,700,11,"res"],[679,16,700,14],[680,4,701,2],[681,4,702,2,"extendTranslation"],[681,21,702,19,"extendTranslation"],[681,22,702,20,"res"],[681,25,702,23],[681,27,702,25,"key"],[681,30,702,28],[681,32,702,30,"opt"],[681,35,702,33],[681,37,702,35,"resolved"],[681,45,702,43],[681,47,702,45,"lastKey"],[681,54,702,52],[681,56,702,54],[682,6,703,4],[682,10,703,8],[682,14,703,12],[682,15,703,13,"i18nFormat"],[682,25,703,23],[682,27,703,25,"parse"],[682,32,703,30],[682,34,703,32],[683,8,704,6,"res"],[683,11,704,9],[683,14,704,12],[683,18,704,16],[683,19,704,17,"i18nFormat"],[683,29,704,27],[683,30,704,28,"parse"],[683,35,704,33],[683,36,704,34,"res"],[683,39,704,37],[683,41,704,37,"Object"],[683,47,704,37],[683,48,704,37,"assign"],[683,54,704,37],[683,59,705,11],[683,63,705,15],[683,64,705,16,"options"],[683,71,705,23],[683,72,705,24,"interpolation"],[683,85,705,37],[683,86,705,38,"defaultVariables"],[683,102,705,54],[683,104,706,11,"opt"],[683,107,706,14],[683,110,707,9,"opt"],[683,113,707,12],[683,114,707,13,"lng"],[683,117,707,16],[683,121,707,20],[683,125,707,24],[683,126,707,25,"language"],[683,134,707,33],[683,138,707,37,"resolved"],[683,146,707,45],[683,147,707,46,"usedLng"],[683,154,707,53],[683,156,707,55,"resolved"],[683,164,707,63],[683,165,707,64,"usedNS"],[683,171,707,70],[683,173,707,72,"resolved"],[683,181,707,80],[683,182,707,81,"usedKey"],[683,189,707,88],[683,191,707,90],[684,10,708,8,"resolved"],[685,8,709,6],[685,9,709,7],[685,10,709,8],[686,6,710,4],[686,7,710,5],[686,13,710,11],[686,17,710,15],[686,18,710,16,"opt"],[686,21,710,19],[686,22,710,20,"skipInterpolation"],[686,39,710,37],[686,41,710,39],[687,8,711,6],[687,12,711,10,"opt"],[687,15,711,13],[687,16,711,14,"interpolation"],[687,29,711,27],[687,31,711,29],[687,35,711,33],[687,36,711,34,"interpolator"],[687,48,711,46],[687,49,711,47,"init"],[687,53,711,51],[687,54,711,51,"Object"],[687,60,711,51],[687,61,711,51,"assign"],[687,67,711,51],[687,72,712,11,"opt"],[687,75,712,14],[687,77,713,11],[688,10,714,10,"interpolation"],[688,23,714,23],[688,25,714,23,"Object"],[688,31,714,23],[688,32,714,23,"assign"],[688,38,714,23],[688,43,715,15],[688,47,715,19],[688,48,715,20,"options"],[688,55,715,27],[688,56,715,28,"interpolation"],[688,69,715,41],[688,71,716,15,"opt"],[688,74,716,18],[688,75,716,19,"interpolation"],[688,88,716,32],[689,8,718,8],[689,9,718,9],[689,10,719,7],[689,11,719,8],[690,8,720,6],[690,14,720,12,"skipOnVariables"],[690,29,720,27],[690,32,720,30,"isString"],[690,40,720,38],[690,41,720,39,"res"],[690,44,720,42],[690,45,720,43],[690,50,720,48,"opt"],[690,53,720,51],[690,55,720,53,"interpolation"],[690,68,720,66],[690,70,720,68,"skipOnVariables"],[690,85,720,83],[690,90,720,88,"undefined"],[690,99,720,97],[690,102,720,100,"opt"],[690,105,720,103],[690,106,720,104,"interpolation"],[690,119,720,117],[690,120,720,118,"skipOnVariables"],[690,135,720,133],[690,138,720,136],[690,142,720,140],[690,143,720,141,"options"],[690,150,720,148],[690,151,720,149,"interpolation"],[690,164,720,162],[690,165,720,163,"skipOnVariables"],[690,180,720,178],[690,181,720,179],[691,8,721,6],[691,12,721,10,"nestBef"],[691,19,721,17],[692,8,722,6],[692,12,722,10,"skipOnVariables"],[692,27,722,25],[692,29,722,27],[693,10,723,8],[693,16,723,14,"nb"],[693,18,723,16],[693,21,723,19,"res"],[693,24,723,22],[693,25,723,23,"match"],[693,30,723,28],[693,31,723,29],[693,35,723,33],[693,36,723,34,"interpolator"],[693,48,723,46],[693,49,723,47,"nestingRegexp"],[693,62,723,60],[693,63,723,61],[694,10,724,8,"nestBef"],[694,17,724,15],[694,20,724,18,"nb"],[694,22,724,20],[694,26,724,24,"nb"],[694,28,724,26],[694,29,724,27,"length"],[694,35,724,33],[695,8,725,6],[696,8,726,6],[696,12,726,10,"data"],[696,16,726,14],[696,19,726,17,"opt"],[696,22,726,20],[696,23,726,21,"replace"],[696,30,726,28],[696,34,726,32],[696,35,726,33,"isString"],[696,43,726,41],[696,44,726,42,"opt"],[696,47,726,45],[696,48,726,46,"replace"],[696,55,726,53],[696,56,726,54],[696,59,726,57,"opt"],[696,62,726,60],[696,63,726,61,"replace"],[696,70,726,68],[696,73,726,71,"opt"],[696,76,726,74],[697,8,727,6],[697,12,727,10],[697,16,727,14],[697,17,727,15,"options"],[697,24,727,22],[697,25,727,23,"interpolation"],[697,38,727,36],[697,39,727,37,"defaultVariables"],[697,55,727,53],[697,57,727,55,"data"],[697,61,727,59],[697,64,727,59,"Object"],[697,70,727,59],[697,71,727,59,"assign"],[697,77,727,59],[697,82,728,11],[697,86,728,15],[697,87,728,16,"options"],[697,94,728,23],[697,95,728,24,"interpolation"],[697,108,728,37],[697,109,728,38,"defaultVariables"],[697,125,728,54],[697,127,729,11,"data"],[697,131,729,15],[697,132,730,7],[698,8,731,6,"res"],[698,11,731,9],[698,14,731,12],[698,18,731,16],[698,19,731,17,"interpolator"],[698,31,731,29],[698,32,731,30,"interpolate"],[698,43,731,41],[698,44,731,42,"res"],[698,47,731,45],[698,49,731,47,"data"],[698,53,731,51],[698,55,731,53,"opt"],[698,58,731,56],[698,59,731,57,"lng"],[698,62,731,60],[698,66,731,64],[698,70,731,68],[698,71,731,69,"language"],[698,79,731,77],[698,83,731,81,"resolved"],[698,91,731,89],[698,92,731,90,"usedLng"],[698,99,731,97],[698,101,731,99,"opt"],[698,104,731,102],[698,105,731,103],[699,8,732,6],[699,12,732,10,"skipOnVariables"],[699,27,732,25],[699,29,732,27],[700,10,733,8],[700,16,733,14,"na"],[700,18,733,16],[700,21,733,19,"res"],[700,24,733,22],[700,25,733,23,"match"],[700,30,733,28],[700,31,733,29],[700,35,733,33],[700,36,733,34,"interpolator"],[700,48,733,46],[700,49,733,47,"nestingRegexp"],[700,62,733,60],[700,63,733,61],[701,10,734,8],[701,16,734,14,"nestAft"],[701,23,734,21],[701,26,734,24,"na"],[701,28,734,26],[701,32,734,30,"na"],[701,34,734,32],[701,35,734,33,"length"],[701,41,734,39],[702,10,735,8],[702,14,735,12,"nestBef"],[702,21,735,19],[702,24,735,22,"nestAft"],[702,31,735,29],[702,33,735,31,"opt"],[702,36,735,34],[702,37,735,35,"nest"],[702,41,735,39],[702,44,735,42],[702,49,735,47],[703,8,736,6],[704,8,737,6],[704,12,737,10],[704,13,737,11,"opt"],[704,16,737,14],[704,17,737,15,"lng"],[704,20,737,18],[704,24,737,22,"resolved"],[704,32,737,30],[704,36,737,34,"resolved"],[704,44,737,42],[704,45,737,43,"res"],[704,48,737,46],[704,50,737,48,"opt"],[704,53,737,51],[704,54,737,52,"lng"],[704,57,737,55],[704,60,737,58],[704,64,737,62],[704,65,737,63,"language"],[704,73,737,71],[704,77,737,75,"resolved"],[704,85,737,83],[704,86,737,84,"usedLng"],[704,93,737,91],[705,8,738,6],[705,12,738,10,"opt"],[705,15,738,13],[705,16,738,14,"nest"],[705,20,738,18],[705,25,738,23],[705,30,738,28],[705,32,738,30,"res"],[705,35,738,33],[705,38,738,36],[705,42,738,40],[705,43,738,41,"interpolator"],[705,55,738,53],[705,56,738,54,"nest"],[705,60,738,58],[705,61,738,59,"res"],[705,64,738,62],[705,66,738,64],[705,67,738,65],[705,70,738,68,"args"],[705,74,738,72],[705,79,738,77],[706,10,739,8],[706,14,739,12,"lastKey"],[706,21,739,19],[706,24,739,22],[706,25,739,23],[706,26,739,24],[706,31,739,29,"args"],[706,35,739,33],[706,36,739,34],[706,37,739,35],[706,38,739,36],[706,42,739,40],[706,43,739,41,"opt"],[706,46,739,44],[706,47,739,45,"context"],[706,54,739,52],[706,56,739,54],[707,12,740,10],[707,16,740,14],[707,17,740,15,"logger"],[707,23,740,21],[707,24,740,22,"warn"],[707,28,740,26],[707,29,740,27],[707,74,740,72,"args"],[707,78,740,76],[707,79,740,77],[707,80,740,78],[707,81,740,79],[707,93,740,91,"key"],[707,96,740,94],[707,97,740,95],[707,98,740,96],[707,99,740,97],[707,101,740,99],[707,102,740,100],[708,12,741,10],[708,19,741,17],[708,23,741,21],[709,10,742,8],[710,10,743,8],[710,17,743,15],[710,21,743,19],[710,22,743,20,"translate"],[710,31,743,29],[710,32,743,30],[710,35,743,33,"args"],[710,39,743,37],[710,41,743,39,"key"],[710,44,743,42],[710,45,743,43],[711,8,744,6],[711,9,744,7],[711,11,744,9,"opt"],[711,14,744,12],[711,15,744,13],[712,8,745,6],[712,12,745,10,"opt"],[712,15,745,13],[712,16,745,14,"interpolation"],[712,29,745,27],[712,31,745,29],[712,35,745,33],[712,36,745,34,"interpolator"],[712,48,745,46],[712,49,745,47,"reset"],[712,54,745,52],[712,55,745,53],[712,56,745,54],[713,6,746,4],[714,6,747,4],[714,12,747,10,"postProcess"],[714,23,747,21],[714,26,747,24,"opt"],[714,29,747,27],[714,30,747,28,"postProcess"],[714,41,747,39],[714,45,747,43],[714,49,747,47],[714,50,747,48,"options"],[714,57,747,55],[714,58,747,56,"postProcess"],[714,69,747,67],[715,6,748,4],[715,12,748,10,"postProcessorNames"],[715,30,748,28],[715,33,748,31,"isString"],[715,41,748,39],[715,42,748,40,"postProcess"],[715,53,748,51],[715,54,748,52],[715,57,748,55],[715,58,748,56,"postProcess"],[715,69,748,67],[715,70,748,68],[715,73,748,71,"postProcess"],[715,84,748,82],[716,6,749,4],[716,10,749,8,"res"],[716,13,749,11],[716,17,749,15],[716,21,749,19],[716,25,749,23,"postProcessorNames"],[716,43,749,41],[716,45,749,43,"length"],[716,51,749,49],[716,55,749,53,"opt"],[716,58,749,56],[716,59,749,57,"applyPostProcessor"],[716,77,749,75],[716,82,749,80],[716,87,749,85],[716,89,749,87],[717,8,750,6,"res"],[717,11,750,9],[717,14,750,12,"postProcessor"],[717,27,750,25],[717,28,750,26,"handle"],[717,34,750,32],[717,35,750,33,"postProcessorNames"],[717,53,750,51],[717,55,750,53,"res"],[717,58,750,56],[717,60,750,58,"key"],[717,63,750,61],[717,65,750,63],[717,69,750,67],[717,70,750,68,"options"],[717,77,750,75],[717,81,750,79],[717,85,750,83],[717,86,750,84,"options"],[717,93,750,91],[717,94,750,92,"postProcessPassResolved"],[717,117,750,115],[717,120,750,115,"Object"],[717,126,750,115],[717,127,750,115,"assign"],[717,133,750,115],[718,10,751,8,"i18nResolved"],[718,22,751,20],[718,24,751,20,"Object"],[718,30,751,20],[718,31,751,20,"assign"],[718,37,751,20],[718,42,752,13,"resolved"],[718,50,752,21],[719,12,753,10,"usedParams"],[719,22,753,20],[719,24,753,22],[719,28,753,26],[719,29,753,27,"getUsedParamsDetails"],[719,49,753,47],[719,50,753,48,"opt"],[719,53,753,51],[720,10,753,52],[721,8,754,9],[721,11,755,11,"opt"],[721,14,755,14],[721,18,756,10,"opt"],[721,21,756,13],[721,23,756,15],[721,27,756,19],[721,28,756,20],[722,6,757,4],[723,6,758,4],[723,13,758,11,"res"],[723,16,758,14],[724,4,759,2],[725,4,760,2,"resolve"],[725,11,760,9,"resolve"],[725,12,760,10,"keys"],[725,16,760,14],[725,18,760,16,"opt"],[725,21,760,19],[725,24,760,22],[725,25,760,23],[725,26,760,24],[725,28,760,26],[726,6,761,4],[726,10,761,8,"found"],[726,15,761,13],[727,6,762,4],[727,10,762,8,"usedKey"],[727,17,762,15],[728,6,763,4],[728,10,763,8,"exactUsedKey"],[728,22,763,20],[729,6,764,4],[729,10,764,8,"usedLng"],[729,17,764,15],[730,6,765,4],[730,10,765,8,"usedNS"],[730,16,765,14],[731,6,766,4],[731,10,766,8,"isString"],[731,18,766,16],[731,19,766,17,"keys"],[731,23,766,21],[731,24,766,22],[731,26,766,24,"keys"],[731,30,766,28],[731,33,766,31],[731,34,766,32,"keys"],[731,38,766,36],[731,39,766,37],[732,6,767,4,"keys"],[732,10,767,8],[732,11,767,9,"forEach"],[732,18,767,16],[732,19,767,17,"k"],[732,20,767,18],[732,24,767,22],[733,8,768,6],[733,12,768,10],[733,16,768,14],[733,17,768,15,"isValidLookup"],[733,30,768,28],[733,31,768,29,"found"],[733,36,768,34],[733,37,768,35],[733,39,768,37],[734,8,769,6],[734,14,769,12,"extracted"],[734,23,769,21],[734,26,769,24],[734,30,769,28],[734,31,769,29,"extractFromKey"],[734,45,769,43],[734,46,769,44,"k"],[734,47,769,45],[734,49,769,47,"opt"],[734,52,769,50],[734,53,769,51],[735,8,770,6],[735,14,770,12,"key"],[735,17,770,15],[735,20,770,18,"extracted"],[735,29,770,27],[735,30,770,28,"key"],[735,33,770,31],[736,8,771,6,"usedKey"],[736,15,771,13],[736,18,771,16,"key"],[736,21,771,19],[737,8,772,6],[737,12,772,10,"namespaces"],[737,22,772,20],[737,25,772,23,"extracted"],[737,34,772,32],[737,35,772,33,"namespaces"],[737,45,772,43],[738,8,773,6],[738,12,773,10],[738,16,773,14],[738,17,773,15,"options"],[738,24,773,22],[738,25,773,23,"fallbackNS"],[738,35,773,33],[738,37,773,35,"namespaces"],[738,47,773,45],[738,50,773,48,"namespaces"],[738,60,773,58],[738,61,773,59,"concat"],[738,67,773,65],[738,68,773,66],[738,72,773,70],[738,73,773,71,"options"],[738,80,773,78],[738,81,773,79,"fallbackNS"],[738,91,773,89],[738,92,773,90],[739,8,774,6],[739,14,774,12,"needsPluralHandling"],[739,33,774,31],[739,36,774,34,"opt"],[739,39,774,37],[739,40,774,38,"count"],[739,45,774,43],[739,50,774,48,"undefined"],[739,59,774,57],[739,63,774,61],[739,64,774,62,"isString"],[739,72,774,70],[739,73,774,71,"opt"],[739,76,774,74],[739,77,774,75,"count"],[739,82,774,80],[739,83,774,81],[740,8,775,6],[740,14,775,12,"needsZeroSuffixLookup"],[740,35,775,33],[740,38,775,36,"needsPluralHandling"],[740,57,775,55],[740,61,775,59],[740,62,775,60,"opt"],[740,65,775,63],[740,66,775,64,"ordinal"],[740,73,775,71],[740,77,775,75,"opt"],[740,80,775,78],[740,81,775,79,"count"],[740,86,775,84],[740,91,775,89],[740,92,775,90],[741,8,776,6],[741,14,776,12,"needsContextHandling"],[741,34,776,32],[741,37,776,35,"opt"],[741,40,776,38],[741,41,776,39,"context"],[741,48,776,46],[741,53,776,51,"undefined"],[741,62,776,60],[741,67,776,65,"isString"],[741,75,776,73],[741,76,776,74,"opt"],[741,79,776,77],[741,80,776,78,"context"],[741,87,776,85],[741,88,776,86],[741,92,776,90],[741,99,776,97,"opt"],[741,102,776,100],[741,103,776,101,"context"],[741,110,776,108],[741,115,776,113],[741,123,776,121],[741,124,776,122],[741,128,776,126,"opt"],[741,131,776,129],[741,132,776,130,"context"],[741,139,776,137],[741,144,776,142],[741,146,776,144],[742,8,777,6],[742,14,777,12,"codes"],[742,19,777,17],[742,22,777,20,"opt"],[742,25,777,23],[742,26,777,24,"lngs"],[742,30,777,28],[742,33,777,31,"opt"],[742,36,777,34],[742,37,777,35,"lngs"],[742,41,777,39],[742,44,777,42],[742,48,777,46],[742,49,777,47,"languageUtils"],[742,62,777,60],[742,63,777,61,"toResolveHierarchy"],[742,81,777,79],[742,82,777,80,"opt"],[742,85,777,83],[742,86,777,84,"lng"],[742,89,777,87],[742,93,777,91],[742,97,777,95],[742,98,777,96,"language"],[742,106,777,104],[742,108,777,106,"opt"],[742,111,777,109],[742,112,777,110,"fallbackLng"],[742,123,777,121],[742,124,777,122],[743,8,778,6,"namespaces"],[743,18,778,16],[743,19,778,17,"forEach"],[743,26,778,24],[743,27,778,25,"ns"],[743,29,778,27],[743,33,778,31],[744,10,779,8],[744,14,779,12],[744,18,779,16],[744,19,779,17,"isValidLookup"],[744,32,779,30],[744,33,779,31,"found"],[744,38,779,36],[744,39,779,37],[744,41,779,39],[745,10,780,8,"usedNS"],[745,16,780,14],[745,19,780,17,"ns"],[745,21,780,19],[746,10,781,8],[746,14,781,12],[746,15,781,13,"checkedLoadedFor"],[746,31,781,29],[746,32,781,30],[746,35,781,33,"codes"],[746,40,781,38],[746,41,781,39],[746,42,781,40],[746,43,781,41],[746,47,781,45,"ns"],[746,49,781,47],[746,51,781,49],[746,52,781,50],[746,56,781,54],[746,60,781,58],[746,61,781,59,"utils"],[746,66,781,64],[746,68,781,66,"hasLoadedNamespace"],[746,86,781,84],[746,90,781,88],[746,91,781,89],[746,95,781,93],[746,96,781,94,"utils"],[746,101,781,99],[746,103,781,101,"hasLoadedNamespace"],[746,121,781,119],[746,122,781,120,"usedNS"],[746,128,781,126],[746,129,781,127],[746,131,781,129],[747,12,782,10,"checkedLoadedFor"],[747,28,782,26],[747,29,782,27],[747,32,782,30,"codes"],[747,37,782,35],[747,38,782,36],[747,39,782,37],[747,40,782,38],[747,44,782,42,"ns"],[747,46,782,44],[747,48,782,46],[747,49,782,47],[747,52,782,50],[747,56,782,54],[748,12,783,10],[748,16,783,14],[748,17,783,15,"logger"],[748,23,783,21],[748,24,783,22,"warn"],[748,28,783,26],[748,29,783,27],[748,37,783,35,"usedKey"],[748,44,783,42],[748,64,783,62,"codes"],[748,69,783,67],[748,70,783,68,"join"],[748,74,783,72],[748,75,783,73],[748,79,783,77],[748,80,783,78],[748,118,783,116,"usedNS"],[748,124,783,122],[748,146,783,144],[748,148,783,146],[748,366,783,364],[748,367,783,365],[749,10,784,8],[750,10,785,8,"codes"],[750,15,785,13],[750,16,785,14,"forEach"],[750,23,785,21],[750,24,785,22,"code"],[750,28,785,26],[750,32,785,30],[751,12,786,10],[751,16,786,14],[751,20,786,18],[751,21,786,19,"isValidLookup"],[751,34,786,32],[751,35,786,33,"found"],[751,40,786,38],[751,41,786,39],[751,43,786,41],[752,12,787,10,"usedLng"],[752,19,787,17],[752,22,787,20,"code"],[752,26,787,24],[753,12,788,10],[753,18,788,16,"finalKeys"],[753,27,788,25],[753,30,788,28],[753,31,788,29,"key"],[753,34,788,32],[753,35,788,33],[754,12,789,10],[754,16,789,14],[754,20,789,18],[754,21,789,19,"i18nFormat"],[754,31,789,29],[754,33,789,31,"addLookupKeys"],[754,46,789,44],[754,48,789,46],[755,14,790,12],[755,18,790,16],[755,19,790,17,"i18nFormat"],[755,29,790,27],[755,30,790,28,"addLookupKeys"],[755,43,790,41],[755,44,790,42,"finalKeys"],[755,53,790,51],[755,55,790,53,"key"],[755,58,790,56],[755,60,790,58,"code"],[755,64,790,62],[755,66,790,64,"ns"],[755,68,790,66],[755,70,790,68,"opt"],[755,73,790,71],[755,74,790,72],[756,12,791,10],[756,13,791,11],[756,19,791,17],[757,14,792,12],[757,18,792,16,"pluralSuffix"],[757,30,792,28],[758,14,793,12],[758,18,793,16,"needsPluralHandling"],[758,37,793,35],[758,39,793,37,"pluralSuffix"],[758,51,793,49],[758,54,793,52],[758,58,793,56],[758,59,793,57,"pluralResolver"],[758,73,793,71],[758,74,793,72,"getSuffix"],[758,83,793,81],[758,84,793,82,"code"],[758,88,793,86],[758,90,793,88,"opt"],[758,93,793,91],[758,94,793,92,"count"],[758,99,793,97],[758,101,793,99,"opt"],[758,104,793,102],[758,105,793,103],[759,14,794,12],[759,20,794,18,"zeroSuffix"],[759,30,794,28],[759,33,794,31],[759,36,794,34],[759,40,794,38],[759,41,794,39,"options"],[759,48,794,46],[759,49,794,47,"pluralSeparator"],[759,64,794,62],[759,70,794,68],[760,14,795,12],[760,20,795,18,"ordinalPrefix"],[760,33,795,31],[760,36,795,34],[760,39,795,37],[760,43,795,41],[760,44,795,42,"options"],[760,51,795,49],[760,52,795,50,"pluralSeparator"],[760,67,795,65],[760,77,795,75],[760,81,795,79],[760,82,795,80,"options"],[760,89,795,87],[760,90,795,88,"pluralSeparator"],[760,105,795,103],[760,107,795,105],[761,14,796,12],[761,18,796,16,"needsPluralHandling"],[761,37,796,35],[761,39,796,37],[762,16,797,14],[762,20,797,18,"opt"],[762,23,797,21],[762,24,797,22,"ordinal"],[762,31,797,29],[762,35,797,33,"pluralSuffix"],[762,47,797,45],[762,48,797,46,"indexOf"],[762,55,797,53],[762,56,797,54,"ordinalPrefix"],[762,69,797,67],[762,70,797,68],[762,75,797,73],[762,76,797,74],[762,78,797,76],[763,18,798,16,"finalKeys"],[763,27,798,25],[763,28,798,26,"push"],[763,32,798,30],[763,33,798,31,"key"],[763,36,798,34],[763,39,798,37,"pluralSuffix"],[763,51,798,49],[763,52,798,50,"replace"],[763,59,798,57],[763,60,798,58,"ordinalPrefix"],[763,73,798,71],[763,75,798,73],[763,79,798,77],[763,80,798,78,"options"],[763,87,798,85],[763,88,798,86,"pluralSeparator"],[763,103,798,101],[763,104,798,102],[763,105,798,103],[764,16,799,14],[765,16,800,14,"finalKeys"],[765,25,800,23],[765,26,800,24,"push"],[765,30,800,28],[765,31,800,29,"key"],[765,34,800,32],[765,37,800,35,"pluralSuffix"],[765,49,800,47],[765,50,800,48],[766,16,801,14],[766,20,801,18,"needsZeroSuffixLookup"],[766,41,801,39],[766,43,801,41],[767,18,802,16,"finalKeys"],[767,27,802,25],[767,28,802,26,"push"],[767,32,802,30],[767,33,802,31,"key"],[767,36,802,34],[767,39,802,37,"zeroSuffix"],[767,49,802,47],[767,50,802,48],[768,16,803,14],[769,14,804,12],[770,14,805,12],[770,18,805,16,"needsContextHandling"],[770,38,805,36],[770,40,805,38],[771,16,806,14],[771,22,806,20,"contextKey"],[771,32,806,30],[771,35,806,33],[771,38,806,36,"key"],[771,41,806,39],[771,44,806,42],[771,48,806,46],[771,49,806,47,"options"],[771,56,806,54],[771,57,806,55,"contextSeparator"],[771,73,806,71],[771,77,806,75],[771,80,806,78],[771,83,806,81,"opt"],[771,86,806,84],[771,87,806,85,"context"],[771,94,806,92],[771,96,806,94],[772,16,807,14,"finalKeys"],[772,25,807,23],[772,26,807,24,"push"],[772,30,807,28],[772,31,807,29,"contextKey"],[772,41,807,39],[772,42,807,40],[773,16,808,14],[773,20,808,18,"needsPluralHandling"],[773,39,808,37],[773,41,808,39],[774,18,809,16],[774,22,809,20,"opt"],[774,25,809,23],[774,26,809,24,"ordinal"],[774,33,809,31],[774,37,809,35,"pluralSuffix"],[774,49,809,47],[774,50,809,48,"indexOf"],[774,57,809,55],[774,58,809,56,"ordinalPrefix"],[774,71,809,69],[774,72,809,70],[774,77,809,75],[774,78,809,76],[774,80,809,78],[775,20,810,18,"finalKeys"],[775,29,810,27],[775,30,810,28,"push"],[775,34,810,32],[775,35,810,33,"contextKey"],[775,45,810,43],[775,48,810,46,"pluralSuffix"],[775,60,810,58],[775,61,810,59,"replace"],[775,68,810,66],[775,69,810,67,"ordinalPrefix"],[775,82,810,80],[775,84,810,82],[775,88,810,86],[775,89,810,87,"options"],[775,96,810,94],[775,97,810,95,"pluralSeparator"],[775,112,810,110],[775,113,810,111],[775,114,810,112],[776,18,811,16],[777,18,812,16,"finalKeys"],[777,27,812,25],[777,28,812,26,"push"],[777,32,812,30],[777,33,812,31,"contextKey"],[777,43,812,41],[777,46,812,44,"pluralSuffix"],[777,58,812,56],[777,59,812,57],[778,18,813,16],[778,22,813,20,"needsZeroSuffixLookup"],[778,43,813,41],[778,45,813,43],[779,20,814,18,"finalKeys"],[779,29,814,27],[779,30,814,28,"push"],[779,34,814,32],[779,35,814,33,"contextKey"],[779,45,814,43],[779,48,814,46,"zeroSuffix"],[779,58,814,56],[779,59,814,57],[780,18,815,16],[781,16,816,14],[782,14,817,12],[783,12,818,10],[784,12,819,10],[784,16,819,14,"possibleKey"],[784,27,819,25],[785,12,820,10],[785,19,820,17,"possibleKey"],[785,30,820,28],[785,33,820,31,"finalKeys"],[785,42,820,40],[785,43,820,41,"pop"],[785,46,820,44],[785,47,820,45],[785,48,820,46],[785,50,820,48],[786,14,821,12],[786,18,821,16],[786,19,821,17],[786,23,821,21],[786,24,821,22,"isValidLookup"],[786,37,821,35],[786,38,821,36,"found"],[786,43,821,41],[786,44,821,42],[786,46,821,44],[787,16,822,14,"exactUsedKey"],[787,28,822,26],[787,31,822,29,"possibleKey"],[787,42,822,40],[788,16,823,14,"found"],[788,21,823,19],[788,24,823,22],[788,28,823,26],[788,29,823,27,"getResource"],[788,40,823,38],[788,41,823,39,"code"],[788,45,823,43],[788,47,823,45,"ns"],[788,49,823,47],[788,51,823,49,"possibleKey"],[788,62,823,60],[788,64,823,62,"opt"],[788,67,823,65],[788,68,823,66],[789,14,824,12],[790,12,825,10],[791,10,826,8],[791,11,826,9],[791,12,826,10],[792,8,827,6],[792,9,827,7],[792,10,827,8],[793,6,828,4],[793,7,828,5],[793,8,828,6],[794,6,829,4],[794,13,829,11],[795,8,830,6,"res"],[795,11,830,9],[795,13,830,11,"found"],[795,18,830,16],[796,8,831,6,"usedKey"],[796,15,831,13],[797,8,832,6,"exactUsedKey"],[797,20,832,18],[798,8,833,6,"usedLng"],[798,15,833,13],[799,8,834,6,"usedNS"],[800,6,835,4],[800,7,835,5],[801,4,836,2],[802,4,837,2,"isValidLookup"],[802,17,837,15,"isValidLookup"],[802,18,837,16,"res"],[802,21,837,19],[802,23,837,21],[803,6,838,4],[803,13,838,11,"res"],[803,16,838,14],[803,21,838,19,"undefined"],[803,30,838,28],[803,34,838,32],[803,36,838,34],[803,37,838,35],[803,41,838,39],[803,42,838,40,"options"],[803,49,838,47],[803,50,838,48,"returnNull"],[803,60,838,58],[803,64,838,62,"res"],[803,67,838,65],[803,72,838,70],[803,76,838,74],[803,77,838,75],[803,81,838,79],[803,83,838,81],[803,84,838,82],[803,88,838,86],[803,89,838,87,"options"],[803,96,838,94],[803,97,838,95,"returnEmptyString"],[803,114,838,112],[803,118,838,116,"res"],[803,121,838,119],[803,126,838,124],[803,128,838,126],[803,129,838,127],[804,4,839,2],[805,4,840,2,"getResource"],[805,15,840,13,"getResource"],[805,16,840,14,"code"],[805,20,840,18],[805,22,840,20,"ns"],[805,24,840,22],[805,26,840,24,"key"],[805,29,840,27],[805,31,840,29,"options"],[805,38,840,36],[805,41,840,39],[805,42,840,40],[805,43,840,41],[805,45,840,43],[806,6,841,4],[806,10,841,8],[806,14,841,12],[806,15,841,13,"i18nFormat"],[806,25,841,23],[806,27,841,25,"getResource"],[806,38,841,36],[806,40,841,38],[806,47,841,45],[806,51,841,49],[806,52,841,50,"i18nFormat"],[806,62,841,60],[806,63,841,61,"getResource"],[806,74,841,72],[806,75,841,73,"code"],[806,79,841,77],[806,81,841,79,"ns"],[806,83,841,81],[806,85,841,83,"key"],[806,88,841,86],[806,90,841,88,"options"],[806,97,841,95],[806,98,841,96],[807,6,842,4],[807,13,842,11],[807,17,842,15],[807,18,842,16,"resourceStore"],[807,31,842,29],[807,32,842,30,"getResource"],[807,43,842,41],[807,44,842,42,"code"],[807,48,842,46],[807,50,842,48,"ns"],[807,52,842,50],[807,54,842,52,"key"],[807,57,842,55],[807,59,842,57,"options"],[807,66,842,64],[807,67,842,65],[808,4,843,2],[809,4,844,2,"getUsedParamsDetails"],[809,24,844,22,"getUsedParamsDetails"],[809,25,844,23,"options"],[809,32,844,30],[809,35,844,33],[809,36,844,34],[809,37,844,35],[809,39,844,37],[810,6,845,4],[810,12,845,10,"optionsKeys"],[810,23,845,21],[810,26,845,24],[810,27,845,25],[810,41,845,39],[810,43,845,41],[810,52,845,50],[810,54,845,52],[810,63,845,61],[810,65,845,63],[810,74,845,72],[810,76,845,74],[810,81,845,79],[810,83,845,81],[810,89,845,87],[810,91,845,89],[810,104,845,102],[810,106,845,104],[810,110,845,108],[810,112,845,110],[810,126,845,124],[810,128,845,126],[810,141,845,139],[810,143,845,141],[810,158,845,156],[810,160,845,158],[810,175,845,173],[810,177,845,175],[810,189,845,187],[810,191,845,189],[810,204,845,202],[810,206,845,204],[810,221,845,219],[810,222,845,220],[811,6,846,4],[811,12,846,10,"useOptionsReplaceForData"],[811,36,846,34],[811,39,846,37,"options"],[811,46,846,44],[811,47,846,45,"replace"],[811,54,846,52],[811,58,846,56],[811,59,846,57,"isString"],[811,67,846,65],[811,68,846,66,"options"],[811,75,846,73],[811,76,846,74,"replace"],[811,83,846,81],[811,84,846,82],[812,6,847,4],[812,10,847,8,"data"],[812,14,847,12],[812,17,847,15,"useOptionsReplaceForData"],[812,41,847,39],[812,44,847,42,"options"],[812,51,847,49],[812,52,847,50,"replace"],[812,59,847,57],[812,62,847,60,"options"],[812,69,847,67],[813,6,848,4],[813,10,848,8,"useOptionsReplaceForData"],[813,34,848,32],[813,38,848,36],[813,45,848,43,"options"],[813,52,848,50],[813,53,848,51,"count"],[813,58,848,56],[813,63,848,61],[813,74,848,72],[813,76,848,74],[814,8,849,6,"data"],[814,12,849,10],[814,13,849,11,"count"],[814,18,849,16],[814,21,849,19,"options"],[814,28,849,26],[814,29,849,27,"count"],[814,34,849,32],[815,6,850,4],[816,6,851,4],[816,10,851,8],[816,14,851,12],[816,15,851,13,"options"],[816,22,851,20],[816,23,851,21,"interpolation"],[816,36,851,34],[816,37,851,35,"defaultVariables"],[816,53,851,51],[816,55,851,53],[817,8,852,6,"data"],[817,12,852,10],[817,15,852,10,"Object"],[817,21,852,10],[817,22,852,10,"assign"],[817,28,852,10],[817,33,853,11],[817,37,853,15],[817,38,853,16,"options"],[817,45,853,23],[817,46,853,24,"interpolation"],[817,59,853,37],[817,60,853,38,"defaultVariables"],[817,76,853,54],[817,78,854,11,"data"],[817,82,854,15],[817,83,855,7],[818,6,856,4],[819,6,857,4],[819,10,857,8],[819,11,857,9,"useOptionsReplaceForData"],[819,35,857,33],[819,37,857,35],[820,8,858,6,"data"],[820,12,858,10],[820,15,858,10,"Object"],[820,21,858,10],[820,22,858,10,"assign"],[820,28,858,10],[820,33,859,11,"data"],[820,37,859,15],[820,38,860,7],[821,8,861,6],[821,13,861,11],[821,19,861,17,"key"],[821,22,861,20],[821,26,861,24,"optionsKeys"],[821,37,861,35],[821,39,861,37],[822,10,862,8],[822,17,862,15,"data"],[822,21,862,19],[822,22,862,20,"key"],[822,25,862,23],[822,26,862,24],[823,8,863,6],[824,6,864,4],[825,6,865,4],[825,13,865,11,"data"],[825,17,865,15],[826,4,866,2],[827,4,867,2],[827,11,867,9,"hasDefaultValue"],[827,26,867,24,"hasDefaultValue"],[827,27,867,25,"options"],[827,34,867,32],[827,36,867,34],[828,6,868,4],[828,12,868,10,"prefix"],[828,18,868,16],[828,21,868,19],[828,35,868,33],[829,6,869,4],[829,11,869,9],[829,17,869,15,"option"],[829,23,869,21],[829,27,869,25,"options"],[829,34,869,32],[829,36,869,34],[830,8,870,6],[830,12,870,10,"Object"],[830,18,870,16],[830,19,870,17,"prototype"],[830,28,870,26],[830,29,870,27,"hasOwnProperty"],[830,43,870,41],[830,44,870,42,"call"],[830,48,870,46],[830,49,870,47,"options"],[830,56,870,54],[830,58,870,56,"option"],[830,64,870,62],[830,65,870,63],[830,69,870,67,"prefix"],[830,75,870,73],[830,80,870,78,"option"],[830,86,870,84],[830,87,870,85,"substring"],[830,96,870,94],[830,97,870,95],[830,98,870,96],[830,100,870,98,"prefix"],[830,106,870,104],[830,107,870,105,"length"],[830,113,870,111],[830,114,870,112],[830,118,870,116,"undefined"],[830,127,870,125],[830,132,870,130,"options"],[830,139,870,137],[830,140,870,138,"option"],[830,146,870,144],[830,147,870,145],[830,149,870,147],[831,10,871,8],[831,17,871,15],[831,21,871,19],[832,8,872,6],[833,6,873,4],[834,6,874,4],[834,13,874,11],[834,18,874,16],[835,4,875,2],[836,2,876,0],[837,2,878,0],[837,8,878,6,"LanguageUtil"],[837,20,878,18],[837,21,878,19],[838,4,879,2,"constructor"],[838,15,879,13,"constructor"],[838,16,879,14,"options"],[838,23,879,21],[838,25,879,23],[839,6,880,4],[839,10,880,8],[839,11,880,9,"options"],[839,18,880,16],[839,21,880,19,"options"],[839,28,880,26],[840,6,881,4],[840,10,881,8],[840,11,881,9,"supportedLngs"],[840,24,881,22],[840,27,881,25],[840,31,881,29],[840,32,881,30,"options"],[840,39,881,37],[840,40,881,38,"supportedLngs"],[840,53,881,51],[840,57,881,55],[840,62,881,60],[841,6,882,4],[841,10,882,8],[841,11,882,9,"logger"],[841,17,882,15],[841,20,882,18,"baseLogger"],[841,30,882,28],[841,31,882,29,"create"],[841,37,882,35],[841,38,882,36],[841,53,882,51],[841,54,882,52],[842,4,883,2],[843,4,884,2,"getScriptPartFromCode"],[843,25,884,23,"getScriptPartFromCode"],[843,26,884,24,"code"],[843,30,884,28],[843,32,884,30],[844,6,885,4,"code"],[844,10,885,8],[844,13,885,11,"getCleanedCode"],[844,27,885,25],[844,28,885,26,"code"],[844,32,885,30],[844,33,885,31],[845,6,886,4],[845,10,886,8],[845,11,886,9,"code"],[845,15,886,13],[845,19,886,17,"code"],[845,23,886,21],[845,24,886,22,"indexOf"],[845,31,886,29],[845,32,886,30],[845,35,886,33],[845,36,886,34],[845,39,886,37],[845,40,886,38],[845,42,886,40],[845,49,886,47],[845,53,886,51],[846,6,887,4],[846,12,887,10,"p"],[846,13,887,11],[846,16,887,14,"code"],[846,20,887,18],[846,21,887,19,"split"],[846,26,887,24],[846,27,887,25],[846,30,887,28],[846,31,887,29],[847,6,888,4],[847,10,888,8,"p"],[847,11,888,9],[847,12,888,10,"length"],[847,18,888,16],[847,23,888,21],[847,24,888,22],[847,26,888,24],[847,33,888,31],[847,37,888,35],[848,6,889,4,"p"],[848,7,889,5],[848,8,889,6,"pop"],[848,11,889,9],[848,12,889,10],[848,13,889,11],[849,6,890,4],[849,10,890,8,"p"],[849,11,890,9],[849,12,890,10,"p"],[849,13,890,11],[849,14,890,12,"length"],[849,20,890,18],[849,23,890,21],[849,24,890,22],[849,25,890,23],[849,26,890,24,"toLowerCase"],[849,37,890,35],[849,38,890,36],[849,39,890,37],[849,44,890,42],[849,47,890,45],[849,49,890,47],[849,56,890,54],[849,60,890,58],[850,6,891,4],[850,13,891,11],[850,17,891,15],[850,18,891,16,"formatLanguageCode"],[850,36,891,34],[850,37,891,35,"p"],[850,38,891,36],[850,39,891,37,"join"],[850,43,891,41],[850,44,891,42],[850,47,891,45],[850,48,891,46],[850,49,891,47],[851,4,892,2],[852,4,893,2,"getLanguagePartFromCode"],[852,27,893,25,"getLanguagePartFromCode"],[852,28,893,26,"code"],[852,32,893,30],[852,34,893,32],[853,6,894,4,"code"],[853,10,894,8],[853,13,894,11,"getCleanedCode"],[853,27,894,25],[853,28,894,26,"code"],[853,32,894,30],[853,33,894,31],[854,6,895,4],[854,10,895,8],[854,11,895,9,"code"],[854,15,895,13],[854,19,895,17,"code"],[854,23,895,21],[854,24,895,22,"indexOf"],[854,31,895,29],[854,32,895,30],[854,35,895,33],[854,36,895,34],[854,39,895,37],[854,40,895,38],[854,42,895,40],[854,49,895,47,"code"],[854,53,895,51],[855,6,896,4],[855,12,896,10,"p"],[855,13,896,11],[855,16,896,14,"code"],[855,20,896,18],[855,21,896,19,"split"],[855,26,896,24],[855,27,896,25],[855,30,896,28],[855,31,896,29],[856,6,897,4],[856,13,897,11],[856,17,897,15],[856,18,897,16,"formatLanguageCode"],[856,36,897,34],[856,37,897,35,"p"],[856,38,897,36],[856,39,897,37],[856,40,897,38],[856,41,897,39],[856,42,897,40],[857,4,898,2],[858,4,899,2,"formatLanguageCode"],[858,22,899,20,"formatLanguageCode"],[858,23,899,21,"code"],[858,27,899,25],[858,29,899,27],[859,6,900,4],[859,10,900,8,"isString"],[859,18,900,16],[859,19,900,17,"code"],[859,23,900,21],[859,24,900,22],[859,28,900,26,"code"],[859,32,900,30],[859,33,900,31,"indexOf"],[859,40,900,38],[859,41,900,39],[859,44,900,42],[859,45,900,43],[859,48,900,46],[859,49,900,47],[859,50,900,48],[859,52,900,50],[860,8,901,6],[860,12,901,10,"formattedCode"],[860,25,901,23],[861,8,902,6],[861,12,902,10],[862,10,903,8,"formattedCode"],[862,23,903,21],[862,26,903,24,"Intl"],[862,30,903,28],[862,31,903,29,"getCanonicalLocales"],[862,50,903,48],[862,51,903,49,"code"],[862,55,903,53],[862,56,903,54],[862,57,903,55],[862,58,903,56],[862,59,903,57],[863,8,904,6],[863,9,904,7],[863,10,904,8],[863,17,904,15,"e"],[863,18,904,16],[863,20,904,18],[863,21,904,19],[864,8,905,6],[864,12,905,10,"formattedCode"],[864,25,905,23],[864,29,905,27],[864,33,905,31],[864,34,905,32,"options"],[864,41,905,39],[864,42,905,40,"lowerCaseLng"],[864,54,905,52],[864,56,905,54],[865,10,906,8,"formattedCode"],[865,23,906,21],[865,26,906,24,"formattedCode"],[865,39,906,37],[865,40,906,38,"toLowerCase"],[865,51,906,49],[865,52,906,50],[865,53,906,51],[866,8,907,6],[867,8,908,6],[867,12,908,10,"formattedCode"],[867,25,908,23],[867,27,908,25],[867,34,908,32,"formattedCode"],[867,47,908,45],[868,8,909,6],[868,12,909,10],[868,16,909,14],[868,17,909,15,"options"],[868,24,909,22],[868,25,909,23,"lowerCaseLng"],[868,37,909,35],[868,39,909,37],[869,10,910,8],[869,17,910,15,"code"],[869,21,910,19],[869,22,910,20,"toLowerCase"],[869,33,910,31],[869,34,910,32],[869,35,910,33],[870,8,911,6],[871,8,912,6],[871,15,912,13,"code"],[871,19,912,17],[872,6,913,4],[873,6,914,4],[873,13,914,11],[873,17,914,15],[873,18,914,16,"options"],[873,25,914,23],[873,26,914,24,"cleanCode"],[873,35,914,33],[873,39,914,37],[873,43,914,41],[873,44,914,42,"options"],[873,51,914,49],[873,52,914,50,"lowerCaseLng"],[873,64,914,62],[873,67,914,65,"code"],[873,71,914,69],[873,72,914,70,"toLowerCase"],[873,83,914,81],[873,84,914,82],[873,85,914,83],[873,88,914,86,"code"],[873,92,914,90],[874,4,915,2],[875,4,916,2,"isSupportedCode"],[875,19,916,17,"isSupportedCode"],[875,20,916,18,"code"],[875,24,916,22],[875,26,916,24],[876,6,917,4],[876,10,917,8],[876,14,917,12],[876,15,917,13,"options"],[876,22,917,20],[876,23,917,21,"load"],[876,27,917,25],[876,32,917,30],[876,46,917,44],[876,50,917,48],[876,54,917,52],[876,55,917,53,"options"],[876,62,917,60],[876,63,917,61,"nonExplicitSupportedLngs"],[876,87,917,85],[876,89,917,87],[877,8,918,6,"code"],[877,12,918,10],[877,15,918,13],[877,19,918,17],[877,20,918,18,"getLanguagePartFromCode"],[877,43,918,41],[877,44,918,42,"code"],[877,48,918,46],[877,49,918,47],[878,6,919,4],[879,6,920,4],[879,13,920,11],[879,14,920,12],[879,18,920,16],[879,19,920,17,"supportedLngs"],[879,32,920,30],[879,36,920,34],[879,37,920,35],[879,41,920,39],[879,42,920,40,"supportedLngs"],[879,55,920,53],[879,56,920,54,"length"],[879,62,920,60],[879,66,920,64],[879,70,920,68],[879,71,920,69,"supportedLngs"],[879,84,920,82],[879,85,920,83,"indexOf"],[879,92,920,90],[879,93,920,91,"code"],[879,97,920,95],[879,98,920,96],[879,101,920,99],[879,102,920,100],[879,103,920,101],[880,4,921,2],[881,4,922,2,"getBestMatchFromCodes"],[881,25,922,23,"getBestMatchFromCodes"],[881,26,922,24,"codes"],[881,31,922,29],[881,33,922,31],[882,6,923,4],[882,10,923,8],[882,11,923,9,"codes"],[882,16,923,14],[882,18,923,16],[882,25,923,23],[882,29,923,27],[883,6,924,4],[883,10,924,8,"found"],[883,15,924,13],[884,6,925,4,"codes"],[884,11,925,9],[884,12,925,10,"forEach"],[884,19,925,17],[884,20,925,18,"code"],[884,24,925,22],[884,28,925,26],[885,8,926,6],[885,12,926,10,"found"],[885,17,926,15],[885,19,926,17],[886,8,927,6],[886,14,927,12,"cleanedLng"],[886,24,927,22],[886,27,927,25],[886,31,927,29],[886,32,927,30,"formatLanguageCode"],[886,50,927,48],[886,51,927,49,"code"],[886,55,927,53],[886,56,927,54],[887,8,928,6],[887,12,928,10],[887,13,928,11],[887,17,928,15],[887,18,928,16,"options"],[887,25,928,23],[887,26,928,24,"supportedLngs"],[887,39,928,37],[887,43,928,41],[887,47,928,45],[887,48,928,46,"isSupportedCode"],[887,63,928,61],[887,64,928,62,"cleanedLng"],[887,74,928,72],[887,75,928,73],[887,77,928,75,"found"],[887,82,928,80],[887,85,928,83,"cleanedLng"],[887,95,928,93],[888,6,929,4],[888,7,929,5],[888,8,929,6],[889,6,930,4],[889,10,930,8],[889,11,930,9,"found"],[889,16,930,14],[889,20,930,18],[889,24,930,22],[889,25,930,23,"options"],[889,32,930,30],[889,33,930,31,"supportedLngs"],[889,46,930,44],[889,48,930,46],[890,8,931,6,"codes"],[890,13,931,11],[890,14,931,12,"forEach"],[890,21,931,19],[890,22,931,20,"code"],[890,26,931,24],[890,30,931,28],[891,10,932,8],[891,14,932,12,"found"],[891,19,932,17],[891,21,932,19],[892,10,933,8],[892,16,933,14,"lngScOnly"],[892,25,933,23],[892,28,933,26],[892,32,933,30],[892,33,933,31,"getScriptPartFromCode"],[892,54,933,52],[892,55,933,53,"code"],[892,59,933,57],[892,60,933,58],[893,10,934,8],[893,14,934,12],[893,18,934,16],[893,19,934,17,"isSupportedCode"],[893,34,934,32],[893,35,934,33,"lngScOnly"],[893,44,934,42],[893,45,934,43],[893,47,934,45],[893,54,934,52,"found"],[893,59,934,57],[893,62,934,60,"lngScOnly"],[893,71,934,69],[894,10,935,8],[894,16,935,14,"lngOnly"],[894,23,935,21],[894,26,935,24],[894,30,935,28],[894,31,935,29,"getLanguagePartFromCode"],[894,54,935,52],[894,55,935,53,"code"],[894,59,935,57],[894,60,935,58],[895,10,936,8],[895,14,936,12],[895,18,936,16],[895,19,936,17,"isSupportedCode"],[895,34,936,32],[895,35,936,33,"lngOnly"],[895,42,936,40],[895,43,936,41],[895,45,936,43],[895,52,936,50,"found"],[895,57,936,55],[895,60,936,58,"lngOnly"],[895,67,936,65],[896,10,937,8,"found"],[896,15,937,13],[896,18,937,16],[896,22,937,20],[896,23,937,21,"options"],[896,30,937,28],[896,31,937,29,"supportedLngs"],[896,44,937,42],[896,45,937,43,"find"],[896,49,937,47],[896,50,937,48,"supportedLng"],[896,62,937,60],[896,66,937,64],[897,12,938,10],[897,16,938,14,"supportedLng"],[897,28,938,26],[897,33,938,31,"lngOnly"],[897,40,938,38],[897,42,938,40],[897,49,938,47,"supportedLng"],[897,61,938,59],[898,12,939,10],[898,16,939,14,"supportedLng"],[898,28,939,26],[898,29,939,27,"indexOf"],[898,36,939,34],[898,37,939,35],[898,40,939,38],[898,41,939,39],[898,44,939,42],[898,45,939,43],[898,49,939,47,"lngOnly"],[898,56,939,54],[898,57,939,55,"indexOf"],[898,64,939,62],[898,65,939,63],[898,68,939,66],[898,69,939,67],[898,72,939,70],[898,73,939,71],[898,75,939,73],[899,12,940,10],[899,16,940,14,"supportedLng"],[899,28,940,26],[899,29,940,27,"indexOf"],[899,36,940,34],[899,37,940,35],[899,40,940,38],[899,41,940,39],[899,44,940,42],[899,45,940,43],[899,49,940,47,"lngOnly"],[899,56,940,54],[899,57,940,55,"indexOf"],[899,64,940,62],[899,65,940,63],[899,68,940,66],[899,69,940,67],[899,72,940,70],[899,73,940,71],[899,77,940,75,"supportedLng"],[899,89,940,87],[899,90,940,88,"substring"],[899,99,940,97],[899,100,940,98],[899,101,940,99],[899,103,940,101,"supportedLng"],[899,115,940,113],[899,116,940,114,"indexOf"],[899,123,940,121],[899,124,940,122],[899,127,940,125],[899,128,940,126],[899,129,940,127],[899,134,940,132,"lngOnly"],[899,141,940,139],[899,143,940,141],[899,150,940,148,"supportedLng"],[899,162,940,160],[900,12,941,10],[900,16,941,14,"supportedLng"],[900,28,941,26],[900,29,941,27,"indexOf"],[900,36,941,34],[900,37,941,35,"lngOnly"],[900,44,941,42],[900,45,941,43],[900,50,941,48],[900,51,941,49],[900,55,941,53,"lngOnly"],[900,62,941,60],[900,63,941,61,"length"],[900,69,941,67],[900,72,941,70],[900,73,941,71],[900,75,941,73],[900,82,941,80,"supportedLng"],[900,94,941,92],[901,10,942,8],[901,11,942,9],[901,12,942,10],[902,8,943,6],[902,9,943,7],[902,10,943,8],[903,6,944,4],[904,6,945,4],[904,10,945,8],[904,11,945,9,"found"],[904,16,945,14],[904,18,945,16,"found"],[904,23,945,21],[904,26,945,24],[904,30,945,28],[904,31,945,29,"getFallbackCodes"],[904,47,945,45],[904,48,945,46],[904,52,945,50],[904,53,945,51,"options"],[904,60,945,58],[904,61,945,59,"fallbackLng"],[904,72,945,70],[904,73,945,71],[904,74,945,72],[904,75,945,73],[904,76,945,74],[905,6,946,4],[905,13,946,11,"found"],[905,18,946,16],[906,4,947,2],[907,4,948,2,"getFallbackCodes"],[907,20,948,18,"getFallbackCodes"],[907,21,948,19,"fallbacks"],[907,30,948,28],[907,32,948,30,"code"],[907,36,948,34],[907,38,948,36],[908,6,949,4],[908,10,949,8],[908,11,949,9,"fallbacks"],[908,20,949,18],[908,22,949,20],[908,29,949,27],[908,31,949,29],[909,6,950,4],[909,10,950,8],[909,17,950,15,"fallbacks"],[909,26,950,24],[909,31,950,29],[909,41,950,39],[909,43,950,41,"fallbacks"],[909,52,950,50],[909,55,950,53,"fallbacks"],[909,64,950,62],[909,65,950,63,"code"],[909,69,950,67],[909,70,950,68],[910,6,951,4],[910,10,951,8,"isString"],[910,18,951,16],[910,19,951,17,"fallbacks"],[910,28,951,26],[910,29,951,27],[910,31,951,29,"fallbacks"],[910,40,951,38],[910,43,951,41],[910,44,951,42,"fallbacks"],[910,53,951,51],[910,54,951,52],[911,6,952,4],[911,10,952,8,"Array"],[911,15,952,13],[911,16,952,14,"isArray"],[911,23,952,21],[911,24,952,22,"fallbacks"],[911,33,952,31],[911,34,952,32],[911,36,952,34],[911,43,952,41,"fallbacks"],[911,52,952,50],[912,6,953,4],[912,10,953,8],[912,11,953,9,"code"],[912,15,953,13],[912,17,953,15],[912,24,953,22,"fallbacks"],[912,33,953,31],[912,34,953,32,"default"],[912,41,953,39],[912,45,953,43],[912,47,953,45],[913,6,954,4],[913,10,954,8,"found"],[913,15,954,13],[913,18,954,16,"fallbacks"],[913,27,954,25],[913,28,954,26,"code"],[913,32,954,30],[913,33,954,31],[914,6,955,4],[914,10,955,8],[914,11,955,9,"found"],[914,16,955,14],[914,18,955,16,"found"],[914,23,955,21],[914,26,955,24,"fallbacks"],[914,35,955,33],[914,36,955,34],[914,40,955,38],[914,41,955,39,"getScriptPartFromCode"],[914,62,955,60],[914,63,955,61,"code"],[914,67,955,65],[914,68,955,66],[914,69,955,67],[915,6,956,4],[915,10,956,8],[915,11,956,9,"found"],[915,16,956,14],[915,18,956,16,"found"],[915,23,956,21],[915,26,956,24,"fallbacks"],[915,35,956,33],[915,36,956,34],[915,40,956,38],[915,41,956,39,"formatLanguageCode"],[915,59,956,57],[915,60,956,58,"code"],[915,64,956,62],[915,65,956,63],[915,66,956,64],[916,6,957,4],[916,10,957,8],[916,11,957,9,"found"],[916,16,957,14],[916,18,957,16,"found"],[916,23,957,21],[916,26,957,24,"fallbacks"],[916,35,957,33],[916,36,957,34],[916,40,957,38],[916,41,957,39,"getLanguagePartFromCode"],[916,64,957,62],[916,65,957,63,"code"],[916,69,957,67],[916,70,957,68],[916,71,957,69],[917,6,958,4],[917,10,958,8],[917,11,958,9,"found"],[917,16,958,14],[917,18,958,16,"found"],[917,23,958,21],[917,26,958,24,"fallbacks"],[917,35,958,33],[917,36,958,34,"default"],[917,43,958,41],[918,6,959,4],[918,13,959,11,"found"],[918,18,959,16],[918,22,959,20],[918,24,959,22],[919,4,960,2],[920,4,961,2,"toResolveHierarchy"],[920,22,961,20,"toResolveHierarchy"],[920,23,961,21,"code"],[920,27,961,25],[920,29,961,27,"fallbackCode"],[920,41,961,39],[920,43,961,41],[921,6,962,4],[921,12,962,10,"fallbackCodes"],[921,25,962,23],[921,28,962,26],[921,32,962,30],[921,33,962,31,"getFallbackCodes"],[921,49,962,47],[921,50,962,48],[921,51,962,49,"fallbackCode"],[921,63,962,61],[921,68,962,66],[921,73,962,71],[921,76,962,74],[921,78,962,76],[921,81,962,79,"fallbackCode"],[921,93,962,91],[921,98,962,96],[921,102,962,100],[921,103,962,101,"options"],[921,110,962,108],[921,111,962,109,"fallbackLng"],[921,122,962,120],[921,126,962,124],[921,128,962,126],[921,130,962,128,"code"],[921,134,962,132],[921,135,962,133],[922,6,963,4],[922,12,963,10,"codes"],[922,17,963,15],[922,20,963,18],[922,22,963,20],[923,6,964,4],[923,12,964,10,"addCode"],[923,19,964,17],[923,22,964,20,"c"],[923,23,964,21],[923,27,964,25],[924,8,965,6],[924,12,965,10],[924,13,965,11,"c"],[924,14,965,12],[924,16,965,14],[925,8,966,6],[925,12,966,10],[925,16,966,14],[925,17,966,15,"isSupportedCode"],[925,32,966,30],[925,33,966,31,"c"],[925,34,966,32],[925,35,966,33],[925,37,966,35],[926,10,967,8,"codes"],[926,15,967,13],[926,16,967,14,"push"],[926,20,967,18],[926,21,967,19,"c"],[926,22,967,20],[926,23,967,21],[927,8,968,6],[927,9,968,7],[927,15,968,13],[928,10,969,8],[928,14,969,12],[928,15,969,13,"logger"],[928,21,969,19],[928,22,969,20,"warn"],[928,26,969,24],[928,27,969,25],[928,82,969,80,"c"],[928,83,969,81],[928,85,969,83],[928,86,969,84],[929,8,970,6],[930,6,971,4],[930,7,971,5],[931,6,972,4],[931,10,972,8,"isString"],[931,18,972,16],[931,19,972,17,"code"],[931,23,972,21],[931,24,972,22],[931,29,972,27,"code"],[931,33,972,31],[931,34,972,32,"indexOf"],[931,41,972,39],[931,42,972,40],[931,45,972,43],[931,46,972,44],[931,49,972,47],[931,50,972,48],[931,51,972,49],[931,55,972,53,"code"],[931,59,972,57],[931,60,972,58,"indexOf"],[931,67,972,65],[931,68,972,66],[931,71,972,69],[931,72,972,70],[931,75,972,73],[931,76,972,74],[931,77,972,75],[931,78,972,76],[931,80,972,78],[932,8,973,6],[932,12,973,10],[932,16,973,14],[932,17,973,15,"options"],[932,24,973,22],[932,25,973,23,"load"],[932,29,973,27],[932,34,973,32],[932,48,973,46],[932,50,973,48,"addCode"],[932,57,973,55],[932,58,973,56],[932,62,973,60],[932,63,973,61,"formatLanguageCode"],[932,81,973,79],[932,82,973,80,"code"],[932,86,973,84],[932,87,973,85],[932,88,973,86],[933,8,974,6],[933,12,974,10],[933,16,974,14],[933,17,974,15,"options"],[933,24,974,22],[933,25,974,23,"load"],[933,29,974,27],[933,34,974,32],[933,48,974,46],[933,52,974,50],[933,56,974,54],[933,57,974,55,"options"],[933,64,974,62],[933,65,974,63,"load"],[933,69,974,67],[933,74,974,72],[933,87,974,85],[933,89,974,87,"addCode"],[933,96,974,94],[933,97,974,95],[933,101,974,99],[933,102,974,100,"getScriptPartFromCode"],[933,123,974,121],[933,124,974,122,"code"],[933,128,974,126],[933,129,974,127],[933,130,974,128],[934,8,975,6],[934,12,975,10],[934,16,975,14],[934,17,975,15,"options"],[934,24,975,22],[934,25,975,23,"load"],[934,29,975,27],[934,34,975,32],[934,47,975,45],[934,49,975,47,"addCode"],[934,56,975,54],[934,57,975,55],[934,61,975,59],[934,62,975,60,"getLanguagePartFromCode"],[934,85,975,83],[934,86,975,84,"code"],[934,90,975,88],[934,91,975,89],[934,92,975,90],[935,6,976,4],[935,7,976,5],[935,13,976,11],[935,17,976,15,"isString"],[935,25,976,23],[935,26,976,24,"code"],[935,30,976,28],[935,31,976,29],[935,33,976,31],[936,8,977,6,"addCode"],[936,15,977,13],[936,16,977,14],[936,20,977,18],[936,21,977,19,"formatLanguageCode"],[936,39,977,37],[936,40,977,38,"code"],[936,44,977,42],[936,45,977,43],[936,46,977,44],[937,6,978,4],[938,6,979,4,"fallbackCodes"],[938,19,979,17],[938,20,979,18,"forEach"],[938,27,979,25],[938,28,979,26,"fc"],[938,30,979,28],[938,34,979,32],[939,8,980,6],[939,12,980,10,"codes"],[939,17,980,15],[939,18,980,16,"indexOf"],[939,25,980,23],[939,26,980,24,"fc"],[939,28,980,26],[939,29,980,27],[939,32,980,30],[939,33,980,31],[939,35,980,33,"addCode"],[939,42,980,40],[939,43,980,41],[939,47,980,45],[939,48,980,46,"formatLanguageCode"],[939,66,980,64],[939,67,980,65,"fc"],[939,69,980,67],[939,70,980,68],[939,71,980,69],[940,6,981,4],[940,7,981,5],[940,8,981,6],[941,6,982,4],[941,13,982,11,"codes"],[941,18,982,16],[942,4,983,2],[943,2,984,0],[944,2,986,0],[944,8,986,6,"suffixesOrder"],[944,21,986,19],[944,24,986,22],[945,4,987,2,"zero"],[945,8,987,6],[945,10,987,8],[945,11,987,9],[946,4,988,2,"one"],[946,7,988,5],[946,9,988,7],[946,10,988,8],[947,4,989,2,"two"],[947,7,989,5],[947,9,989,7],[947,10,989,8],[948,4,990,2,"few"],[948,7,990,5],[948,9,990,7],[948,10,990,8],[949,4,991,2,"many"],[949,8,991,6],[949,10,991,8],[949,11,991,9],[950,4,992,2,"other"],[950,9,992,7],[950,11,992,9],[951,2,993,0],[951,3,993,1],[952,2,994,0],[952,8,994,6,"dummyRule"],[952,17,994,15],[952,20,994,18],[953,4,995,2,"select"],[953,10,995,8],[953,12,995,10,"count"],[953,17,995,15],[953,21,995,19,"count"],[953,26,995,24],[953,31,995,29],[953,32,995,30],[953,35,995,33],[953,40,995,38],[953,43,995,41],[953,50,995,48],[954,4,996,2,"resolvedOptions"],[954,19,996,17],[954,21,996,19,"resolvedOptions"],[954,22,996,19],[954,28,996,26],[955,6,997,4,"pluralCategories"],[955,22,997,20],[955,24,997,22],[955,25,997,23],[955,30,997,28],[955,32,997,30],[955,39,997,37],[956,4,998,2],[956,5,998,3],[957,2,999,0],[957,3,999,1],[958,2,1000,0],[958,8,1000,6,"PluralResolver"],[958,22,1000,20],[958,23,1000,21],[959,4,1001,2,"constructor"],[959,15,1001,13,"constructor"],[959,16,1001,14,"languageUtils"],[959,29,1001,27],[959,31,1001,29,"options"],[959,38,1001,36],[959,41,1001,39],[959,42,1001,40],[959,43,1001,41],[959,45,1001,43],[960,6,1002,4],[960,10,1002,8],[960,11,1002,9,"languageUtils"],[960,24,1002,22],[960,27,1002,25,"languageUtils"],[960,40,1002,38],[961,6,1003,4],[961,10,1003,8],[961,11,1003,9,"options"],[961,18,1003,16],[961,21,1003,19,"options"],[961,28,1003,26],[962,6,1004,4],[962,10,1004,8],[962,11,1004,9,"logger"],[962,17,1004,15],[962,20,1004,18,"baseLogger"],[962,30,1004,28],[962,31,1004,29,"create"],[962,37,1004,35],[962,38,1004,36],[962,54,1004,52],[962,55,1004,53],[963,6,1005,4],[963,10,1005,8],[963,11,1005,9,"pluralRulesCache"],[963,27,1005,25],[963,30,1005,28],[963,31,1005,29],[963,32,1005,30],[964,4,1006,2],[965,4,1007,2,"addRule"],[965,11,1007,9,"addRule"],[965,12,1007,10,"lng"],[965,15,1007,13],[965,17,1007,15,"obj"],[965,20,1007,18],[965,22,1007,20],[966,6,1008,4],[966,10,1008,8],[966,11,1008,9,"rules"],[966,16,1008,14],[966,17,1008,15,"lng"],[966,20,1008,18],[966,21,1008,19],[966,24,1008,22,"obj"],[966,27,1008,25],[967,4,1009,2],[968,4,1010,2,"clearCache"],[968,14,1010,12,"clearCache"],[968,15,1010,12],[968,17,1010,15],[969,6,1011,4],[969,10,1011,8],[969,11,1011,9,"pluralRulesCache"],[969,27,1011,25],[969,30,1011,28],[969,31,1011,29],[969,32,1011,30],[970,4,1012,2],[971,4,1013,2,"getRule"],[971,11,1013,9,"getRule"],[971,12,1013,10,"code"],[971,16,1013,14],[971,18,1013,16,"options"],[971,25,1013,23],[971,28,1013,26],[971,29,1013,27],[971,30,1013,28],[971,32,1013,30],[972,6,1014,4],[972,12,1014,10,"cleanedCode"],[972,23,1014,21],[972,26,1014,24,"getCleanedCode"],[972,40,1014,38],[972,41,1014,39,"code"],[972,45,1014,43],[972,50,1014,48],[972,55,1014,53],[972,58,1014,56],[972,62,1014,60],[972,65,1014,63,"code"],[972,69,1014,67],[972,70,1014,68],[973,6,1015,4],[973,12,1015,10,"type"],[973,16,1015,14],[973,19,1015,17,"options"],[973,26,1015,24],[973,27,1015,25,"ordinal"],[973,34,1015,32],[973,37,1015,35],[973,46,1015,44],[973,49,1015,47],[973,59,1015,57],[974,6,1016,4],[974,12,1016,10,"cacheKey"],[974,20,1016,18],[974,23,1016,21,"JSON"],[974,27,1016,25],[974,28,1016,26,"stringify"],[974,37,1016,35],[974,38,1016,36],[975,8,1017,6,"cleanedCode"],[975,19,1017,17],[976,8,1018,6,"type"],[977,6,1019,4],[977,7,1019,5],[977,8,1019,6],[978,6,1020,4],[978,10,1020,8,"cacheKey"],[978,18,1020,16],[978,22,1020,20],[978,26,1020,24],[978,27,1020,25,"pluralRulesCache"],[978,43,1020,41],[978,45,1020,43],[979,8,1021,6],[979,15,1021,13],[979,19,1021,17],[979,20,1021,18,"pluralRulesCache"],[979,36,1021,34],[979,37,1021,35,"cacheKey"],[979,45,1021,43],[979,46,1021,44],[980,6,1022,4],[981,6,1023,4],[981,10,1023,8,"rule"],[981,14,1023,12],[982,6,1024,4],[982,10,1024,8],[983,8,1025,6,"rule"],[983,12,1025,10],[983,15,1025,13],[983,19,1025,17,"Intl"],[983,23,1025,21],[983,24,1025,22,"PluralRules"],[983,35,1025,33],[983,36,1025,34,"cleanedCode"],[983,47,1025,45],[983,49,1025,47],[984,10,1026,8,"type"],[985,8,1027,6],[985,9,1027,7],[985,10,1027,8],[986,6,1028,4],[986,7,1028,5],[986,8,1028,6],[986,15,1028,13,"err"],[986,18,1028,16],[986,20,1028,18],[987,8,1029,6],[987,12,1029,10],[987,13,1029,11,"Intl"],[987,17,1029,15],[987,19,1029,17],[988,10,1030,8],[988,14,1030,12],[988,15,1030,13,"logger"],[988,21,1030,19],[988,22,1030,20,"error"],[988,27,1030,25],[988,28,1030,26],[988,75,1030,73],[988,76,1030,74],[989,10,1031,8],[989,17,1031,15,"dummyRule"],[989,26,1031,24],[990,8,1032,6],[991,8,1033,6],[991,12,1033,10],[991,13,1033,11,"code"],[991,17,1033,15],[991,18,1033,16,"match"],[991,23,1033,21],[991,24,1033,22],[991,29,1033,27],[991,30,1033,28],[991,32,1033,30],[991,39,1033,37,"dummyRule"],[991,48,1033,46],[992,8,1034,6],[992,14,1034,12,"lngPart"],[992,21,1034,19],[992,24,1034,22],[992,28,1034,26],[992,29,1034,27,"languageUtils"],[992,42,1034,40],[992,43,1034,41,"getLanguagePartFromCode"],[992,66,1034,64],[992,67,1034,65,"code"],[992,71,1034,69],[992,72,1034,70],[993,8,1035,6,"rule"],[993,12,1035,10],[993,15,1035,13],[993,19,1035,17],[993,20,1035,18,"getRule"],[993,27,1035,25],[993,28,1035,26,"lngPart"],[993,35,1035,33],[993,37,1035,35,"options"],[993,44,1035,42],[993,45,1035,43],[994,6,1036,4],[995,6,1037,4],[995,10,1037,8],[995,11,1037,9,"pluralRulesCache"],[995,27,1037,25],[995,28,1037,26,"cacheKey"],[995,36,1037,34],[995,37,1037,35],[995,40,1037,38,"rule"],[995,44,1037,42],[996,6,1038,4],[996,13,1038,11,"rule"],[996,17,1038,15],[997,4,1039,2],[998,4,1040,2,"needsPlural"],[998,15,1040,13,"needsPlural"],[998,16,1040,14,"code"],[998,20,1040,18],[998,22,1040,20,"options"],[998,29,1040,27],[998,32,1040,30],[998,33,1040,31],[998,34,1040,32],[998,36,1040,34],[999,6,1041,4],[999,10,1041,8,"rule"],[999,14,1041,12],[999,17,1041,15],[999,21,1041,19],[999,22,1041,20,"getRule"],[999,29,1041,27],[999,30,1041,28,"code"],[999,34,1041,32],[999,36,1041,34,"options"],[999,43,1041,41],[999,44,1041,42],[1000,6,1042,4],[1000,10,1042,8],[1000,11,1042,9,"rule"],[1000,15,1042,13],[1000,17,1042,15,"rule"],[1000,21,1042,19],[1000,24,1042,22],[1000,28,1042,26],[1000,29,1042,27,"getRule"],[1000,36,1042,34],[1000,37,1042,35],[1000,42,1042,40],[1000,44,1042,42,"options"],[1000,51,1042,49],[1000,52,1042,50],[1001,6,1043,4],[1001,13,1043,11,"rule"],[1001,17,1043,15],[1001,19,1043,17,"resolvedOptions"],[1001,34,1043,32],[1001,35,1043,33],[1001,36,1043,34],[1001,37,1043,35,"pluralCategories"],[1001,53,1043,51],[1001,54,1043,52,"length"],[1001,60,1043,58],[1001,63,1043,61],[1001,64,1043,62],[1002,4,1044,2],[1003,4,1045,2,"getPluralFormsOfKey"],[1003,23,1045,21,"getPluralFormsOfKey"],[1003,24,1045,22,"code"],[1003,28,1045,26],[1003,30,1045,28,"key"],[1003,33,1045,31],[1003,35,1045,33,"options"],[1003,42,1045,40],[1003,45,1045,43],[1003,46,1045,44],[1003,47,1045,45],[1003,49,1045,47],[1004,6,1046,4],[1004,13,1046,11],[1004,17,1046,15],[1004,18,1046,16,"getSuffixes"],[1004,29,1046,27],[1004,30,1046,28,"code"],[1004,34,1046,32],[1004,36,1046,34,"options"],[1004,43,1046,41],[1004,44,1046,42],[1004,45,1046,43,"map"],[1004,48,1046,46],[1004,49,1046,47,"suffix"],[1004,55,1046,53],[1004,59,1046,57],[1004,62,1046,60,"key"],[1004,65,1046,63],[1004,68,1046,66,"suffix"],[1004,74,1046,72],[1004,76,1046,74],[1004,77,1046,75],[1005,4,1047,2],[1006,4,1048,2,"getSuffixes"],[1006,15,1048,13,"getSuffixes"],[1006,16,1048,14,"code"],[1006,20,1048,18],[1006,22,1048,20,"options"],[1006,29,1048,27],[1006,32,1048,30],[1006,33,1048,31],[1006,34,1048,32],[1006,36,1048,34],[1007,6,1049,4],[1007,10,1049,8,"rule"],[1007,14,1049,12],[1007,17,1049,15],[1007,21,1049,19],[1007,22,1049,20,"getRule"],[1007,29,1049,27],[1007,30,1049,28,"code"],[1007,34,1049,32],[1007,36,1049,34,"options"],[1007,43,1049,41],[1007,44,1049,42],[1008,6,1050,4],[1008,10,1050,8],[1008,11,1050,9,"rule"],[1008,15,1050,13],[1008,17,1050,15,"rule"],[1008,21,1050,19],[1008,24,1050,22],[1008,28,1050,26],[1008,29,1050,27,"getRule"],[1008,36,1050,34],[1008,37,1050,35],[1008,42,1050,40],[1008,44,1050,42,"options"],[1008,51,1050,49],[1008,52,1050,50],[1009,6,1051,4],[1009,10,1051,8],[1009,11,1051,9,"rule"],[1009,15,1051,13],[1009,17,1051,15],[1009,24,1051,22],[1009,26,1051,24],[1010,6,1052,4],[1010,13,1052,11,"rule"],[1010,17,1052,15],[1010,18,1052,16,"resolvedOptions"],[1010,33,1052,31],[1010,34,1052,32],[1010,35,1052,33],[1010,36,1052,34,"pluralCategories"],[1010,52,1052,50],[1010,53,1052,51,"sort"],[1010,57,1052,55],[1010,58,1052,56],[1010,59,1052,57,"pluralCategory1"],[1010,74,1052,72],[1010,76,1052,74,"pluralCategory2"],[1010,91,1052,89],[1010,96,1052,94,"suffixesOrder"],[1010,109,1052,107],[1010,110,1052,108,"pluralCategory1"],[1010,125,1052,123],[1010,126,1052,124],[1010,129,1052,127,"suffixesOrder"],[1010,142,1052,140],[1010,143,1052,141,"pluralCategory2"],[1010,158,1052,156],[1010,159,1052,157],[1010,160,1052,158],[1010,161,1052,159,"map"],[1010,164,1052,162],[1010,165,1052,163,"pluralCategory"],[1010,179,1052,177],[1010,183,1052,181],[1010,186,1052,184],[1010,190,1052,188],[1010,191,1052,189,"options"],[1010,198,1052,196],[1010,199,1052,197,"prepend"],[1010,206,1052,204],[1010,209,1052,207,"options"],[1010,216,1052,214],[1010,217,1052,215,"ordinal"],[1010,224,1052,222],[1010,227,1052,225],[1010,237,1052,235],[1010,241,1052,239],[1010,242,1052,240,"options"],[1010,249,1052,247],[1010,250,1052,248,"prepend"],[1010,257,1052,255],[1010,259,1052,257],[1010,262,1052,260],[1010,264,1052,262],[1010,267,1052,265,"pluralCategory"],[1010,281,1052,279],[1010,283,1052,281],[1010,284,1052,282],[1011,4,1053,2],[1012,4,1054,2,"getSuffix"],[1012,13,1054,11,"getSuffix"],[1012,14,1054,12,"code"],[1012,18,1054,16],[1012,20,1054,18,"count"],[1012,25,1054,23],[1012,27,1054,25,"options"],[1012,34,1054,32],[1012,37,1054,35],[1012,38,1054,36],[1012,39,1054,37],[1012,41,1054,39],[1013,6,1055,4],[1013,12,1055,10,"rule"],[1013,16,1055,14],[1013,19,1055,17],[1013,23,1055,21],[1013,24,1055,22,"getRule"],[1013,31,1055,29],[1013,32,1055,30,"code"],[1013,36,1055,34],[1013,38,1055,36,"options"],[1013,45,1055,43],[1013,46,1055,44],[1014,6,1056,4],[1014,10,1056,8,"rule"],[1014,14,1056,12],[1014,16,1056,14],[1015,8,1057,6],[1015,15,1057,13],[1015,18,1057,16],[1015,22,1057,20],[1015,23,1057,21,"options"],[1015,30,1057,28],[1015,31,1057,29,"prepend"],[1015,38,1057,36],[1015,41,1057,39,"options"],[1015,48,1057,46],[1015,49,1057,47,"ordinal"],[1015,56,1057,54],[1015,59,1057,57],[1015,69,1057,67],[1015,73,1057,71],[1015,74,1057,72,"options"],[1015,81,1057,79],[1015,82,1057,80,"prepend"],[1015,89,1057,87],[1015,91,1057,89],[1015,94,1057,92],[1015,96,1057,94],[1015,99,1057,97,"rule"],[1015,103,1057,101],[1015,104,1057,102,"select"],[1015,110,1057,108],[1015,111,1057,109,"count"],[1015,116,1057,114],[1015,117,1057,115],[1015,119,1057,117],[1016,6,1058,4],[1017,6,1059,4],[1017,10,1059,8],[1017,11,1059,9,"logger"],[1017,17,1059,15],[1017,18,1059,16,"warn"],[1017,22,1059,20],[1017,23,1059,21],[1017,52,1059,50,"code"],[1017,56,1059,54],[1017,58,1059,56],[1017,59,1059,57],[1018,6,1060,4],[1018,13,1060,11],[1018,17,1060,15],[1018,18,1060,16,"getSuffix"],[1018,27,1060,25],[1018,28,1060,26],[1018,33,1060,31],[1018,35,1060,33,"count"],[1018,40,1060,38],[1018,42,1060,40,"options"],[1018,49,1060,47],[1018,50,1060,48],[1019,4,1061,2],[1020,2,1062,0],[1021,2,1064,0],[1021,8,1064,6,"deepFindWithDefaults"],[1021,28,1064,26],[1021,31,1064,29,"deepFindWithDefaults"],[1021,32,1064,30,"data"],[1021,36,1064,34],[1021,38,1064,36,"defaultData"],[1021,49,1064,47],[1021,51,1064,49,"key"],[1021,54,1064,52],[1021,56,1064,54,"keySeparator"],[1021,68,1064,66],[1021,71,1064,69],[1021,74,1064,72],[1021,76,1064,74,"ignoreJSONStructure"],[1021,95,1064,93],[1021,98,1064,96],[1021,102,1064,100],[1021,107,1064,105],[1022,4,1065,2],[1022,8,1065,6,"path"],[1022,12,1065,10],[1022,15,1065,13,"getPathWithDefaults"],[1022,34,1065,32],[1022,35,1065,33,"data"],[1022,39,1065,37],[1022,41,1065,39,"defaultData"],[1022,52,1065,50],[1022,54,1065,52,"key"],[1022,57,1065,55],[1022,58,1065,56],[1023,4,1066,2],[1023,8,1066,6],[1023,9,1066,7,"path"],[1023,13,1066,11],[1023,17,1066,15,"ignoreJSONStructure"],[1023,36,1066,34],[1023,40,1066,38,"isString"],[1023,48,1066,46],[1023,49,1066,47,"key"],[1023,52,1066,50],[1023,53,1066,51],[1023,55,1066,53],[1024,6,1067,4,"path"],[1024,10,1067,8],[1024,13,1067,11,"deepFind"],[1024,21,1067,19],[1024,22,1067,20,"data"],[1024,26,1067,24],[1024,28,1067,26,"key"],[1024,31,1067,29],[1024,33,1067,31,"keySeparator"],[1024,45,1067,43],[1024,46,1067,44],[1025,6,1068,4],[1025,10,1068,8,"path"],[1025,14,1068,12],[1025,19,1068,17,"undefined"],[1025,28,1068,26],[1025,30,1068,28,"path"],[1025,34,1068,32],[1025,37,1068,35,"deepFind"],[1025,45,1068,43],[1025,46,1068,44,"defaultData"],[1025,57,1068,55],[1025,59,1068,57,"key"],[1025,62,1068,60],[1025,64,1068,62,"keySeparator"],[1025,76,1068,74],[1025,77,1068,75],[1026,4,1069,2],[1027,4,1070,2],[1027,11,1070,9,"path"],[1027,15,1070,13],[1028,2,1071,0],[1028,3,1071,1],[1029,2,1072,0],[1029,8,1072,6,"regexSafe"],[1029,17,1072,15],[1029,20,1072,18,"val"],[1029,23,1072,21],[1029,27,1072,25,"val"],[1029,30,1072,28],[1029,31,1072,29,"replace"],[1029,38,1072,36],[1029,39,1072,37],[1029,44,1072,42],[1029,46,1072,44],[1029,52,1072,50],[1029,53,1072,51],[1030,2,1073,0],[1030,8,1073,6,"Interpolator"],[1030,20,1073,18],[1030,21,1073,19],[1031,4,1074,2,"constructor"],[1031,15,1074,13,"constructor"],[1031,16,1074,14,"options"],[1031,23,1074,21],[1031,26,1074,24],[1031,27,1074,25],[1031,28,1074,26],[1031,30,1074,28],[1032,6,1075,4],[1032,10,1075,8],[1032,11,1075,9,"logger"],[1032,17,1075,15],[1032,20,1075,18,"baseLogger"],[1032,30,1075,28],[1032,31,1075,29,"create"],[1032,37,1075,35],[1032,38,1075,36],[1032,52,1075,50],[1032,53,1075,51],[1033,6,1076,4],[1033,10,1076,8],[1033,11,1076,9,"options"],[1033,18,1076,16],[1033,21,1076,19,"options"],[1033,28,1076,26],[1034,6,1077,4],[1034,10,1077,8],[1034,11,1077,9,"format"],[1034,17,1077,15],[1034,20,1077,18,"options"],[1034,27,1077,25],[1034,29,1077,27,"interpolation"],[1034,42,1077,40],[1034,44,1077,42,"format"],[1034,50,1077,48],[1034,55,1077,53,"value"],[1034,60,1077,58],[1034,64,1077,62,"value"],[1034,69,1077,67],[1034,70,1077,68],[1035,6,1078,4],[1035,10,1078,8],[1035,11,1078,9,"init"],[1035,15,1078,13],[1035,16,1078,14,"options"],[1035,23,1078,21],[1035,24,1078,22],[1036,4,1079,2],[1037,4,1080,2,"init"],[1037,8,1080,6,"init"],[1037,9,1080,7,"options"],[1037,16,1080,14],[1037,19,1080,17],[1037,20,1080,18],[1037,21,1080,19],[1037,23,1080,21],[1038,6,1081,4],[1038,10,1081,8],[1038,11,1081,9,"options"],[1038,18,1081,16],[1038,19,1081,17,"interpolation"],[1038,32,1081,30],[1038,34,1081,32,"options"],[1038,41,1081,39],[1038,42,1081,40,"interpolation"],[1038,55,1081,53],[1038,58,1081,56],[1039,8,1082,6,"escapeValue"],[1039,19,1082,17],[1039,21,1082,19],[1040,6,1083,4],[1040,7,1083,5],[1041,6,1084,4],[1041,12,1084,10],[1042,8,1085,6,"escape"],[1042,14,1085,12],[1042,16,1085,14,"escape$1"],[1042,24,1085,22],[1043,8,1086,6,"escapeValue"],[1043,19,1086,17],[1044,8,1087,6,"useRawValueToEscape"],[1044,27,1087,25],[1045,8,1088,6,"prefix"],[1045,14,1088,12],[1046,8,1089,6,"prefixEscaped"],[1046,21,1089,19],[1047,8,1090,6,"suffix"],[1047,14,1090,12],[1048,8,1091,6,"suffixEscaped"],[1048,21,1091,19],[1049,8,1092,6,"formatSeparator"],[1049,23,1092,21],[1050,8,1093,6,"unescapeSuffix"],[1050,22,1093,20],[1051,8,1094,6,"unescapePrefix"],[1051,22,1094,20],[1052,8,1095,6,"nestingPrefix"],[1052,21,1095,19],[1053,8,1096,6,"nestingPrefixEscaped"],[1053,28,1096,26],[1054,8,1097,6,"nestingSuffix"],[1054,21,1097,19],[1055,8,1098,6,"nestingSuffixEscaped"],[1055,28,1098,26],[1056,8,1099,6,"nestingOptionsSeparator"],[1056,31,1099,29],[1057,8,1100,6,"maxReplaces"],[1057,19,1100,17],[1058,8,1101,6,"alwaysFormat"],[1059,6,1102,4],[1059,7,1102,5],[1059,10,1102,8,"options"],[1059,17,1102,15],[1059,18,1102,16,"interpolation"],[1059,31,1102,29],[1060,6,1103,4],[1060,10,1103,8],[1060,11,1103,9,"escape"],[1060,17,1103,15],[1060,20,1103,18,"escape$1"],[1060,28,1103,26],[1060,33,1103,31,"undefined"],[1060,42,1103,40],[1060,45,1103,43,"escape$1"],[1060,53,1103,51],[1060,56,1103,54,"escape"],[1060,62,1103,60],[1061,6,1104,4],[1061,10,1104,8],[1061,11,1104,9,"escapeValue"],[1061,22,1104,20],[1061,25,1104,23,"escapeValue"],[1061,36,1104,34],[1061,41,1104,39,"undefined"],[1061,50,1104,48],[1061,53,1104,51,"escapeValue"],[1061,64,1104,62],[1061,67,1104,65],[1061,71,1104,69],[1062,6,1105,4],[1062,10,1105,8],[1062,11,1105,9,"useRawValueToEscape"],[1062,30,1105,28],[1062,33,1105,31,"useRawValueToEscape"],[1062,52,1105,50],[1062,57,1105,55,"undefined"],[1062,66,1105,64],[1062,69,1105,67,"useRawValueToEscape"],[1062,88,1105,86],[1062,91,1105,89],[1062,96,1105,94],[1063,6,1106,4],[1063,10,1106,8],[1063,11,1106,9,"prefix"],[1063,17,1106,15],[1063,20,1106,18,"prefix"],[1063,26,1106,24],[1063,29,1106,27,"regexEscape"],[1063,40,1106,38],[1063,41,1106,39,"prefix"],[1063,47,1106,45],[1063,48,1106,46],[1063,51,1106,49,"prefixEscaped"],[1063,64,1106,62],[1063,68,1106,66],[1063,72,1106,70],[1064,6,1107,4],[1064,10,1107,8],[1064,11,1107,9,"suffix"],[1064,17,1107,15],[1064,20,1107,18,"suffix"],[1064,26,1107,24],[1064,29,1107,27,"regexEscape"],[1064,40,1107,38],[1064,41,1107,39,"suffix"],[1064,47,1107,45],[1064,48,1107,46],[1064,51,1107,49,"suffixEscaped"],[1064,64,1107,62],[1064,68,1107,66],[1064,72,1107,70],[1065,6,1108,4],[1065,10,1108,8],[1065,11,1108,9,"formatSeparator"],[1065,26,1108,24],[1065,29,1108,27,"formatSeparator"],[1065,44,1108,42],[1065,48,1108,46],[1065,51,1108,49],[1066,6,1109,4],[1066,10,1109,8],[1066,11,1109,9,"unescapePrefix"],[1066,25,1109,23],[1066,28,1109,26,"unescapeSuffix"],[1066,42,1109,40],[1066,45,1109,43],[1066,47,1109,45],[1066,50,1109,48,"unescapePrefix"],[1066,64,1109,62],[1066,68,1109,66],[1066,71,1109,69],[1067,6,1110,4],[1067,10,1110,8],[1067,11,1110,9,"unescapeSuffix"],[1067,25,1110,23],[1067,28,1110,26],[1067,32,1110,30],[1067,33,1110,31,"unescapePrefix"],[1067,47,1110,45],[1067,50,1110,48],[1067,52,1110,50],[1067,55,1110,53,"unescapeSuffix"],[1067,69,1110,67],[1067,73,1110,71],[1067,75,1110,73],[1068,6,1111,4],[1068,10,1111,8],[1068,11,1111,9,"nestingPrefix"],[1068,24,1111,22],[1068,27,1111,25,"nestingPrefix"],[1068,40,1111,38],[1068,43,1111,41,"regexEscape"],[1068,54,1111,52],[1068,55,1111,53,"nestingPrefix"],[1068,68,1111,66],[1068,69,1111,67],[1068,72,1111,70,"nestingPrefixEscaped"],[1068,92,1111,90],[1068,96,1111,94,"regexEscape"],[1068,107,1111,105],[1068,108,1111,106],[1068,113,1111,111],[1068,114,1111,112],[1069,6,1112,4],[1069,10,1112,8],[1069,11,1112,9,"nestingSuffix"],[1069,24,1112,22],[1069,27,1112,25,"nestingSuffix"],[1069,40,1112,38],[1069,43,1112,41,"regexEscape"],[1069,54,1112,52],[1069,55,1112,53,"nestingSuffix"],[1069,68,1112,66],[1069,69,1112,67],[1069,72,1112,70,"nestingSuffixEscaped"],[1069,92,1112,90],[1069,96,1112,94,"regexEscape"],[1069,107,1112,105],[1069,108,1112,106],[1069,111,1112,109],[1069,112,1112,110],[1070,6,1113,4],[1070,10,1113,8],[1070,11,1113,9,"nestingOptionsSeparator"],[1070,34,1113,32],[1070,37,1113,35,"nestingOptionsSeparator"],[1070,60,1113,58],[1070,64,1113,62],[1070,67,1113,65],[1071,6,1114,4],[1071,10,1114,8],[1071,11,1114,9,"maxReplaces"],[1071,22,1114,20],[1071,25,1114,23,"maxReplaces"],[1071,36,1114,34],[1071,40,1114,38],[1071,44,1114,42],[1072,6,1115,4],[1072,10,1115,8],[1072,11,1115,9,"alwaysFormat"],[1072,23,1115,21],[1072,26,1115,24,"alwaysFormat"],[1072,38,1115,36],[1072,43,1115,41,"undefined"],[1072,52,1115,50],[1072,55,1115,53,"alwaysFormat"],[1072,67,1115,65],[1072,70,1115,68],[1072,75,1115,73],[1073,6,1116,4],[1073,10,1116,8],[1073,11,1116,9,"resetRegExp"],[1073,22,1116,20],[1073,23,1116,21],[1073,24,1116,22],[1074,4,1117,2],[1075,4,1118,2,"reset"],[1075,9,1118,7,"reset"],[1075,10,1118,7],[1075,12,1118,10],[1076,6,1119,4],[1076,10,1119,8],[1076,14,1119,12],[1076,15,1119,13,"options"],[1076,22,1119,20],[1076,24,1119,22],[1076,28,1119,26],[1076,29,1119,27,"init"],[1076,33,1119,31],[1076,34,1119,32],[1076,38,1119,36],[1076,39,1119,37,"options"],[1076,46,1119,44],[1076,47,1119,45],[1077,4,1120,2],[1078,4,1121,2,"resetRegExp"],[1078,15,1121,13,"resetRegExp"],[1078,16,1121,13],[1078,18,1121,16],[1079,6,1122,4],[1079,12,1122,10,"getOrResetRegExp"],[1079,28,1122,26],[1079,31,1122,29,"getOrResetRegExp"],[1079,32,1122,30,"existingRegExp"],[1079,46,1122,44],[1079,48,1122,46,"pattern"],[1079,55,1122,53],[1079,60,1122,58],[1080,8,1123,6],[1080,12,1123,10,"existingRegExp"],[1080,26,1123,24],[1080,28,1123,26,"source"],[1080,34,1123,32],[1080,39,1123,37,"pattern"],[1080,46,1123,44],[1080,48,1123,46],[1081,10,1124,8,"existingRegExp"],[1081,24,1124,22],[1081,25,1124,23,"lastIndex"],[1081,34,1124,32],[1081,37,1124,35],[1081,38,1124,36],[1082,10,1125,8],[1082,17,1125,15,"existingRegExp"],[1082,31,1125,29],[1083,8,1126,6],[1084,8,1127,6],[1084,15,1127,13],[1084,19,1127,17,"RegExp"],[1084,25,1127,23],[1084,26,1127,24,"pattern"],[1084,33,1127,31],[1084,35,1127,33],[1084,38,1127,36],[1084,39,1127,37],[1085,6,1128,4],[1085,7,1128,5],[1086,6,1129,4],[1086,10,1129,8],[1086,11,1129,9,"regexp"],[1086,17,1129,15],[1086,20,1129,18,"getOrResetRegExp"],[1086,36,1129,34],[1086,37,1129,35],[1086,41,1129,39],[1086,42,1129,40,"regexp"],[1086,48,1129,46],[1086,50,1129,48],[1086,53,1129,51],[1086,57,1129,55],[1086,58,1129,56,"prefix"],[1086,64,1129,62],[1086,72,1129,70],[1086,76,1129,74],[1086,77,1129,75,"suffix"],[1086,83,1129,81],[1086,85,1129,83],[1086,86,1129,84],[1087,6,1130,4],[1087,10,1130,8],[1087,11,1130,9,"regexpUnescape"],[1087,25,1130,23],[1087,28,1130,26,"getOrResetRegExp"],[1087,44,1130,42],[1087,45,1130,43],[1087,49,1130,47],[1087,50,1130,48,"regexpUnescape"],[1087,64,1130,62],[1087,66,1130,64],[1087,69,1130,67],[1087,73,1130,71],[1087,74,1130,72,"prefix"],[1087,80,1130,78],[1087,83,1130,81],[1087,87,1130,85],[1087,88,1130,86,"unescapePrefix"],[1087,102,1130,100],[1087,110,1130,108],[1087,114,1130,112],[1087,115,1130,113,"unescapeSuffix"],[1087,129,1130,127],[1087,132,1130,130],[1087,136,1130,134],[1087,137,1130,135,"suffix"],[1087,143,1130,141],[1087,145,1130,143],[1087,146,1130,144],[1088,6,1131,4],[1088,10,1131,8],[1088,11,1131,9,"nestingRegexp"],[1088,24,1131,22],[1088,27,1131,25,"getOrResetRegExp"],[1088,43,1131,41],[1088,44,1131,42],[1088,48,1131,46],[1088,49,1131,47,"nestingRegexp"],[1088,62,1131,60],[1088,64,1131,62],[1088,67,1131,65],[1088,71,1131,69],[1088,72,1131,70,"nestingPrefix"],[1088,85,1131,83],[1088,153,1131,151],[1088,157,1131,155],[1088,158,1131,156,"nestingSuffix"],[1088,171,1131,169],[1088,173,1131,171],[1088,174,1131,172],[1089,4,1132,2],[1090,4,1133,2,"interpolate"],[1090,15,1133,13,"interpolate"],[1090,16,1133,14,"str"],[1090,19,1133,17],[1090,21,1133,19,"data"],[1090,25,1133,23],[1090,27,1133,25,"lng"],[1090,30,1133,28],[1090,32,1133,30,"options"],[1090,39,1133,37],[1090,41,1133,39],[1091,6,1134,4],[1091,10,1134,8,"match"],[1091,15,1134,13],[1092,6,1135,4],[1092,10,1135,8,"value"],[1092,15,1135,13],[1093,6,1136,4],[1093,10,1136,8,"replaces"],[1093,18,1136,16],[1094,6,1137,4],[1094,12,1137,10,"defaultData"],[1094,23,1137,21],[1094,26,1137,24],[1094,30,1137,28],[1094,31,1137,29,"options"],[1094,38,1137,36],[1094,42,1137,40],[1094,46,1137,44],[1094,47,1137,45,"options"],[1094,54,1137,52],[1094,55,1137,53,"interpolation"],[1094,68,1137,66],[1094,72,1137,70],[1094,76,1137,74],[1094,77,1137,75,"options"],[1094,84,1137,82],[1094,85,1137,83,"interpolation"],[1094,98,1137,96],[1094,99,1137,97,"defaultVariables"],[1094,115,1137,113],[1094,119,1137,117],[1094,120,1137,118],[1094,121,1137,119],[1095,6,1138,4],[1095,12,1138,10,"handleFormat"],[1095,24,1138,22],[1095,27,1138,25,"key"],[1095,30,1138,28],[1095,34,1138,32],[1096,8,1139,6],[1096,12,1139,10,"key"],[1096,15,1139,13],[1096,16,1139,14,"indexOf"],[1096,23,1139,21],[1096,24,1139,22],[1096,28,1139,26],[1096,29,1139,27,"formatSeparator"],[1096,44,1139,42],[1096,45,1139,43],[1096,48,1139,46],[1096,49,1139,47],[1096,51,1139,49],[1097,10,1140,8],[1097,16,1140,14,"path"],[1097,20,1140,18],[1097,23,1140,21,"deepFindWithDefaults"],[1097,43,1140,41],[1097,44,1140,42,"data"],[1097,48,1140,46],[1097,50,1140,48,"defaultData"],[1097,61,1140,59],[1097,63,1140,61,"key"],[1097,66,1140,64],[1097,68,1140,66],[1097,72,1140,70],[1097,73,1140,71,"options"],[1097,80,1140,78],[1097,81,1140,79,"keySeparator"],[1097,93,1140,91],[1097,95,1140,93],[1097,99,1140,97],[1097,100,1140,98,"options"],[1097,107,1140,105],[1097,108,1140,106,"ignoreJSONStructure"],[1097,127,1140,125],[1097,128,1140,126],[1098,10,1141,8],[1098,17,1141,15],[1098,21,1141,19],[1098,22,1141,20,"alwaysFormat"],[1098,34,1141,32],[1098,37,1141,35],[1098,41,1141,39],[1098,42,1141,40,"format"],[1098,48,1141,46],[1098,49,1141,47,"path"],[1098,53,1141,51],[1098,55,1141,53,"undefined"],[1098,64,1141,62],[1098,66,1141,64,"lng"],[1098,69,1141,67],[1098,71,1141,67,"Object"],[1098,77,1141,67],[1098,78,1141,67,"assign"],[1098,84,1141,67],[1098,89,1142,13,"options"],[1098,96,1142,20],[1098,98,1143,13,"data"],[1098,102,1143,17],[1099,12,1144,10,"interpolationkey"],[1099,28,1144,26],[1099,30,1144,28,"key"],[1100,10,1144,31],[1100,12,1145,9],[1100,13,1145,10],[1100,16,1145,13,"path"],[1100,20,1145,17],[1101,8,1146,6],[1102,8,1147,6],[1102,14,1147,12,"p"],[1102,15,1147,13],[1102,18,1147,16,"key"],[1102,21,1147,19],[1102,22,1147,20,"split"],[1102,27,1147,25],[1102,28,1147,26],[1102,32,1147,30],[1102,33,1147,31,"formatSeparator"],[1102,48,1147,46],[1102,49,1147,47],[1103,8,1148,6],[1103,14,1148,12,"k"],[1103,15,1148,13],[1103,18,1148,16,"p"],[1103,19,1148,17],[1103,20,1148,18,"shift"],[1103,25,1148,23],[1103,26,1148,24],[1103,27,1148,25],[1103,28,1148,26,"trim"],[1103,32,1148,30],[1103,33,1148,31],[1103,34,1148,32],[1104,8,1149,6],[1104,14,1149,12,"f"],[1104,15,1149,13],[1104,18,1149,16,"p"],[1104,19,1149,17],[1104,20,1149,18,"join"],[1104,24,1149,22],[1104,25,1149,23],[1104,29,1149,27],[1104,30,1149,28,"formatSeparator"],[1104,45,1149,43],[1104,46,1149,44],[1104,47,1149,45,"trim"],[1104,51,1149,49],[1104,52,1149,50],[1104,53,1149,51],[1105,8,1150,6],[1105,15,1150,13],[1105,19,1150,17],[1105,20,1150,18,"format"],[1105,26,1150,24],[1105,27,1150,25,"deepFindWithDefaults"],[1105,47,1150,45],[1105,48,1150,46,"data"],[1105,52,1150,50],[1105,54,1150,52,"defaultData"],[1105,65,1150,63],[1105,67,1150,65,"k"],[1105,68,1150,66],[1105,70,1150,68],[1105,74,1150,72],[1105,75,1150,73,"options"],[1105,82,1150,80],[1105,83,1150,81,"keySeparator"],[1105,95,1150,93],[1105,97,1150,95],[1105,101,1150,99],[1105,102,1150,100,"options"],[1105,109,1150,107],[1105,110,1150,108,"ignoreJSONStructure"],[1105,129,1150,127],[1105,130,1150,128],[1105,132,1150,130,"f"],[1105,133,1150,131],[1105,135,1150,133,"lng"],[1105,138,1150,136],[1105,140,1150,136,"Object"],[1105,146,1150,136],[1105,147,1150,136,"assign"],[1105,153,1150,136],[1105,158,1151,11,"options"],[1105,165,1151,18],[1105,167,1152,11,"data"],[1105,171,1152,15],[1106,10,1153,8,"interpolationkey"],[1106,26,1153,24],[1106,28,1153,26,"k"],[1107,8,1153,27],[1107,10,1154,7],[1107,11,1154,8],[1108,6,1155,4],[1108,7,1155,5],[1109,6,1156,4],[1109,10,1156,8],[1109,11,1156,9,"resetRegExp"],[1109,22,1156,20],[1109,23,1156,21],[1109,24,1156,22],[1110,6,1157,4],[1110,12,1157,10,"missingInterpolationHandler"],[1110,39,1157,37],[1110,42,1157,40,"options"],[1110,49,1157,47],[1110,51,1157,49,"missingInterpolationHandler"],[1110,78,1157,76],[1110,82,1157,80],[1110,86,1157,84],[1110,87,1157,85,"options"],[1110,94,1157,92],[1110,95,1157,93,"missingInterpolationHandler"],[1110,122,1157,120],[1111,6,1158,4],[1111,12,1158,10,"skipOnVariables"],[1111,27,1158,25],[1111,30,1158,28,"options"],[1111,37,1158,35],[1111,39,1158,37,"interpolation"],[1111,52,1158,50],[1111,54,1158,52,"skipOnVariables"],[1111,69,1158,67],[1111,74,1158,72,"undefined"],[1111,83,1158,81],[1111,86,1158,84,"options"],[1111,93,1158,91],[1111,94,1158,92,"interpolation"],[1111,107,1158,105],[1111,108,1158,106,"skipOnVariables"],[1111,123,1158,121],[1111,126,1158,124],[1111,130,1158,128],[1111,131,1158,129,"options"],[1111,138,1158,136],[1111,139,1158,137,"interpolation"],[1111,152,1158,150],[1111,153,1158,151,"skipOnVariables"],[1111,168,1158,166],[1112,6,1159,4],[1112,12,1159,10,"todos"],[1112,17,1159,15],[1112,20,1159,18],[1112,21,1159,19],[1113,8,1160,6,"regex"],[1113,13,1160,11],[1113,15,1160,13],[1113,19,1160,17],[1113,20,1160,18,"regexpUnescape"],[1113,34,1160,32],[1114,8,1161,6,"safeValue"],[1114,17,1161,15],[1114,19,1161,17,"val"],[1114,22,1161,20],[1114,26,1161,24,"regexSafe"],[1114,35,1161,33],[1114,36,1161,34,"val"],[1114,39,1161,37],[1115,6,1162,4],[1115,7,1162,5],[1115,9,1162,7],[1116,8,1163,6,"regex"],[1116,13,1163,11],[1116,15,1163,13],[1116,19,1163,17],[1116,20,1163,18,"regexp"],[1116,26,1163,24],[1117,8,1164,6,"safeValue"],[1117,17,1164,15],[1117,19,1164,17,"val"],[1117,22,1164,20],[1117,26,1164,24],[1117,30,1164,28],[1117,31,1164,29,"escapeValue"],[1117,42,1164,40],[1117,45,1164,43,"regexSafe"],[1117,54,1164,52],[1117,55,1164,53],[1117,59,1164,57],[1117,60,1164,58,"escape"],[1117,66,1164,64],[1117,67,1164,65,"val"],[1117,70,1164,68],[1117,71,1164,69],[1117,72,1164,70],[1117,75,1164,73,"regexSafe"],[1117,84,1164,82],[1117,85,1164,83,"val"],[1117,88,1164,86],[1118,6,1165,4],[1118,7,1165,5],[1118,8,1165,6],[1119,6,1166,4,"todos"],[1119,11,1166,9],[1119,12,1166,10,"forEach"],[1119,19,1166,17],[1119,20,1166,18,"todo"],[1119,24,1166,22],[1119,28,1166,26],[1120,8,1167,6,"replaces"],[1120,16,1167,14],[1120,19,1167,17],[1120,20,1167,18],[1121,8,1168,6],[1121,15,1168,13,"match"],[1121,20,1168,18],[1121,23,1168,21,"todo"],[1121,27,1168,25],[1121,28,1168,26,"regex"],[1121,33,1168,31],[1121,34,1168,32,"exec"],[1121,38,1168,36],[1121,39,1168,37,"str"],[1121,42,1168,40],[1121,43,1168,41],[1121,45,1168,43],[1122,10,1169,8],[1122,16,1169,14,"matchedVar"],[1122,26,1169,24],[1122,29,1169,27,"match"],[1122,34,1169,32],[1122,35,1169,33],[1122,36,1169,34],[1122,37,1169,35],[1122,38,1169,36,"trim"],[1122,42,1169,40],[1122,43,1169,41],[1122,44,1169,42],[1123,10,1170,8,"value"],[1123,15,1170,13],[1123,18,1170,16,"handleFormat"],[1123,30,1170,28],[1123,31,1170,29,"matchedVar"],[1123,41,1170,39],[1123,42,1170,40],[1124,10,1171,8],[1124,14,1171,12,"value"],[1124,19,1171,17],[1124,24,1171,22,"undefined"],[1124,33,1171,31],[1124,35,1171,33],[1125,12,1172,10],[1125,16,1172,14],[1125,23,1172,21,"missingInterpolationHandler"],[1125,50,1172,48],[1125,55,1172,53],[1125,65,1172,63],[1125,67,1172,65],[1126,14,1173,12],[1126,20,1173,18,"temp"],[1126,24,1173,22],[1126,27,1173,25,"missingInterpolationHandler"],[1126,54,1173,52],[1126,55,1173,53,"str"],[1126,58,1173,56],[1126,60,1173,58,"match"],[1126,65,1173,63],[1126,67,1173,65,"options"],[1126,74,1173,72],[1126,75,1173,73],[1127,14,1174,12,"value"],[1127,19,1174,17],[1127,22,1174,20,"isString"],[1127,30,1174,28],[1127,31,1174,29,"temp"],[1127,35,1174,33],[1127,36,1174,34],[1127,39,1174,37,"temp"],[1127,43,1174,41],[1127,46,1174,44],[1127,48,1174,46],[1128,12,1175,10],[1128,13,1175,11],[1128,19,1175,17],[1128,23,1175,21,"options"],[1128,30,1175,28],[1128,34,1175,32,"Object"],[1128,40,1175,38],[1128,41,1175,39,"prototype"],[1128,50,1175,48],[1128,51,1175,49,"hasOwnProperty"],[1128,65,1175,63],[1128,66,1175,64,"call"],[1128,70,1175,68],[1128,71,1175,69,"options"],[1128,78,1175,76],[1128,80,1175,78,"matchedVar"],[1128,90,1175,88],[1128,91,1175,89],[1128,93,1175,91],[1129,14,1176,12,"value"],[1129,19,1176,17],[1129,22,1176,20],[1129,24,1176,22],[1130,12,1177,10],[1130,13,1177,11],[1130,19,1177,17],[1130,23,1177,21,"skipOnVariables"],[1130,38,1177,36],[1130,40,1177,38],[1131,14,1178,12,"value"],[1131,19,1178,17],[1131,22,1178,20,"match"],[1131,27,1178,25],[1131,28,1178,26],[1131,29,1178,27],[1131,30,1178,28],[1132,14,1179,12],[1133,12,1180,10],[1133,13,1180,11],[1133,19,1180,17],[1134,14,1181,12],[1134,18,1181,16],[1134,19,1181,17,"logger"],[1134,25,1181,23],[1134,26,1181,24,"warn"],[1134,30,1181,28],[1134,31,1181,29],[1134,61,1181,59,"matchedVar"],[1134,71,1181,69],[1134,93,1181,91,"str"],[1134,96,1181,94],[1134,98,1181,96],[1134,99,1181,97],[1135,14,1182,12,"value"],[1135,19,1182,17],[1135,22,1182,20],[1135,24,1182,22],[1136,12,1183,10],[1137,10,1184,8],[1137,11,1184,9],[1137,17,1184,15],[1137,21,1184,19],[1137,22,1184,20,"isString"],[1137,30,1184,28],[1137,31,1184,29,"value"],[1137,36,1184,34],[1137,37,1184,35],[1137,41,1184,39],[1137,42,1184,40],[1137,46,1184,44],[1137,47,1184,45,"useRawValueToEscape"],[1137,66,1184,64],[1137,68,1184,66],[1138,12,1185,10,"value"],[1138,17,1185,15],[1138,20,1185,18,"makeString"],[1138,30,1185,28],[1138,31,1185,29,"value"],[1138,36,1185,34],[1138,37,1185,35],[1139,10,1186,8],[1140,10,1187,8],[1140,16,1187,14,"safeValue"],[1140,25,1187,23],[1140,28,1187,26,"todo"],[1140,32,1187,30],[1140,33,1187,31,"safeValue"],[1140,42,1187,40],[1140,43,1187,41,"value"],[1140,48,1187,46],[1140,49,1187,47],[1141,10,1188,8,"str"],[1141,13,1188,11],[1141,16,1188,14,"str"],[1141,19,1188,17],[1141,20,1188,18,"replace"],[1141,27,1188,25],[1141,28,1188,26,"match"],[1141,33,1188,31],[1141,34,1188,32],[1141,35,1188,33],[1141,36,1188,34],[1141,38,1188,36,"safeValue"],[1141,47,1188,45],[1141,48,1188,46],[1142,10,1189,8],[1142,14,1189,12,"skipOnVariables"],[1142,29,1189,27],[1142,31,1189,29],[1143,12,1190,10,"todo"],[1143,16,1190,14],[1143,17,1190,15,"regex"],[1143,22,1190,20],[1143,23,1190,21,"lastIndex"],[1143,32,1190,30],[1143,36,1190,34,"value"],[1143,41,1190,39],[1143,42,1190,40,"length"],[1143,48,1190,46],[1144,12,1191,10,"todo"],[1144,16,1191,14],[1144,17,1191,15,"regex"],[1144,22,1191,20],[1144,23,1191,21,"lastIndex"],[1144,32,1191,30],[1144,36,1191,34,"match"],[1144,41,1191,39],[1144,42,1191,40],[1144,43,1191,41],[1144,44,1191,42],[1144,45,1191,43,"length"],[1144,51,1191,49],[1145,10,1192,8],[1145,11,1192,9],[1145,17,1192,15],[1146,12,1193,10,"todo"],[1146,16,1193,14],[1146,17,1193,15,"regex"],[1146,22,1193,20],[1146,23,1193,21,"lastIndex"],[1146,32,1193,30],[1146,35,1193,33],[1146,36,1193,34],[1147,10,1194,8],[1148,10,1195,8,"replaces"],[1148,18,1195,16],[1148,20,1195,18],[1149,10,1196,8],[1149,14,1196,12,"replaces"],[1149,22,1196,20],[1149,26,1196,24],[1149,30,1196,28],[1149,31,1196,29,"maxReplaces"],[1149,42,1196,40],[1149,44,1196,42],[1150,12,1197,10],[1151,10,1198,8],[1152,8,1199,6],[1153,6,1200,4],[1153,7,1200,5],[1153,8,1200,6],[1154,6,1201,4],[1154,13,1201,11,"str"],[1154,16,1201,14],[1155,4,1202,2],[1156,4,1203,2,"nest"],[1156,8,1203,6,"nest"],[1156,9,1203,7,"str"],[1156,12,1203,10],[1156,14,1203,12,"fc"],[1156,16,1203,14],[1156,18,1203,16,"options"],[1156,25,1203,23],[1156,28,1203,26],[1156,29,1203,27],[1156,30,1203,28],[1156,32,1203,30],[1157,6,1204,4],[1157,10,1204,8,"match"],[1157,15,1204,13],[1158,6,1205,4],[1158,10,1205,8,"value"],[1158,15,1205,13],[1159,6,1206,4],[1159,10,1206,8,"clonedOptions"],[1159,23,1206,21],[1160,6,1207,4],[1160,12,1207,10,"handleHasOptions"],[1160,28,1207,26],[1160,31,1207,29,"handleHasOptions"],[1160,32,1207,30,"key"],[1160,35,1207,33],[1160,37,1207,35,"inheritedOptions"],[1160,53,1207,51],[1160,58,1207,56],[1161,8,1208,6],[1161,14,1208,12,"sep"],[1161,17,1208,15],[1161,20,1208,18],[1161,24,1208,22],[1161,25,1208,23,"nestingOptionsSeparator"],[1161,48,1208,46],[1162,8,1209,6],[1162,12,1209,10,"key"],[1162,15,1209,13],[1162,16,1209,14,"indexOf"],[1162,23,1209,21],[1162,24,1209,22,"sep"],[1162,27,1209,25],[1162,28,1209,26],[1162,31,1209,29],[1162,32,1209,30],[1162,34,1209,32],[1162,41,1209,39,"key"],[1162,44,1209,42],[1163,8,1210,6],[1163,14,1210,12,"c"],[1163,15,1210,13],[1163,18,1210,16,"key"],[1163,21,1210,19],[1163,22,1210,20,"split"],[1163,27,1210,25],[1163,28,1210,26],[1163,32,1210,30,"RegExp"],[1163,38,1210,36],[1163,39,1210,37],[1163,42,1210,40,"sep"],[1163,45,1210,43],[1163,52,1210,50],[1163,53,1210,51],[1163,54,1210,52],[1164,8,1211,6],[1164,12,1211,10,"optionsString"],[1164,25,1211,23],[1164,28,1211,26],[1164,32,1211,30,"c"],[1164,33,1211,31],[1164,34,1211,32],[1164,35,1211,33],[1164,36,1211,34],[1164,38,1211,36],[1165,8,1212,6,"key"],[1165,11,1212,9],[1165,14,1212,12,"c"],[1165,15,1212,13],[1165,16,1212,14],[1165,17,1212,15],[1165,18,1212,16],[1166,8,1213,6,"optionsString"],[1166,21,1213,19],[1166,24,1213,22],[1166,28,1213,26],[1166,29,1213,27,"interpolate"],[1166,40,1213,38],[1166,41,1213,39,"optionsString"],[1166,54,1213,52],[1166,56,1213,54,"clonedOptions"],[1166,69,1213,67],[1166,70,1213,68],[1167,8,1214,6],[1167,14,1214,12,"matchedSingleQuotes"],[1167,33,1214,31],[1167,36,1214,34,"optionsString"],[1167,49,1214,47],[1167,50,1214,48,"match"],[1167,55,1214,53],[1167,56,1214,54],[1167,60,1214,58],[1167,61,1214,59],[1168,8,1215,6],[1168,14,1215,12,"matchedDoubleQuotes"],[1168,33,1215,31],[1168,36,1215,34,"optionsString"],[1168,49,1215,47],[1168,50,1215,48,"match"],[1168,55,1215,53],[1168,56,1215,54],[1168,60,1215,58],[1168,61,1215,59],[1169,8,1216,6],[1169,12,1216,10],[1169,13,1216,11,"matchedSingleQuotes"],[1169,32,1216,30],[1169,34,1216,32,"length"],[1169,40,1216,38],[1169,44,1216,42],[1169,45,1216,43],[1169,49,1216,47],[1169,50,1216,48],[1169,55,1216,53],[1169,56,1216,54],[1169,60,1216,58],[1169,61,1216,59,"matchedDoubleQuotes"],[1169,80,1216,78],[1169,84,1216,82,"matchedDoubleQuotes"],[1169,103,1216,101],[1169,104,1216,102,"length"],[1169,110,1216,108],[1169,113,1216,111],[1169,114,1216,112],[1169,119,1216,117],[1169,120,1216,118],[1169,122,1216,120],[1170,10,1217,8,"optionsString"],[1170,23,1217,21],[1170,26,1217,24,"optionsString"],[1170,39,1217,37],[1170,40,1217,38,"replace"],[1170,47,1217,45],[1170,48,1217,46],[1170,52,1217,50],[1170,54,1217,52],[1170,57,1217,55],[1170,58,1217,56],[1171,8,1218,6],[1172,8,1219,6],[1172,12,1219,10],[1173,10,1220,8,"clonedOptions"],[1173,23,1220,21],[1173,26,1220,24,"JSON"],[1173,30,1220,28],[1173,31,1220,29,"parse"],[1173,36,1220,34],[1173,37,1220,35,"optionsString"],[1173,50,1220,48],[1173,51,1220,49],[1174,10,1221,8],[1174,14,1221,12,"inheritedOptions"],[1174,30,1221,28],[1174,32,1221,30,"clonedOptions"],[1174,45,1221,43],[1174,48,1221,43,"Object"],[1174,54,1221,43],[1174,55,1221,43,"assign"],[1174,61,1221,43],[1174,66,1222,13,"inheritedOptions"],[1174,82,1222,29],[1174,84,1223,13,"clonedOptions"],[1174,97,1223,26],[1174,98,1224,9],[1175,8,1225,6],[1175,9,1225,7],[1175,10,1225,8],[1175,17,1225,15,"e"],[1175,18,1225,16],[1175,20,1225,18],[1176,10,1226,8],[1176,14,1226,12],[1176,15,1226,13,"logger"],[1176,21,1226,19],[1176,22,1226,20,"warn"],[1176,26,1226,24],[1176,27,1226,25],[1176,79,1226,77,"key"],[1176,82,1226,80],[1176,84,1226,82],[1176,86,1226,84,"e"],[1176,87,1226,85],[1176,88,1226,86],[1177,10,1227,8],[1177,17,1227,15],[1177,20,1227,18,"key"],[1177,23,1227,21],[1177,26,1227,24,"sep"],[1177,29,1227,27],[1177,32,1227,30,"optionsString"],[1177,45,1227,43],[1177,47,1227,45],[1178,8,1228,6],[1179,8,1229,6],[1179,12,1229,10,"clonedOptions"],[1179,25,1229,23],[1179,26,1229,24,"defaultValue"],[1179,38,1229,36],[1179,42,1229,40,"clonedOptions"],[1179,55,1229,53],[1179,56,1229,54,"defaultValue"],[1179,68,1229,66],[1179,69,1229,67,"indexOf"],[1179,76,1229,74],[1179,77,1229,75],[1179,81,1229,79],[1179,82,1229,80,"prefix"],[1179,88,1229,86],[1179,89,1229,87],[1179,92,1229,90],[1179,93,1229,91],[1179,94,1229,92],[1179,96,1229,94],[1179,103,1229,101,"clonedOptions"],[1179,116,1229,114],[1179,117,1229,115,"defaultValue"],[1179,129,1229,127],[1180,8,1230,6],[1180,15,1230,13,"key"],[1180,18,1230,16],[1181,6,1231,4],[1181,7,1231,5],[1182,6,1232,4],[1182,13,1232,11,"match"],[1182,18,1232,16],[1182,21,1232,19],[1182,25,1232,23],[1182,26,1232,24,"nestingRegexp"],[1182,39,1232,37],[1182,40,1232,38,"exec"],[1182,44,1232,42],[1182,45,1232,43,"str"],[1182,48,1232,46],[1182,49,1232,47],[1182,51,1232,49],[1183,8,1233,6],[1183,12,1233,10,"formatters"],[1183,22,1233,20],[1183,25,1233,23],[1183,27,1233,25],[1184,8,1234,6,"clonedOptions"],[1184,21,1234,19],[1184,24,1234,19,"Object"],[1184,30,1234,19],[1184,31,1234,19,"assign"],[1184,37,1234,19],[1184,42,1235,11,"options"],[1184,49,1235,18],[1184,50,1236,7],[1185,8,1237,6,"clonedOptions"],[1185,21,1237,19],[1185,24,1237,22,"clonedOptions"],[1185,37,1237,35],[1185,38,1237,36,"replace"],[1185,45,1237,43],[1185,49,1237,47],[1185,50,1237,48,"isString"],[1185,58,1237,56],[1185,59,1237,57,"clonedOptions"],[1185,72,1237,70],[1185,73,1237,71,"replace"],[1185,80,1237,78],[1185,81,1237,79],[1185,84,1237,82,"clonedOptions"],[1185,97,1237,95],[1185,98,1237,96,"replace"],[1185,105,1237,103],[1185,108,1237,106,"clonedOptions"],[1185,121,1237,119],[1186,8,1238,6,"clonedOptions"],[1186,21,1238,19],[1186,22,1238,20,"applyPostProcessor"],[1186,40,1238,38],[1186,43,1238,41],[1186,48,1238,46],[1187,8,1239,6],[1187,15,1239,13,"clonedOptions"],[1187,28,1239,26],[1187,29,1239,27,"defaultValue"],[1187,41,1239,39],[1188,8,1240,6],[1188,14,1240,12,"keyEndIndex"],[1188,25,1240,23],[1188,28,1240,26],[1188,34,1240,32],[1188,35,1240,33,"test"],[1188,39,1240,37],[1188,40,1240,38,"match"],[1188,45,1240,43],[1188,46,1240,44],[1188,47,1240,45],[1188,48,1240,46],[1188,49,1240,47],[1188,52,1240,50,"match"],[1188,57,1240,55],[1188,58,1240,56],[1188,59,1240,57],[1188,60,1240,58],[1188,61,1240,59,"lastIndexOf"],[1188,72,1240,70],[1188,73,1240,71],[1188,76,1240,74],[1188,77,1240,75],[1188,80,1240,78],[1188,81,1240,79],[1188,84,1240,82,"match"],[1188,89,1240,87],[1188,90,1240,88],[1188,91,1240,89],[1188,92,1240,90],[1188,93,1240,91,"indexOf"],[1188,100,1240,98],[1188,101,1240,99],[1188,105,1240,103],[1188,106,1240,104,"formatSeparator"],[1188,121,1240,119],[1188,122,1240,120],[1189,8,1241,6],[1189,12,1241,10,"keyEndIndex"],[1189,23,1241,21],[1189,28,1241,26],[1189,29,1241,27],[1189,30,1241,28],[1189,32,1241,30],[1190,10,1242,8,"formatters"],[1190,20,1242,18],[1190,23,1242,21,"match"],[1190,28,1242,26],[1190,29,1242,27],[1190,30,1242,28],[1190,31,1242,29],[1190,32,1242,30,"slice"],[1190,37,1242,35],[1190,38,1242,36,"keyEndIndex"],[1190,49,1242,47],[1190,50,1242,48],[1190,51,1242,49,"split"],[1190,56,1242,54],[1190,57,1242,55],[1190,61,1242,59],[1190,62,1242,60,"formatSeparator"],[1190,77,1242,75],[1190,78,1242,76],[1190,79,1242,77,"map"],[1190,82,1242,80],[1190,83,1242,81,"elem"],[1190,87,1242,85],[1190,91,1242,89,"elem"],[1190,95,1242,93],[1190,96,1242,94,"trim"],[1190,100,1242,98],[1190,101,1242,99],[1190,102,1242,100],[1190,103,1242,101],[1190,104,1242,102,"filter"],[1190,110,1242,108],[1190,111,1242,109,"Boolean"],[1190,118,1242,116],[1190,119,1242,117],[1191,10,1243,8,"match"],[1191,15,1243,13],[1191,16,1243,14],[1191,17,1243,15],[1191,18,1243,16],[1191,21,1243,19,"match"],[1191,26,1243,24],[1191,27,1243,25],[1191,28,1243,26],[1191,29,1243,27],[1191,30,1243,28,"slice"],[1191,35,1243,33],[1191,36,1243,34],[1191,37,1243,35],[1191,39,1243,37,"keyEndIndex"],[1191,50,1243,48],[1191,51,1243,49],[1192,8,1244,6],[1193,8,1245,6,"value"],[1193,13,1245,11],[1193,16,1245,14,"fc"],[1193,18,1245,16],[1193,19,1245,17,"handleHasOptions"],[1193,35,1245,33],[1193,36,1245,34,"call"],[1193,40,1245,38],[1193,41,1245,39],[1193,45,1245,43],[1193,47,1245,45,"match"],[1193,52,1245,50],[1193,53,1245,51],[1193,54,1245,52],[1193,55,1245,53],[1193,56,1245,54,"trim"],[1193,60,1245,58],[1193,61,1245,59],[1193,62,1245,60],[1193,64,1245,62,"clonedOptions"],[1193,77,1245,75],[1193,78,1245,76],[1193,80,1245,78,"clonedOptions"],[1193,93,1245,91],[1193,94,1245,92],[1194,8,1246,6],[1194,12,1246,10,"value"],[1194,17,1246,15],[1194,21,1246,19,"match"],[1194,26,1246,24],[1194,27,1246,25],[1194,28,1246,26],[1194,29,1246,27],[1194,34,1246,32,"str"],[1194,37,1246,35],[1194,41,1246,39],[1194,42,1246,40,"isString"],[1194,50,1246,48],[1194,51,1246,49,"value"],[1194,56,1246,54],[1194,57,1246,55],[1194,59,1246,57],[1194,66,1246,64,"value"],[1194,71,1246,69],[1195,8,1247,6],[1195,12,1247,10],[1195,13,1247,11,"isString"],[1195,21,1247,19],[1195,22,1247,20,"value"],[1195,27,1247,25],[1195,28,1247,26],[1195,30,1247,28,"value"],[1195,35,1247,33],[1195,38,1247,36,"makeString"],[1195,48,1247,46],[1195,49,1247,47,"value"],[1195,54,1247,52],[1195,55,1247,53],[1196,8,1248,6],[1196,12,1248,10],[1196,13,1248,11,"value"],[1196,18,1248,16],[1196,20,1248,18],[1197,10,1249,8],[1197,14,1249,12],[1197,15,1249,13,"logger"],[1197,21,1249,19],[1197,22,1249,20,"warn"],[1197,26,1249,24],[1197,27,1249,25],[1197,48,1249,46,"match"],[1197,53,1249,51],[1197,54,1249,52],[1197,55,1249,53],[1197,56,1249,54],[1197,72,1249,70,"str"],[1197,75,1249,73],[1197,77,1249,75],[1197,78,1249,76],[1198,10,1250,8,"value"],[1198,15,1250,13],[1198,18,1250,16],[1198,20,1250,18],[1199,8,1251,6],[1200,8,1252,6],[1200,12,1252,10,"formatters"],[1200,22,1252,20],[1200,23,1252,21,"length"],[1200,29,1252,27],[1200,31,1252,29],[1201,10,1253,8,"value"],[1201,15,1253,13],[1201,18,1253,16,"formatters"],[1201,28,1253,26],[1201,29,1253,27,"reduce"],[1201,35,1253,33],[1201,36,1253,34],[1201,37,1253,35,"v"],[1201,38,1253,36],[1201,40,1253,38,"f"],[1201,41,1253,39],[1201,46,1253,44],[1201,50,1253,48],[1201,51,1253,49,"format"],[1201,57,1253,55],[1201,58,1253,56,"v"],[1201,59,1253,57],[1201,61,1253,59,"f"],[1201,62,1253,60],[1201,64,1253,62,"options"],[1201,71,1253,69],[1201,72,1253,70,"lng"],[1201,75,1253,73],[1201,77,1253,73,"Object"],[1201,83,1253,73],[1201,84,1253,73,"assign"],[1201,90,1253,73],[1201,95,1254,13,"options"],[1201,102,1254,20],[1202,12,1255,10,"interpolationkey"],[1202,28,1255,26],[1202,30,1255,28,"match"],[1202,35,1255,33],[1202,36,1255,34],[1202,37,1255,35],[1202,38,1255,36],[1202,39,1255,37,"trim"],[1202,43,1255,41],[1202,44,1255,42],[1203,10,1255,43],[1203,12,1256,9],[1203,13,1256,10],[1203,15,1256,12,"value"],[1203,20,1256,17],[1203,21,1256,18,"trim"],[1203,25,1256,22],[1203,26,1256,23],[1203,27,1256,24],[1203,28,1256,25],[1204,8,1257,6],[1205,8,1258,6,"str"],[1205,11,1258,9],[1205,14,1258,12,"str"],[1205,17,1258,15],[1205,18,1258,16,"replace"],[1205,25,1258,23],[1205,26,1258,24,"match"],[1205,31,1258,29],[1205,32,1258,30],[1205,33,1258,31],[1205,34,1258,32],[1205,36,1258,34,"value"],[1205,41,1258,39],[1205,42,1258,40],[1206,8,1259,6],[1206,12,1259,10],[1206,13,1259,11,"regexp"],[1206,19,1259,17],[1206,20,1259,18,"lastIndex"],[1206,29,1259,27],[1206,32,1259,30],[1206,33,1259,31],[1207,6,1260,4],[1208,6,1261,4],[1208,13,1261,11,"str"],[1208,16,1261,14],[1209,4,1262,2],[1210,2,1263,0],[1211,2,1265,0],[1211,8,1265,6,"parseFormatStr"],[1211,22,1265,20],[1211,25,1265,23,"formatStr"],[1211,34,1265,32],[1211,38,1265,36],[1212,4,1266,2],[1212,8,1266,6,"formatName"],[1212,18,1266,16],[1212,21,1266,19,"formatStr"],[1212,30,1266,28],[1212,31,1266,29,"toLowerCase"],[1212,42,1266,40],[1212,43,1266,41],[1212,44,1266,42],[1212,45,1266,43,"trim"],[1212,49,1266,47],[1212,50,1266,48],[1212,51,1266,49],[1213,4,1267,2],[1213,10,1267,8,"formatOptions"],[1213,23,1267,21],[1213,26,1267,24],[1213,27,1267,25],[1213,28,1267,26],[1214,4,1268,2],[1214,8,1268,6,"formatStr"],[1214,17,1268,15],[1214,18,1268,16,"indexOf"],[1214,25,1268,23],[1214,26,1268,24],[1214,29,1268,27],[1214,30,1268,28],[1214,33,1268,31],[1214,34,1268,32],[1214,35,1268,33],[1214,37,1268,35],[1215,6,1269,4],[1215,12,1269,10,"p"],[1215,13,1269,11],[1215,16,1269,14,"formatStr"],[1215,25,1269,23],[1215,26,1269,24,"split"],[1215,31,1269,29],[1215,32,1269,30],[1215,35,1269,33],[1215,36,1269,34],[1216,6,1270,4,"formatName"],[1216,16,1270,14],[1216,19,1270,17,"p"],[1216,20,1270,18],[1216,21,1270,19],[1216,22,1270,20],[1216,23,1270,21],[1216,24,1270,22,"toLowerCase"],[1216,35,1270,33],[1216,36,1270,34],[1216,37,1270,35],[1216,38,1270,36,"trim"],[1216,42,1270,40],[1216,43,1270,41],[1216,44,1270,42],[1217,6,1271,4],[1217,12,1271,10,"optStr"],[1217,18,1271,16],[1217,21,1271,19,"p"],[1217,22,1271,20],[1217,23,1271,21],[1217,24,1271,22],[1217,25,1271,23],[1217,26,1271,24,"substring"],[1217,35,1271,33],[1217,36,1271,34],[1217,37,1271,35],[1217,39,1271,37,"p"],[1217,40,1271,38],[1217,41,1271,39],[1217,42,1271,40],[1217,43,1271,41],[1217,44,1271,42,"length"],[1217,50,1271,48],[1217,53,1271,51],[1217,54,1271,52],[1217,55,1271,53],[1218,6,1272,4],[1218,10,1272,8,"formatName"],[1218,20,1272,18],[1218,25,1272,23],[1218,35,1272,33],[1218,39,1272,37,"optStr"],[1218,45,1272,43],[1218,46,1272,44,"indexOf"],[1218,53,1272,51],[1218,54,1272,52],[1218,57,1272,55],[1218,58,1272,56],[1218,61,1272,59],[1218,62,1272,60],[1218,64,1272,62],[1219,8,1273,6],[1219,12,1273,10],[1219,13,1273,11,"formatOptions"],[1219,26,1273,24],[1219,27,1273,25,"currency"],[1219,35,1273,33],[1219,37,1273,35,"formatOptions"],[1219,50,1273,48],[1219,51,1273,49,"currency"],[1219,59,1273,57],[1219,62,1273,60,"optStr"],[1219,68,1273,66],[1219,69,1273,67,"trim"],[1219,73,1273,71],[1219,74,1273,72],[1219,75,1273,73],[1220,6,1274,4],[1220,7,1274,5],[1220,13,1274,11],[1220,17,1274,15,"formatName"],[1220,27,1274,25],[1220,32,1274,30],[1220,46,1274,44],[1220,50,1274,48,"optStr"],[1220,56,1274,54],[1220,57,1274,55,"indexOf"],[1220,64,1274,62],[1220,65,1274,63],[1220,68,1274,66],[1220,69,1274,67],[1220,72,1274,70],[1220,73,1274,71],[1220,75,1274,73],[1221,8,1275,6],[1221,12,1275,10],[1221,13,1275,11,"formatOptions"],[1221,26,1275,24],[1221,27,1275,25,"range"],[1221,32,1275,30],[1221,34,1275,32,"formatOptions"],[1221,47,1275,45],[1221,48,1275,46,"range"],[1221,53,1275,51],[1221,56,1275,54,"optStr"],[1221,62,1275,60],[1221,63,1275,61,"trim"],[1221,67,1275,65],[1221,68,1275,66],[1221,69,1275,67],[1222,6,1276,4],[1222,7,1276,5],[1222,13,1276,11],[1223,8,1277,6],[1223,14,1277,12,"opts"],[1223,18,1277,16],[1223,21,1277,19,"optStr"],[1223,27,1277,25],[1223,28,1277,26,"split"],[1223,33,1277,31],[1223,34,1277,32],[1223,37,1277,35],[1223,38,1277,36],[1224,8,1278,6,"opts"],[1224,12,1278,10],[1224,13,1278,11,"forEach"],[1224,20,1278,18],[1224,21,1278,19,"opt"],[1224,24,1278,22],[1224,28,1278,26],[1225,10,1279,8],[1225,14,1279,12,"opt"],[1225,17,1279,15],[1225,19,1279,17],[1226,12,1280,10],[1226,18,1280,16],[1226,19,1280,17,"key"],[1226,22,1280,20],[1226,24,1280,22],[1226,27,1280,25,"rest"],[1226,31,1280,29],[1226,32,1280,30],[1226,35,1280,33,"opt"],[1226,38,1280,36],[1226,39,1280,37,"split"],[1226,44,1280,42],[1226,45,1280,43],[1226,48,1280,46],[1226,49,1280,47],[1227,12,1281,10],[1227,18,1281,16,"val"],[1227,21,1281,19],[1227,24,1281,22,"rest"],[1227,28,1281,26],[1227,29,1281,27,"join"],[1227,33,1281,31],[1227,34,1281,32],[1227,37,1281,35],[1227,38,1281,36],[1227,39,1281,37,"trim"],[1227,43,1281,41],[1227,44,1281,42],[1227,45,1281,43],[1227,46,1281,44,"replace"],[1227,53,1281,51],[1227,54,1281,52],[1227,64,1281,62],[1227,66,1281,64],[1227,68,1281,66],[1227,69,1281,67],[1228,12,1282,10],[1228,18,1282,16,"trimmedKey"],[1228,28,1282,26],[1228,31,1282,29,"key"],[1228,34,1282,32],[1228,35,1282,33,"trim"],[1228,39,1282,37],[1228,40,1282,38],[1228,41,1282,39],[1229,12,1283,10],[1229,16,1283,14],[1229,17,1283,15,"formatOptions"],[1229,30,1283,28],[1229,31,1283,29,"trimmedKey"],[1229,41,1283,39],[1229,42,1283,40],[1229,44,1283,42,"formatOptions"],[1229,57,1283,55],[1229,58,1283,56,"trimmedKey"],[1229,68,1283,66],[1229,69,1283,67],[1229,72,1283,70,"val"],[1229,75,1283,73],[1230,12,1284,10],[1230,16,1284,14,"val"],[1230,19,1284,17],[1230,24,1284,22],[1230,31,1284,29],[1230,33,1284,31,"formatOptions"],[1230,46,1284,44],[1230,47,1284,45,"trimmedKey"],[1230,57,1284,55],[1230,58,1284,56],[1230,61,1284,59],[1230,66,1284,64],[1231,12,1285,10],[1231,16,1285,14,"val"],[1231,19,1285,17],[1231,24,1285,22],[1231,30,1285,28],[1231,32,1285,30,"formatOptions"],[1231,45,1285,43],[1231,46,1285,44,"trimmedKey"],[1231,56,1285,54],[1231,57,1285,55],[1231,60,1285,58],[1231,64,1285,62],[1232,12,1286,10],[1232,16,1286,14],[1232,17,1286,15,"isNaN"],[1232,22,1286,20],[1232,23,1286,21,"val"],[1232,26,1286,24],[1232,27,1286,25],[1232,29,1286,27,"formatOptions"],[1232,42,1286,40],[1232,43,1286,41,"trimmedKey"],[1232,53,1286,51],[1232,54,1286,52],[1232,57,1286,55,"parseInt"],[1232,65,1286,63],[1232,66,1286,64,"val"],[1232,69,1286,67],[1232,71,1286,69],[1232,73,1286,71],[1232,74,1286,72],[1233,10,1287,8],[1234,8,1288,6],[1234,9,1288,7],[1234,10,1288,8],[1235,6,1289,4],[1236,4,1290,2],[1237,4,1291,2],[1237,11,1291,9],[1238,6,1292,4,"formatName"],[1238,16,1292,14],[1239,6,1293,4,"formatOptions"],[1240,4,1294,2],[1240,5,1294,3],[1241,2,1295,0],[1241,3,1295,1],[1242,2,1296,0],[1242,8,1296,6,"createCachedFormatter"],[1242,29,1296,27],[1242,32,1296,30,"fn"],[1242,34,1296,32],[1242,38,1296,36],[1243,4,1297,2],[1243,10,1297,8,"cache"],[1243,15,1297,13],[1243,18,1297,16],[1243,19,1297,17],[1243,20,1297,18],[1244,4,1298,2],[1244,11,1298,9],[1244,12,1298,10,"v"],[1244,13,1298,11],[1244,15,1298,13,"l"],[1244,16,1298,14],[1244,18,1298,16,"o"],[1244,19,1298,17],[1244,24,1298,22],[1245,6,1299,4],[1245,10,1299,8,"optForCache"],[1245,21,1299,19],[1245,24,1299,22,"o"],[1245,25,1299,23],[1246,6,1300,4],[1246,10,1300,8,"o"],[1246,11,1300,9],[1246,15,1300,13,"o"],[1246,16,1300,14],[1246,17,1300,15,"interpolationkey"],[1246,33,1300,31],[1246,37,1300,35,"o"],[1246,38,1300,36],[1246,39,1300,37,"formatParams"],[1246,51,1300,49],[1246,55,1300,53,"o"],[1246,56,1300,54],[1246,57,1300,55,"formatParams"],[1246,69,1300,67],[1246,70,1300,68,"o"],[1246,71,1300,69],[1246,72,1300,70,"interpolationkey"],[1246,88,1300,86],[1246,89,1300,87],[1246,93,1300,91,"o"],[1246,94,1300,92],[1246,95,1300,93,"o"],[1246,96,1300,94],[1246,97,1300,95,"interpolationkey"],[1246,113,1300,111],[1246,114,1300,112],[1246,116,1300,114],[1247,8,1301,6,"optForCache"],[1247,19,1301,17],[1247,22,1301,17,"Object"],[1247,28,1301,17],[1247,29,1301,17,"assign"],[1247,35,1301,17],[1247,40,1302,11,"optForCache"],[1247,51,1302,22],[1248,10,1303,8],[1248,11,1303,9,"o"],[1248,12,1303,10],[1248,13,1303,11,"interpolationkey"],[1248,29,1303,27],[1248,32,1303,30,"undefined"],[1249,8,1303,39],[1249,10,1304,7],[1250,6,1305,4],[1251,6,1306,4],[1251,12,1306,10,"key"],[1251,15,1306,13],[1251,18,1306,16,"l"],[1251,19,1306,17],[1251,22,1306,20,"JSON"],[1251,26,1306,24],[1251,27,1306,25,"stringify"],[1251,36,1306,34],[1251,37,1306,35,"optForCache"],[1251,48,1306,46],[1251,49,1306,47],[1252,6,1307,4],[1252,10,1307,8,"frm"],[1252,13,1307,11],[1252,16,1307,14,"cache"],[1252,21,1307,19],[1252,22,1307,20,"key"],[1252,25,1307,23],[1252,26,1307,24],[1253,6,1308,4],[1253,10,1308,8],[1253,11,1308,9,"frm"],[1253,14,1308,12],[1253,16,1308,14],[1254,8,1309,6,"frm"],[1254,11,1309,9],[1254,14,1309,12,"fn"],[1254,16,1309,14],[1254,17,1309,15,"getCleanedCode"],[1254,31,1309,29],[1254,32,1309,30,"l"],[1254,33,1309,31],[1254,34,1309,32],[1254,36,1309,34,"o"],[1254,37,1309,35],[1254,38,1309,36],[1255,8,1310,6,"cache"],[1255,13,1310,11],[1255,14,1310,12,"key"],[1255,17,1310,15],[1255,18,1310,16],[1255,21,1310,19,"frm"],[1255,24,1310,22],[1256,6,1311,4],[1257,6,1312,4],[1257,13,1312,11,"frm"],[1257,16,1312,14],[1257,17,1312,15,"v"],[1257,18,1312,16],[1257,19,1312,17],[1258,4,1313,2],[1258,5,1313,3],[1259,2,1314,0],[1259,3,1314,1],[1260,2,1315,0],[1260,8,1315,6,"createNonCachedFormatter"],[1260,32,1315,30],[1260,35,1315,33,"fn"],[1260,37,1315,35],[1260,41,1315,39],[1260,42,1315,40,"v"],[1260,43,1315,41],[1260,45,1315,43,"l"],[1260,46,1315,44],[1260,48,1315,46,"o"],[1260,49,1315,47],[1260,54,1315,52,"fn"],[1260,56,1315,54],[1260,57,1315,55,"getCleanedCode"],[1260,71,1315,69],[1260,72,1315,70,"l"],[1260,73,1315,71],[1260,74,1315,72],[1260,76,1315,74,"o"],[1260,77,1315,75],[1260,78,1315,76],[1260,79,1315,77,"v"],[1260,80,1315,78],[1260,81,1315,79],[1261,2,1316,0],[1261,8,1316,6,"Formatter"],[1261,17,1316,15],[1261,18,1316,16],[1262,4,1317,2,"constructor"],[1262,15,1317,13,"constructor"],[1262,16,1317,14,"options"],[1262,23,1317,21],[1262,26,1317,24],[1262,27,1317,25],[1262,28,1317,26],[1262,30,1317,28],[1263,6,1318,4],[1263,10,1318,8],[1263,11,1318,9,"logger"],[1263,17,1318,15],[1263,20,1318,18,"baseLogger"],[1263,30,1318,28],[1263,31,1318,29,"create"],[1263,37,1318,35],[1263,38,1318,36],[1263,49,1318,47],[1263,50,1318,48],[1264,6,1319,4],[1264,10,1319,8],[1264,11,1319,9,"options"],[1264,18,1319,16],[1264,21,1319,19,"options"],[1264,28,1319,26],[1265,6,1320,4],[1265,10,1320,8],[1265,11,1320,9,"init"],[1265,15,1320,13],[1265,16,1320,14,"options"],[1265,23,1320,21],[1265,24,1320,22],[1266,4,1321,2],[1267,4,1322,2,"init"],[1267,8,1322,6,"init"],[1267,9,1322,7,"services"],[1267,17,1322,15],[1267,19,1322,17,"options"],[1267,26,1322,24],[1267,29,1322,27],[1268,6,1323,4,"interpolation"],[1268,19,1323,17],[1268,21,1323,19],[1268,22,1323,20],[1269,4,1324,2],[1269,5,1324,3],[1269,7,1324,5],[1270,6,1325,4],[1270,10,1325,8],[1270,11,1325,9,"formatSeparator"],[1270,26,1325,24],[1270,29,1325,27,"options"],[1270,36,1325,34],[1270,37,1325,35,"interpolation"],[1270,50,1325,48],[1270,51,1325,49,"formatSeparator"],[1270,66,1325,64],[1270,70,1325,68],[1270,73,1325,71],[1271,6,1326,4],[1271,12,1326,10,"cf"],[1271,14,1326,12],[1271,17,1326,15,"options"],[1271,24,1326,22],[1271,25,1326,23,"cacheInBuiltFormats"],[1271,44,1326,42],[1271,47,1326,45,"createCachedFormatter"],[1271,68,1326,66],[1271,71,1326,69,"createNonCachedFormatter"],[1271,95,1326,93],[1272,6,1327,4],[1272,10,1327,8],[1272,11,1327,9,"formats"],[1272,18,1327,16],[1272,21,1327,19],[1273,8,1328,6,"number"],[1273,14,1328,12],[1273,16,1328,14,"cf"],[1273,18,1328,16],[1273,19,1328,17],[1273,20,1328,18,"lng"],[1273,23,1328,21],[1273,25,1328,23,"opt"],[1273,28,1328,26],[1273,33,1328,31],[1274,10,1329,8],[1274,16,1329,14,"formatter"],[1274,25,1329,23],[1274,28,1329,26],[1274,32,1329,30,"Intl"],[1274,36,1329,34],[1274,37,1329,35,"NumberFormat"],[1274,49,1329,47],[1274,50,1329,48,"lng"],[1274,53,1329,51],[1274,55,1329,51,"Object"],[1274,61,1329,51],[1274,62,1329,51,"assign"],[1274,68,1329,51],[1274,73,1330,13,"opt"],[1274,76,1330,16],[1274,77,1331,9],[1274,78,1331,10],[1275,10,1332,8],[1275,17,1332,15,"val"],[1275,20,1332,18],[1275,24,1332,22,"formatter"],[1275,33,1332,31],[1275,34,1332,32,"format"],[1275,40,1332,38],[1275,41,1332,39,"val"],[1275,44,1332,42],[1275,45,1332,43],[1276,8,1333,6],[1276,9,1333,7],[1276,10,1333,8],[1277,8,1334,6,"currency"],[1277,16,1334,14],[1277,18,1334,16,"cf"],[1277,20,1334,18],[1277,21,1334,19],[1277,22,1334,20,"lng"],[1277,25,1334,23],[1277,27,1334,25,"opt"],[1277,30,1334,28],[1277,35,1334,33],[1278,10,1335,8],[1278,16,1335,14,"formatter"],[1278,25,1335,23],[1278,28,1335,26],[1278,32,1335,30,"Intl"],[1278,36,1335,34],[1278,37,1335,35,"NumberFormat"],[1278,49,1335,47],[1278,50,1335,48,"lng"],[1278,53,1335,51],[1278,55,1335,51,"Object"],[1278,61,1335,51],[1278,62,1335,51,"assign"],[1278,68,1335,51],[1278,73,1336,13,"opt"],[1278,76,1336,16],[1279,12,1337,10,"style"],[1279,17,1337,15],[1279,19,1337,17],[1280,10,1337,27],[1280,12,1338,9],[1280,13,1338,10],[1281,10,1339,8],[1281,17,1339,15,"val"],[1281,20,1339,18],[1281,24,1339,22,"formatter"],[1281,33,1339,31],[1281,34,1339,32,"format"],[1281,40,1339,38],[1281,41,1339,39,"val"],[1281,44,1339,42],[1281,45,1339,43],[1282,8,1340,6],[1282,9,1340,7],[1282,10,1340,8],[1283,8,1341,6,"datetime"],[1283,16,1341,14],[1283,18,1341,16,"cf"],[1283,20,1341,18],[1283,21,1341,19],[1283,22,1341,20,"lng"],[1283,25,1341,23],[1283,27,1341,25,"opt"],[1283,30,1341,28],[1283,35,1341,33],[1284,10,1342,8],[1284,16,1342,14,"formatter"],[1284,25,1342,23],[1284,28,1342,26],[1284,32,1342,30,"Intl"],[1284,36,1342,34],[1284,37,1342,35,"DateTimeFormat"],[1284,51,1342,49],[1284,52,1342,50,"lng"],[1284,55,1342,53],[1284,57,1342,53,"Object"],[1284,63,1342,53],[1284,64,1342,53,"assign"],[1284,70,1342,53],[1284,75,1343,13,"opt"],[1284,78,1343,16],[1284,79,1344,9],[1284,80,1344,10],[1285,10,1345,8],[1285,17,1345,15,"val"],[1285,20,1345,18],[1285,24,1345,22,"formatter"],[1285,33,1345,31],[1285,34,1345,32,"format"],[1285,40,1345,38],[1285,41,1345,39,"val"],[1285,44,1345,42],[1285,45,1345,43],[1286,8,1346,6],[1286,9,1346,7],[1286,10,1346,8],[1287,8,1347,6,"relativetime"],[1287,20,1347,18],[1287,22,1347,20,"cf"],[1287,24,1347,22],[1287,25,1347,23],[1287,26,1347,24,"lng"],[1287,29,1347,27],[1287,31,1347,29,"opt"],[1287,34,1347,32],[1287,39,1347,37],[1288,10,1348,8],[1288,16,1348,14,"formatter"],[1288,25,1348,23],[1288,28,1348,26],[1288,32,1348,30,"Intl"],[1288,36,1348,34],[1288,37,1348,35,"RelativeTimeFormat"],[1288,55,1348,53],[1288,56,1348,54,"lng"],[1288,59,1348,57],[1288,61,1348,57,"Object"],[1288,67,1348,57],[1288,68,1348,57,"assign"],[1288,74,1348,57],[1288,79,1349,13,"opt"],[1288,82,1349,16],[1288,83,1350,9],[1288,84,1350,10],[1289,10,1351,8],[1289,17,1351,15,"val"],[1289,20,1351,18],[1289,24,1351,22,"formatter"],[1289,33,1351,31],[1289,34,1351,32,"format"],[1289,40,1351,38],[1289,41,1351,39,"val"],[1289,44,1351,42],[1289,46,1351,44,"opt"],[1289,49,1351,47],[1289,50,1351,48,"range"],[1289,55,1351,53],[1289,59,1351,57],[1289,64,1351,62],[1289,65,1351,63],[1290,8,1352,6],[1290,9,1352,7],[1290,10,1352,8],[1291,8,1353,6,"list"],[1291,12,1353,10],[1291,14,1353,12,"cf"],[1291,16,1353,14],[1291,17,1353,15],[1291,18,1353,16,"lng"],[1291,21,1353,19],[1291,23,1353,21,"opt"],[1291,26,1353,24],[1291,31,1353,29],[1292,10,1354,8],[1292,16,1354,14,"formatter"],[1292,25,1354,23],[1292,28,1354,26],[1292,32,1354,30,"Intl"],[1292,36,1354,34],[1292,37,1354,35,"ListFormat"],[1292,47,1354,45],[1292,48,1354,46,"lng"],[1292,51,1354,49],[1292,53,1354,49,"Object"],[1292,59,1354,49],[1292,60,1354,49,"assign"],[1292,66,1354,49],[1292,71,1355,13,"opt"],[1292,74,1355,16],[1292,75,1356,9],[1292,76,1356,10],[1293,10,1357,8],[1293,17,1357,15,"val"],[1293,20,1357,18],[1293,24,1357,22,"formatter"],[1293,33,1357,31],[1293,34,1357,32,"format"],[1293,40,1357,38],[1293,41,1357,39,"val"],[1293,44,1357,42],[1293,45,1357,43],[1294,8,1358,6],[1294,9,1358,7],[1295,6,1359,4],[1295,7,1359,5],[1296,4,1360,2],[1297,4,1361,2,"add"],[1297,7,1361,5,"add"],[1297,8,1361,6,"name"],[1297,12,1361,10],[1297,14,1361,12,"fc"],[1297,16,1361,14],[1297,18,1361,16],[1298,6,1362,4],[1298,10,1362,8],[1298,11,1362,9,"formats"],[1298,18,1362,16],[1298,19,1362,17,"name"],[1298,23,1362,21],[1298,24,1362,22,"toLowerCase"],[1298,35,1362,33],[1298,36,1362,34],[1298,37,1362,35],[1298,38,1362,36,"trim"],[1298,42,1362,40],[1298,43,1362,41],[1298,44,1362,42],[1298,45,1362,43],[1298,48,1362,46,"fc"],[1298,50,1362,48],[1299,4,1363,2],[1300,4,1364,2,"addCached"],[1300,13,1364,11,"addCached"],[1300,14,1364,12,"name"],[1300,18,1364,16],[1300,20,1364,18,"fc"],[1300,22,1364,20],[1300,24,1364,22],[1301,6,1365,4],[1301,10,1365,8],[1301,11,1365,9,"formats"],[1301,18,1365,16],[1301,19,1365,17,"name"],[1301,23,1365,21],[1301,24,1365,22,"toLowerCase"],[1301,35,1365,33],[1301,36,1365,34],[1301,37,1365,35],[1301,38,1365,36,"trim"],[1301,42,1365,40],[1301,43,1365,41],[1301,44,1365,42],[1301,45,1365,43],[1301,48,1365,46,"createCachedFormatter"],[1301,69,1365,67],[1301,70,1365,68,"fc"],[1301,72,1365,70],[1301,73,1365,71],[1302,4,1366,2],[1303,4,1367,2,"format"],[1303,10,1367,8,"format"],[1303,11,1367,9,"value"],[1303,16,1367,14],[1303,18,1367,16,"format"],[1303,24,1367,22],[1303,26,1367,24,"lng"],[1303,29,1367,27],[1303,31,1367,29,"options"],[1303,38,1367,36],[1303,41,1367,39],[1303,42,1367,40],[1303,43,1367,41],[1303,45,1367,43],[1304,6,1368,4],[1304,12,1368,10,"formats"],[1304,19,1368,17],[1304,22,1368,20,"format"],[1304,28,1368,26],[1304,29,1368,27,"split"],[1304,34,1368,32],[1304,35,1368,33],[1304,39,1368,37],[1304,40,1368,38,"formatSeparator"],[1304,55,1368,53],[1304,56,1368,54],[1305,6,1369,4],[1305,10,1369,8,"formats"],[1305,17,1369,15],[1305,18,1369,16,"length"],[1305,24,1369,22],[1305,27,1369,25],[1305,28,1369,26],[1305,32,1369,30,"formats"],[1305,39,1369,37],[1305,40,1369,38],[1305,41,1369,39],[1305,42,1369,40],[1305,43,1369,41,"indexOf"],[1305,50,1369,48],[1305,51,1369,49],[1305,54,1369,52],[1305,55,1369,53],[1305,58,1369,56],[1305,59,1369,57],[1305,63,1369,61,"formats"],[1305,70,1369,68],[1305,71,1369,69],[1305,72,1369,70],[1305,73,1369,71],[1305,74,1369,72,"indexOf"],[1305,81,1369,79],[1305,82,1369,80],[1305,85,1369,83],[1305,86,1369,84],[1305,89,1369,87],[1305,90,1369,88],[1305,94,1369,92,"formats"],[1305,101,1369,99],[1305,102,1369,100,"find"],[1305,106,1369,104],[1305,107,1369,105,"f"],[1305,108,1369,106],[1305,112,1369,110,"f"],[1305,113,1369,111],[1305,114,1369,112,"indexOf"],[1305,121,1369,119],[1305,122,1369,120],[1305,125,1369,123],[1305,126,1369,124],[1305,129,1369,127],[1305,130,1369,128],[1305,131,1369,129],[1305,132,1369,130],[1305,134,1369,132],[1306,8,1370,6],[1306,14,1370,12,"lastIndex"],[1306,23,1370,21],[1306,26,1370,24,"formats"],[1306,33,1370,31],[1306,34,1370,32,"findIndex"],[1306,43,1370,41],[1306,44,1370,42,"f"],[1306,45,1370,43],[1306,49,1370,47,"f"],[1306,50,1370,48],[1306,51,1370,49,"indexOf"],[1306,58,1370,56],[1306,59,1370,57],[1306,62,1370,60],[1306,63,1370,61],[1306,66,1370,64],[1306,67,1370,65],[1306,68,1370,66],[1306,69,1370,67],[1307,8,1371,6,"formats"],[1307,15,1371,13],[1307,16,1371,14],[1307,17,1371,15],[1307,18,1371,16],[1307,21,1371,19],[1307,22,1371,20,"formats"],[1307,29,1371,27],[1307,30,1371,28],[1307,31,1371,29],[1307,32,1371,30],[1307,34,1371,32],[1307,37,1371,35,"formats"],[1307,44,1371,42],[1307,45,1371,43,"splice"],[1307,51,1371,49],[1307,52,1371,50],[1307,53,1371,51],[1307,55,1371,53,"lastIndex"],[1307,64,1371,62],[1307,65,1371,63],[1307,66,1371,64],[1307,67,1371,65,"join"],[1307,71,1371,69],[1307,72,1371,70],[1307,76,1371,74],[1307,77,1371,75,"formatSeparator"],[1307,92,1371,90],[1307,93,1371,91],[1308,6,1372,4],[1309,6,1373,4],[1309,12,1373,10,"result"],[1309,18,1373,16],[1309,21,1373,19,"formats"],[1309,28,1373,26],[1309,29,1373,27,"reduce"],[1309,35,1373,33],[1309,36,1373,34],[1309,37,1373,35,"mem"],[1309,40,1373,38],[1309,42,1373,40,"f"],[1309,43,1373,41],[1309,48,1373,46],[1310,8,1374,6],[1310,14,1374,12],[1311,10,1375,8,"formatName"],[1311,20,1375,18],[1312,10,1376,8,"formatOptions"],[1313,8,1377,6],[1313,9,1377,7],[1313,12,1377,10,"parseFormatStr"],[1313,26,1377,24],[1313,27,1377,25,"f"],[1313,28,1377,26],[1313,29,1377,27],[1314,8,1378,6],[1314,12,1378,10],[1314,16,1378,14],[1314,17,1378,15,"formats"],[1314,24,1378,22],[1314,25,1378,23,"formatName"],[1314,35,1378,33],[1314,36,1378,34],[1314,38,1378,36],[1315,10,1379,8],[1315,14,1379,12,"formatted"],[1315,23,1379,21],[1315,26,1379,24,"mem"],[1315,29,1379,27],[1316,10,1380,8],[1316,14,1380,12],[1317,12,1381,10],[1317,18,1381,16,"valOptions"],[1317,28,1381,26],[1317,31,1381,29,"options"],[1317,38,1381,36],[1317,40,1381,38,"formatParams"],[1317,52,1381,50],[1317,55,1381,53,"options"],[1317,62,1381,60],[1317,63,1381,61,"interpolationkey"],[1317,79,1381,77],[1317,80,1381,78],[1317,84,1381,82],[1317,85,1381,83],[1317,86,1381,84],[1318,12,1382,10],[1318,18,1382,16,"l"],[1318,19,1382,17],[1318,22,1382,20,"valOptions"],[1318,32,1382,30],[1318,33,1382,31,"locale"],[1318,39,1382,37],[1318,43,1382,41,"valOptions"],[1318,53,1382,51],[1318,54,1382,52,"lng"],[1318,57,1382,55],[1318,61,1382,59,"options"],[1318,68,1382,66],[1318,69,1382,67,"locale"],[1318,75,1382,73],[1318,79,1382,77,"options"],[1318,86,1382,84],[1318,87,1382,85,"lng"],[1318,90,1382,88],[1318,94,1382,92,"lng"],[1318,97,1382,95],[1319,12,1383,10,"formatted"],[1319,21,1383,19],[1319,24,1383,22],[1319,28,1383,26],[1319,29,1383,27,"formats"],[1319,36,1383,34],[1319,37,1383,35,"formatName"],[1319,47,1383,45],[1319,48,1383,46],[1319,49,1383,47,"mem"],[1319,52,1383,50],[1319,54,1383,52,"l"],[1319,55,1383,53],[1319,57,1383,53,"Object"],[1319,63,1383,53],[1319,64,1383,53,"assign"],[1319,70,1383,53],[1319,75,1384,15,"formatOptions"],[1319,88,1384,28],[1319,90,1385,15,"options"],[1319,97,1385,22],[1319,99,1386,15,"valOptions"],[1319,109,1386,25],[1319,110,1387,11],[1319,111,1387,12],[1320,10,1388,8],[1320,11,1388,9],[1320,12,1388,10],[1320,19,1388,17,"error"],[1320,24,1388,22],[1320,26,1388,24],[1321,12,1389,10],[1321,16,1389,14],[1321,17,1389,15,"logger"],[1321,23,1389,21],[1321,24,1389,22,"warn"],[1321,28,1389,26],[1321,29,1389,27,"error"],[1321,34,1389,32],[1321,35,1389,33],[1322,10,1390,8],[1323,10,1391,8],[1323,17,1391,15,"formatted"],[1323,26,1391,24],[1324,8,1392,6],[1324,9,1392,7],[1324,15,1392,13],[1325,10,1393,8],[1325,14,1393,12],[1325,15,1393,13,"logger"],[1325,21,1393,19],[1325,22,1393,20,"warn"],[1325,26,1393,24],[1325,27,1393,25],[1325,63,1393,61,"formatName"],[1325,73,1393,71],[1325,75,1393,73],[1325,76,1393,74],[1326,8,1394,6],[1327,8,1395,6],[1327,15,1395,13,"mem"],[1327,18,1395,16],[1328,6,1396,4],[1328,7,1396,5],[1328,9,1396,7,"value"],[1328,14,1396,12],[1328,15,1396,13],[1329,6,1397,4],[1329,13,1397,11,"result"],[1329,19,1397,17],[1330,4,1398,2],[1331,2,1399,0],[1332,2,1401,0],[1332,8,1401,6,"removePending"],[1332,21,1401,19],[1332,24,1401,22,"removePending"],[1332,25,1401,23,"q"],[1332,26,1401,24],[1332,28,1401,26,"name"],[1332,32,1401,30],[1332,37,1401,35],[1333,4,1402,2],[1333,8,1402,6,"q"],[1333,9,1402,7],[1333,10,1402,8,"pending"],[1333,17,1402,15],[1333,18,1402,16,"name"],[1333,22,1402,20],[1333,23,1402,21],[1333,28,1402,26,"undefined"],[1333,37,1402,35],[1333,39,1402,37],[1334,6,1403,4],[1334,13,1403,11,"q"],[1334,14,1403,12],[1334,15,1403,13,"pending"],[1334,22,1403,20],[1334,23,1403,21,"name"],[1334,27,1403,25],[1334,28,1403,26],[1335,6,1404,4,"q"],[1335,7,1404,5],[1335,8,1404,6,"pendingCount"],[1335,20,1404,18],[1335,22,1404,20],[1336,4,1405,2],[1337,2,1406,0],[1337,3,1406,1],[1338,2,1407,0],[1338,8,1407,6,"Connector"],[1338,17,1407,15],[1338,26,1407,24,"EventEmitter"],[1338,38,1407,36],[1338,39,1407,37],[1339,4,1408,2,"constructor"],[1339,15,1408,13,"constructor"],[1339,16,1408,14,"backend"],[1339,23,1408,21],[1339,25,1408,23,"store"],[1339,30,1408,28],[1339,32,1408,30,"services"],[1339,40,1408,38],[1339,42,1408,40,"options"],[1339,49,1408,47],[1339,52,1408,50],[1339,53,1408,51],[1339,54,1408,52],[1339,56,1408,54],[1340,6,1409,4],[1340,11,1409,9],[1340,12,1409,10],[1340,13,1409,11],[1341,6,1410,4],[1341,10,1410,8],[1341,11,1410,9,"backend"],[1341,18,1410,16],[1341,21,1410,19,"backend"],[1341,28,1410,26],[1342,6,1411,4],[1342,10,1411,8],[1342,11,1411,9,"store"],[1342,16,1411,14],[1342,19,1411,17,"store"],[1342,24,1411,22],[1343,6,1412,4],[1343,10,1412,8],[1343,11,1412,9,"services"],[1343,19,1412,17],[1343,22,1412,20,"services"],[1343,30,1412,28],[1344,6,1413,4],[1344,10,1413,8],[1344,11,1413,9,"languageUtils"],[1344,24,1413,22],[1344,27,1413,25,"services"],[1344,35,1413,33],[1344,36,1413,34,"languageUtils"],[1344,49,1413,47],[1345,6,1414,4],[1345,10,1414,8],[1345,11,1414,9,"options"],[1345,18,1414,16],[1345,21,1414,19,"options"],[1345,28,1414,26],[1346,6,1415,4],[1346,10,1415,8],[1346,11,1415,9,"logger"],[1346,17,1415,15],[1346,20,1415,18,"baseLogger"],[1346,30,1415,28],[1346,31,1415,29,"create"],[1346,37,1415,35],[1346,38,1415,36],[1346,56,1415,54],[1346,57,1415,55],[1347,6,1416,4],[1347,10,1416,8],[1347,11,1416,9,"waitingReads"],[1347,23,1416,21],[1347,26,1416,24],[1347,28,1416,26],[1348,6,1417,4],[1348,10,1417,8],[1348,11,1417,9,"maxParallelReads"],[1348,27,1417,25],[1348,30,1417,28,"options"],[1348,37,1417,35],[1348,38,1417,36,"maxParallelReads"],[1348,54,1417,52],[1348,58,1417,56],[1348,60,1417,58],[1349,6,1418,4],[1349,10,1418,8],[1349,11,1418,9,"readingCalls"],[1349,23,1418,21],[1349,26,1418,24],[1349,27,1418,25],[1350,6,1419,4],[1350,10,1419,8],[1350,11,1419,9,"maxRetries"],[1350,21,1419,19],[1350,24,1419,22,"options"],[1350,31,1419,29],[1350,32,1419,30,"maxRetries"],[1350,42,1419,40],[1350,46,1419,44],[1350,47,1419,45],[1350,50,1419,48,"options"],[1350,57,1419,55],[1350,58,1419,56,"maxRetries"],[1350,68,1419,66],[1350,71,1419,69],[1350,72,1419,70],[1351,6,1420,4],[1351,10,1420,8],[1351,11,1420,9,"retryTimeout"],[1351,23,1420,21],[1351,26,1420,24,"options"],[1351,33,1420,31],[1351,34,1420,32,"retryTimeout"],[1351,46,1420,44],[1351,50,1420,48],[1351,51,1420,49],[1351,54,1420,52,"options"],[1351,61,1420,59],[1351,62,1420,60,"retryTimeout"],[1351,74,1420,72],[1351,77,1420,75],[1351,80,1420,78],[1352,6,1421,4],[1352,10,1421,8],[1352,11,1421,9,"state"],[1352,16,1421,14],[1352,19,1421,17],[1352,20,1421,18],[1352,21,1421,19],[1353,6,1422,4],[1353,10,1422,8],[1353,11,1422,9,"queue"],[1353,16,1422,14],[1353,19,1422,17],[1353,21,1422,19],[1354,6,1423,4],[1354,10,1423,8],[1354,11,1423,9,"backend"],[1354,18,1423,16],[1354,20,1423,18,"init"],[1354,24,1423,22],[1354,27,1423,25,"services"],[1354,35,1423,33],[1354,37,1423,35,"options"],[1354,44,1423,42],[1354,45,1423,43,"backend"],[1354,52,1423,50],[1354,54,1423,52,"options"],[1354,61,1423,59],[1354,62,1423,60],[1355,4,1424,2],[1356,4,1425,2,"queueLoad"],[1356,13,1425,11,"queueLoad"],[1356,14,1425,12,"languages"],[1356,23,1425,21],[1356,25,1425,23,"namespaces"],[1356,35,1425,33],[1356,37,1425,35,"options"],[1356,44,1425,42],[1356,46,1425,44,"callback"],[1356,54,1425,52],[1356,56,1425,54],[1357,6,1426,4],[1357,12,1426,10,"toLoad"],[1357,18,1426,16],[1357,21,1426,19],[1357,22,1426,20],[1357,23,1426,21],[1358,6,1427,4],[1358,12,1427,10,"pending"],[1358,19,1427,17],[1358,22,1427,20],[1358,23,1427,21],[1358,24,1427,22],[1359,6,1428,4],[1359,12,1428,10,"toLoadLanguages"],[1359,27,1428,25],[1359,30,1428,28],[1359,31,1428,29],[1359,32,1428,30],[1360,6,1429,4],[1360,12,1429,10,"toLoadNamespaces"],[1360,28,1429,26],[1360,31,1429,29],[1360,32,1429,30],[1360,33,1429,31],[1361,6,1430,4,"languages"],[1361,15,1430,13],[1361,16,1430,14,"forEach"],[1361,23,1430,21],[1361,24,1430,22,"lng"],[1361,27,1430,25],[1361,31,1430,29],[1362,8,1431,6],[1362,12,1431,10,"hasAllNamespaces"],[1362,28,1431,26],[1362,31,1431,29],[1362,35,1431,33],[1363,8,1432,6,"namespaces"],[1363,18,1432,16],[1363,19,1432,17,"forEach"],[1363,26,1432,24],[1363,27,1432,25,"ns"],[1363,29,1432,27],[1363,33,1432,31],[1364,10,1433,8],[1364,16,1433,14,"name"],[1364,20,1433,18],[1364,23,1433,21],[1364,26,1433,24,"lng"],[1364,29,1433,27],[1364,33,1433,31,"ns"],[1364,35,1433,33],[1364,37,1433,35],[1365,10,1434,8],[1365,14,1434,12],[1365,15,1434,13,"options"],[1365,22,1434,20],[1365,23,1434,21,"reload"],[1365,29,1434,27],[1365,33,1434,31],[1365,37,1434,35],[1365,38,1434,36,"store"],[1365,43,1434,41],[1365,44,1434,42,"hasResourceBundle"],[1365,61,1434,59],[1365,62,1434,60,"lng"],[1365,65,1434,63],[1365,67,1434,65,"ns"],[1365,69,1434,67],[1365,70,1434,68],[1365,72,1434,70],[1366,12,1435,10],[1366,16,1435,14],[1366,17,1435,15,"state"],[1366,22,1435,20],[1366,23,1435,21,"name"],[1366,27,1435,25],[1366,28,1435,26],[1366,31,1435,29],[1366,32,1435,30],[1367,10,1436,8],[1367,11,1436,9],[1367,17,1436,15],[1367,21,1436,19],[1367,25,1436,23],[1367,26,1436,24,"state"],[1367,31,1436,29],[1367,32,1436,30,"name"],[1367,36,1436,34],[1367,37,1436,35],[1367,40,1436,38],[1367,41,1436,39],[1367,43,1436,41],[1367,44,1436,42],[1367,49,1436,48],[1367,53,1436,52],[1367,57,1436,56],[1367,58,1436,57,"state"],[1367,63,1436,62],[1367,64,1436,63,"name"],[1367,68,1436,67],[1367,69,1436,68],[1367,74,1436,73],[1367,75,1436,74],[1367,77,1436,76],[1368,12,1437,10],[1368,16,1437,14,"pending"],[1368,23,1437,21],[1368,24,1437,22,"name"],[1368,28,1437,26],[1368,29,1437,27],[1368,34,1437,32,"undefined"],[1368,43,1437,41],[1368,45,1437,43,"pending"],[1368,52,1437,50],[1368,53,1437,51,"name"],[1368,57,1437,55],[1368,58,1437,56],[1368,61,1437,59],[1368,65,1437,63],[1369,10,1438,8],[1369,11,1438,9],[1369,17,1438,15],[1370,12,1439,10],[1370,16,1439,14],[1370,17,1439,15,"state"],[1370,22,1439,20],[1370,23,1439,21,"name"],[1370,27,1439,25],[1370,28,1439,26],[1370,31,1439,29],[1370,32,1439,30],[1371,12,1440,10,"hasAllNamespaces"],[1371,28,1440,26],[1371,31,1440,29],[1371,36,1440,34],[1372,12,1441,10],[1372,16,1441,14,"pending"],[1372,23,1441,21],[1372,24,1441,22,"name"],[1372,28,1441,26],[1372,29,1441,27],[1372,34,1441,32,"undefined"],[1372,43,1441,41],[1372,45,1441,43,"pending"],[1372,52,1441,50],[1372,53,1441,51,"name"],[1372,57,1441,55],[1372,58,1441,56],[1372,61,1441,59],[1372,65,1441,63],[1373,12,1442,10],[1373,16,1442,14,"toLoad"],[1373,22,1442,20],[1373,23,1442,21,"name"],[1373,27,1442,25],[1373,28,1442,26],[1373,33,1442,31,"undefined"],[1373,42,1442,40],[1373,44,1442,42,"toLoad"],[1373,50,1442,48],[1373,51,1442,49,"name"],[1373,55,1442,53],[1373,56,1442,54],[1373,59,1442,57],[1373,63,1442,61],[1374,12,1443,10],[1374,16,1443,14,"toLoadNamespaces"],[1374,32,1443,30],[1374,33,1443,31,"ns"],[1374,35,1443,33],[1374,36,1443,34],[1374,41,1443,39,"undefined"],[1374,50,1443,48],[1374,52,1443,50,"toLoadNamespaces"],[1374,68,1443,66],[1374,69,1443,67,"ns"],[1374,71,1443,69],[1374,72,1443,70],[1374,75,1443,73],[1374,79,1443,77],[1375,10,1444,8],[1376,8,1445,6],[1376,9,1445,7],[1376,10,1445,8],[1377,8,1446,6],[1377,12,1446,10],[1377,13,1446,11,"hasAllNamespaces"],[1377,29,1446,27],[1377,31,1446,29,"toLoadLanguages"],[1377,46,1446,44],[1377,47,1446,45,"lng"],[1377,50,1446,48],[1377,51,1446,49],[1377,54,1446,52],[1377,58,1446,56],[1378,6,1447,4],[1378,7,1447,5],[1378,8,1447,6],[1379,6,1448,4],[1379,10,1448,8,"Object"],[1379,16,1448,14],[1379,17,1448,15,"keys"],[1379,21,1448,19],[1379,22,1448,20,"toLoad"],[1379,28,1448,26],[1379,29,1448,27],[1379,30,1448,28,"length"],[1379,36,1448,34],[1379,40,1448,38,"Object"],[1379,46,1448,44],[1379,47,1448,45,"keys"],[1379,51,1448,49],[1379,52,1448,50,"pending"],[1379,59,1448,57],[1379,60,1448,58],[1379,61,1448,59,"length"],[1379,67,1448,65],[1379,69,1448,67],[1380,8,1449,6],[1380,12,1449,10],[1380,13,1449,11,"queue"],[1380,18,1449,16],[1380,19,1449,17,"push"],[1380,23,1449,21],[1380,24,1449,22],[1381,10,1450,8,"pending"],[1381,17,1450,15],[1382,10,1451,8,"pendingCount"],[1382,22,1451,20],[1382,24,1451,22,"Object"],[1382,30,1451,28],[1382,31,1451,29,"keys"],[1382,35,1451,33],[1382,36,1451,34,"pending"],[1382,43,1451,41],[1382,44,1451,42],[1382,45,1451,43,"length"],[1382,51,1451,49],[1383,10,1452,8,"loaded"],[1383,16,1452,14],[1383,18,1452,16],[1383,19,1452,17],[1383,20,1452,18],[1384,10,1453,8,"errors"],[1384,16,1453,14],[1384,18,1453,16],[1384,20,1453,18],[1385,10,1454,8,"callback"],[1386,8,1455,6],[1386,9,1455,7],[1386,10,1455,8],[1387,6,1456,4],[1388,6,1457,4],[1388,13,1457,11],[1389,8,1458,6,"toLoad"],[1389,14,1458,12],[1389,16,1458,14,"Object"],[1389,22,1458,20],[1389,23,1458,21,"keys"],[1389,27,1458,25],[1389,28,1458,26,"toLoad"],[1389,34,1458,32],[1389,35,1458,33],[1390,8,1459,6,"pending"],[1390,15,1459,13],[1390,17,1459,15,"Object"],[1390,23,1459,21],[1390,24,1459,22,"keys"],[1390,28,1459,26],[1390,29,1459,27,"pending"],[1390,36,1459,34],[1390,37,1459,35],[1391,8,1460,6,"toLoadLanguages"],[1391,23,1460,21],[1391,25,1460,23,"Object"],[1391,31,1460,29],[1391,32,1460,30,"keys"],[1391,36,1460,34],[1391,37,1460,35,"toLoadLanguages"],[1391,52,1460,50],[1391,53,1460,51],[1392,8,1461,6,"toLoadNamespaces"],[1392,24,1461,22],[1392,26,1461,24,"Object"],[1392,32,1461,30],[1392,33,1461,31,"keys"],[1392,37,1461,35],[1392,38,1461,36,"toLoadNamespaces"],[1392,54,1461,52],[1393,6,1462,4],[1393,7,1462,5],[1394,4,1463,2],[1395,4,1464,2,"loaded"],[1395,10,1464,8,"loaded"],[1395,11,1464,9,"name"],[1395,15,1464,13],[1395,17,1464,15,"err"],[1395,20,1464,18],[1395,22,1464,20,"data"],[1395,26,1464,24],[1395,28,1464,26],[1396,6,1465,4],[1396,12,1465,10,"s"],[1396,13,1465,11],[1396,16,1465,14,"name"],[1396,20,1465,18],[1396,21,1465,19,"split"],[1396,26,1465,24],[1396,27,1465,25],[1396,30,1465,28],[1396,31,1465,29],[1397,6,1466,4],[1397,12,1466,10,"lng"],[1397,15,1466,13],[1397,18,1466,16,"s"],[1397,19,1466,17],[1397,20,1466,18],[1397,21,1466,19],[1397,22,1466,20],[1398,6,1467,4],[1398,12,1467,10,"ns"],[1398,14,1467,12],[1398,17,1467,15,"s"],[1398,18,1467,16],[1398,19,1467,17],[1398,20,1467,18],[1398,21,1467,19],[1399,6,1468,4],[1399,10,1468,8,"err"],[1399,13,1468,11],[1399,15,1468,13],[1399,19,1468,17],[1399,20,1468,18,"emit"],[1399,24,1468,22],[1399,25,1468,23],[1399,40,1468,38],[1399,42,1468,40,"lng"],[1399,45,1468,43],[1399,47,1468,45,"ns"],[1399,49,1468,47],[1399,51,1468,49,"err"],[1399,54,1468,52],[1399,55,1468,53],[1400,6,1469,4],[1400,10,1469,8],[1400,11,1469,9,"err"],[1400,14,1469,12],[1400,18,1469,16,"data"],[1400,22,1469,20],[1400,24,1469,22],[1401,8,1470,6],[1401,12,1470,10],[1401,13,1470,11,"store"],[1401,18,1470,16],[1401,19,1470,17,"addResourceBundle"],[1401,36,1470,34],[1401,37,1470,35,"lng"],[1401,40,1470,38],[1401,42,1470,40,"ns"],[1401,44,1470,42],[1401,46,1470,44,"data"],[1401,50,1470,48],[1401,52,1470,50,"undefined"],[1401,61,1470,59],[1401,63,1470,61,"undefined"],[1401,72,1470,70],[1401,74,1470,72],[1402,10,1471,8,"skipCopy"],[1402,18,1471,16],[1402,20,1471,18],[1403,8,1472,6],[1403,9,1472,7],[1403,10,1472,8],[1404,6,1473,4],[1405,6,1474,4],[1405,10,1474,8],[1405,11,1474,9,"state"],[1405,16,1474,14],[1405,17,1474,15,"name"],[1405,21,1474,19],[1405,22,1474,20],[1405,25,1474,23,"err"],[1405,28,1474,26],[1405,31,1474,29],[1405,32,1474,30],[1405,33,1474,31],[1405,36,1474,34],[1405,37,1474,35],[1406,6,1475,4],[1406,10,1475,8,"err"],[1406,13,1475,11],[1406,17,1475,15,"data"],[1406,21,1475,19],[1406,23,1475,21],[1406,27,1475,25],[1406,28,1475,26,"state"],[1406,33,1475,31],[1406,34,1475,32,"name"],[1406,38,1475,36],[1406,39,1475,37],[1406,42,1475,40],[1406,43,1475,41],[1407,6,1476,4],[1407,12,1476,10,"loaded"],[1407,18,1476,16],[1407,21,1476,19],[1407,22,1476,20],[1407,23,1476,21],[1408,6,1477,4],[1408,10,1477,8],[1408,11,1477,9,"queue"],[1408,16,1477,14],[1408,17,1477,15,"forEach"],[1408,24,1477,22],[1408,25,1477,23,"q"],[1408,26,1477,24],[1408,30,1477,28],[1409,8,1478,6,"pushPath"],[1409,16,1478,14],[1409,17,1478,15,"q"],[1409,18,1478,16],[1409,19,1478,17,"loaded"],[1409,25,1478,23],[1409,27,1478,25],[1409,28,1478,26,"lng"],[1409,31,1478,29],[1409,32,1478,30],[1409,34,1478,32,"ns"],[1409,36,1478,34],[1409,37,1478,35],[1410,8,1479,6,"removePending"],[1410,21,1479,19],[1410,22,1479,20,"q"],[1410,23,1479,21],[1410,25,1479,23,"name"],[1410,29,1479,27],[1410,30,1479,28],[1411,8,1480,6],[1411,12,1480,10,"err"],[1411,15,1480,13],[1411,17,1480,15,"q"],[1411,18,1480,16],[1411,19,1480,17,"errors"],[1411,25,1480,23],[1411,26,1480,24,"push"],[1411,30,1480,28],[1411,31,1480,29,"err"],[1411,34,1480,32],[1411,35,1480,33],[1412,8,1481,6],[1412,12,1481,10,"q"],[1412,13,1481,11],[1412,14,1481,12,"pendingCount"],[1412,26,1481,24],[1412,31,1481,29],[1412,32,1481,30],[1412,36,1481,34],[1412,37,1481,35,"q"],[1412,38,1481,36],[1412,39,1481,37,"done"],[1412,43,1481,41],[1412,45,1481,43],[1413,10,1482,8,"Object"],[1413,16,1482,14],[1413,17,1482,15,"keys"],[1413,21,1482,19],[1413,22,1482,20,"q"],[1413,23,1482,21],[1413,24,1482,22,"loaded"],[1413,30,1482,28],[1413,31,1482,29],[1413,32,1482,30,"forEach"],[1413,39,1482,37],[1413,40,1482,38,"l"],[1413,41,1482,39],[1413,45,1482,43],[1414,12,1483,10],[1414,16,1483,14],[1414,17,1483,15,"loaded"],[1414,23,1483,21],[1414,24,1483,22,"l"],[1414,25,1483,23],[1414,26,1483,24],[1414,28,1483,26,"loaded"],[1414,34,1483,32],[1414,35,1483,33,"l"],[1414,36,1483,34],[1414,37,1483,35],[1414,40,1483,38],[1414,41,1483,39],[1414,42,1483,40],[1415,12,1484,10],[1415,18,1484,16,"loadedKeys"],[1415,28,1484,26],[1415,31,1484,29,"q"],[1415,32,1484,30],[1415,33,1484,31,"loaded"],[1415,39,1484,37],[1415,40,1484,38,"l"],[1415,41,1484,39],[1415,42,1484,40],[1416,12,1485,10],[1416,16,1485,14,"loadedKeys"],[1416,26,1485,24],[1416,27,1485,25,"length"],[1416,33,1485,31],[1416,35,1485,33],[1417,14,1486,12,"loadedKeys"],[1417,24,1486,22],[1417,25,1486,23,"forEach"],[1417,32,1486,30],[1417,33,1486,31,"n"],[1417,34,1486,32],[1417,38,1486,36],[1418,16,1487,14],[1418,20,1487,18,"loaded"],[1418,26,1487,24],[1418,27,1487,25,"l"],[1418,28,1487,26],[1418,29,1487,27],[1418,30,1487,28,"n"],[1418,31,1487,29],[1418,32,1487,30],[1418,37,1487,35,"undefined"],[1418,46,1487,44],[1418,48,1487,46,"loaded"],[1418,54,1487,52],[1418,55,1487,53,"l"],[1418,56,1487,54],[1418,57,1487,55],[1418,58,1487,56,"n"],[1418,59,1487,57],[1418,60,1487,58],[1418,63,1487,61],[1418,67,1487,65],[1419,14,1488,12],[1419,15,1488,13],[1419,16,1488,14],[1420,12,1489,10],[1421,10,1490,8],[1421,11,1490,9],[1421,12,1490,10],[1422,10,1491,8,"q"],[1422,11,1491,9],[1422,12,1491,10,"done"],[1422,16,1491,14],[1422,19,1491,17],[1422,23,1491,21],[1423,10,1492,8],[1423,14,1492,12,"q"],[1423,15,1492,13],[1423,16,1492,14,"errors"],[1423,22,1492,20],[1423,23,1492,21,"length"],[1423,29,1492,27],[1423,31,1492,29],[1424,12,1493,10,"q"],[1424,13,1493,11],[1424,14,1493,12,"callback"],[1424,22,1493,20],[1424,23,1493,21,"q"],[1424,24,1493,22],[1424,25,1493,23,"errors"],[1424,31,1493,29],[1424,32,1493,30],[1425,10,1494,8],[1425,11,1494,9],[1425,17,1494,15],[1426,12,1495,10,"q"],[1426,13,1495,11],[1426,14,1495,12,"callback"],[1426,22,1495,20],[1426,23,1495,21],[1426,24,1495,22],[1427,10,1496,8],[1428,8,1497,6],[1429,6,1498,4],[1429,7,1498,5],[1429,8,1498,6],[1430,6,1499,4],[1430,10,1499,8],[1430,11,1499,9,"emit"],[1430,15,1499,13],[1430,16,1499,14],[1430,24,1499,22],[1430,26,1499,24,"loaded"],[1430,32,1499,30],[1430,33,1499,31],[1431,6,1500,4],[1431,10,1500,8],[1431,11,1500,9,"queue"],[1431,16,1500,14],[1431,19,1500,17],[1431,23,1500,21],[1431,24,1500,22,"queue"],[1431,29,1500,27],[1431,30,1500,28,"filter"],[1431,36,1500,34],[1431,37,1500,35,"q"],[1431,38,1500,36],[1431,42,1500,40],[1431,43,1500,41,"q"],[1431,44,1500,42],[1431,45,1500,43,"done"],[1431,49,1500,47],[1431,50,1500,48],[1432,4,1501,2],[1433,4,1502,2,"read"],[1433,8,1502,6,"read"],[1433,9,1502,7,"lng"],[1433,12,1502,10],[1433,14,1502,12,"ns"],[1433,16,1502,14],[1433,18,1502,16,"fcName"],[1433,24,1502,22],[1433,26,1502,24,"tried"],[1433,31,1502,29],[1433,34,1502,32],[1433,35,1502,33],[1433,37,1502,35,"wait"],[1433,41,1502,39],[1433,44,1502,42],[1433,48,1502,46],[1433,49,1502,47,"retryTimeout"],[1433,61,1502,59],[1433,63,1502,61,"callback"],[1433,71,1502,69],[1433,73,1502,71],[1434,6,1503,4],[1434,10,1503,8],[1434,11,1503,9,"lng"],[1434,14,1503,12],[1434,15,1503,13,"length"],[1434,21,1503,19],[1434,23,1503,21],[1434,30,1503,28,"callback"],[1434,38,1503,36],[1434,39,1503,37],[1434,43,1503,41],[1434,45,1503,43],[1434,46,1503,44],[1434,47,1503,45],[1434,48,1503,46],[1435,6,1504,4],[1435,10,1504,8],[1435,14,1504,12],[1435,15,1504,13,"readingCalls"],[1435,27,1504,25],[1435,31,1504,29],[1435,35,1504,33],[1435,36,1504,34,"maxParallelReads"],[1435,52,1504,50],[1435,54,1504,52],[1436,8,1505,6],[1436,12,1505,10],[1436,13,1505,11,"waitingReads"],[1436,25,1505,23],[1436,26,1505,24,"push"],[1436,30,1505,28],[1436,31,1505,29],[1437,10,1506,8,"lng"],[1437,13,1506,11],[1438,10,1507,8,"ns"],[1438,12,1507,10],[1439,10,1508,8,"fcName"],[1439,16,1508,14],[1440,10,1509,8,"tried"],[1440,15,1509,13],[1441,10,1510,8,"wait"],[1441,14,1510,12],[1442,10,1511,8,"callback"],[1443,8,1512,6],[1443,9,1512,7],[1443,10,1512,8],[1444,8,1513,6],[1445,6,1514,4],[1446,6,1515,4],[1446,10,1515,8],[1446,11,1515,9,"readingCalls"],[1446,23,1515,21],[1446,25,1515,23],[1447,6,1516,4],[1447,12,1516,10,"resolver"],[1447,20,1516,18],[1447,23,1516,21,"resolver"],[1447,24,1516,22,"err"],[1447,27,1516,25],[1447,29,1516,27,"data"],[1447,33,1516,31],[1447,38,1516,36],[1448,8,1517,6],[1448,12,1517,10],[1448,13,1517,11,"readingCalls"],[1448,25,1517,23],[1448,27,1517,25],[1449,8,1518,6],[1449,12,1518,10],[1449,16,1518,14],[1449,17,1518,15,"waitingReads"],[1449,29,1518,27],[1449,30,1518,28,"length"],[1449,36,1518,34],[1449,39,1518,37],[1449,40,1518,38],[1449,42,1518,40],[1450,10,1519,8],[1450,16,1519,14,"next"],[1450,20,1519,18],[1450,23,1519,21],[1450,27,1519,25],[1450,28,1519,26,"waitingReads"],[1450,40,1519,38],[1450,41,1519,39,"shift"],[1450,46,1519,44],[1450,47,1519,45],[1450,48,1519,46],[1451,10,1520,8],[1451,14,1520,12],[1451,15,1520,13,"read"],[1451,19,1520,17],[1451,20,1520,18,"next"],[1451,24,1520,22],[1451,25,1520,23,"lng"],[1451,28,1520,26],[1451,30,1520,28,"next"],[1451,34,1520,32],[1451,35,1520,33,"ns"],[1451,37,1520,35],[1451,39,1520,37,"next"],[1451,43,1520,41],[1451,44,1520,42,"fcName"],[1451,50,1520,48],[1451,52,1520,50,"next"],[1451,56,1520,54],[1451,57,1520,55,"tried"],[1451,62,1520,60],[1451,64,1520,62,"next"],[1451,68,1520,66],[1451,69,1520,67,"wait"],[1451,73,1520,71],[1451,75,1520,73,"next"],[1451,79,1520,77],[1451,80,1520,78,"callback"],[1451,88,1520,86],[1451,89,1520,87],[1452,8,1521,6],[1453,8,1522,6],[1453,12,1522,10,"err"],[1453,15,1522,13],[1453,19,1522,17,"data"],[1453,23,1522,21],[1453,27,1522,25,"tried"],[1453,32,1522,30],[1453,35,1522,33],[1453,39,1522,37],[1453,40,1522,38,"maxRetries"],[1453,50,1522,48],[1453,52,1522,50],[1454,10,1523,8,"setTimeout"],[1454,20,1523,18],[1454,21,1523,19],[1454,27,1523,25],[1455,12,1524,10],[1455,16,1524,14],[1455,17,1524,15,"read"],[1455,21,1524,19],[1455,22,1524,20,"call"],[1455,26,1524,24],[1455,27,1524,25],[1455,31,1524,29],[1455,33,1524,31,"lng"],[1455,36,1524,34],[1455,38,1524,36,"ns"],[1455,40,1524,38],[1455,42,1524,40,"fcName"],[1455,48,1524,46],[1455,50,1524,48,"tried"],[1455,55,1524,53],[1455,58,1524,56],[1455,59,1524,57],[1455,61,1524,59,"wait"],[1455,65,1524,63],[1455,68,1524,66],[1455,69,1524,67],[1455,71,1524,69,"callback"],[1455,79,1524,77],[1455,80,1524,78],[1456,10,1525,8],[1456,11,1525,9],[1456,13,1525,11,"wait"],[1456,17,1525,15],[1456,18,1525,16],[1457,10,1526,8],[1458,8,1527,6],[1459,8,1528,6,"callback"],[1459,16,1528,14],[1459,17,1528,15,"err"],[1459,20,1528,18],[1459,22,1528,20,"data"],[1459,26,1528,24],[1459,27,1528,25],[1460,6,1529,4],[1460,7,1529,5],[1461,6,1530,4],[1461,12,1530,10,"fc"],[1461,14,1530,12],[1461,17,1530,15],[1461,21,1530,19],[1461,22,1530,20,"backend"],[1461,29,1530,27],[1461,30,1530,28,"fcName"],[1461,36,1530,34],[1461,37,1530,35],[1461,38,1530,36,"bind"],[1461,42,1530,40],[1461,43,1530,41],[1461,47,1530,45],[1461,48,1530,46,"backend"],[1461,55,1530,53],[1461,56,1530,54],[1462,6,1531,4],[1462,10,1531,8,"fc"],[1462,12,1531,10],[1462,13,1531,11,"length"],[1462,19,1531,17],[1462,24,1531,22],[1462,25,1531,23],[1462,27,1531,25],[1463,8,1532,6],[1463,12,1532,10],[1464,10,1533,8],[1464,16,1533,14,"r"],[1464,17,1533,15],[1464,20,1533,18,"fc"],[1464,22,1533,20],[1464,23,1533,21,"lng"],[1464,26,1533,24],[1464,28,1533,26,"ns"],[1464,30,1533,28],[1464,31,1533,29],[1465,10,1534,8],[1465,14,1534,12,"r"],[1465,15,1534,13],[1465,19,1534,17],[1465,26,1534,24,"r"],[1465,27,1534,25],[1465,28,1534,26,"then"],[1465,32,1534,30],[1465,37,1534,35],[1465,47,1534,45],[1465,49,1534,47],[1466,12,1535,10,"r"],[1466,13,1535,11],[1466,14,1535,12,"then"],[1466,18,1535,16],[1466,19,1535,17,"data"],[1466,23,1535,21],[1466,27,1535,25,"resolver"],[1466,35,1535,33],[1466,36,1535,34],[1466,40,1535,38],[1466,42,1535,40,"data"],[1466,46,1535,44],[1466,47,1535,45],[1466,48,1535,46],[1466,49,1535,47,"catch"],[1466,54,1535,52],[1466,55,1535,53,"resolver"],[1466,63,1535,61],[1466,64,1535,62],[1467,10,1536,8],[1467,11,1536,9],[1467,17,1536,15],[1468,12,1537,10,"resolver"],[1468,20,1537,18],[1468,21,1537,19],[1468,25,1537,23],[1468,27,1537,25,"r"],[1468,28,1537,26],[1468,29,1537,27],[1469,10,1538,8],[1470,8,1539,6],[1470,9,1539,7],[1470,10,1539,8],[1470,17,1539,15,"err"],[1470,20,1539,18],[1470,22,1539,20],[1471,10,1540,8,"resolver"],[1471,18,1540,16],[1471,19,1540,17,"err"],[1471,22,1540,20],[1471,23,1540,21],[1472,8,1541,6],[1473,8,1542,6],[1474,6,1543,4],[1475,6,1544,4],[1475,13,1544,11,"fc"],[1475,15,1544,13],[1475,16,1544,14,"lng"],[1475,19,1544,17],[1475,21,1544,19,"ns"],[1475,23,1544,21],[1475,25,1544,23,"resolver"],[1475,33,1544,31],[1475,34,1544,32],[1476,4,1545,2],[1477,4,1546,2,"prepareLoading"],[1477,18,1546,16,"prepareLoading"],[1477,19,1546,17,"languages"],[1477,28,1546,26],[1477,30,1546,28,"namespaces"],[1477,40,1546,38],[1477,42,1546,40,"options"],[1477,49,1546,47],[1477,52,1546,50],[1477,53,1546,51],[1477,54,1546,52],[1477,56,1546,54,"callback"],[1477,64,1546,62],[1477,66,1546,64],[1478,6,1547,4],[1478,10,1547,8],[1478,11,1547,9],[1478,15,1547,13],[1478,16,1547,14,"backend"],[1478,23,1547,21],[1478,25,1547,23],[1479,8,1548,6],[1479,12,1548,10],[1479,13,1548,11,"logger"],[1479,19,1548,17],[1479,20,1548,18,"warn"],[1479,24,1548,22],[1479,25,1548,23],[1479,89,1548,87],[1479,90,1548,88],[1480,8,1549,6],[1480,15,1549,13,"callback"],[1480,23,1549,21],[1480,27,1549,25,"callback"],[1480,35,1549,33],[1480,36,1549,34],[1480,37,1549,35],[1481,6,1550,4],[1482,6,1551,4],[1482,10,1551,8,"isString"],[1482,18,1551,16],[1482,19,1551,17,"languages"],[1482,28,1551,26],[1482,29,1551,27],[1482,31,1551,29,"languages"],[1482,40,1551,38],[1482,43,1551,41],[1482,47,1551,45],[1482,48,1551,46,"languageUtils"],[1482,61,1551,59],[1482,62,1551,60,"toResolveHierarchy"],[1482,80,1551,78],[1482,81,1551,79,"languages"],[1482,90,1551,88],[1482,91,1551,89],[1483,6,1552,4],[1483,10,1552,8,"isString"],[1483,18,1552,16],[1483,19,1552,17,"namespaces"],[1483,29,1552,27],[1483,30,1552,28],[1483,32,1552,30,"namespaces"],[1483,42,1552,40],[1483,45,1552,43],[1483,46,1552,44,"namespaces"],[1483,56,1552,54],[1483,57,1552,55],[1484,6,1553,4],[1484,12,1553,10,"toLoad"],[1484,18,1553,16],[1484,21,1553,19],[1484,25,1553,23],[1484,26,1553,24,"queueLoad"],[1484,35,1553,33],[1484,36,1553,34,"languages"],[1484,45,1553,43],[1484,47,1553,45,"namespaces"],[1484,57,1553,55],[1484,59,1553,57,"options"],[1484,66,1553,64],[1484,68,1553,66,"callback"],[1484,76,1553,74],[1484,77,1553,75],[1485,6,1554,4],[1485,10,1554,8],[1485,11,1554,9,"toLoad"],[1485,17,1554,15],[1485,18,1554,16,"toLoad"],[1485,24,1554,22],[1485,25,1554,23,"length"],[1485,31,1554,29],[1485,33,1554,31],[1486,8,1555,6],[1486,12,1555,10],[1486,13,1555,11,"toLoad"],[1486,19,1555,17],[1486,20,1555,18,"pending"],[1486,27,1555,25],[1486,28,1555,26,"length"],[1486,34,1555,32],[1486,36,1555,34,"callback"],[1486,44,1555,42],[1486,45,1555,43],[1486,46,1555,44],[1487,8,1556,6],[1487,15,1556,13],[1487,19,1556,17],[1488,6,1557,4],[1489,6,1558,4,"toLoad"],[1489,12,1558,10],[1489,13,1558,11,"toLoad"],[1489,19,1558,17],[1489,20,1558,18,"forEach"],[1489,27,1558,25],[1489,28,1558,26,"name"],[1489,32,1558,30],[1489,36,1558,34],[1490,8,1559,6],[1490,12,1559,10],[1490,13,1559,11,"loadOne"],[1490,20,1559,18],[1490,21,1559,19,"name"],[1490,25,1559,23],[1490,26,1559,24],[1491,6,1560,4],[1491,7,1560,5],[1491,8,1560,6],[1492,4,1561,2],[1493,4,1562,2,"load"],[1493,8,1562,6,"load"],[1493,9,1562,7,"languages"],[1493,18,1562,16],[1493,20,1562,18,"namespaces"],[1493,30,1562,28],[1493,32,1562,30,"callback"],[1493,40,1562,38],[1493,42,1562,40],[1494,6,1563,4],[1494,10,1563,8],[1494,11,1563,9,"prepareLoading"],[1494,25,1563,23],[1494,26,1563,24,"languages"],[1494,35,1563,33],[1494,37,1563,35,"namespaces"],[1494,47,1563,45],[1494,49,1563,47],[1494,50,1563,48],[1494,51,1563,49],[1494,53,1563,51,"callback"],[1494,61,1563,59],[1494,62,1563,60],[1495,4,1564,2],[1496,4,1565,2,"reload"],[1496,10,1565,8,"reload"],[1496,11,1565,9,"languages"],[1496,20,1565,18],[1496,22,1565,20,"namespaces"],[1496,32,1565,30],[1496,34,1565,32,"callback"],[1496,42,1565,40],[1496,44,1565,42],[1497,6,1566,4],[1497,10,1566,8],[1497,11,1566,9,"prepareLoading"],[1497,25,1566,23],[1497,26,1566,24,"languages"],[1497,35,1566,33],[1497,37,1566,35,"namespaces"],[1497,47,1566,45],[1497,49,1566,47],[1498,8,1567,6,"reload"],[1498,14,1567,12],[1498,16,1567,14],[1499,6,1568,4],[1499,7,1568,5],[1499,9,1568,7,"callback"],[1499,17,1568,15],[1499,18,1568,16],[1500,4,1569,2],[1501,4,1570,2,"loadOne"],[1501,11,1570,9,"loadOne"],[1501,12,1570,10,"name"],[1501,16,1570,14],[1501,18,1570,16,"prefix"],[1501,24,1570,22],[1501,27,1570,25],[1501,29,1570,27],[1501,31,1570,29],[1502,6,1571,4],[1502,12,1571,10,"s"],[1502,13,1571,11],[1502,16,1571,14,"name"],[1502,20,1571,18],[1502,21,1571,19,"split"],[1502,26,1571,24],[1502,27,1571,25],[1502,30,1571,28],[1502,31,1571,29],[1503,6,1572,4],[1503,12,1572,10,"lng"],[1503,15,1572,13],[1503,18,1572,16,"s"],[1503,19,1572,17],[1503,20,1572,18],[1503,21,1572,19],[1503,22,1572,20],[1504,6,1573,4],[1504,12,1573,10,"ns"],[1504,14,1573,12],[1504,17,1573,15,"s"],[1504,18,1573,16],[1504,19,1573,17],[1504,20,1573,18],[1504,21,1573,19],[1505,6,1574,4],[1505,10,1574,8],[1505,11,1574,9,"read"],[1505,15,1574,13],[1505,16,1574,14,"lng"],[1505,19,1574,17],[1505,21,1574,19,"ns"],[1505,23,1574,21],[1505,25,1574,23],[1505,31,1574,29],[1505,33,1574,31,"undefined"],[1505,42,1574,40],[1505,44,1574,42,"undefined"],[1505,53,1574,51],[1505,55,1574,53],[1505,56,1574,54,"err"],[1505,59,1574,57],[1505,61,1574,59,"data"],[1505,65,1574,63],[1505,70,1574,68],[1506,8,1575,6],[1506,12,1575,10,"err"],[1506,15,1575,13],[1506,17,1575,15],[1506,21,1575,19],[1506,22,1575,20,"logger"],[1506,28,1575,26],[1506,29,1575,27,"warn"],[1506,33,1575,31],[1506,34,1575,32],[1506,37,1575,35,"prefix"],[1506,43,1575,41],[1506,64,1575,62,"ns"],[1506,66,1575,64],[1506,83,1575,81,"lng"],[1506,86,1575,84],[1506,95,1575,93],[1506,97,1575,95,"err"],[1506,100,1575,98],[1506,101,1575,99],[1507,8,1576,6],[1507,12,1576,10],[1507,13,1576,11,"err"],[1507,16,1576,14],[1507,20,1576,18,"data"],[1507,24,1576,22],[1507,26,1576,24],[1507,30,1576,28],[1507,31,1576,29,"logger"],[1507,37,1576,35],[1507,38,1576,36,"log"],[1507,41,1576,39],[1507,42,1576,40],[1507,45,1576,43,"prefix"],[1507,51,1576,49],[1507,71,1576,69,"ns"],[1507,73,1576,71],[1507,90,1576,88,"lng"],[1507,93,1576,91],[1507,95,1576,93],[1507,97,1576,95,"data"],[1507,101,1576,99],[1507,102,1576,100],[1508,8,1577,6],[1508,12,1577,10],[1508,13,1577,11,"loaded"],[1508,19,1577,17],[1508,20,1577,18,"name"],[1508,24,1577,22],[1508,26,1577,24,"err"],[1508,29,1577,27],[1508,31,1577,29,"data"],[1508,35,1577,33],[1508,36,1577,34],[1509,6,1578,4],[1509,7,1578,5],[1509,8,1578,6],[1510,4,1579,2],[1511,4,1580,2,"saveMissing"],[1511,15,1580,13,"saveMissing"],[1511,16,1580,14,"languages"],[1511,25,1580,23],[1511,27,1580,25,"namespace"],[1511,36,1580,34],[1511,38,1580,36,"key"],[1511,41,1580,39],[1511,43,1580,41,"fallbackValue"],[1511,56,1580,54],[1511,58,1580,56,"isUpdate"],[1511,66,1580,64],[1511,68,1580,66,"options"],[1511,75,1580,73],[1511,78,1580,76],[1511,79,1580,77],[1511,80,1580,78],[1511,82,1580,80,"clb"],[1511,85,1580,83],[1511,88,1580,86,"clb"],[1511,89,1580,86],[1511,94,1580,92],[1511,95,1580,93],[1511,96,1580,94],[1511,98,1580,96],[1512,6,1581,4],[1512,10,1581,8],[1512,14,1581,12],[1512,15,1581,13,"services"],[1512,23,1581,21],[1512,25,1581,23,"utils"],[1512,30,1581,28],[1512,32,1581,30,"hasLoadedNamespace"],[1512,50,1581,48],[1512,54,1581,52],[1512,55,1581,53],[1512,59,1581,57],[1512,60,1581,58,"services"],[1512,68,1581,66],[1512,70,1581,68,"utils"],[1512,75,1581,73],[1512,77,1581,75,"hasLoadedNamespace"],[1512,95,1581,93],[1512,96,1581,94,"namespace"],[1512,105,1581,103],[1512,106,1581,104],[1512,108,1581,106],[1513,8,1582,6],[1513,12,1582,10],[1513,13,1582,11,"logger"],[1513,19,1582,17],[1513,20,1582,18,"warn"],[1513,24,1582,22],[1513,25,1582,23],[1513,46,1582,44,"key"],[1513,49,1582,47],[1513,72,1582,70,"namespace"],[1513,81,1582,79],[1513,103,1582,101],[1513,105,1582,103],[1513,323,1582,321],[1513,324,1582,322],[1514,8,1583,6],[1515,6,1584,4],[1516,6,1585,4],[1516,10,1585,8,"key"],[1516,13,1585,11],[1516,18,1585,16,"undefined"],[1516,27,1585,25],[1516,31,1585,29,"key"],[1516,34,1585,32],[1516,39,1585,37],[1516,43,1585,41],[1516,47,1585,45,"key"],[1516,50,1585,48],[1516,55,1585,53],[1516,57,1585,55],[1516,59,1585,57],[1517,6,1586,4],[1517,10,1586,8],[1517,14,1586,12],[1517,15,1586,13,"backend"],[1517,22,1586,20],[1517,24,1586,22,"create"],[1517,30,1586,28],[1517,32,1586,30],[1518,8,1587,6],[1518,14,1587,12,"opts"],[1518,18,1587,16],[1518,21,1587,16,"Object"],[1518,27,1587,16],[1518,28,1587,16,"assign"],[1518,34,1587,16],[1518,39,1588,11,"options"],[1518,46,1588,18],[1519,10,1589,8,"isUpdate"],[1520,8,1589,16],[1520,10,1590,7],[1521,8,1591,6],[1521,14,1591,12,"fc"],[1521,16,1591,14],[1521,19,1591,17],[1521,23,1591,21],[1521,24,1591,22,"backend"],[1521,31,1591,29],[1521,32,1591,30,"create"],[1521,38,1591,36],[1521,39,1591,37,"bind"],[1521,43,1591,41],[1521,44,1591,42],[1521,48,1591,46],[1521,49,1591,47,"backend"],[1521,56,1591,54],[1521,57,1591,55],[1522,8,1592,6],[1522,12,1592,10,"fc"],[1522,14,1592,12],[1522,15,1592,13,"length"],[1522,21,1592,19],[1522,24,1592,22],[1522,25,1592,23],[1522,27,1592,25],[1523,10,1593,8],[1523,14,1593,12],[1524,12,1594,10],[1524,16,1594,14,"r"],[1524,17,1594,15],[1525,12,1595,10],[1525,16,1595,14,"fc"],[1525,18,1595,16],[1525,19,1595,17,"length"],[1525,25,1595,23],[1525,30,1595,28],[1525,31,1595,29],[1525,33,1595,31],[1526,14,1596,12,"r"],[1526,15,1596,13],[1526,18,1596,16,"fc"],[1526,20,1596,18],[1526,21,1596,19,"languages"],[1526,30,1596,28],[1526,32,1596,30,"namespace"],[1526,41,1596,39],[1526,43,1596,41,"key"],[1526,46,1596,44],[1526,48,1596,46,"fallbackValue"],[1526,61,1596,59],[1526,63,1596,61,"opts"],[1526,67,1596,65],[1526,68,1596,66],[1527,12,1597,10],[1527,13,1597,11],[1527,19,1597,17],[1528,14,1598,12,"r"],[1528,15,1598,13],[1528,18,1598,16,"fc"],[1528,20,1598,18],[1528,21,1598,19,"languages"],[1528,30,1598,28],[1528,32,1598,30,"namespace"],[1528,41,1598,39],[1528,43,1598,41,"key"],[1528,46,1598,44],[1528,48,1598,46,"fallbackValue"],[1528,61,1598,59],[1528,62,1598,60],[1529,12,1599,10],[1530,12,1600,10],[1530,16,1600,14,"r"],[1530,17,1600,15],[1530,21,1600,19],[1530,28,1600,26,"r"],[1530,29,1600,27],[1530,30,1600,28,"then"],[1530,34,1600,32],[1530,39,1600,37],[1530,49,1600,47],[1530,51,1600,49],[1531,14,1601,12,"r"],[1531,15,1601,13],[1531,16,1601,14,"then"],[1531,20,1601,18],[1531,21,1601,19,"data"],[1531,25,1601,23],[1531,29,1601,27,"clb"],[1531,32,1601,30],[1531,33,1601,31],[1531,37,1601,35],[1531,39,1601,37,"data"],[1531,43,1601,41],[1531,44,1601,42],[1531,45,1601,43],[1531,46,1601,44,"catch"],[1531,51,1601,49],[1531,52,1601,50,"clb"],[1531,55,1601,53],[1531,56,1601,54],[1532,12,1602,10],[1532,13,1602,11],[1532,19,1602,17],[1533,14,1603,12,"clb"],[1533,17,1603,15],[1533,18,1603,16],[1533,22,1603,20],[1533,24,1603,22,"r"],[1533,25,1603,23],[1533,26,1603,24],[1534,12,1604,10],[1535,10,1605,8],[1535,11,1605,9],[1535,12,1605,10],[1535,19,1605,17,"err"],[1535,22,1605,20],[1535,24,1605,22],[1536,12,1606,10,"clb"],[1536,15,1606,13],[1536,16,1606,14,"err"],[1536,19,1606,17],[1536,20,1606,18],[1537,10,1607,8],[1538,8,1608,6],[1538,9,1608,7],[1538,15,1608,13],[1539,10,1609,8,"fc"],[1539,12,1609,10],[1539,13,1609,11,"languages"],[1539,22,1609,20],[1539,24,1609,22,"namespace"],[1539,33,1609,31],[1539,35,1609,33,"key"],[1539,38,1609,36],[1539,40,1609,38,"fallbackValue"],[1539,53,1609,51],[1539,55,1609,53,"clb"],[1539,58,1609,56],[1539,60,1609,58,"opts"],[1539,64,1609,62],[1539,65,1609,63],[1540,8,1610,6],[1541,6,1611,4],[1542,6,1612,4],[1542,10,1612,8],[1542,11,1612,9,"languages"],[1542,20,1612,18],[1542,24,1612,22],[1542,25,1612,23,"languages"],[1542,34,1612,32],[1542,35,1612,33],[1542,36,1612,34],[1542,37,1612,35],[1542,39,1612,37],[1543,6,1613,4],[1543,10,1613,8],[1543,11,1613,9,"store"],[1543,16,1613,14],[1543,17,1613,15,"addResource"],[1543,28,1613,26],[1543,29,1613,27,"languages"],[1543,38,1613,36],[1543,39,1613,37],[1543,40,1613,38],[1543,41,1613,39],[1543,43,1613,41,"namespace"],[1543,52,1613,50],[1543,54,1613,52,"key"],[1543,57,1613,55],[1543,59,1613,57,"fallbackValue"],[1543,72,1613,70],[1543,73,1613,71],[1544,4,1614,2],[1545,2,1615,0],[1546,2,1617,0],[1546,8,1617,6,"get"],[1546,11,1617,9],[1546,14,1617,12,"get"],[1546,15,1617,12],[1546,21,1617,19],[1547,4,1618,2,"debug"],[1547,9,1618,7],[1547,11,1618,9],[1547,16,1618,14],[1548,4,1619,2,"initAsync"],[1548,13,1619,11],[1548,15,1619,13],[1548,19,1619,17],[1549,4,1620,2,"ns"],[1549,6,1620,4],[1549,8,1620,6],[1549,9,1620,7],[1549,22,1620,20],[1549,23,1620,21],[1550,4,1621,2,"defaultNS"],[1550,13,1621,11],[1550,15,1621,13],[1550,16,1621,14],[1550,29,1621,27],[1550,30,1621,28],[1551,4,1622,2,"fallbackLng"],[1551,15,1622,13],[1551,17,1622,15],[1551,18,1622,16],[1551,23,1622,21],[1551,24,1622,22],[1552,4,1623,2,"fallbackNS"],[1552,14,1623,12],[1552,16,1623,14],[1552,21,1623,19],[1553,4,1624,2,"supportedLngs"],[1553,17,1624,15],[1553,19,1624,17],[1553,24,1624,22],[1554,4,1625,2,"nonExplicitSupportedLngs"],[1554,28,1625,26],[1554,30,1625,28],[1554,35,1625,33],[1555,4,1626,2,"load"],[1555,8,1626,6],[1555,10,1626,8],[1555,15,1626,13],[1556,4,1627,2,"preload"],[1556,11,1627,9],[1556,13,1627,11],[1556,18,1627,16],[1557,4,1628,2,"simplifyPluralSuffix"],[1557,24,1628,22],[1557,26,1628,24],[1557,30,1628,28],[1558,4,1629,2,"keySeparator"],[1558,16,1629,14],[1558,18,1629,16],[1558,21,1629,19],[1559,4,1630,2,"nsSeparator"],[1559,15,1630,13],[1559,17,1630,15],[1559,20,1630,18],[1560,4,1631,2,"pluralSeparator"],[1560,19,1631,17],[1560,21,1631,19],[1560,24,1631,22],[1561,4,1632,2,"contextSeparator"],[1561,20,1632,18],[1561,22,1632,20],[1561,25,1632,23],[1562,4,1633,2,"partialBundledLanguages"],[1562,27,1633,25],[1562,29,1633,27],[1562,34,1633,32],[1563,4,1634,2,"saveMissing"],[1563,15,1634,13],[1563,17,1634,15],[1563,22,1634,20],[1564,4,1635,2,"updateMissing"],[1564,17,1635,15],[1564,19,1635,17],[1564,24,1635,22],[1565,4,1636,2,"saveMissingTo"],[1565,17,1636,15],[1565,19,1636,17],[1565,29,1636,27],[1566,4,1637,2,"saveMissingPlurals"],[1566,22,1637,20],[1566,24,1637,22],[1566,28,1637,26],[1567,4,1638,2,"missingKeyHandler"],[1567,21,1638,19],[1567,23,1638,21],[1567,28,1638,26],[1568,4,1639,2,"missingInterpolationHandler"],[1568,31,1639,29],[1568,33,1639,31],[1568,38,1639,36],[1569,4,1640,2,"postProcess"],[1569,15,1640,13],[1569,17,1640,15],[1569,22,1640,20],[1570,4,1641,2,"postProcessPassResolved"],[1570,27,1641,25],[1570,29,1641,27],[1570,34,1641,32],[1571,4,1642,2,"returnNull"],[1571,14,1642,12],[1571,16,1642,14],[1571,21,1642,19],[1572,4,1643,2,"returnEmptyString"],[1572,21,1643,19],[1572,23,1643,21],[1572,27,1643,25],[1573,4,1644,2,"returnObjects"],[1573,17,1644,15],[1573,19,1644,17],[1573,24,1644,22],[1574,4,1645,2,"joinArrays"],[1574,14,1645,12],[1574,16,1645,14],[1574,21,1645,19],[1575,4,1646,2,"returnedObjectHandler"],[1575,25,1646,23],[1575,27,1646,25],[1575,32,1646,30],[1576,4,1647,2,"parseMissingKeyHandler"],[1576,26,1647,24],[1576,28,1647,26],[1576,33,1647,31],[1577,4,1648,2,"appendNamespaceToMissingKey"],[1577,31,1648,29],[1577,33,1648,31],[1577,38,1648,36],[1578,4,1649,2,"appendNamespaceToCIMode"],[1578,27,1649,25],[1578,29,1649,27],[1578,34,1649,32],[1579,4,1650,2,"overloadTranslationOptionHandler"],[1579,36,1650,34],[1579,38,1650,36,"args"],[1579,42,1650,40],[1579,46,1650,44],[1580,6,1651,4],[1580,10,1651,8,"ret"],[1580,13,1651,11],[1580,16,1651,14],[1580,17,1651,15],[1580,18,1651,16],[1581,6,1652,4],[1581,10,1652,8],[1581,17,1652,15,"args"],[1581,21,1652,19],[1581,22,1652,20],[1581,23,1652,21],[1581,24,1652,22],[1581,29,1652,27],[1581,37,1652,35],[1581,39,1652,37,"ret"],[1581,42,1652,40],[1581,45,1652,43,"args"],[1581,49,1652,47],[1581,50,1652,48],[1581,51,1652,49],[1581,52,1652,50],[1582,6,1653,4],[1582,10,1653,8,"isString"],[1582,18,1653,16],[1582,19,1653,17,"args"],[1582,23,1653,21],[1582,24,1653,22],[1582,25,1653,23],[1582,26,1653,24],[1582,27,1653,25],[1582,29,1653,27,"ret"],[1582,32,1653,30],[1582,33,1653,31,"defaultValue"],[1582,45,1653,43],[1582,48,1653,46,"args"],[1582,52,1653,50],[1582,53,1653,51],[1582,54,1653,52],[1582,55,1653,53],[1583,6,1654,4],[1583,10,1654,8,"isString"],[1583,18,1654,16],[1583,19,1654,17,"args"],[1583,23,1654,21],[1583,24,1654,22],[1583,25,1654,23],[1583,26,1654,24],[1583,27,1654,25],[1583,29,1654,27,"ret"],[1583,32,1654,30],[1583,33,1654,31,"tDescription"],[1583,45,1654,43],[1583,48,1654,46,"args"],[1583,52,1654,50],[1583,53,1654,51],[1583,54,1654,52],[1583,55,1654,53],[1584,6,1655,4],[1584,10,1655,8],[1584,17,1655,15,"args"],[1584,21,1655,19],[1584,22,1655,20],[1584,23,1655,21],[1584,24,1655,22],[1584,29,1655,27],[1584,37,1655,35],[1584,41,1655,39],[1584,48,1655,46,"args"],[1584,52,1655,50],[1584,53,1655,51],[1584,54,1655,52],[1584,55,1655,53],[1584,60,1655,58],[1584,68,1655,66],[1584,70,1655,68],[1585,8,1656,6],[1585,14,1656,12,"options"],[1585,21,1656,19],[1585,24,1656,22,"args"],[1585,28,1656,26],[1585,29,1656,27],[1585,30,1656,28],[1585,31,1656,29],[1585,35,1656,33,"args"],[1585,39,1656,37],[1585,40,1656,38],[1585,41,1656,39],[1585,42,1656,40],[1586,8,1657,6,"Object"],[1586,14,1657,12],[1586,15,1657,13,"keys"],[1586,19,1657,17],[1586,20,1657,18,"options"],[1586,27,1657,25],[1586,28,1657,26],[1586,29,1657,27,"forEach"],[1586,36,1657,34],[1586,37,1657,35,"key"],[1586,40,1657,38],[1586,44,1657,42],[1587,10,1658,8,"ret"],[1587,13,1658,11],[1587,14,1658,12,"key"],[1587,17,1658,15],[1587,18,1658,16],[1587,21,1658,19,"options"],[1587,28,1658,26],[1587,29,1658,27,"key"],[1587,32,1658,30],[1587,33,1658,31],[1588,8,1659,6],[1588,9,1659,7],[1588,10,1659,8],[1589,6,1660,4],[1590,6,1661,4],[1590,13,1661,11,"ret"],[1590,16,1661,14],[1591,4,1662,2],[1591,5,1662,3],[1592,4,1663,2,"interpolation"],[1592,17,1663,15],[1592,19,1663,17],[1593,6,1664,4,"escapeValue"],[1593,17,1664,15],[1593,19,1664,17],[1593,23,1664,21],[1594,6,1665,4,"format"],[1594,12,1665,10],[1594,14,1665,12,"value"],[1594,19,1665,17],[1594,23,1665,21,"value"],[1594,28,1665,26],[1595,6,1666,4,"prefix"],[1595,12,1666,10],[1595,14,1666,12],[1595,18,1666,16],[1596,6,1667,4,"suffix"],[1596,12,1667,10],[1596,14,1667,12],[1596,18,1667,16],[1597,6,1668,4,"formatSeparator"],[1597,21,1668,19],[1597,23,1668,21],[1597,26,1668,24],[1598,6,1669,4,"unescapePrefix"],[1598,20,1669,18],[1598,22,1669,20],[1598,25,1669,23],[1599,6,1670,4,"nestingPrefix"],[1599,19,1670,17],[1599,21,1670,19],[1599,26,1670,24],[1600,6,1671,4,"nestingSuffix"],[1600,19,1671,17],[1600,21,1671,19],[1600,24,1671,22],[1601,6,1672,4,"nestingOptionsSeparator"],[1601,29,1672,27],[1601,31,1672,29],[1601,34,1672,32],[1602,6,1673,4,"maxReplaces"],[1602,17,1673,15],[1602,19,1673,17],[1602,23,1673,21],[1603,6,1674,4,"skipOnVariables"],[1603,21,1674,19],[1603,23,1674,21],[1604,4,1675,2],[1604,5,1675,3],[1605,4,1676,2,"cacheInBuiltFormats"],[1605,23,1676,21],[1605,25,1676,23],[1606,2,1677,0],[1606,3,1677,1],[1606,4,1677,2],[1607,2,1678,0],[1607,8,1678,6,"transformOptions"],[1607,24,1678,22],[1607,27,1678,25,"options"],[1607,34,1678,32],[1607,38,1678,36],[1608,4,1679,2],[1608,8,1679,6,"isString"],[1608,16,1679,14],[1608,17,1679,15,"options"],[1608,24,1679,22],[1608,25,1679,23,"ns"],[1608,27,1679,25],[1608,28,1679,26],[1608,30,1679,28,"options"],[1608,37,1679,35],[1608,38,1679,36,"ns"],[1608,40,1679,38],[1608,43,1679,41],[1608,44,1679,42,"options"],[1608,51,1679,49],[1608,52,1679,50,"ns"],[1608,54,1679,52],[1608,55,1679,53],[1609,4,1680,2],[1609,8,1680,6,"isString"],[1609,16,1680,14],[1609,17,1680,15,"options"],[1609,24,1680,22],[1609,25,1680,23,"fallbackLng"],[1609,36,1680,34],[1609,37,1680,35],[1609,39,1680,37,"options"],[1609,46,1680,44],[1609,47,1680,45,"fallbackLng"],[1609,58,1680,56],[1609,61,1680,59],[1609,62,1680,60,"options"],[1609,69,1680,67],[1609,70,1680,68,"fallbackLng"],[1609,81,1680,79],[1609,82,1680,80],[1610,4,1681,2],[1610,8,1681,6,"isString"],[1610,16,1681,14],[1610,17,1681,15,"options"],[1610,24,1681,22],[1610,25,1681,23,"fallbackNS"],[1610,35,1681,33],[1610,36,1681,34],[1610,38,1681,36,"options"],[1610,45,1681,43],[1610,46,1681,44,"fallbackNS"],[1610,56,1681,54],[1610,59,1681,57],[1610,60,1681,58,"options"],[1610,67,1681,65],[1610,68,1681,66,"fallbackNS"],[1610,78,1681,76],[1610,79,1681,77],[1611,4,1682,2],[1611,8,1682,6,"options"],[1611,15,1682,13],[1611,16,1682,14,"supportedLngs"],[1611,29,1682,27],[1611,31,1682,29,"indexOf"],[1611,38,1682,36],[1611,41,1682,39],[1611,49,1682,47],[1611,50,1682,48],[1611,53,1682,51],[1611,54,1682,52],[1611,56,1682,54],[1612,6,1683,4,"options"],[1612,13,1683,11],[1612,14,1683,12,"supportedLngs"],[1612,27,1683,25],[1612,30,1683,28,"options"],[1612,37,1683,35],[1612,38,1683,36,"supportedLngs"],[1612,51,1683,49],[1612,52,1683,50,"concat"],[1612,58,1683,56],[1612,59,1683,57],[1612,60,1683,58],[1612,68,1683,66],[1612,69,1683,67],[1612,70,1683,68],[1613,4,1684,2],[1614,4,1685,2],[1614,8,1685,6],[1614,15,1685,13,"options"],[1614,22,1685,20],[1614,23,1685,21,"initImmediate"],[1614,36,1685,34],[1614,41,1685,39],[1614,50,1685,48],[1614,52,1685,50,"options"],[1614,59,1685,57],[1614,60,1685,58,"initAsync"],[1614,69,1685,67],[1614,72,1685,70,"options"],[1614,79,1685,77],[1614,80,1685,78,"initImmediate"],[1614,93,1685,91],[1615,4,1686,2],[1615,11,1686,9,"options"],[1615,18,1686,16],[1616,2,1687,0],[1616,3,1687,1],[1617,2,1689,0],[1617,8,1689,6,"noop"],[1617,12,1689,10],[1617,15,1689,13,"noop"],[1617,16,1689,13],[1617,21,1689,19],[1617,22,1689,20],[1617,23,1689,21],[1618,2,1690,0],[1618,8,1690,6,"bindMemberFunctions"],[1618,27,1690,25],[1618,30,1690,28,"inst"],[1618,34,1690,32],[1618,38,1690,36],[1619,4,1691,2],[1619,10,1691,8,"mems"],[1619,14,1691,12],[1619,17,1691,15,"Object"],[1619,23,1691,21],[1619,24,1691,22,"getOwnPropertyNames"],[1619,43,1691,41],[1619,44,1691,42,"Object"],[1619,50,1691,48],[1619,51,1691,49,"getPrototypeOf"],[1619,65,1691,63],[1619,66,1691,64,"inst"],[1619,70,1691,68],[1619,71,1691,69],[1619,72,1691,70],[1620,4,1692,2,"mems"],[1620,8,1692,6],[1620,9,1692,7,"forEach"],[1620,16,1692,14],[1620,17,1692,15,"mem"],[1620,20,1692,18],[1620,24,1692,22],[1621,6,1693,4],[1621,10,1693,8],[1621,17,1693,15,"inst"],[1621,21,1693,19],[1621,22,1693,20,"mem"],[1621,25,1693,23],[1621,26,1693,24],[1621,31,1693,29],[1621,41,1693,39],[1621,43,1693,41],[1622,8,1694,6,"inst"],[1622,12,1694,10],[1622,13,1694,11,"mem"],[1622,16,1694,14],[1622,17,1694,15],[1622,20,1694,18,"inst"],[1622,24,1694,22],[1622,25,1694,23,"mem"],[1622,28,1694,26],[1622,29,1694,27],[1622,30,1694,28,"bind"],[1622,34,1694,32],[1622,35,1694,33,"inst"],[1622,39,1694,37],[1622,40,1694,38],[1623,6,1695,4],[1624,4,1696,2],[1624,5,1696,3],[1624,6,1696,4],[1625,2,1697,0],[1625,3,1697,1],[1626,2,1698,0],[1626,8,1698,6,"I18n"],[1626,12,1698,10],[1626,21,1698,19,"EventEmitter"],[1626,33,1698,31],[1626,34,1698,32],[1627,4,1699,2,"constructor"],[1627,15,1699,13,"constructor"],[1627,16,1699,14,"options"],[1627,23,1699,21],[1627,26,1699,24],[1627,27,1699,25],[1627,28,1699,26],[1627,30,1699,28,"callback"],[1627,38,1699,36],[1627,40,1699,38],[1628,6,1700,4],[1628,11,1700,9],[1628,12,1700,10],[1628,13,1700,11],[1629,6,1701,4],[1629,10,1701,8],[1629,11,1701,9,"options"],[1629,18,1701,16],[1629,21,1701,19,"transformOptions"],[1629,37,1701,35],[1629,38,1701,36,"options"],[1629,45,1701,43],[1629,46,1701,44],[1630,6,1702,4],[1630,10,1702,8],[1630,11,1702,9,"services"],[1630,19,1702,17],[1630,22,1702,20],[1630,23,1702,21],[1630,24,1702,22],[1631,6,1703,4],[1631,10,1703,8],[1631,11,1703,9,"logger"],[1631,17,1703,15],[1631,20,1703,18,"baseLogger"],[1631,30,1703,28],[1632,6,1704,4],[1632,10,1704,8],[1632,11,1704,9,"modules"],[1632,18,1704,16],[1632,21,1704,19],[1633,8,1705,6,"external"],[1633,16,1705,14],[1633,18,1705,16],[1634,6,1706,4],[1634,7,1706,5],[1635,6,1707,4,"bindMemberFunctions"],[1635,25,1707,23],[1635,26,1707,24],[1635,30,1707,28],[1635,31,1707,29],[1636,6,1708,4],[1636,10,1708,8,"callback"],[1636,18,1708,16],[1636,22,1708,20],[1636,23,1708,21],[1636,27,1708,25],[1636,28,1708,26,"isInitialized"],[1636,41,1708,39],[1636,45,1708,43],[1636,46,1708,44,"options"],[1636,53,1708,51],[1636,54,1708,52,"isClone"],[1636,61,1708,59],[1636,63,1708,61],[1637,8,1709,6],[1637,12,1709,10],[1637,13,1709,11],[1637,17,1709,15],[1637,18,1709,16,"options"],[1637,25,1709,23],[1637,26,1709,24,"initAsync"],[1637,35,1709,33],[1637,37,1709,35],[1638,10,1710,8],[1638,14,1710,12],[1638,15,1710,13,"init"],[1638,19,1710,17],[1638,20,1710,18,"options"],[1638,27,1710,25],[1638,29,1710,27,"callback"],[1638,37,1710,35],[1638,38,1710,36],[1639,10,1711,8],[1639,17,1711,15],[1639,21,1711,19],[1640,8,1712,6],[1641,8,1713,6,"setTimeout"],[1641,18,1713,16],[1641,19,1713,17],[1641,25,1713,23],[1642,10,1714,8],[1642,14,1714,12],[1642,15,1714,13,"init"],[1642,19,1714,17],[1642,20,1714,18,"options"],[1642,27,1714,25],[1642,29,1714,27,"callback"],[1642,37,1714,35],[1642,38,1714,36],[1643,8,1715,6],[1643,9,1715,7],[1643,11,1715,9],[1643,12,1715,10],[1643,13,1715,11],[1644,6,1716,4],[1645,4,1717,2],[1646,4,1718,2,"init"],[1646,8,1718,6,"init"],[1646,9,1718,7,"options"],[1646,16,1718,14],[1646,19,1718,17],[1646,20,1718,18],[1646,21,1718,19],[1646,23,1718,21,"callback"],[1646,31,1718,29],[1646,33,1718,31],[1647,6,1719,4],[1647,10,1719,8],[1647,11,1719,9,"isInitializing"],[1647,25,1719,23],[1647,28,1719,26],[1647,32,1719,30],[1648,6,1720,4],[1648,10,1720,8],[1648,17,1720,15,"options"],[1648,24,1720,22],[1648,29,1720,27],[1648,39,1720,37],[1648,41,1720,39],[1649,8,1721,6,"callback"],[1649,16,1721,14],[1649,19,1721,17,"options"],[1649,26,1721,24],[1650,8,1722,6,"options"],[1650,15,1722,13],[1650,18,1722,16],[1650,19,1722,17],[1650,20,1722,18],[1651,6,1723,4],[1652,6,1724,4],[1652,10,1724,8,"options"],[1652,17,1724,15],[1652,18,1724,16,"defaultNS"],[1652,27,1724,25],[1652,31,1724,29],[1652,35,1724,33],[1652,39,1724,37,"options"],[1652,46,1724,44],[1652,47,1724,45,"ns"],[1652,49,1724,47],[1652,51,1724,49],[1653,8,1725,6],[1653,12,1725,10,"isString"],[1653,20,1725,18],[1653,21,1725,19,"options"],[1653,28,1725,26],[1653,29,1725,27,"ns"],[1653,31,1725,29],[1653,32,1725,30],[1653,34,1725,32],[1654,10,1726,8,"options"],[1654,17,1726,15],[1654,18,1726,16,"defaultNS"],[1654,27,1726,25],[1654,30,1726,28,"options"],[1654,37,1726,35],[1654,38,1726,36,"ns"],[1654,40,1726,38],[1655,8,1727,6],[1655,9,1727,7],[1655,15,1727,13],[1655,19,1727,17,"options"],[1655,26,1727,24],[1655,27,1727,25,"ns"],[1655,29,1727,27],[1655,30,1727,28,"indexOf"],[1655,37,1727,35],[1655,38,1727,36],[1655,51,1727,49],[1655,52,1727,50],[1655,55,1727,53],[1655,56,1727,54],[1655,58,1727,56],[1656,10,1728,8,"options"],[1656,17,1728,15],[1656,18,1728,16,"defaultNS"],[1656,27,1728,25],[1656,30,1728,28,"options"],[1656,37,1728,35],[1656,38,1728,36,"ns"],[1656,40,1728,38],[1656,41,1728,39],[1656,42,1728,40],[1656,43,1728,41],[1657,8,1729,6],[1658,6,1730,4],[1659,6,1731,4],[1659,12,1731,10,"defOpts"],[1659,19,1731,17],[1659,22,1731,20,"get"],[1659,25,1731,23],[1659,26,1731,24],[1659,27,1731,25],[1660,6,1732,4],[1660,10,1732,8],[1660,11,1732,9,"options"],[1660,18,1732,16],[1660,21,1732,16,"Object"],[1660,27,1732,16],[1660,28,1732,16,"assign"],[1660,34,1732,16],[1660,39,1733,9,"defOpts"],[1660,46,1733,16],[1660,48,1734,9],[1660,52,1734,13],[1660,53,1734,14,"options"],[1660,60,1734,21],[1660,62,1735,9,"transformOptions"],[1660,78,1735,25],[1660,79,1735,26,"options"],[1660,86,1735,33],[1660,87,1735,34],[1660,88,1736,5],[1661,6,1737,4],[1661,10,1737,8],[1661,11,1737,9,"options"],[1661,18,1737,16],[1661,19,1737,17,"interpolation"],[1661,32,1737,30],[1661,35,1737,30,"Object"],[1661,41,1737,30],[1661,42,1737,30,"assign"],[1661,48,1737,30],[1661,53,1738,9,"defOpts"],[1661,60,1738,16],[1661,61,1738,17,"interpolation"],[1661,74,1738,30],[1661,76,1739,9],[1661,80,1739,13],[1661,81,1739,14,"options"],[1661,88,1739,21],[1661,89,1739,22,"interpolation"],[1661,102,1739,35],[1661,103,1740,5],[1662,6,1741,4],[1662,10,1741,8,"options"],[1662,17,1741,15],[1662,18,1741,16,"keySeparator"],[1662,30,1741,28],[1662,35,1741,33,"undefined"],[1662,44,1741,42],[1662,46,1741,44],[1663,8,1742,6],[1663,12,1742,10],[1663,13,1742,11,"options"],[1663,20,1742,18],[1663,21,1742,19,"userDefinedKeySeparator"],[1663,44,1742,42],[1663,47,1742,45,"options"],[1663,54,1742,52],[1663,55,1742,53,"keySeparator"],[1663,67,1742,65],[1664,6,1743,4],[1665,6,1744,4],[1665,10,1744,8,"options"],[1665,17,1744,15],[1665,18,1744,16,"nsSeparator"],[1665,29,1744,27],[1665,34,1744,32,"undefined"],[1665,43,1744,41],[1665,45,1744,43],[1666,8,1745,6],[1666,12,1745,10],[1666,13,1745,11,"options"],[1666,20,1745,18],[1666,21,1745,19,"userDefinedNsSeparator"],[1666,43,1745,41],[1666,46,1745,44,"options"],[1666,53,1745,51],[1666,54,1745,52,"nsSeparator"],[1666,65,1745,63],[1667,6,1746,4],[1668,6,1747,4],[1668,12,1747,10,"createClassOnDemand"],[1668,31,1747,29],[1668,34,1747,32,"ClassOrObject"],[1668,47,1747,45],[1668,51,1747,49],[1669,8,1748,6],[1669,12,1748,10],[1669,13,1748,11,"ClassOrObject"],[1669,26,1748,24],[1669,28,1748,26],[1669,35,1748,33],[1669,39,1748,37],[1670,8,1749,6],[1670,12,1749,10],[1670,19,1749,17,"ClassOrObject"],[1670,32,1749,30],[1670,37,1749,35],[1670,47,1749,45],[1670,49,1749,47],[1670,56,1749,54],[1670,60,1749,58,"ClassOrObject"],[1670,73,1749,71],[1670,74,1749,72],[1670,75,1749,73],[1671,8,1750,6],[1671,15,1750,13,"ClassOrObject"],[1671,28,1750,26],[1672,6,1751,4],[1672,7,1751,5],[1673,6,1752,4],[1673,10,1752,8],[1673,11,1752,9],[1673,15,1752,13],[1673,16,1752,14,"options"],[1673,23,1752,21],[1673,24,1752,22,"isClone"],[1673,31,1752,29],[1673,33,1752,31],[1674,8,1753,6],[1674,12,1753,10],[1674,16,1753,14],[1674,17,1753,15,"modules"],[1674,24,1753,22],[1674,25,1753,23,"logger"],[1674,31,1753,29],[1674,33,1753,31],[1675,10,1754,8,"baseLogger"],[1675,20,1754,18],[1675,21,1754,19,"init"],[1675,25,1754,23],[1675,26,1754,24,"createClassOnDemand"],[1675,45,1754,43],[1675,46,1754,44],[1675,50,1754,48],[1675,51,1754,49,"modules"],[1675,58,1754,56],[1675,59,1754,57,"logger"],[1675,65,1754,63],[1675,66,1754,64],[1675,68,1754,66],[1675,72,1754,70],[1675,73,1754,71,"options"],[1675,80,1754,78],[1675,81,1754,79],[1676,8,1755,6],[1676,9,1755,7],[1676,15,1755,13],[1677,10,1756,8,"baseLogger"],[1677,20,1756,18],[1677,21,1756,19,"init"],[1677,25,1756,23],[1677,26,1756,24],[1677,30,1756,28],[1677,32,1756,30],[1677,36,1756,34],[1677,37,1756,35,"options"],[1677,44,1756,42],[1677,45,1756,43],[1678,8,1757,6],[1679,8,1758,6],[1679,12,1758,10,"formatter"],[1679,21,1758,19],[1680,8,1759,6],[1680,12,1759,10],[1680,16,1759,14],[1680,17,1759,15,"modules"],[1680,24,1759,22],[1680,25,1759,23,"formatter"],[1680,34,1759,32],[1680,36,1759,34],[1681,10,1760,8,"formatter"],[1681,19,1760,17],[1681,22,1760,20],[1681,26,1760,24],[1681,27,1760,25,"modules"],[1681,34,1760,32],[1681,35,1760,33,"formatter"],[1681,44,1760,42],[1682,8,1761,6],[1682,9,1761,7],[1682,15,1761,13],[1683,10,1762,8,"formatter"],[1683,19,1762,17],[1683,22,1762,20,"Formatter"],[1683,31,1762,29],[1684,8,1763,6],[1685,8,1764,6],[1685,14,1764,12,"lu"],[1685,16,1764,14],[1685,19,1764,17],[1685,23,1764,21,"LanguageUtil"],[1685,35,1764,33],[1685,36,1764,34],[1685,40,1764,38],[1685,41,1764,39,"options"],[1685,48,1764,46],[1685,49,1764,47],[1686,8,1765,6],[1686,12,1765,10],[1686,13,1765,11,"store"],[1686,18,1765,16],[1686,21,1765,19],[1686,25,1765,23,"ResourceStore"],[1686,38,1765,36],[1686,39,1765,37],[1686,43,1765,41],[1686,44,1765,42,"options"],[1686,51,1765,49],[1686,52,1765,50,"resources"],[1686,61,1765,59],[1686,63,1765,61],[1686,67,1765,65],[1686,68,1765,66,"options"],[1686,75,1765,73],[1686,76,1765,74],[1687,8,1766,6],[1687,14,1766,12,"s"],[1687,15,1766,13],[1687,18,1766,16],[1687,22,1766,20],[1687,23,1766,21,"services"],[1687,31,1766,29],[1688,8,1767,6,"s"],[1688,9,1767,7],[1688,10,1767,8,"logger"],[1688,16,1767,14],[1688,19,1767,17,"baseLogger"],[1688,29,1767,27],[1689,8,1768,6,"s"],[1689,9,1768,7],[1689,10,1768,8,"resourceStore"],[1689,23,1768,21],[1689,26,1768,24],[1689,30,1768,28],[1689,31,1768,29,"store"],[1689,36,1768,34],[1690,8,1769,6,"s"],[1690,9,1769,7],[1690,10,1769,8,"languageUtils"],[1690,23,1769,21],[1690,26,1769,24,"lu"],[1690,28,1769,26],[1691,8,1770,6,"s"],[1691,9,1770,7],[1691,10,1770,8,"pluralResolver"],[1691,24,1770,22],[1691,27,1770,25],[1691,31,1770,29,"PluralResolver"],[1691,45,1770,43],[1691,46,1770,44,"lu"],[1691,48,1770,46],[1691,50,1770,48],[1692,10,1771,8,"prepend"],[1692,17,1771,15],[1692,19,1771,17],[1692,23,1771,21],[1692,24,1771,22,"options"],[1692,31,1771,29],[1692,32,1771,30,"pluralSeparator"],[1692,47,1771,45],[1693,10,1772,8,"simplifyPluralSuffix"],[1693,30,1772,28],[1693,32,1772,30],[1693,36,1772,34],[1693,37,1772,35,"options"],[1693,44,1772,42],[1693,45,1772,43,"simplifyPluralSuffix"],[1694,8,1773,6],[1694,9,1773,7],[1694,10,1773,8],[1695,8,1774,6],[1695,14,1774,12,"usingLegacyFormatFunction"],[1695,39,1774,37],[1695,42,1774,40],[1695,46,1774,44],[1695,47,1774,45,"options"],[1695,54,1774,52],[1695,55,1774,53,"interpolation"],[1695,68,1774,66],[1695,69,1774,67,"format"],[1695,75,1774,73],[1695,79,1774,77],[1695,83,1774,81],[1695,84,1774,82,"options"],[1695,91,1774,89],[1695,92,1774,90,"interpolation"],[1695,105,1774,103],[1695,106,1774,104,"format"],[1695,112,1774,110],[1695,117,1774,115,"defOpts"],[1695,124,1774,122],[1695,125,1774,123,"interpolation"],[1695,138,1774,136],[1695,139,1774,137,"format"],[1695,145,1774,143],[1696,8,1775,6],[1696,12,1775,10,"usingLegacyFormatFunction"],[1696,37,1775,35],[1696,39,1775,37],[1697,10,1776,8],[1697,14,1776,12],[1697,15,1776,13,"logger"],[1697,21,1776,19],[1697,22,1776,20,"deprecate"],[1697,31,1776,29],[1697,32,1776,30],[1697,172,1776,170],[1697,173,1776,171],[1698,8,1777,6],[1699,8,1778,6],[1699,12,1778,10,"formatter"],[1699,21,1778,19],[1699,26,1778,24],[1699,27,1778,25],[1699,31,1778,29],[1699,32,1778,30,"options"],[1699,39,1778,37],[1699,40,1778,38,"interpolation"],[1699,53,1778,51],[1699,54,1778,52,"format"],[1699,60,1778,58],[1699,64,1778,62],[1699,68,1778,66],[1699,69,1778,67,"options"],[1699,76,1778,74],[1699,77,1778,75,"interpolation"],[1699,90,1778,88],[1699,91,1778,89,"format"],[1699,97,1778,95],[1699,102,1778,100,"defOpts"],[1699,109,1778,107],[1699,110,1778,108,"interpolation"],[1699,123,1778,121],[1699,124,1778,122,"format"],[1699,130,1778,128],[1699,131,1778,129],[1699,133,1778,131],[1700,10,1779,8,"s"],[1700,11,1779,9],[1700,12,1779,10,"formatter"],[1700,21,1779,19],[1700,24,1779,22,"createClassOnDemand"],[1700,43,1779,41],[1700,44,1779,42,"formatter"],[1700,53,1779,51],[1700,54,1779,52],[1701,10,1780,8],[1701,14,1780,12,"s"],[1701,15,1780,13],[1701,16,1780,14,"formatter"],[1701,25,1780,23],[1701,26,1780,24,"init"],[1701,30,1780,28],[1701,32,1780,30,"s"],[1701,33,1780,31],[1701,34,1780,32,"formatter"],[1701,43,1780,41],[1701,44,1780,42,"init"],[1701,48,1780,46],[1701,49,1780,47,"s"],[1701,50,1780,48],[1701,52,1780,50],[1701,56,1780,54],[1701,57,1780,55,"options"],[1701,64,1780,62],[1701,65,1780,63],[1702,10,1781,8],[1702,14,1781,12],[1702,15,1781,13,"options"],[1702,22,1781,20],[1702,23,1781,21,"interpolation"],[1702,36,1781,34],[1702,37,1781,35,"format"],[1702,43,1781,41],[1702,46,1781,44,"s"],[1702,47,1781,45],[1702,48,1781,46,"formatter"],[1702,57,1781,55],[1702,58,1781,56,"format"],[1702,64,1781,62],[1702,65,1781,63,"bind"],[1702,69,1781,67],[1702,70,1781,68,"s"],[1702,71,1781,69],[1702,72,1781,70,"formatter"],[1702,81,1781,79],[1702,82,1781,80],[1703,8,1782,6],[1704,8,1783,6,"s"],[1704,9,1783,7],[1704,10,1783,8,"interpolator"],[1704,22,1783,20],[1704,25,1783,23],[1704,29,1783,27,"Interpolator"],[1704,41,1783,39],[1704,42,1783,40],[1704,46,1783,44],[1704,47,1783,45,"options"],[1704,54,1783,52],[1704,55,1783,53],[1705,8,1784,6,"s"],[1705,9,1784,7],[1705,10,1784,8,"utils"],[1705,15,1784,13],[1705,18,1784,16],[1706,10,1785,8,"hasLoadedNamespace"],[1706,28,1785,26],[1706,30,1785,28],[1706,34,1785,32],[1706,35,1785,33,"hasLoadedNamespace"],[1706,53,1785,51],[1706,54,1785,52,"bind"],[1706,58,1785,56],[1706,59,1785,57],[1706,63,1785,61],[1707,8,1786,6],[1707,9,1786,7],[1708,8,1787,6,"s"],[1708,9,1787,7],[1708,10,1787,8,"backendConnector"],[1708,26,1787,24],[1708,29,1787,27],[1708,33,1787,31,"Connector"],[1708,42,1787,40],[1708,43,1787,41,"createClassOnDemand"],[1708,62,1787,60],[1708,63,1787,61],[1708,67,1787,65],[1708,68,1787,66,"modules"],[1708,75,1787,73],[1708,76,1787,74,"backend"],[1708,83,1787,81],[1708,84,1787,82],[1708,86,1787,84,"s"],[1708,87,1787,85],[1708,88,1787,86,"resourceStore"],[1708,101,1787,99],[1708,103,1787,101,"s"],[1708,104,1787,102],[1708,106,1787,104],[1708,110,1787,108],[1708,111,1787,109,"options"],[1708,118,1787,116],[1708,119,1787,117],[1709,8,1788,6,"s"],[1709,9,1788,7],[1709,10,1788,8,"backendConnector"],[1709,26,1788,24],[1709,27,1788,25,"on"],[1709,29,1788,27],[1709,30,1788,28],[1709,33,1788,31],[1709,35,1788,33],[1709,36,1788,34,"event"],[1709,41,1788,39],[1709,43,1788,41],[1709,46,1788,44,"args"],[1709,50,1788,48],[1709,55,1788,53],[1710,10,1789,8],[1710,14,1789,12],[1710,15,1789,13,"emit"],[1710,19,1789,17],[1710,20,1789,18,"event"],[1710,25,1789,23],[1710,27,1789,25],[1710,30,1789,28,"args"],[1710,34,1789,32],[1710,35,1789,33],[1711,8,1790,6],[1711,9,1790,7],[1711,10,1790,8],[1712,8,1791,6],[1712,12,1791,10],[1712,16,1791,14],[1712,17,1791,15,"modules"],[1712,24,1791,22],[1712,25,1791,23,"languageDetector"],[1712,41,1791,39],[1712,43,1791,41],[1713,10,1792,8,"s"],[1713,11,1792,9],[1713,12,1792,10,"languageDetector"],[1713,28,1792,26],[1713,31,1792,29,"createClassOnDemand"],[1713,50,1792,48],[1713,51,1792,49],[1713,55,1792,53],[1713,56,1792,54,"modules"],[1713,63,1792,61],[1713,64,1792,62,"languageDetector"],[1713,80,1792,78],[1713,81,1792,79],[1714,10,1793,8],[1714,14,1793,12,"s"],[1714,15,1793,13],[1714,16,1793,14,"languageDetector"],[1714,32,1793,30],[1714,33,1793,31,"init"],[1714,37,1793,35],[1714,39,1793,37,"s"],[1714,40,1793,38],[1714,41,1793,39,"languageDetector"],[1714,57,1793,55],[1714,58,1793,56,"init"],[1714,62,1793,60],[1714,63,1793,61,"s"],[1714,64,1793,62],[1714,66,1793,64],[1714,70,1793,68],[1714,71,1793,69,"options"],[1714,78,1793,76],[1714,79,1793,77,"detection"],[1714,88,1793,86],[1714,90,1793,88],[1714,94,1793,92],[1714,95,1793,93,"options"],[1714,102,1793,100],[1714,103,1793,101],[1715,8,1794,6],[1716,8,1795,6],[1716,12,1795,10],[1716,16,1795,14],[1716,17,1795,15,"modules"],[1716,24,1795,22],[1716,25,1795,23,"i18nFormat"],[1716,35,1795,33],[1716,37,1795,35],[1717,10,1796,8,"s"],[1717,11,1796,9],[1717,12,1796,10,"i18nFormat"],[1717,22,1796,20],[1717,25,1796,23,"createClassOnDemand"],[1717,44,1796,42],[1717,45,1796,43],[1717,49,1796,47],[1717,50,1796,48,"modules"],[1717,57,1796,55],[1717,58,1796,56,"i18nFormat"],[1717,68,1796,66],[1717,69,1796,67],[1718,10,1797,8],[1718,14,1797,12,"s"],[1718,15,1797,13],[1718,16,1797,14,"i18nFormat"],[1718,26,1797,24],[1718,27,1797,25,"init"],[1718,31,1797,29],[1718,33,1797,31,"s"],[1718,34,1797,32],[1718,35,1797,33,"i18nFormat"],[1718,45,1797,43],[1718,46,1797,44,"init"],[1718,50,1797,48],[1718,51,1797,49],[1718,55,1797,53],[1718,56,1797,54],[1719,8,1798,6],[1720,8,1799,6],[1720,12,1799,10],[1720,13,1799,11,"translator"],[1720,23,1799,21],[1720,26,1799,24],[1720,30,1799,28,"Translator"],[1720,40,1799,38],[1720,41,1799,39],[1720,45,1799,43],[1720,46,1799,44,"services"],[1720,54,1799,52],[1720,56,1799,54],[1720,60,1799,58],[1720,61,1799,59,"options"],[1720,68,1799,66],[1720,69,1799,67],[1721,8,1800,6],[1721,12,1800,10],[1721,13,1800,11,"translator"],[1721,23,1800,21],[1721,24,1800,22,"on"],[1721,26,1800,24],[1721,27,1800,25],[1721,30,1800,28],[1721,32,1800,30],[1721,33,1800,31,"event"],[1721,38,1800,36],[1721,40,1800,38],[1721,43,1800,41,"args"],[1721,47,1800,45],[1721,52,1800,50],[1722,10,1801,8],[1722,14,1801,12],[1722,15,1801,13,"emit"],[1722,19,1801,17],[1722,20,1801,18,"event"],[1722,25,1801,23],[1722,27,1801,25],[1722,30,1801,28,"args"],[1722,34,1801,32],[1722,35,1801,33],[1723,8,1802,6],[1723,9,1802,7],[1723,10,1802,8],[1724,8,1803,6],[1724,12,1803,10],[1724,13,1803,11,"modules"],[1724,20,1803,18],[1724,21,1803,19,"external"],[1724,29,1803,27],[1724,30,1803,28,"forEach"],[1724,37,1803,35],[1724,38,1803,36,"m"],[1724,39,1803,37],[1724,43,1803,41],[1725,10,1804,8],[1725,14,1804,12,"m"],[1725,15,1804,13],[1725,16,1804,14,"init"],[1725,20,1804,18],[1725,22,1804,20,"m"],[1725,23,1804,21],[1725,24,1804,22,"init"],[1725,28,1804,26],[1725,29,1804,27],[1725,33,1804,31],[1725,34,1804,32],[1726,8,1805,6],[1726,9,1805,7],[1726,10,1805,8],[1727,6,1806,4],[1728,6,1807,4],[1728,10,1807,8],[1728,11,1807,9,"format"],[1728,17,1807,15],[1728,20,1807,18],[1728,24,1807,22],[1728,25,1807,23,"options"],[1728,32,1807,30],[1728,33,1807,31,"interpolation"],[1728,46,1807,44],[1728,47,1807,45,"format"],[1728,53,1807,51],[1729,6,1808,4],[1729,10,1808,8],[1729,11,1808,9,"callback"],[1729,19,1808,17],[1729,21,1808,19,"callback"],[1729,29,1808,27],[1729,32,1808,30,"noop"],[1729,36,1808,34],[1730,6,1809,4],[1730,10,1809,8],[1730,14,1809,12],[1730,15,1809,13,"options"],[1730,22,1809,20],[1730,23,1809,21,"fallbackLng"],[1730,34,1809,32],[1730,38,1809,36],[1730,39,1809,37],[1730,43,1809,41],[1730,44,1809,42,"services"],[1730,52,1809,50],[1730,53,1809,51,"languageDetector"],[1730,69,1809,67],[1730,73,1809,71],[1730,74,1809,72],[1730,78,1809,76],[1730,79,1809,77,"options"],[1730,86,1809,84],[1730,87,1809,85,"lng"],[1730,90,1809,88],[1730,92,1809,90],[1731,8,1810,6],[1731,14,1810,12,"codes"],[1731,19,1810,17],[1731,22,1810,20],[1731,26,1810,24],[1731,27,1810,25,"services"],[1731,35,1810,33],[1731,36,1810,34,"languageUtils"],[1731,49,1810,47],[1731,50,1810,48,"getFallbackCodes"],[1731,66,1810,64],[1731,67,1810,65],[1731,71,1810,69],[1731,72,1810,70,"options"],[1731,79,1810,77],[1731,80,1810,78,"fallbackLng"],[1731,91,1810,89],[1731,92,1810,90],[1732,8,1811,6],[1732,12,1811,10,"codes"],[1732,17,1811,15],[1732,18,1811,16,"length"],[1732,24,1811,22],[1732,27,1811,25],[1732,28,1811,26],[1732,32,1811,30,"codes"],[1732,37,1811,35],[1732,38,1811,36],[1732,39,1811,37],[1732,40,1811,38],[1732,45,1811,43],[1732,50,1811,48],[1732,52,1811,50],[1732,56,1811,54],[1732,57,1811,55,"options"],[1732,64,1811,62],[1732,65,1811,63,"lng"],[1732,68,1811,66],[1732,71,1811,69,"codes"],[1732,76,1811,74],[1732,77,1811,75],[1732,78,1811,76],[1732,79,1811,77],[1733,6,1812,4],[1734,6,1813,4],[1734,10,1813,8],[1734,11,1813,9],[1734,15,1813,13],[1734,16,1813,14,"services"],[1734,24,1813,22],[1734,25,1813,23,"languageDetector"],[1734,41,1813,39],[1734,45,1813,43],[1734,46,1813,44],[1734,50,1813,48],[1734,51,1813,49,"options"],[1734,58,1813,56],[1734,59,1813,57,"lng"],[1734,62,1813,60],[1734,64,1813,62],[1735,8,1814,6],[1735,12,1814,10],[1735,13,1814,11,"logger"],[1735,19,1814,17],[1735,20,1814,18,"warn"],[1735,24,1814,22],[1735,25,1814,23],[1735,82,1814,80],[1735,83,1814,81],[1736,6,1815,4],[1737,6,1816,4],[1737,12,1816,10,"storeApi"],[1737,20,1816,18],[1737,23,1816,21],[1737,24,1816,22],[1737,37,1816,35],[1737,39,1816,37],[1737,58,1816,56],[1737,60,1816,58],[1737,79,1816,77],[1737,81,1816,79],[1737,100,1816,98],[1737,101,1816,99],[1738,6,1817,4,"storeApi"],[1738,14,1817,12],[1738,15,1817,13,"forEach"],[1738,22,1817,20],[1738,23,1817,21,"fcName"],[1738,29,1817,27],[1738,33,1817,31],[1739,8,1818,6],[1739,12,1818,10],[1739,13,1818,11,"fcName"],[1739,19,1818,17],[1739,20,1818,18],[1739,23,1818,21],[1739,24,1818,22],[1739,27,1818,25,"args"],[1739,31,1818,29],[1739,36,1818,34],[1739,40,1818,38],[1739,41,1818,39,"store"],[1739,46,1818,44],[1739,47,1818,45,"fcName"],[1739,53,1818,51],[1739,54,1818,52],[1739,55,1818,53],[1739,58,1818,56,"args"],[1739,62,1818,60],[1739,63,1818,61],[1740,6,1819,4],[1740,7,1819,5],[1740,8,1819,6],[1741,6,1820,4],[1741,12,1820,10,"storeApiChained"],[1741,27,1820,25],[1741,30,1820,28],[1741,31,1820,29],[1741,44,1820,42],[1741,46,1820,44],[1741,60,1820,58],[1741,62,1820,60],[1741,81,1820,79],[1741,83,1820,81],[1741,105,1820,103],[1741,106,1820,104],[1742,6,1821,4,"storeApiChained"],[1742,21,1821,19],[1742,22,1821,20,"forEach"],[1742,29,1821,27],[1742,30,1821,28,"fcName"],[1742,36,1821,34],[1742,40,1821,38],[1743,8,1822,6],[1743,12,1822,10],[1743,13,1822,11,"fcName"],[1743,19,1822,17],[1743,20,1822,18],[1743,23,1822,21],[1743,24,1822,22],[1743,27,1822,25,"args"],[1743,31,1822,29],[1743,36,1822,34],[1744,10,1823,8],[1744,14,1823,12],[1744,15,1823,13,"store"],[1744,20,1823,18],[1744,21,1823,19,"fcName"],[1744,27,1823,25],[1744,28,1823,26],[1744,29,1823,27],[1744,32,1823,30,"args"],[1744,36,1823,34],[1744,37,1823,35],[1745,10,1824,8],[1745,17,1824,15],[1745,21,1824,19],[1746,8,1825,6],[1746,9,1825,7],[1747,6,1826,4],[1747,7,1826,5],[1747,8,1826,6],[1748,6,1827,4],[1748,12,1827,10,"deferred"],[1748,20,1827,18],[1748,23,1827,21,"defer"],[1748,28,1827,26],[1748,29,1827,27],[1748,30,1827,28],[1749,6,1828,4],[1749,12,1828,10,"load"],[1749,16,1828,14],[1749,19,1828,17,"load"],[1749,20,1828,17],[1749,25,1828,23],[1750,8,1829,6],[1750,14,1829,12,"finish"],[1750,20,1829,18],[1750,23,1829,21,"finish"],[1750,24,1829,22,"err"],[1750,27,1829,25],[1750,29,1829,27,"t"],[1750,30,1829,28],[1750,35,1829,33],[1751,10,1830,8],[1751,14,1830,12],[1751,15,1830,13,"isInitializing"],[1751,29,1830,27],[1751,32,1830,30],[1751,37,1830,35],[1752,10,1831,8],[1752,14,1831,12],[1752,18,1831,16],[1752,19,1831,17,"isInitialized"],[1752,32,1831,30],[1752,36,1831,34],[1752,37,1831,35],[1752,41,1831,39],[1752,42,1831,40,"initializedStoreOnce"],[1752,62,1831,60],[1752,64,1831,62],[1752,68,1831,66],[1752,69,1831,67,"logger"],[1752,75,1831,73],[1752,76,1831,74,"warn"],[1752,80,1831,78],[1752,81,1831,79],[1752,152,1831,150],[1752,153,1831,151],[1753,10,1832,8],[1753,14,1832,12],[1753,15,1832,13,"isInitialized"],[1753,28,1832,26],[1753,31,1832,29],[1753,35,1832,33],[1754,10,1833,8],[1754,14,1833,12],[1754,15,1833,13],[1754,19,1833,17],[1754,20,1833,18,"options"],[1754,27,1833,25],[1754,28,1833,26,"isClone"],[1754,35,1833,33],[1754,37,1833,35],[1754,41,1833,39],[1754,42,1833,40,"logger"],[1754,48,1833,46],[1754,49,1833,47,"log"],[1754,52,1833,50],[1754,53,1833,51],[1754,66,1833,64],[1754,68,1833,66],[1754,72,1833,70],[1754,73,1833,71,"options"],[1754,80,1833,78],[1754,81,1833,79],[1755,10,1834,8],[1755,14,1834,12],[1755,15,1834,13,"emit"],[1755,19,1834,17],[1755,20,1834,18],[1755,33,1834,31],[1755,35,1834,33],[1755,39,1834,37],[1755,40,1834,38,"options"],[1755,47,1834,45],[1755,48,1834,46],[1756,10,1835,8,"deferred"],[1756,18,1835,16],[1756,19,1835,17,"resolve"],[1756,26,1835,24],[1756,27,1835,25,"t"],[1756,28,1835,26],[1756,29,1835,27],[1757,10,1836,8,"callback"],[1757,18,1836,16],[1757,19,1836,17,"err"],[1757,22,1836,20],[1757,24,1836,22,"t"],[1757,25,1836,23],[1757,26,1836,24],[1758,8,1837,6],[1758,9,1837,7],[1759,8,1838,6],[1759,12,1838,10],[1759,16,1838,14],[1759,17,1838,15,"languages"],[1759,26,1838,24],[1759,30,1838,28],[1759,31,1838,29],[1759,35,1838,33],[1759,36,1838,34,"isInitialized"],[1759,49,1838,47],[1759,51,1838,49],[1759,58,1838,56,"finish"],[1759,64,1838,62],[1759,65,1838,63],[1759,69,1838,67],[1759,71,1838,69],[1759,75,1838,73],[1759,76,1838,74,"t"],[1759,77,1838,75],[1759,78,1838,76,"bind"],[1759,82,1838,80],[1759,83,1838,81],[1759,87,1838,85],[1759,88,1838,86],[1759,89,1838,87],[1760,8,1839,6],[1760,12,1839,10],[1760,13,1839,11,"changeLanguage"],[1760,27,1839,25],[1760,28,1839,26],[1760,32,1839,30],[1760,33,1839,31,"options"],[1760,40,1839,38],[1760,41,1839,39,"lng"],[1760,44,1839,42],[1760,46,1839,44,"finish"],[1760,52,1839,50],[1760,53,1839,51],[1761,6,1840,4],[1761,7,1840,5],[1762,6,1841,4],[1762,10,1841,8],[1762,14,1841,12],[1762,15,1841,13,"options"],[1762,22,1841,20],[1762,23,1841,21,"resources"],[1762,32,1841,30],[1762,36,1841,34],[1762,37,1841,35],[1762,41,1841,39],[1762,42,1841,40,"options"],[1762,49,1841,47],[1762,50,1841,48,"initAsync"],[1762,59,1841,57],[1762,61,1841,59],[1763,8,1842,6,"load"],[1763,12,1842,10],[1763,13,1842,11],[1763,14,1842,12],[1764,6,1843,4],[1764,7,1843,5],[1764,13,1843,11],[1765,8,1844,6,"setTimeout"],[1765,18,1844,16],[1765,19,1844,17,"load"],[1765,23,1844,21],[1765,25,1844,23],[1765,26,1844,24],[1765,27,1844,25],[1766,6,1845,4],[1767,6,1846,4],[1767,13,1846,11,"deferred"],[1767,21,1846,19],[1768,4,1847,2],[1769,4,1848,2,"loadResources"],[1769,17,1848,15,"loadResources"],[1769,18,1848,16,"language"],[1769,26,1848,24],[1769,28,1848,26,"callback"],[1769,36,1848,34],[1769,39,1848,37,"noop"],[1769,43,1848,41],[1769,45,1848,43],[1770,6,1849,4],[1770,10,1849,8,"usedCallback"],[1770,22,1849,20],[1770,25,1849,23,"callback"],[1770,33,1849,31],[1771,6,1850,4],[1771,12,1850,10,"usedLng"],[1771,19,1850,17],[1771,22,1850,20,"isString"],[1771,30,1850,28],[1771,31,1850,29,"language"],[1771,39,1850,37],[1771,40,1850,38],[1771,43,1850,41,"language"],[1771,51,1850,49],[1771,54,1850,52],[1771,58,1850,56],[1771,59,1850,57,"language"],[1771,67,1850,65],[1772,6,1851,4],[1772,10,1851,8],[1772,17,1851,15,"language"],[1772,25,1851,23],[1772,30,1851,28],[1772,40,1851,38],[1772,42,1851,40,"usedCallback"],[1772,54,1851,52],[1772,57,1851,55,"language"],[1772,65,1851,63],[1773,6,1852,4],[1773,10,1852,8],[1773,11,1852,9],[1773,15,1852,13],[1773,16,1852,14,"options"],[1773,23,1852,21],[1773,24,1852,22,"resources"],[1773,33,1852,31],[1773,37,1852,35],[1773,41,1852,39],[1773,42,1852,40,"options"],[1773,49,1852,47],[1773,50,1852,48,"partialBundledLanguages"],[1773,73,1852,71],[1773,75,1852,73],[1774,8,1853,6],[1774,12,1853,10,"usedLng"],[1774,19,1853,17],[1774,21,1853,19,"toLowerCase"],[1774,32,1853,30],[1774,33,1853,31],[1774,34,1853,32],[1774,39,1853,37],[1774,47,1853,45],[1774,52,1853,50],[1774,53,1853,51],[1774,57,1853,55],[1774,58,1853,56,"options"],[1774,65,1853,63],[1774,66,1853,64,"preload"],[1774,73,1853,71],[1774,77,1853,75],[1774,81,1853,79],[1774,82,1853,80,"options"],[1774,89,1853,87],[1774,90,1853,88,"preload"],[1774,97,1853,95],[1774,98,1853,96,"length"],[1774,104,1853,102],[1774,109,1853,107],[1774,110,1853,108],[1774,111,1853,109],[1774,113,1853,111],[1774,120,1853,118,"usedCallback"],[1774,132,1853,130],[1774,133,1853,131],[1774,134,1853,132],[1775,8,1854,6],[1775,14,1854,12,"toLoad"],[1775,20,1854,18],[1775,23,1854,21],[1775,25,1854,23],[1776,8,1855,6],[1776,14,1855,12,"append"],[1776,20,1855,18],[1776,23,1855,21,"lng"],[1776,26,1855,24],[1776,30,1855,28],[1777,10,1856,8],[1777,14,1856,12],[1777,15,1856,13,"lng"],[1777,18,1856,16],[1777,20,1856,18],[1778,10,1857,8],[1778,14,1857,12,"lng"],[1778,17,1857,15],[1778,22,1857,20],[1778,30,1857,28],[1778,32,1857,30],[1779,10,1858,8],[1779,16,1858,14,"lngs"],[1779,20,1858,18],[1779,23,1858,21],[1779,27,1858,25],[1779,28,1858,26,"services"],[1779,36,1858,34],[1779,37,1858,35,"languageUtils"],[1779,50,1858,48],[1779,51,1858,49,"toResolveHierarchy"],[1779,69,1858,67],[1779,70,1858,68,"lng"],[1779,73,1858,71],[1779,74,1858,72],[1780,10,1859,8,"lngs"],[1780,14,1859,12],[1780,15,1859,13,"forEach"],[1780,22,1859,20],[1780,23,1859,21,"l"],[1780,24,1859,22],[1780,28,1859,26],[1781,12,1860,10],[1781,16,1860,14,"l"],[1781,17,1860,15],[1781,22,1860,20],[1781,30,1860,28],[1781,32,1860,30],[1782,12,1861,10],[1782,16,1861,14,"toLoad"],[1782,22,1861,20],[1782,23,1861,21,"indexOf"],[1782,30,1861,28],[1782,31,1861,29,"l"],[1782,32,1861,30],[1782,33,1861,31],[1782,36,1861,34],[1782,37,1861,35],[1782,39,1861,37,"toLoad"],[1782,45,1861,43],[1782,46,1861,44,"push"],[1782,50,1861,48],[1782,51,1861,49,"l"],[1782,52,1861,50],[1782,53,1861,51],[1783,10,1862,8],[1783,11,1862,9],[1783,12,1862,10],[1784,8,1863,6],[1784,9,1863,7],[1785,8,1864,6],[1785,12,1864,10],[1785,13,1864,11,"usedLng"],[1785,20,1864,18],[1785,22,1864,20],[1786,10,1865,8],[1786,16,1865,14,"fallbacks"],[1786,25,1865,23],[1786,28,1865,26],[1786,32,1865,30],[1786,33,1865,31,"services"],[1786,41,1865,39],[1786,42,1865,40,"languageUtils"],[1786,55,1865,53],[1786,56,1865,54,"getFallbackCodes"],[1786,72,1865,70],[1786,73,1865,71],[1786,77,1865,75],[1786,78,1865,76,"options"],[1786,85,1865,83],[1786,86,1865,84,"fallbackLng"],[1786,97,1865,95],[1786,98,1865,96],[1787,10,1866,8,"fallbacks"],[1787,19,1866,17],[1787,20,1866,18,"forEach"],[1787,27,1866,25],[1787,28,1866,26,"l"],[1787,29,1866,27],[1787,33,1866,31,"append"],[1787,39,1866,37],[1787,40,1866,38,"l"],[1787,41,1866,39],[1787,42,1866,40],[1787,43,1866,41],[1788,8,1867,6],[1788,9,1867,7],[1788,15,1867,13],[1789,10,1868,8,"append"],[1789,16,1868,14],[1789,17,1868,15,"usedLng"],[1789,24,1868,22],[1789,25,1868,23],[1790,8,1869,6],[1791,8,1870,6],[1791,12,1870,10],[1791,13,1870,11,"options"],[1791,20,1870,18],[1791,21,1870,19,"preload"],[1791,28,1870,26],[1791,30,1870,28,"forEach"],[1791,37,1870,35],[1791,40,1870,38,"l"],[1791,41,1870,39],[1791,45,1870,43,"append"],[1791,51,1870,49],[1791,52,1870,50,"l"],[1791,53,1870,51],[1791,54,1870,52],[1791,55,1870,53],[1792,8,1871,6],[1792,12,1871,10],[1792,13,1871,11,"services"],[1792,21,1871,19],[1792,22,1871,20,"backendConnector"],[1792,38,1871,36],[1792,39,1871,37,"load"],[1792,43,1871,41],[1792,44,1871,42,"toLoad"],[1792,50,1871,48],[1792,52,1871,50],[1792,56,1871,54],[1792,57,1871,55,"options"],[1792,64,1871,62],[1792,65,1871,63,"ns"],[1792,67,1871,65],[1792,69,1871,67,"e"],[1792,70,1871,68],[1792,74,1871,72],[1793,10,1872,8],[1793,14,1872,12],[1793,15,1872,13,"e"],[1793,16,1872,14],[1793,20,1872,18],[1793,21,1872,19],[1793,25,1872,23],[1793,26,1872,24,"resolvedLanguage"],[1793,42,1872,40],[1793,46,1872,44],[1793,50,1872,48],[1793,51,1872,49,"language"],[1793,59,1872,57],[1793,61,1872,59],[1793,65,1872,63],[1793,66,1872,64,"setResolvedLanguage"],[1793,85,1872,83],[1793,86,1872,84],[1793,90,1872,88],[1793,91,1872,89,"language"],[1793,99,1872,97],[1793,100,1872,98],[1794,10,1873,8,"usedCallback"],[1794,22,1873,20],[1794,23,1873,21,"e"],[1794,24,1873,22],[1794,25,1873,23],[1795,8,1874,6],[1795,9,1874,7],[1795,10,1874,8],[1796,6,1875,4],[1796,7,1875,5],[1796,13,1875,11],[1797,8,1876,6,"usedCallback"],[1797,20,1876,18],[1797,21,1876,19],[1797,25,1876,23],[1797,26,1876,24],[1798,6,1877,4],[1799,4,1878,2],[1800,4,1879,2,"reloadResources"],[1800,19,1879,17,"reloadResources"],[1800,20,1879,18,"lngs"],[1800,24,1879,22],[1800,26,1879,24,"ns"],[1800,28,1879,26],[1800,30,1879,28,"callback"],[1800,38,1879,36],[1800,40,1879,38],[1801,6,1880,4],[1801,12,1880,10,"deferred"],[1801,20,1880,18],[1801,23,1880,21,"defer"],[1801,28,1880,26],[1801,29,1880,27],[1801,30,1880,28],[1802,6,1881,4],[1802,10,1881,8],[1802,17,1881,15,"lngs"],[1802,21,1881,19],[1802,26,1881,24],[1802,36,1881,34],[1802,38,1881,36],[1803,8,1882,6,"callback"],[1803,16,1882,14],[1803,19,1882,17,"lngs"],[1803,23,1882,21],[1804,8,1883,6,"lngs"],[1804,12,1883,10],[1804,15,1883,13,"undefined"],[1804,24,1883,22],[1805,6,1884,4],[1806,6,1885,4],[1806,10,1885,8],[1806,17,1885,15,"ns"],[1806,19,1885,17],[1806,24,1885,22],[1806,34,1885,32],[1806,36,1885,34],[1807,8,1886,6,"callback"],[1807,16,1886,14],[1807,19,1886,17,"ns"],[1807,21,1886,19],[1808,8,1887,6,"ns"],[1808,10,1887,8],[1808,13,1887,11,"undefined"],[1808,22,1887,20],[1809,6,1888,4],[1810,6,1889,4],[1810,10,1889,8],[1810,11,1889,9,"lngs"],[1810,15,1889,13],[1810,17,1889,15,"lngs"],[1810,21,1889,19],[1810,24,1889,22],[1810,28,1889,26],[1810,29,1889,27,"languages"],[1810,38,1889,36],[1811,6,1890,4],[1811,10,1890,8],[1811,11,1890,9,"ns"],[1811,13,1890,11],[1811,15,1890,13,"ns"],[1811,17,1890,15],[1811,20,1890,18],[1811,24,1890,22],[1811,25,1890,23,"options"],[1811,32,1890,30],[1811,33,1890,31,"ns"],[1811,35,1890,33],[1812,6,1891,4],[1812,10,1891,8],[1812,11,1891,9,"callback"],[1812,19,1891,17],[1812,21,1891,19,"callback"],[1812,29,1891,27],[1812,32,1891,30,"noop"],[1812,36,1891,34],[1813,6,1892,4],[1813,10,1892,8],[1813,11,1892,9,"services"],[1813,19,1892,17],[1813,20,1892,18,"backendConnector"],[1813,36,1892,34],[1813,37,1892,35,"reload"],[1813,43,1892,41],[1813,44,1892,42,"lngs"],[1813,48,1892,46],[1813,50,1892,48,"ns"],[1813,52,1892,50],[1813,54,1892,52,"err"],[1813,57,1892,55],[1813,61,1892,59],[1814,8,1893,6,"deferred"],[1814,16,1893,14],[1814,17,1893,15,"resolve"],[1814,24,1893,22],[1814,25,1893,23],[1814,26,1893,24],[1815,8,1894,6,"callback"],[1815,16,1894,14],[1815,17,1894,15,"err"],[1815,20,1894,18],[1815,21,1894,19],[1816,6,1895,4],[1816,7,1895,5],[1816,8,1895,6],[1817,6,1896,4],[1817,13,1896,11,"deferred"],[1817,21,1896,19],[1818,4,1897,2],[1819,4,1898,2,"use"],[1819,7,1898,5,"use"],[1819,8,1898,6,"module"],[1819,14,1898,12],[1819,16,1898,14],[1820,6,1899,4],[1820,10,1899,8],[1820,11,1899,9,"module"],[1820,17,1899,15],[1820,19,1899,17],[1820,25,1899,23],[1820,29,1899,27,"Error"],[1820,34,1899,32],[1820,35,1899,33],[1820,130,1899,128],[1820,131,1899,129],[1821,6,1900,4],[1821,10,1900,8],[1821,11,1900,9,"module"],[1821,17,1900,15],[1821,18,1900,16,"type"],[1821,22,1900,20],[1821,24,1900,22],[1821,30,1900,28],[1821,34,1900,32,"Error"],[1821,39,1900,37],[1821,40,1900,38],[1821,130,1900,128],[1821,131,1900,129],[1822,6,1901,4],[1822,10,1901,8,"module"],[1822,16,1901,14],[1822,17,1901,15,"type"],[1822,21,1901,19],[1822,26,1901,24],[1822,35,1901,33],[1822,37,1901,35],[1823,8,1902,6],[1823,12,1902,10],[1823,13,1902,11,"modules"],[1823,20,1902,18],[1823,21,1902,19,"backend"],[1823,28,1902,26],[1823,31,1902,29,"module"],[1823,37,1902,35],[1824,6,1903,4],[1825,6,1904,4],[1825,10,1904,8,"module"],[1825,16,1904,14],[1825,17,1904,15,"type"],[1825,21,1904,19],[1825,26,1904,24],[1825,34,1904,32],[1825,38,1904,36,"module"],[1825,44,1904,42],[1825,45,1904,43,"log"],[1825,48,1904,46],[1825,52,1904,50,"module"],[1825,58,1904,56],[1825,59,1904,57,"warn"],[1825,63,1904,61],[1825,67,1904,65,"module"],[1825,73,1904,71],[1825,74,1904,72,"error"],[1825,79,1904,77],[1825,81,1904,79],[1826,8,1905,6],[1826,12,1905,10],[1826,13,1905,11,"modules"],[1826,20,1905,18],[1826,21,1905,19,"logger"],[1826,27,1905,25],[1826,30,1905,28,"module"],[1826,36,1905,34],[1827,6,1906,4],[1828,6,1907,4],[1828,10,1907,8,"module"],[1828,16,1907,14],[1828,17,1907,15,"type"],[1828,21,1907,19],[1828,26,1907,24],[1828,44,1907,42],[1828,46,1907,44],[1829,8,1908,6],[1829,12,1908,10],[1829,13,1908,11,"modules"],[1829,20,1908,18],[1829,21,1908,19,"languageDetector"],[1829,37,1908,35],[1829,40,1908,38,"module"],[1829,46,1908,44],[1830,6,1909,4],[1831,6,1910,4],[1831,10,1910,8,"module"],[1831,16,1910,14],[1831,17,1910,15,"type"],[1831,21,1910,19],[1831,26,1910,24],[1831,38,1910,36],[1831,40,1910,38],[1832,8,1911,6],[1832,12,1911,10],[1832,13,1911,11,"modules"],[1832,20,1911,18],[1832,21,1911,19,"i18nFormat"],[1832,31,1911,29],[1832,34,1911,32,"module"],[1832,40,1911,38],[1833,6,1912,4],[1834,6,1913,4],[1834,10,1913,8,"module"],[1834,16,1913,14],[1834,17,1913,15,"type"],[1834,21,1913,19],[1834,26,1913,24],[1834,41,1913,39],[1834,43,1913,41],[1835,8,1914,6,"postProcessor"],[1835,21,1914,19],[1835,22,1914,20,"addPostProcessor"],[1835,38,1914,36],[1835,39,1914,37,"module"],[1835,45,1914,43],[1835,46,1914,44],[1836,6,1915,4],[1837,6,1916,4],[1837,10,1916,8,"module"],[1837,16,1916,14],[1837,17,1916,15,"type"],[1837,21,1916,19],[1837,26,1916,24],[1837,37,1916,35],[1837,39,1916,37],[1838,8,1917,6],[1838,12,1917,10],[1838,13,1917,11,"modules"],[1838,20,1917,18],[1838,21,1917,19,"formatter"],[1838,30,1917,28],[1838,33,1917,31,"module"],[1838,39,1917,37],[1839,6,1918,4],[1840,6,1919,4],[1840,10,1919,8,"module"],[1840,16,1919,14],[1840,17,1919,15,"type"],[1840,21,1919,19],[1840,26,1919,24],[1840,36,1919,34],[1840,38,1919,36],[1841,8,1920,6],[1841,12,1920,10],[1841,13,1920,11,"modules"],[1841,20,1920,18],[1841,21,1920,19,"external"],[1841,29,1920,27],[1841,30,1920,28,"push"],[1841,34,1920,32],[1841,35,1920,33,"module"],[1841,41,1920,39],[1841,42,1920,40],[1842,6,1921,4],[1843,6,1922,4],[1843,13,1922,11],[1843,17,1922,15],[1844,4,1923,2],[1845,4,1924,2,"setResolvedLanguage"],[1845,23,1924,21,"setResolvedLanguage"],[1845,24,1924,22,"l"],[1845,25,1924,23],[1845,27,1924,25],[1846,6,1925,4],[1846,10,1925,8],[1846,11,1925,9,"l"],[1846,12,1925,10],[1846,16,1925,14],[1846,17,1925,15],[1846,21,1925,19],[1846,22,1925,20,"languages"],[1846,31,1925,29],[1846,33,1925,31],[1847,6,1926,4],[1847,10,1926,8],[1847,11,1926,9],[1847,19,1926,17],[1847,21,1926,19],[1847,26,1926,24],[1847,27,1926,25],[1847,28,1926,26,"indexOf"],[1847,35,1926,33],[1847,36,1926,34,"l"],[1847,37,1926,35],[1847,38,1926,36],[1847,41,1926,39],[1847,42,1926,40],[1847,43,1926,41],[1847,45,1926,43],[1848,6,1927,4],[1848,11,1927,9],[1848,15,1927,13,"li"],[1848,17,1927,15],[1848,20,1927,18],[1848,21,1927,19],[1848,23,1927,21,"li"],[1848,25,1927,23],[1848,28,1927,26],[1848,32,1927,30],[1848,33,1927,31,"languages"],[1848,42,1927,40],[1848,43,1927,41,"length"],[1848,49,1927,47],[1848,51,1927,49,"li"],[1848,53,1927,51],[1848,55,1927,53],[1848,57,1927,55],[1849,8,1928,6],[1849,14,1928,12,"lngInLngs"],[1849,23,1928,21],[1849,26,1928,24],[1849,30,1928,28],[1849,31,1928,29,"languages"],[1849,40,1928,38],[1849,41,1928,39,"li"],[1849,43,1928,41],[1849,44,1928,42],[1850,8,1929,6],[1850,12,1929,10],[1850,13,1929,11],[1850,21,1929,19],[1850,23,1929,21],[1850,28,1929,26],[1850,29,1929,27],[1850,30,1929,28,"indexOf"],[1850,37,1929,35],[1850,38,1929,36,"lngInLngs"],[1850,47,1929,45],[1850,48,1929,46],[1850,51,1929,49],[1850,52,1929,50],[1850,53,1929,51],[1850,55,1929,53],[1851,8,1930,6],[1851,12,1930,10],[1851,16,1930,14],[1851,17,1930,15,"store"],[1851,22,1930,20],[1851,23,1930,21,"hasLanguageSomeTranslations"],[1851,50,1930,48],[1851,51,1930,49,"lngInLngs"],[1851,60,1930,58],[1851,61,1930,59],[1851,63,1930,61],[1852,10,1931,8],[1852,14,1931,12],[1852,15,1931,13,"resolvedLanguage"],[1852,31,1931,29],[1852,34,1931,32,"lngInLngs"],[1852,43,1931,41],[1853,10,1932,8],[1854,8,1933,6],[1855,6,1934,4],[1856,6,1935,4],[1856,10,1935,8],[1856,11,1935,9],[1856,15,1935,13],[1856,16,1935,14,"resolvedLanguage"],[1856,32,1935,30],[1856,36,1935,34],[1856,40,1935,38],[1856,41,1935,39,"languages"],[1856,50,1935,48],[1856,51,1935,49,"indexOf"],[1856,58,1935,56],[1856,59,1935,57,"l"],[1856,60,1935,58],[1856,61,1935,59],[1856,64,1935,62],[1856,65,1935,63],[1856,69,1935,67],[1856,73,1935,71],[1856,74,1935,72,"store"],[1856,79,1935,77],[1856,80,1935,78,"hasLanguageSomeTranslations"],[1856,107,1935,105],[1856,108,1935,106,"l"],[1856,109,1935,107],[1856,110,1935,108],[1856,112,1935,110],[1857,8,1936,6],[1857,12,1936,10],[1857,13,1936,11,"resolvedLanguage"],[1857,29,1936,27],[1857,32,1936,30,"l"],[1857,33,1936,31],[1858,8,1937,6],[1858,12,1937,10],[1858,13,1937,11,"languages"],[1858,22,1937,20],[1858,23,1937,21,"unshift"],[1858,30,1937,28],[1858,31,1937,29,"l"],[1858,32,1937,30],[1858,33,1937,31],[1859,6,1938,4],[1860,4,1939,2],[1861,4,1940,2,"changeLanguage"],[1861,18,1940,16,"changeLanguage"],[1861,19,1940,17,"lng"],[1861,22,1940,20],[1861,24,1940,22,"callback"],[1861,32,1940,30],[1861,34,1940,32],[1862,6,1941,4],[1862,10,1941,8],[1862,11,1941,9,"isLanguageChangingTo"],[1862,31,1941,29],[1862,34,1941,32,"lng"],[1862,37,1941,35],[1863,6,1942,4],[1863,12,1942,10,"deferred"],[1863,20,1942,18],[1863,23,1942,21,"defer"],[1863,28,1942,26],[1863,29,1942,27],[1863,30,1942,28],[1864,6,1943,4],[1864,10,1943,8],[1864,11,1943,9,"emit"],[1864,15,1943,13],[1864,16,1943,14],[1864,34,1943,32],[1864,36,1943,34,"lng"],[1864,39,1943,37],[1864,40,1943,38],[1865,6,1944,4],[1865,12,1944,10,"setLngProps"],[1865,23,1944,21],[1865,26,1944,24,"l"],[1865,27,1944,25],[1865,31,1944,29],[1866,8,1945,6],[1866,12,1945,10],[1866,13,1945,11,"language"],[1866,21,1945,19],[1866,24,1945,22,"l"],[1866,25,1945,23],[1867,8,1946,6],[1867,12,1946,10],[1867,13,1946,11,"languages"],[1867,22,1946,20],[1867,25,1946,23],[1867,29,1946,27],[1867,30,1946,28,"services"],[1867,38,1946,36],[1867,39,1946,37,"languageUtils"],[1867,52,1946,50],[1867,53,1946,51,"toResolveHierarchy"],[1867,71,1946,69],[1867,72,1946,70,"l"],[1867,73,1946,71],[1867,74,1946,72],[1868,8,1947,6],[1868,12,1947,10],[1868,13,1947,11,"resolvedLanguage"],[1868,29,1947,27],[1868,32,1947,30,"undefined"],[1868,41,1947,39],[1869,8,1948,6],[1869,12,1948,10],[1869,13,1948,11,"setResolvedLanguage"],[1869,32,1948,30],[1869,33,1948,31,"l"],[1869,34,1948,32],[1869,35,1948,33],[1870,6,1949,4],[1870,7,1949,5],[1871,6,1950,4],[1871,12,1950,10,"done"],[1871,16,1950,14],[1871,19,1950,17,"done"],[1871,20,1950,18,"err"],[1871,23,1950,21],[1871,25,1950,23,"l"],[1871,26,1950,24],[1871,31,1950,29],[1872,8,1951,6],[1872,12,1951,10,"l"],[1872,13,1951,11],[1872,15,1951,13],[1873,10,1952,8],[1873,14,1952,12],[1873,18,1952,16],[1873,19,1952,17,"isLanguageChangingTo"],[1873,39,1952,37],[1873,44,1952,42,"lng"],[1873,47,1952,45],[1873,49,1952,47],[1874,12,1953,10,"setLngProps"],[1874,23,1953,21],[1874,24,1953,22,"l"],[1874,25,1953,23],[1874,26,1953,24],[1875,12,1954,10],[1875,16,1954,14],[1875,17,1954,15,"translator"],[1875,27,1954,25],[1875,28,1954,26,"changeLanguage"],[1875,42,1954,40],[1875,43,1954,41,"l"],[1875,44,1954,42],[1875,45,1954,43],[1876,12,1955,10],[1876,16,1955,14],[1876,17,1955,15,"isLanguageChangingTo"],[1876,37,1955,35],[1876,40,1955,38,"undefined"],[1876,49,1955,47],[1877,12,1956,10],[1877,16,1956,14],[1877,17,1956,15,"emit"],[1877,21,1956,19],[1877,22,1956,20],[1877,39,1956,37],[1877,41,1956,39,"l"],[1877,42,1956,40],[1877,43,1956,41],[1878,12,1957,10],[1878,16,1957,14],[1878,17,1957,15,"logger"],[1878,23,1957,21],[1878,24,1957,22,"log"],[1878,27,1957,25],[1878,28,1957,26],[1878,45,1957,43],[1878,47,1957,45,"l"],[1878,48,1957,46],[1878,49,1957,47],[1879,10,1958,8],[1880,8,1959,6],[1880,9,1959,7],[1880,15,1959,13],[1881,10,1960,8],[1881,14,1960,12],[1881,15,1960,13,"isLanguageChangingTo"],[1881,35,1960,33],[1881,38,1960,36,"undefined"],[1881,47,1960,45],[1882,8,1961,6],[1883,8,1962,6,"deferred"],[1883,16,1962,14],[1883,17,1962,15,"resolve"],[1883,24,1962,22],[1883,25,1962,23],[1883,26,1962,24],[1883,29,1962,27,"args"],[1883,33,1962,31],[1883,38,1962,36],[1883,42,1962,40],[1883,43,1962,41,"t"],[1883,44,1962,42],[1883,45,1962,43],[1883,48,1962,46,"args"],[1883,52,1962,50],[1883,53,1962,51],[1883,54,1962,52],[1884,8,1963,6],[1884,12,1963,10,"callback"],[1884,20,1963,18],[1884,22,1963,20,"callback"],[1884,30,1963,28],[1884,31,1963,29,"err"],[1884,34,1963,32],[1884,36,1963,34],[1884,37,1963,35],[1884,40,1963,38,"args"],[1884,44,1963,42],[1884,49,1963,47],[1884,53,1963,51],[1884,54,1963,52,"t"],[1884,55,1963,53],[1884,56,1963,54],[1884,59,1963,57,"args"],[1884,63,1963,61],[1884,64,1963,62],[1884,65,1963,63],[1885,6,1964,4],[1885,7,1964,5],[1886,6,1965,4],[1886,12,1965,10,"setLng"],[1886,18,1965,16],[1886,21,1965,19,"lngs"],[1886,25,1965,23],[1886,29,1965,27],[1887,8,1966,6],[1887,12,1966,10],[1887,13,1966,11,"lng"],[1887,16,1966,14],[1887,20,1966,18],[1887,21,1966,19,"lngs"],[1887,25,1966,23],[1887,29,1966,27],[1887,33,1966,31],[1887,34,1966,32,"services"],[1887,42,1966,40],[1887,43,1966,41,"languageDetector"],[1887,59,1966,57],[1887,61,1966,59,"lngs"],[1887,65,1966,63],[1887,68,1966,66],[1887,70,1966,68],[1888,8,1967,6],[1888,14,1967,12,"fl"],[1888,16,1967,14],[1888,19,1967,17,"isString"],[1888,27,1967,25],[1888,28,1967,26,"lngs"],[1888,32,1967,30],[1888,33,1967,31],[1888,36,1967,34,"lngs"],[1888,40,1967,38],[1888,43,1967,41,"lngs"],[1888,47,1967,45],[1888,51,1967,49,"lngs"],[1888,55,1967,53],[1888,56,1967,54],[1888,57,1967,55],[1888,58,1967,56],[1889,8,1968,6],[1889,14,1968,12,"l"],[1889,15,1968,13],[1889,18,1968,16],[1889,22,1968,20],[1889,23,1968,21,"store"],[1889,28,1968,26],[1889,29,1968,27,"hasLanguageSomeTranslations"],[1889,56,1968,54],[1889,57,1968,55,"fl"],[1889,59,1968,57],[1889,60,1968,58],[1889,63,1968,61,"fl"],[1889,65,1968,63],[1889,68,1968,66],[1889,72,1968,70],[1889,73,1968,71,"services"],[1889,81,1968,79],[1889,82,1968,80,"languageUtils"],[1889,95,1968,93],[1889,96,1968,94,"getBestMatchFromCodes"],[1889,117,1968,115],[1889,118,1968,116,"isString"],[1889,126,1968,124],[1889,127,1968,125,"lngs"],[1889,131,1968,129],[1889,132,1968,130],[1889,135,1968,133],[1889,136,1968,134,"lngs"],[1889,140,1968,138],[1889,141,1968,139],[1889,144,1968,142,"lngs"],[1889,148,1968,146],[1889,149,1968,147],[1890,8,1969,6],[1890,12,1969,10,"l"],[1890,13,1969,11],[1890,15,1969,13],[1891,10,1970,8],[1891,14,1970,12],[1891,15,1970,13],[1891,19,1970,17],[1891,20,1970,18,"language"],[1891,28,1970,26],[1891,30,1970,28],[1892,12,1971,10,"setLngProps"],[1892,23,1971,21],[1892,24,1971,22,"l"],[1892,25,1971,23],[1892,26,1971,24],[1893,10,1972,8],[1894,10,1973,8],[1894,14,1973,12],[1894,15,1973,13],[1894,19,1973,17],[1894,20,1973,18,"translator"],[1894,30,1973,28],[1894,31,1973,29,"language"],[1894,39,1973,37],[1894,41,1973,39],[1894,45,1973,43],[1894,46,1973,44,"translator"],[1894,56,1973,54],[1894,57,1973,55,"changeLanguage"],[1894,71,1973,69],[1894,72,1973,70,"l"],[1894,73,1973,71],[1894,74,1973,72],[1895,10,1974,8],[1895,14,1974,12],[1895,15,1974,13,"services"],[1895,23,1974,21],[1895,24,1974,22,"languageDetector"],[1895,40,1974,38],[1895,42,1974,40,"cacheUserLanguage"],[1895,59,1974,57],[1895,62,1974,60,"l"],[1895,63,1974,61],[1895,64,1974,62],[1896,8,1975,6],[1897,8,1976,6],[1897,12,1976,10],[1897,13,1976,11,"loadResources"],[1897,26,1976,24],[1897,27,1976,25,"l"],[1897,28,1976,26],[1897,30,1976,28,"err"],[1897,33,1976,31],[1897,37,1976,35],[1898,10,1977,8,"done"],[1898,14,1977,12],[1898,15,1977,13,"err"],[1898,18,1977,16],[1898,20,1977,18,"l"],[1898,21,1977,19],[1898,22,1977,20],[1899,8,1978,6],[1899,9,1978,7],[1899,10,1978,8],[1900,6,1979,4],[1900,7,1979,5],[1901,6,1980,4],[1901,10,1980,8],[1901,11,1980,9,"lng"],[1901,14,1980,12],[1901,18,1980,16],[1901,22,1980,20],[1901,23,1980,21,"services"],[1901,31,1980,29],[1901,32,1980,30,"languageDetector"],[1901,48,1980,46],[1901,52,1980,50],[1901,53,1980,51],[1901,57,1980,55],[1901,58,1980,56,"services"],[1901,66,1980,64],[1901,67,1980,65,"languageDetector"],[1901,83,1980,81],[1901,84,1980,82,"async"],[1901,89,1980,87],[1901,91,1980,89],[1902,8,1981,6,"setLng"],[1902,14,1981,12],[1902,15,1981,13],[1902,19,1981,17],[1902,20,1981,18,"services"],[1902,28,1981,26],[1902,29,1981,27,"languageDetector"],[1902,45,1981,43],[1902,46,1981,44,"detect"],[1902,52,1981,50],[1902,53,1981,51],[1902,54,1981,52],[1902,55,1981,53],[1903,6,1982,4],[1903,7,1982,5],[1903,13,1982,11],[1903,17,1982,15],[1903,18,1982,16,"lng"],[1903,21,1982,19],[1903,25,1982,23],[1903,29,1982,27],[1903,30,1982,28,"services"],[1903,38,1982,36],[1903,39,1982,37,"languageDetector"],[1903,55,1982,53],[1903,59,1982,57],[1903,63,1982,61],[1903,64,1982,62,"services"],[1903,72,1982,70],[1903,73,1982,71,"languageDetector"],[1903,89,1982,87],[1903,90,1982,88,"async"],[1903,95,1982,93],[1903,97,1982,95],[1904,8,1983,6],[1904,12,1983,10],[1904,16,1983,14],[1904,17,1983,15,"services"],[1904,25,1983,23],[1904,26,1983,24,"languageDetector"],[1904,42,1983,40],[1904,43,1983,41,"detect"],[1904,49,1983,47],[1904,50,1983,48,"length"],[1904,56,1983,54],[1904,61,1983,59],[1904,62,1983,60],[1904,64,1983,62],[1905,10,1984,8],[1905,14,1984,12],[1905,15,1984,13,"services"],[1905,23,1984,21],[1905,24,1984,22,"languageDetector"],[1905,40,1984,38],[1905,41,1984,39,"detect"],[1905,47,1984,45],[1905,48,1984,46],[1905,49,1984,47],[1905,50,1984,48,"then"],[1905,54,1984,52],[1905,55,1984,53,"setLng"],[1905,61,1984,59],[1905,62,1984,60],[1906,8,1985,6],[1906,9,1985,7],[1906,15,1985,13],[1907,10,1986,8],[1907,14,1986,12],[1907,15,1986,13,"services"],[1907,23,1986,21],[1907,24,1986,22,"languageDetector"],[1907,40,1986,38],[1907,41,1986,39,"detect"],[1907,47,1986,45],[1907,48,1986,46,"setLng"],[1907,54,1986,52],[1907,55,1986,53],[1908,8,1987,6],[1909,6,1988,4],[1909,7,1988,5],[1909,13,1988,11],[1910,8,1989,6,"setLng"],[1910,14,1989,12],[1910,15,1989,13,"lng"],[1910,18,1989,16],[1910,19,1989,17],[1911,6,1990,4],[1912,6,1991,4],[1912,13,1991,11,"deferred"],[1912,21,1991,19],[1913,4,1992,2],[1914,4,1993,2,"getFixedT"],[1914,13,1993,11,"getFixedT"],[1914,14,1993,12,"lng"],[1914,17,1993,15],[1914,19,1993,17,"ns"],[1914,21,1993,19],[1914,23,1993,21,"keyPrefix"],[1914,32,1993,30],[1914,34,1993,32],[1915,6,1994,4],[1915,12,1994,10,"fixedT"],[1915,18,1994,16],[1915,21,1994,19,"fixedT"],[1915,22,1994,20,"key"],[1915,25,1994,23],[1915,27,1994,25,"opts"],[1915,31,1994,29],[1915,33,1994,31],[1915,36,1994,34,"rest"],[1915,40,1994,38],[1915,45,1994,43],[1916,8,1995,6],[1916,12,1995,10,"o"],[1916,13,1995,11],[1917,8,1996,6],[1917,12,1996,10],[1917,19,1996,17,"opts"],[1917,23,1996,21],[1917,28,1996,26],[1917,36,1996,34],[1917,38,1996,36],[1918,10,1997,8,"o"],[1918,11,1997,9],[1918,14,1997,12],[1918,18,1997,16],[1918,19,1997,17,"options"],[1918,26,1997,24],[1918,27,1997,25,"overloadTranslationOptionHandler"],[1918,59,1997,57],[1918,60,1997,58],[1918,61,1997,59,"key"],[1918,64,1997,62],[1918,66,1997,64,"opts"],[1918,70,1997,68],[1918,71,1997,69],[1918,72,1997,70,"concat"],[1918,78,1997,76],[1918,79,1997,77,"rest"],[1918,83,1997,81],[1918,84,1997,82],[1918,85,1997,83],[1919,8,1998,6],[1919,9,1998,7],[1919,15,1998,13],[1920,10,1999,8,"o"],[1920,11,1999,9],[1920,14,1999,9,"Object"],[1920,20,1999,9],[1920,21,1999,9,"assign"],[1920,27,1999,9],[1920,32,2000,13,"opts"],[1920,36,2000,17],[1920,37,2001,9],[1921,8,2002,6],[1922,8,2003,6,"o"],[1922,9,2003,7],[1922,10,2003,8,"lng"],[1922,13,2003,11],[1922,16,2003,14,"o"],[1922,17,2003,15],[1922,18,2003,16,"lng"],[1922,21,2003,19],[1922,25,2003,23,"fixedT"],[1922,31,2003,29],[1922,32,2003,30,"lng"],[1922,35,2003,33],[1923,8,2004,6,"o"],[1923,9,2004,7],[1923,10,2004,8,"lngs"],[1923,14,2004,12],[1923,17,2004,15,"o"],[1923,18,2004,16],[1923,19,2004,17,"lngs"],[1923,23,2004,21],[1923,27,2004,25,"fixedT"],[1923,33,2004,31],[1923,34,2004,32,"lngs"],[1923,38,2004,36],[1924,8,2005,6,"o"],[1924,9,2005,7],[1924,10,2005,8,"ns"],[1924,12,2005,10],[1924,15,2005,13,"o"],[1924,16,2005,14],[1924,17,2005,15,"ns"],[1924,19,2005,17],[1924,23,2005,21,"fixedT"],[1924,29,2005,27],[1924,30,2005,28,"ns"],[1924,32,2005,30],[1925,8,2006,6],[1925,12,2006,10,"o"],[1925,13,2006,11],[1925,14,2006,12,"keyPrefix"],[1925,23,2006,21],[1925,28,2006,26],[1925,30,2006,28],[1925,32,2006,30,"o"],[1925,33,2006,31],[1925,34,2006,32,"keyPrefix"],[1925,43,2006,41],[1925,46,2006,44,"o"],[1925,47,2006,45],[1925,48,2006,46,"keyPrefix"],[1925,57,2006,55],[1925,61,2006,59,"keyPrefix"],[1925,70,2006,68],[1925,74,2006,72,"fixedT"],[1925,80,2006,78],[1925,81,2006,79,"keyPrefix"],[1925,90,2006,88],[1926,8,2007,6],[1926,14,2007,12,"keySeparator"],[1926,26,2007,24],[1926,29,2007,27],[1926,33,2007,31],[1926,34,2007,32,"options"],[1926,41,2007,39],[1926,42,2007,40,"keySeparator"],[1926,54,2007,52],[1926,58,2007,56],[1926,61,2007,59],[1927,8,2008,6],[1927,12,2008,10,"resultKey"],[1927,21,2008,19],[1928,8,2009,6],[1928,12,2009,10,"o"],[1928,13,2009,11],[1928,14,2009,12,"keyPrefix"],[1928,23,2009,21],[1928,27,2009,25,"Array"],[1928,32,2009,30],[1928,33,2009,31,"isArray"],[1928,40,2009,38],[1928,41,2009,39,"key"],[1928,44,2009,42],[1928,45,2009,43],[1928,47,2009,45],[1929,10,2010,8,"resultKey"],[1929,19,2010,17],[1929,22,2010,20,"key"],[1929,25,2010,23],[1929,26,2010,24,"map"],[1929,29,2010,27],[1929,30,2010,28,"k"],[1929,31,2010,29],[1929,35,2010,33],[1930,12,2011,10],[1930,16,2011,14],[1930,23,2011,21,"k"],[1930,24,2011,22],[1930,29,2011,27],[1930,39,2011,37],[1930,41,2011,39,"k"],[1930,42,2011,40],[1930,45,2011,43,"keysFromSelector"],[1930,61,2011,59],[1930,62,2011,60,"k"],[1930,63,2011,61],[1930,65,2011,61,"Object"],[1930,71,2011,61],[1930,72,2011,61,"assign"],[1930,78,2011,61],[1930,83,2012,15],[1930,87,2012,19],[1930,88,2012,20,"options"],[1930,95,2012,27],[1930,97,2013,15,"opts"],[1930,101,2013,19],[1930,102,2014,11],[1930,103,2014,12],[1931,12,2015,10],[1931,19,2015,17],[1931,22,2015,20,"o"],[1931,23,2015,21],[1931,24,2015,22,"keyPrefix"],[1931,33,2015,31],[1931,36,2015,34,"keySeparator"],[1931,48,2015,46],[1931,51,2015,49,"k"],[1931,52,2015,50],[1931,54,2015,52],[1932,10,2016,8],[1932,11,2016,9],[1932,12,2016,10],[1933,8,2017,6],[1933,9,2017,7],[1933,15,2017,13],[1934,10,2018,8],[1934,14,2018,12],[1934,21,2018,19,"key"],[1934,24,2018,22],[1934,29,2018,27],[1934,39,2018,37],[1934,41,2018,39,"key"],[1934,44,2018,42],[1934,47,2018,45,"keysFromSelector"],[1934,63,2018,61],[1934,64,2018,62,"key"],[1934,67,2018,65],[1934,69,2018,65,"Object"],[1934,75,2018,65],[1934,76,2018,65,"assign"],[1934,82,2018,65],[1934,87,2019,13],[1934,91,2019,17],[1934,92,2019,18,"options"],[1934,99,2019,25],[1934,101,2020,13,"opts"],[1934,105,2020,17],[1934,106,2021,9],[1934,107,2021,10],[1935,10,2022,8,"resultKey"],[1935,19,2022,17],[1935,22,2022,20,"o"],[1935,23,2022,21],[1935,24,2022,22,"keyPrefix"],[1935,33,2022,31],[1935,36,2022,34],[1935,39,2022,37,"o"],[1935,40,2022,38],[1935,41,2022,39,"keyPrefix"],[1935,50,2022,48],[1935,53,2022,51,"keySeparator"],[1935,65,2022,63],[1935,68,2022,66,"key"],[1935,71,2022,69],[1935,73,2022,71],[1935,76,2022,74,"key"],[1935,79,2022,77],[1936,8,2023,6],[1937,8,2024,6],[1937,15,2024,13],[1937,19,2024,17],[1937,20,2024,18,"t"],[1937,21,2024,19],[1937,22,2024,20,"resultKey"],[1937,31,2024,29],[1937,33,2024,31,"o"],[1937,34,2024,32],[1937,35,2024,33],[1938,6,2025,4],[1938,7,2025,5],[1939,6,2026,4],[1939,10,2026,8,"isString"],[1939,18,2026,16],[1939,19,2026,17,"lng"],[1939,22,2026,20],[1939,23,2026,21],[1939,25,2026,23],[1940,8,2027,6,"fixedT"],[1940,14,2027,12],[1940,15,2027,13,"lng"],[1940,18,2027,16],[1940,21,2027,19,"lng"],[1940,24,2027,22],[1941,6,2028,4],[1941,7,2028,5],[1941,13,2028,11],[1942,8,2029,6,"fixedT"],[1942,14,2029,12],[1942,15,2029,13,"lngs"],[1942,19,2029,17],[1942,22,2029,20,"lng"],[1942,25,2029,23],[1943,6,2030,4],[1944,6,2031,4,"fixedT"],[1944,12,2031,10],[1944,13,2031,11,"ns"],[1944,15,2031,13],[1944,18,2031,16,"ns"],[1944,20,2031,18],[1945,6,2032,4,"fixedT"],[1945,12,2032,10],[1945,13,2032,11,"keyPrefix"],[1945,22,2032,20],[1945,25,2032,23,"keyPrefix"],[1945,34,2032,32],[1946,6,2033,4],[1946,13,2033,11,"fixedT"],[1946,19,2033,17],[1947,4,2034,2],[1948,4,2035,2,"t"],[1948,5,2035,3,"t"],[1948,6,2035,4],[1948,9,2035,7,"args"],[1948,13,2035,11],[1948,15,2035,13],[1949,6,2036,4],[1949,13,2036,11],[1949,17,2036,15],[1949,18,2036,16,"translator"],[1949,28,2036,26],[1949,30,2036,28,"translate"],[1949,39,2036,37],[1949,40,2036,38],[1949,43,2036,41,"args"],[1949,47,2036,45],[1949,48,2036,46],[1950,4,2037,2],[1951,4,2038,2,"exists"],[1951,10,2038,8,"exists"],[1951,11,2038,9],[1951,14,2038,12,"args"],[1951,18,2038,16],[1951,20,2038,18],[1952,6,2039,4],[1952,13,2039,11],[1952,17,2039,15],[1952,18,2039,16,"translator"],[1952,28,2039,26],[1952,30,2039,28,"exists"],[1952,36,2039,34],[1952,37,2039,35],[1952,40,2039,38,"args"],[1952,44,2039,42],[1952,45,2039,43],[1953,4,2040,2],[1954,4,2041,2,"setDefaultNamespace"],[1954,23,2041,21,"setDefaultNamespace"],[1954,24,2041,22,"ns"],[1954,26,2041,24],[1954,28,2041,26],[1955,6,2042,4],[1955,10,2042,8],[1955,11,2042,9,"options"],[1955,18,2042,16],[1955,19,2042,17,"defaultNS"],[1955,28,2042,26],[1955,31,2042,29,"ns"],[1955,33,2042,31],[1956,4,2043,2],[1957,4,2044,2,"hasLoadedNamespace"],[1957,22,2044,20,"hasLoadedNamespace"],[1957,23,2044,21,"ns"],[1957,25,2044,23],[1957,27,2044,25,"options"],[1957,34,2044,32],[1957,37,2044,35],[1957,38,2044,36],[1957,39,2044,37],[1957,41,2044,39],[1958,6,2045,4],[1958,10,2045,8],[1958,11,2045,9],[1958,15,2045,13],[1958,16,2045,14,"isInitialized"],[1958,29,2045,27],[1958,31,2045,29],[1959,8,2046,6],[1959,12,2046,10],[1959,13,2046,11,"logger"],[1959,19,2046,17],[1959,20,2046,18,"warn"],[1959,24,2046,22],[1959,25,2046,23],[1959,74,2046,72],[1959,76,2046,74],[1959,80,2046,78],[1959,81,2046,79,"languages"],[1959,90,2046,88],[1959,91,2046,89],[1960,8,2047,6],[1960,15,2047,13],[1960,20,2047,18],[1961,6,2048,4],[1962,6,2049,4],[1962,10,2049,8],[1962,11,2049,9],[1962,15,2049,13],[1962,16,2049,14,"languages"],[1962,25,2049,23],[1962,29,2049,27],[1962,30,2049,28],[1962,34,2049,32],[1962,35,2049,33,"languages"],[1962,44,2049,42],[1962,45,2049,43,"length"],[1962,51,2049,49],[1962,53,2049,51],[1963,8,2050,6],[1963,12,2050,10],[1963,13,2050,11,"logger"],[1963,19,2050,17],[1963,20,2050,18,"warn"],[1963,24,2050,22],[1963,25,2050,23],[1963,85,2050,83],[1963,87,2050,85],[1963,91,2050,89],[1963,92,2050,90,"languages"],[1963,101,2050,99],[1963,102,2050,100],[1964,8,2051,6],[1964,15,2051,13],[1964,20,2051,18],[1965,6,2052,4],[1966,6,2053,4],[1966,12,2053,10,"lng"],[1966,15,2053,13],[1966,18,2053,16,"options"],[1966,25,2053,23],[1966,26,2053,24,"lng"],[1966,29,2053,27],[1966,33,2053,31],[1966,37,2053,35],[1966,38,2053,36,"resolvedLanguage"],[1966,54,2053,52],[1966,58,2053,56],[1966,62,2053,60],[1966,63,2053,61,"languages"],[1966,72,2053,70],[1966,73,2053,71],[1966,74,2053,72],[1966,75,2053,73],[1967,6,2054,4],[1967,12,2054,10,"fallbackLng"],[1967,23,2054,21],[1967,26,2054,24],[1967,30,2054,28],[1967,31,2054,29,"options"],[1967,38,2054,36],[1967,41,2054,39],[1967,45,2054,43],[1967,46,2054,44,"options"],[1967,53,2054,51],[1967,54,2054,52,"fallbackLng"],[1967,65,2054,63],[1967,68,2054,66],[1967,73,2054,71],[1968,6,2055,4],[1968,12,2055,10,"lastLng"],[1968,19,2055,17],[1968,22,2055,20],[1968,26,2055,24],[1968,27,2055,25,"languages"],[1968,36,2055,34],[1968,37,2055,35],[1968,41,2055,39],[1968,42,2055,40,"languages"],[1968,51,2055,49],[1968,52,2055,50,"length"],[1968,58,2055,56],[1968,61,2055,59],[1968,62,2055,60],[1968,63,2055,61],[1969,6,2056,4],[1969,10,2056,8,"lng"],[1969,13,2056,11],[1969,14,2056,12,"toLowerCase"],[1969,25,2056,23],[1969,26,2056,24],[1969,27,2056,25],[1969,32,2056,30],[1969,40,2056,38],[1969,42,2056,40],[1969,49,2056,47],[1969,53,2056,51],[1970,6,2057,4],[1970,12,2057,10,"loadNotPending"],[1970,26,2057,24],[1970,29,2057,27,"loadNotPending"],[1970,30,2057,28,"l"],[1970,31,2057,29],[1970,33,2057,31,"n"],[1970,34,2057,32],[1970,39,2057,37],[1971,8,2058,6],[1971,14,2058,12,"loadState"],[1971,23,2058,21],[1971,26,2058,24],[1971,30,2058,28],[1971,31,2058,29,"services"],[1971,39,2058,37],[1971,40,2058,38,"backendConnector"],[1971,56,2058,54],[1971,57,2058,55,"state"],[1971,62,2058,60],[1971,63,2058,61],[1971,66,2058,64,"l"],[1971,67,2058,65],[1971,71,2058,69,"n"],[1971,72,2058,70],[1971,74,2058,72],[1971,75,2058,73],[1972,8,2059,6],[1972,15,2059,13,"loadState"],[1972,24,2059,22],[1972,29,2059,27],[1972,30,2059,28],[1972,31,2059,29],[1972,35,2059,33,"loadState"],[1972,44,2059,42],[1972,49,2059,47],[1972,50,2059,48],[1972,54,2059,52,"loadState"],[1972,63,2059,61],[1972,68,2059,66],[1972,69,2059,67],[1973,6,2060,4],[1973,7,2060,5],[1974,6,2061,4],[1974,10,2061,8,"options"],[1974,17,2061,15],[1974,18,2061,16,"precheck"],[1974,26,2061,24],[1974,28,2061,26],[1975,8,2062,6],[1975,14,2062,12,"preResult"],[1975,23,2062,21],[1975,26,2062,24,"options"],[1975,33,2062,31],[1975,34,2062,32,"precheck"],[1975,42,2062,40],[1975,43,2062,41],[1975,47,2062,45],[1975,49,2062,47,"loadNotPending"],[1975,63,2062,61],[1975,64,2062,62],[1976,8,2063,6],[1976,12,2063,10,"preResult"],[1976,21,2063,19],[1976,26,2063,24,"undefined"],[1976,35,2063,33],[1976,37,2063,35],[1976,44,2063,42,"preResult"],[1976,53,2063,51],[1977,6,2064,4],[1978,6,2065,4],[1978,10,2065,8],[1978,14,2065,12],[1978,15,2065,13,"hasResourceBundle"],[1978,32,2065,30],[1978,33,2065,31,"lng"],[1978,36,2065,34],[1978,38,2065,36,"ns"],[1978,40,2065,38],[1978,41,2065,39],[1978,43,2065,41],[1978,50,2065,48],[1978,54,2065,52],[1979,6,2066,4],[1979,10,2066,8],[1979,11,2066,9],[1979,15,2066,13],[1979,16,2066,14,"services"],[1979,24,2066,22],[1979,25,2066,23,"backendConnector"],[1979,41,2066,39],[1979,42,2066,40,"backend"],[1979,49,2066,47],[1979,53,2066,51],[1979,57,2066,55],[1979,58,2066,56,"options"],[1979,65,2066,63],[1979,66,2066,64,"resources"],[1979,75,2066,73],[1979,79,2066,77],[1979,80,2066,78],[1979,84,2066,82],[1979,85,2066,83,"options"],[1979,92,2066,90],[1979,93,2066,91,"partialBundledLanguages"],[1979,116,2066,114],[1979,118,2066,116],[1979,125,2066,123],[1979,129,2066,127],[1980,6,2067,4],[1980,10,2067,8,"loadNotPending"],[1980,24,2067,22],[1980,25,2067,23,"lng"],[1980,28,2067,26],[1980,30,2067,28,"ns"],[1980,32,2067,30],[1980,33,2067,31],[1980,38,2067,36],[1980,39,2067,37,"fallbackLng"],[1980,50,2067,48],[1980,54,2067,52,"loadNotPending"],[1980,68,2067,66],[1980,69,2067,67,"lastLng"],[1980,76,2067,74],[1980,78,2067,76,"ns"],[1980,80,2067,78],[1980,81,2067,79],[1980,82,2067,80],[1980,84,2067,82],[1980,91,2067,89],[1980,95,2067,93],[1981,6,2068,4],[1981,13,2068,11],[1981,18,2068,16],[1982,4,2069,2],[1983,4,2070,2,"loadNamespaces"],[1983,18,2070,16,"loadNamespaces"],[1983,19,2070,17,"ns"],[1983,21,2070,19],[1983,23,2070,21,"callback"],[1983,31,2070,29],[1983,33,2070,31],[1984,6,2071,4],[1984,12,2071,10,"deferred"],[1984,20,2071,18],[1984,23,2071,21,"defer"],[1984,28,2071,26],[1984,29,2071,27],[1984,30,2071,28],[1985,6,2072,4],[1985,10,2072,8],[1985,11,2072,9],[1985,15,2072,13],[1985,16,2072,14,"options"],[1985,23,2072,21],[1985,24,2072,22,"ns"],[1985,26,2072,24],[1985,28,2072,26],[1986,8,2073,6],[1986,12,2073,10,"callback"],[1986,20,2073,18],[1986,22,2073,20,"callback"],[1986,30,2073,28],[1986,31,2073,29],[1986,32,2073,30],[1987,8,2074,6],[1987,15,2074,13,"Promise"],[1987,22,2074,20],[1987,23,2074,21,"resolve"],[1987,30,2074,28],[1987,31,2074,29],[1987,32,2074,30],[1988,6,2075,4],[1989,6,2076,4],[1989,10,2076,8,"isString"],[1989,18,2076,16],[1989,19,2076,17,"ns"],[1989,21,2076,19],[1989,22,2076,20],[1989,24,2076,22,"ns"],[1989,26,2076,24],[1989,29,2076,27],[1989,30,2076,28,"ns"],[1989,32,2076,30],[1989,33,2076,31],[1990,6,2077,4,"ns"],[1990,8,2077,6],[1990,9,2077,7,"forEach"],[1990,16,2077,14],[1990,17,2077,15,"n"],[1990,18,2077,16],[1990,22,2077,20],[1991,8,2078,6],[1991,12,2078,10],[1991,16,2078,14],[1991,17,2078,15,"options"],[1991,24,2078,22],[1991,25,2078,23,"ns"],[1991,27,2078,25],[1991,28,2078,26,"indexOf"],[1991,35,2078,33],[1991,36,2078,34,"n"],[1991,37,2078,35],[1991,38,2078,36],[1991,41,2078,39],[1991,42,2078,40],[1991,44,2078,42],[1991,48,2078,46],[1991,49,2078,47,"options"],[1991,56,2078,54],[1991,57,2078,55,"ns"],[1991,59,2078,57],[1991,60,2078,58,"push"],[1991,64,2078,62],[1991,65,2078,63,"n"],[1991,66,2078,64],[1991,67,2078,65],[1992,6,2079,4],[1992,7,2079,5],[1992,8,2079,6],[1993,6,2080,4],[1993,10,2080,8],[1993,11,2080,9,"loadResources"],[1993,24,2080,22],[1993,25,2080,23,"err"],[1993,28,2080,26],[1993,32,2080,30],[1994,8,2081,6,"deferred"],[1994,16,2081,14],[1994,17,2081,15,"resolve"],[1994,24,2081,22],[1994,25,2081,23],[1994,26,2081,24],[1995,8,2082,6],[1995,12,2082,10,"callback"],[1995,20,2082,18],[1995,22,2082,20,"callback"],[1995,30,2082,28],[1995,31,2082,29,"err"],[1995,34,2082,32],[1995,35,2082,33],[1996,6,2083,4],[1996,7,2083,5],[1996,8,2083,6],[1997,6,2084,4],[1997,13,2084,11,"deferred"],[1997,21,2084,19],[1998,4,2085,2],[1999,4,2086,2,"loadLanguages"],[1999,17,2086,15,"loadLanguages"],[1999,18,2086,16,"lngs"],[1999,22,2086,20],[1999,24,2086,22,"callback"],[1999,32,2086,30],[1999,34,2086,32],[2000,6,2087,4],[2000,12,2087,10,"deferred"],[2000,20,2087,18],[2000,23,2087,21,"defer"],[2000,28,2087,26],[2000,29,2087,27],[2000,30,2087,28],[2001,6,2088,4],[2001,10,2088,8,"isString"],[2001,18,2088,16],[2001,19,2088,17,"lngs"],[2001,23,2088,21],[2001,24,2088,22],[2001,26,2088,24,"lngs"],[2001,30,2088,28],[2001,33,2088,31],[2001,34,2088,32,"lngs"],[2001,38,2088,36],[2001,39,2088,37],[2002,6,2089,4],[2002,12,2089,10,"preloaded"],[2002,21,2089,19],[2002,24,2089,22],[2002,28,2089,26],[2002,29,2089,27,"options"],[2002,36,2089,34],[2002,37,2089,35,"preload"],[2002,44,2089,42],[2002,48,2089,46],[2002,50,2089,48],[2003,6,2090,4],[2003,12,2090,10,"newLngs"],[2003,19,2090,17],[2003,22,2090,20,"lngs"],[2003,26,2090,24],[2003,27,2090,25,"filter"],[2003,33,2090,31],[2003,34,2090,32,"lng"],[2003,37,2090,35],[2003,41,2090,39,"preloaded"],[2003,50,2090,48],[2003,51,2090,49,"indexOf"],[2003,58,2090,56],[2003,59,2090,57,"lng"],[2003,62,2090,60],[2003,63,2090,61],[2003,66,2090,64],[2003,67,2090,65],[2003,71,2090,69],[2003,75,2090,73],[2003,76,2090,74,"services"],[2003,84,2090,82],[2003,85,2090,83,"languageUtils"],[2003,98,2090,96],[2003,99,2090,97,"isSupportedCode"],[2003,114,2090,112],[2003,115,2090,113,"lng"],[2003,118,2090,116],[2003,119,2090,117],[2003,120,2090,118],[2004,6,2091,4],[2004,10,2091,8],[2004,11,2091,9,"newLngs"],[2004,18,2091,16],[2004,19,2091,17,"length"],[2004,25,2091,23],[2004,27,2091,25],[2005,8,2092,6],[2005,12,2092,10,"callback"],[2005,20,2092,18],[2005,22,2092,20,"callback"],[2005,30,2092,28],[2005,31,2092,29],[2005,32,2092,30],[2006,8,2093,6],[2006,15,2093,13,"Promise"],[2006,22,2093,20],[2006,23,2093,21,"resolve"],[2006,30,2093,28],[2006,31,2093,29],[2006,32,2093,30],[2007,6,2094,4],[2008,6,2095,4],[2008,10,2095,8],[2008,11,2095,9,"options"],[2008,18,2095,16],[2008,19,2095,17,"preload"],[2008,26,2095,24],[2008,29,2095,27,"preloaded"],[2008,38,2095,36],[2008,39,2095,37,"concat"],[2008,45,2095,43],[2008,46,2095,44,"newLngs"],[2008,53,2095,51],[2008,54,2095,52],[2009,6,2096,4],[2009,10,2096,8],[2009,11,2096,9,"loadResources"],[2009,24,2096,22],[2009,25,2096,23,"err"],[2009,28,2096,26],[2009,32,2096,30],[2010,8,2097,6,"deferred"],[2010,16,2097,14],[2010,17,2097,15,"resolve"],[2010,24,2097,22],[2010,25,2097,23],[2010,26,2097,24],[2011,8,2098,6],[2011,12,2098,10,"callback"],[2011,20,2098,18],[2011,22,2098,20,"callback"],[2011,30,2098,28],[2011,31,2098,29,"err"],[2011,34,2098,32],[2011,35,2098,33],[2012,6,2099,4],[2012,7,2099,5],[2012,8,2099,6],[2013,6,2100,4],[2013,13,2100,11,"deferred"],[2013,21,2100,19],[2014,4,2101,2],[2015,4,2102,2,"dir"],[2015,7,2102,5,"dir"],[2015,8,2102,6,"lng"],[2015,11,2102,9],[2015,13,2102,11],[2016,6,2103,4],[2016,10,2103,8],[2016,11,2103,9,"lng"],[2016,14,2103,12],[2016,16,2103,14,"lng"],[2016,19,2103,17],[2016,22,2103,20],[2016,26,2103,24],[2016,27,2103,25,"resolvedLanguage"],[2016,43,2103,41],[2016,48,2103,46],[2016,52,2103,50],[2016,53,2103,51,"languages"],[2016,62,2103,60],[2016,64,2103,62,"length"],[2016,70,2103,68],[2016,73,2103,71],[2016,74,2103,72],[2016,77,2103,75],[2016,81,2103,79],[2016,82,2103,80,"languages"],[2016,91,2103,89],[2016,92,2103,90],[2016,93,2103,91],[2016,94,2103,92],[2016,97,2103,95],[2016,101,2103,99],[2016,102,2103,100,"language"],[2016,110,2103,108],[2016,111,2103,109],[2017,6,2104,4],[2017,10,2104,8],[2017,11,2104,9,"lng"],[2017,14,2104,12],[2017,16,2104,14],[2017,23,2104,21],[2017,28,2104,26],[2018,6,2105,4],[2018,10,2105,8],[2019,8,2106,6],[2019,14,2106,12,"l"],[2019,15,2106,13],[2019,18,2106,16],[2019,22,2106,20,"Intl"],[2019,26,2106,24],[2019,27,2106,25,"Locale"],[2019,33,2106,31],[2019,34,2106,32,"lng"],[2019,37,2106,35],[2019,38,2106,36],[2020,8,2107,6],[2020,12,2107,10,"l"],[2020,13,2107,11],[2020,17,2107,15,"l"],[2020,18,2107,16],[2020,19,2107,17,"getTextInfo"],[2020,30,2107,28],[2020,32,2107,30],[2021,10,2108,8],[2021,16,2108,14,"ti"],[2021,18,2108,16],[2021,21,2108,19,"l"],[2021,22,2108,20],[2021,23,2108,21,"getTextInfo"],[2021,34,2108,32],[2021,35,2108,33],[2021,36,2108,34],[2022,10,2109,8],[2022,14,2109,12,"ti"],[2022,16,2109,14],[2022,20,2109,18,"ti"],[2022,22,2109,20],[2022,23,2109,21,"direction"],[2022,32,2109,30],[2022,34,2109,32],[2022,41,2109,39,"ti"],[2022,43,2109,41],[2022,44,2109,42,"direction"],[2022,53,2109,51],[2023,8,2110,6],[2024,6,2111,4],[2024,7,2111,5],[2024,8,2111,6],[2024,15,2111,13,"e"],[2024,16,2111,14],[2024,18,2111,16],[2024,19,2111,17],[2025,6,2112,4],[2025,12,2112,10,"rtlLngs"],[2025,19,2112,17],[2025,22,2112,20],[2025,23,2112,21],[2025,27,2112,25],[2025,29,2112,27],[2025,34,2112,32],[2025,36,2112,34],[2025,41,2112,39],[2025,43,2112,41],[2025,48,2112,46],[2025,50,2112,48],[2025,55,2112,53],[2025,57,2112,55],[2025,62,2112,60],[2025,64,2112,62],[2025,69,2112,67],[2025,71,2112,69],[2025,76,2112,74],[2025,78,2112,76],[2025,83,2112,81],[2025,85,2112,83],[2025,90,2112,88],[2025,92,2112,90],[2025,97,2112,95],[2025,99,2112,97],[2025,104,2112,102],[2025,106,2112,104],[2025,111,2112,109],[2025,113,2112,111],[2025,118,2112,116],[2025,120,2112,118],[2025,125,2112,123],[2025,127,2112,125],[2025,132,2112,130],[2025,134,2112,132],[2025,139,2112,137],[2025,141,2112,139],[2025,146,2112,144],[2025,148,2112,146],[2025,153,2112,151],[2025,155,2112,153],[2025,160,2112,158],[2025,162,2112,160],[2025,167,2112,165],[2025,169,2112,167],[2025,174,2112,172],[2025,176,2112,174],[2025,181,2112,179],[2025,183,2112,181],[2025,188,2112,186],[2025,190,2112,188],[2025,195,2112,193],[2025,197,2112,195],[2025,202,2112,200],[2025,204,2112,202],[2025,209,2112,207],[2025,211,2112,209],[2025,216,2112,214],[2025,218,2112,216],[2025,223,2112,221],[2025,225,2112,223],[2025,230,2112,228],[2025,232,2112,230],[2025,237,2112,235],[2025,239,2112,237],[2025,244,2112,242],[2025,246,2112,244],[2025,251,2112,249],[2025,253,2112,251],[2025,258,2112,256],[2025,260,2112,258],[2025,265,2112,263],[2025,267,2112,265],[2025,272,2112,270],[2025,274,2112,272],[2025,278,2112,276],[2025,280,2112,278],[2025,284,2112,282],[2025,286,2112,284],[2025,290,2112,288],[2025,292,2112,290],[2025,297,2112,295],[2025,299,2112,297],[2025,304,2112,302],[2025,306,2112,304],[2025,311,2112,309],[2025,313,2112,311],[2025,318,2112,316],[2025,320,2112,318],[2025,325,2112,323],[2025,327,2112,325],[2025,331,2112,329],[2025,333,2112,331],[2025,337,2112,335],[2025,339,2112,337],[2025,344,2112,342],[2025,346,2112,344],[2025,351,2112,349],[2025,353,2112,351],[2025,358,2112,356],[2025,360,2112,358],[2025,364,2112,362],[2025,366,2112,364],[2025,370,2112,368],[2025,372,2112,370],[2025,377,2112,375],[2025,379,2112,377],[2025,384,2112,382],[2025,386,2112,384],[2025,391,2112,389],[2025,393,2112,391],[2025,397,2112,395],[2025,399,2112,397],[2025,404,2112,402],[2025,406,2112,404],[2025,411,2112,409],[2025,413,2112,411],[2025,418,2112,416],[2025,420,2112,418],[2025,425,2112,423],[2025,427,2112,425],[2025,431,2112,429],[2025,433,2112,431],[2025,438,2112,436],[2025,440,2112,438],[2025,445,2112,443],[2025,446,2112,444],[2026,6,2113,4],[2026,12,2113,10,"languageUtils"],[2026,25,2113,23],[2026,28,2113,26],[2026,32,2113,30],[2026,33,2113,31,"services"],[2026,41,2113,39],[2026,43,2113,41,"languageUtils"],[2026,56,2113,54],[2026,60,2113,58],[2026,64,2113,62,"LanguageUtil"],[2026,76,2113,74],[2026,77,2113,75,"get"],[2026,80,2113,78],[2026,81,2113,79],[2026,82,2113,80],[2026,83,2113,81],[2027,6,2114,4],[2027,10,2114,8,"lng"],[2027,13,2114,11],[2027,14,2114,12,"toLowerCase"],[2027,25,2114,23],[2027,26,2114,24],[2027,27,2114,25],[2027,28,2114,26,"indexOf"],[2027,35,2114,33],[2027,36,2114,34],[2027,43,2114,41],[2027,44,2114,42],[2027,47,2114,45],[2027,48,2114,46],[2027,50,2114,48],[2027,57,2114,55],[2027,62,2114,60],[2028,6,2115,4],[2028,13,2115,11,"rtlLngs"],[2028,20,2115,18],[2028,21,2115,19,"indexOf"],[2028,28,2115,26],[2028,29,2115,27,"languageUtils"],[2028,42,2115,40],[2028,43,2115,41,"getLanguagePartFromCode"],[2028,66,2115,64],[2028,67,2115,65,"lng"],[2028,70,2115,68],[2028,71,2115,69],[2028,72,2115,70],[2028,75,2115,73],[2028,76,2115,74],[2028,77,2115,75],[2028,81,2115,79,"lng"],[2028,84,2115,82],[2028,85,2115,83,"toLowerCase"],[2028,96,2115,94],[2028,97,2115,95],[2028,98,2115,96],[2028,99,2115,97,"indexOf"],[2028,106,2115,104],[2028,107,2115,105],[2028,114,2115,112],[2028,115,2115,113],[2028,118,2115,116],[2028,119,2115,117],[2028,122,2115,120],[2028,127,2115,125],[2028,130,2115,128],[2028,135,2115,133],[2029,4,2116,2],[2030,4,2117,2],[2030,11,2117,9,"createInstance"],[2030,25,2117,23,"createInstance"],[2030,26,2117,24,"options"],[2030,33,2117,31],[2030,36,2117,34],[2030,37,2117,35],[2030,38,2117,36],[2030,40,2117,38,"callback"],[2030,48,2117,46],[2030,50,2117,48],[2031,6,2118,4],[2031,13,2118,11],[2031,17,2118,15,"I18n"],[2031,21,2118,19],[2031,22,2118,20,"options"],[2031,29,2118,27],[2031,31,2118,29,"callback"],[2031,39,2118,37],[2031,40,2118,38],[2032,4,2119,2],[2033,4,2120,2,"cloneInstance"],[2033,17,2120,15,"cloneInstance"],[2033,18,2120,16,"options"],[2033,25,2120,23],[2033,28,2120,26],[2033,29,2120,27],[2033,30,2120,28],[2033,32,2120,30,"callback"],[2033,40,2120,38],[2033,43,2120,41,"noop"],[2033,47,2120,45],[2033,49,2120,47],[2034,6,2121,4],[2034,12,2121,10,"forkResourceStore"],[2034,29,2121,27],[2034,32,2121,30,"options"],[2034,39,2121,37],[2034,40,2121,38,"forkResourceStore"],[2034,57,2121,55],[2035,6,2122,4],[2035,10,2122,8,"forkResourceStore"],[2035,27,2122,25],[2035,29,2122,27],[2035,36,2122,34,"options"],[2035,43,2122,41],[2035,44,2122,42,"forkResourceStore"],[2035,61,2122,59],[2036,6,2123,4],[2036,12,2123,10,"mergedOptions"],[2036,25,2123,23],[2036,28,2123,23,"Object"],[2036,34,2123,23],[2036,35,2123,23,"assign"],[2036,41,2123,23],[2036,46,2124,9],[2036,50,2124,13],[2036,51,2124,14,"options"],[2036,58,2124,21],[2036,60,2125,9,"options"],[2036,67,2125,16],[2036,69,2126,9],[2037,8,2127,8,"isClone"],[2037,15,2127,15],[2037,17,2127,17],[2038,6,2128,6],[2038,7,2128,7],[2038,8,2129,5],[2039,6,2130,4],[2039,12,2130,10,"clone"],[2039,17,2130,15],[2039,20,2130,18],[2039,24,2130,22,"I18n"],[2039,28,2130,26],[2039,29,2130,27,"mergedOptions"],[2039,42,2130,40],[2039,43,2130,41],[2040,6,2131,4],[2040,10,2131,8,"options"],[2040,17,2131,15],[2040,18,2131,16,"debug"],[2040,23,2131,21],[2040,28,2131,26,"undefined"],[2040,37,2131,35],[2040,41,2131,39,"options"],[2040,48,2131,46],[2040,49,2131,47,"prefix"],[2040,55,2131,53],[2040,60,2131,58,"undefined"],[2040,69,2131,67],[2040,71,2131,69],[2041,8,2132,6,"clone"],[2041,13,2132,11],[2041,14,2132,12,"logger"],[2041,20,2132,18],[2041,23,2132,21,"clone"],[2041,28,2132,26],[2041,29,2132,27,"logger"],[2041,35,2132,33],[2041,36,2132,34,"clone"],[2041,41,2132,39],[2041,42,2132,40,"options"],[2041,49,2132,47],[2041,50,2132,48],[2042,6,2133,4],[2043,6,2134,4],[2043,12,2134,10,"membersToCopy"],[2043,25,2134,23],[2043,28,2134,26],[2043,29,2134,27],[2043,36,2134,34],[2043,38,2134,36],[2043,48,2134,46],[2043,50,2134,48],[2043,60,2134,58],[2043,61,2134,59],[2044,6,2135,4,"membersToCopy"],[2044,19,2135,17],[2044,20,2135,18,"forEach"],[2044,27,2135,25],[2044,28,2135,26,"m"],[2044,29,2135,27],[2044,33,2135,31],[2045,8,2136,6,"clone"],[2045,13,2136,11],[2045,14,2136,12,"m"],[2045,15,2136,13],[2045,16,2136,14],[2045,19,2136,17],[2045,23,2136,21],[2045,24,2136,22,"m"],[2045,25,2136,23],[2045,26,2136,24],[2046,6,2137,4],[2046,7,2137,5],[2046,8,2137,6],[2047,6,2138,4,"clone"],[2047,11,2138,9],[2047,12,2138,10,"services"],[2047,20,2138,18],[2047,23,2138,18,"Object"],[2047,29,2138,18],[2047,30,2138,18,"assign"],[2047,36,2138,18],[2047,41,2139,9],[2047,45,2139,13],[2047,46,2139,14,"services"],[2047,54,2139,22],[2047,55,2140,5],[2048,6,2141,4,"clone"],[2048,11,2141,9],[2048,12,2141,10,"services"],[2048,20,2141,18],[2048,21,2141,19,"utils"],[2048,26,2141,24],[2048,29,2141,27],[2049,8,2142,6,"hasLoadedNamespace"],[2049,26,2142,24],[2049,28,2142,26,"clone"],[2049,33,2142,31],[2049,34,2142,32,"hasLoadedNamespace"],[2049,52,2142,50],[2049,53,2142,51,"bind"],[2049,57,2142,55],[2049,58,2142,56,"clone"],[2049,63,2142,61],[2050,6,2143,4],[2050,7,2143,5],[2051,6,2144,4],[2051,10,2144,8,"forkResourceStore"],[2051,27,2144,25],[2051,29,2144,27],[2052,8,2145,6],[2052,14,2145,12,"clonedData"],[2052,24,2145,22],[2052,27,2145,25,"Object"],[2052,33,2145,31],[2052,34,2145,32,"keys"],[2052,38,2145,36],[2052,39,2145,37],[2052,43,2145,41],[2052,44,2145,42,"store"],[2052,49,2145,47],[2052,50,2145,48,"data"],[2052,54,2145,52],[2052,55,2145,53],[2052,56,2145,54,"reduce"],[2052,62,2145,60],[2052,63,2145,61],[2052,64,2145,62,"prev"],[2052,68,2145,66],[2052,70,2145,68,"l"],[2052,71,2145,69],[2052,76,2145,74],[2053,10,2146,8,"prev"],[2053,14,2146,12],[2053,15,2146,13,"l"],[2053,16,2146,14],[2053,17,2146,15],[2053,20,2146,15,"Object"],[2053,26,2146,15],[2053,27,2146,15,"assign"],[2053,33,2146,15],[2053,38,2147,13],[2053,42,2147,17],[2053,43,2147,18,"store"],[2053,48,2147,23],[2053,49,2147,24,"data"],[2053,53,2147,28],[2053,54,2147,29,"l"],[2053,55,2147,30],[2053,56,2147,31],[2053,57,2148,9],[2054,10,2149,8,"prev"],[2054,14,2149,12],[2054,15,2149,13,"l"],[2054,16,2149,14],[2054,17,2149,15],[2054,20,2149,18,"Object"],[2054,26,2149,24],[2054,27,2149,25,"keys"],[2054,31,2149,29],[2054,32,2149,30,"prev"],[2054,36,2149,34],[2054,37,2149,35,"l"],[2054,38,2149,36],[2054,39,2149,37],[2054,40,2149,38],[2054,41,2149,39,"reduce"],[2054,47,2149,45],[2054,48,2149,46],[2054,49,2149,47,"acc"],[2054,52,2149,50],[2054,54,2149,52,"n"],[2054,55,2149,53],[2054,60,2149,58],[2055,12,2150,10,"acc"],[2055,15,2150,13],[2055,16,2150,14,"n"],[2055,17,2150,15],[2055,18,2150,16],[2055,21,2150,16,"Object"],[2055,27,2150,16],[2055,28,2150,16,"assign"],[2055,34,2150,16],[2055,39,2151,15,"prev"],[2055,43,2151,19],[2055,44,2151,20,"l"],[2055,45,2151,21],[2055,46,2151,22],[2055,47,2151,23,"n"],[2055,48,2151,24],[2055,49,2151,25],[2055,50,2152,11],[2056,12,2153,10],[2056,19,2153,17,"acc"],[2056,22,2153,20],[2057,10,2154,8],[2057,11,2154,9],[2057,13,2154,11,"prev"],[2057,17,2154,15],[2057,18,2154,16,"l"],[2057,19,2154,17],[2057,20,2154,18],[2057,21,2154,19],[2058,10,2155,8],[2058,17,2155,15,"prev"],[2058,21,2155,19],[2059,8,2156,6],[2059,9,2156,7],[2059,11,2156,9],[2059,12,2156,10],[2059,13,2156,11],[2059,14,2156,12],[2060,8,2157,6,"clone"],[2060,13,2157,11],[2060,14,2157,12,"store"],[2060,19,2157,17],[2060,22,2157,20],[2060,26,2157,24,"ResourceStore"],[2060,39,2157,37],[2060,40,2157,38,"clonedData"],[2060,50,2157,48],[2060,52,2157,50,"mergedOptions"],[2060,65,2157,63],[2060,66,2157,64],[2061,8,2158,6,"clone"],[2061,13,2158,11],[2061,14,2158,12,"services"],[2061,22,2158,20],[2061,23,2158,21,"resourceStore"],[2061,36,2158,34],[2061,39,2158,37,"clone"],[2061,44,2158,42],[2061,45,2158,43,"store"],[2061,50,2158,48],[2062,6,2159,4],[2063,6,2160,4,"clone"],[2063,11,2160,9],[2063,12,2160,10,"translator"],[2063,22,2160,20],[2063,25,2160,23],[2063,29,2160,27,"Translator"],[2063,39,2160,37],[2063,40,2160,38,"clone"],[2063,45,2160,43],[2063,46,2160,44,"services"],[2063,54,2160,52],[2063,56,2160,54,"mergedOptions"],[2063,69,2160,67],[2063,70,2160,68],[2064,6,2161,4,"clone"],[2064,11,2161,9],[2064,12,2161,10,"translator"],[2064,22,2161,20],[2064,23,2161,21,"on"],[2064,25,2161,23],[2064,26,2161,24],[2064,29,2161,27],[2064,31,2161,29],[2064,32,2161,30,"event"],[2064,37,2161,35],[2064,39,2161,37],[2064,42,2161,40,"args"],[2064,46,2161,44],[2064,51,2161,49],[2065,8,2162,6,"clone"],[2065,13,2162,11],[2065,14,2162,12,"emit"],[2065,18,2162,16],[2065,19,2162,17,"event"],[2065,24,2162,22],[2065,26,2162,24],[2065,29,2162,27,"args"],[2065,33,2162,31],[2065,34,2162,32],[2066,6,2163,4],[2066,7,2163,5],[2066,8,2163,6],[2067,6,2164,4,"clone"],[2067,11,2164,9],[2067,12,2164,10,"init"],[2067,16,2164,14],[2067,17,2164,15,"mergedOptions"],[2067,30,2164,28],[2067,32,2164,30,"callback"],[2067,40,2164,38],[2067,41,2164,39],[2068,6,2165,4,"clone"],[2068,11,2165,9],[2068,12,2165,10,"translator"],[2068,22,2165,20],[2068,23,2165,21,"options"],[2068,30,2165,28],[2068,33,2165,31,"mergedOptions"],[2068,46,2165,44],[2069,6,2166,4,"clone"],[2069,11,2166,9],[2069,12,2166,10,"translator"],[2069,22,2166,20],[2069,23,2166,21,"backendConnector"],[2069,39,2166,37],[2069,40,2166,38,"services"],[2069,48,2166,46],[2069,49,2166,47,"utils"],[2069,54,2166,52],[2069,57,2166,55],[2070,8,2167,6,"hasLoadedNamespace"],[2070,26,2167,24],[2070,28,2167,26,"clone"],[2070,33,2167,31],[2070,34,2167,32,"hasLoadedNamespace"],[2070,52,2167,50],[2070,53,2167,51,"bind"],[2070,57,2167,55],[2070,58,2167,56,"clone"],[2070,63,2167,61],[2071,6,2168,4],[2071,7,2168,5],[2072,6,2169,4],[2072,13,2169,11,"clone"],[2072,18,2169,16],[2073,4,2170,2],[2074,4,2171,2,"toJSON"],[2074,10,2171,8,"toJSON"],[2074,11,2171,8],[2074,13,2171,11],[2075,6,2172,4],[2075,13,2172,11],[2076,8,2173,6,"options"],[2076,15,2173,13],[2076,17,2173,15],[2076,21,2173,19],[2076,22,2173,20,"options"],[2076,29,2173,27],[2077,8,2174,6,"store"],[2077,13,2174,11],[2077,15,2174,13],[2077,19,2174,17],[2077,20,2174,18,"store"],[2077,25,2174,23],[2078,8,2175,6,"language"],[2078,16,2175,14],[2078,18,2175,16],[2078,22,2175,20],[2078,23,2175,21,"language"],[2078,31,2175,29],[2079,8,2176,6,"languages"],[2079,17,2176,15],[2079,19,2176,17],[2079,23,2176,21],[2079,24,2176,22,"languages"],[2079,33,2176,31],[2080,8,2177,6,"resolvedLanguage"],[2080,24,2177,22],[2080,26,2177,24],[2080,30,2177,28],[2080,31,2177,29,"resolvedLanguage"],[2081,6,2178,4],[2081,7,2178,5],[2082,4,2179,2],[2083,2,2180,0],[2084,2,2181,0],[2084,8,2181,6,"instance"],[2084,16,2181,14],[2084,19,2181,14,"exports"],[2084,26,2181,14],[2084,27,2181,14,"default"],[2084,34,2181,14],[2084,37,2181,17,"I18n"],[2084,41,2181,21],[2084,42,2181,22,"createInstance"],[2084,56,2181,36],[2084,57,2181,37],[2084,58,2181,38],[2085,2,2182,0,"instance"],[2085,10,2182,8],[2085,11,2182,9,"createInstance"],[2085,25,2182,23],[2085,28,2182,26,"I18n"],[2085,32,2182,30],[2085,33,2182,31,"createInstance"],[2085,47,2182,45],[2086,2,2184,0],[2086,8,2184,6,"createInstance"],[2086,22,2184,20],[2086,25,2184,20,"exports"],[2086,32,2184,20],[2086,33,2184,20,"createInstance"],[2086,47,2184,20],[2086,50,2184,23,"instance"],[2086,58,2184,31],[2086,59,2184,32,"createInstance"],[2086,73,2184,46],[2087,2,2185,0],[2087,8,2185,6,"dir"],[2087,11,2185,9],[2087,14,2185,9,"exports"],[2087,21,2185,9],[2087,22,2185,9,"dir"],[2087,25,2185,9],[2087,28,2185,12,"instance"],[2087,36,2185,20],[2087,37,2185,21,"dir"],[2087,40,2185,24],[2088,2,2186,0],[2088,8,2186,6,"init"],[2088,12,2186,10],[2088,15,2186,10,"exports"],[2088,22,2186,10],[2088,23,2186,10,"init"],[2088,27,2186,10],[2088,30,2186,13,"instance"],[2088,38,2186,21],[2088,39,2186,22,"init"],[2088,43,2186,26],[2089,2,2187,0],[2089,8,2187,6,"loadResources"],[2089,21,2187,19],[2089,24,2187,19,"exports"],[2089,31,2187,19],[2089,32,2187,19,"loadResources"],[2089,45,2187,19],[2089,48,2187,22,"instance"],[2089,56,2187,30],[2089,57,2187,31,"loadResources"],[2089,70,2187,44],[2090,2,2188,0],[2090,8,2188,6,"reloadResources"],[2090,23,2188,21],[2090,26,2188,21,"exports"],[2090,33,2188,21],[2090,34,2188,21,"reloadResources"],[2090,49,2188,21],[2090,52,2188,24,"instance"],[2090,60,2188,32],[2090,61,2188,33,"reloadResources"],[2090,76,2188,48],[2091,2,2189,0],[2091,8,2189,6,"use"],[2091,11,2189,9],[2091,14,2189,9,"exports"],[2091,21,2189,9],[2091,22,2189,9,"use"],[2091,25,2189,9],[2091,28,2189,12,"instance"],[2091,36,2189,20],[2091,37,2189,21,"use"],[2091,40,2189,24],[2092,2,2190,0],[2092,8,2190,6,"changeLanguage"],[2092,22,2190,20],[2092,25,2190,20,"exports"],[2092,32,2190,20],[2092,33,2190,20,"changeLanguage"],[2092,47,2190,20],[2092,50,2190,23,"instance"],[2092,58,2190,31],[2092,59,2190,32,"changeLanguage"],[2092,73,2190,46],[2093,2,2191,0],[2093,8,2191,6,"getFixedT"],[2093,17,2191,15],[2093,20,2191,15,"exports"],[2093,27,2191,15],[2093,28,2191,15,"getFixedT"],[2093,37,2191,15],[2093,40,2191,18,"instance"],[2093,48,2191,26],[2093,49,2191,27,"getFixedT"],[2093,58,2191,36],[2094,2,2192,0],[2094,8,2192,6,"t"],[2094,9,2192,7],[2094,12,2192,7,"exports"],[2094,19,2192,7],[2094,20,2192,7,"t"],[2094,21,2192,7],[2094,24,2192,10,"instance"],[2094,32,2192,18],[2094,33,2192,19,"t"],[2094,34,2192,20],[2095,2,2193,0],[2095,8,2193,6,"exists"],[2095,14,2193,12],[2095,17,2193,12,"exports"],[2095,24,2193,12],[2095,25,2193,12,"exists"],[2095,31,2193,12],[2095,34,2193,15,"instance"],[2095,42,2193,23],[2095,43,2193,24,"exists"],[2095,49,2193,30],[2096,2,2194,0],[2096,8,2194,6,"setDefaultNamespace"],[2096,27,2194,25],[2096,30,2194,25,"exports"],[2096,37,2194,25],[2096,38,2194,25,"setDefaultNamespace"],[2096,57,2194,25],[2096,60,2194,28,"instance"],[2096,68,2194,36],[2096,69,2194,37,"setDefaultNamespace"],[2096,88,2194,56],[2097,2,2195,0],[2097,8,2195,6,"hasLoadedNamespace"],[2097,26,2195,24],[2097,29,2195,24,"exports"],[2097,36,2195,24],[2097,37,2195,24,"hasLoadedNamespace"],[2097,55,2195,24],[2097,58,2195,27,"instance"],[2097,66,2195,35],[2097,67,2195,36,"hasLoadedNamespace"],[2097,85,2195,54],[2098,2,2196,0],[2098,8,2196,6,"loadNamespaces"],[2098,22,2196,20],[2098,25,2196,20,"exports"],[2098,32,2196,20],[2098,33,2196,20,"loadNamespaces"],[2098,47,2196,20],[2098,50,2196,23,"instance"],[2098,58,2196,31],[2098,59,2196,32,"loadNamespaces"],[2098,73,2196,46],[2099,2,2197,0],[2099,8,2197,6,"loadLanguages"],[2099,21,2197,19],[2099,24,2197,19,"exports"],[2099,31,2197,19],[2099,32,2197,19,"loadLanguages"],[2099,45,2197,19],[2099,48,2197,22,"instance"],[2099,56,2197,30],[2099,57,2197,31,"loadLanguages"],[2099,70,2197,44],[2100,0,2197,45],[2100,3]],"functionMap":{"names":["<global>","isString","defer","Promise$argument_0","makeString","copy","a.forEach$argument_0","cleanKey","canNotTraverseDeeper","getLastOfPath","setPath","pushPath","getPath","getPathWithDefaults","deepExtend","regexEscape","escape","data.replace$argument_1","RegExpCache","RegExpCache#constructor","RegExpCache#getRegExp","looksLikeObjectPath","chars.filter$argument_0","possibleChars.map$argument_0","deepFind","getCleanedCode","consoleLogger.log","consoleLogger.warn","consoleLogger.error","consoleLogger.output","Logger","Logger#constructor","Logger#init","Logger#log","Logger#warn","Logger#error","Logger#deprecate","Logger#forward","Logger#create","Logger#clone","EventEmitter","EventEmitter#constructor","EventEmitter#on","events.split.forEach$argument_0","EventEmitter#off","EventEmitter#emit","cloned.forEach$argument_0","ResourceStore","ResourceStore#constructor","ResourceStore#addNamespaces","ResourceStore#removeNamespaces","ResourceStore#getResource","ResourceStore#addResource","ResourceStore#addResources","ResourceStore#addResourceBundle","ResourceStore#removeResourceBundle","ResourceStore#hasResourceBundle","ResourceStore#getResourceBundle","ResourceStore#getDataByLanguage","ResourceStore#hasLanguageSomeTranslations","n.find$argument_0","ResourceStore#toJSON","postProcessor.addPostProcessor","postProcessor.handle","processors.forEach$argument_0","createProxy","handler.get","keysFromSelector","shouldHandleAsObject","Translator","Translator#constructor","Translator#changeLanguage","Translator#exists","Translator#extractFromKey","Translator#translate","send","lngs.forEach$argument_0","suffixes.forEach$argument_0","Translator#extendTranslation","interpolator.nest$argument_1","Translator#resolve","keys.forEach$argument_0","namespaces.forEach$argument_0","codes.forEach$argument_0","Translator#isValidLookup","Translator#getResource","Translator#getUsedParamsDetails","Translator.hasDefaultValue","LanguageUtil","LanguageUtil#constructor","LanguageUtil#getScriptPartFromCode","LanguageUtil#getLanguagePartFromCode","LanguageUtil#formatLanguageCode","LanguageUtil#isSupportedCode","LanguageUtil#getBestMatchFromCodes","options.supportedLngs.find$argument_0","LanguageUtil#getFallbackCodes","LanguageUtil#toResolveHierarchy","addCode","fallbackCodes.forEach$argument_0","dummyRule.select","dummyRule.resolvedOptions","PluralResolver","PluralResolver#constructor","PluralResolver#addRule","PluralResolver#clearCache","PluralResolver#getRule","PluralResolver#needsPlural","PluralResolver#getPluralFormsOfKey","getSuffixes.map$argument_0","PluralResolver#getSuffixes","rule.resolvedOptions.pluralCategories.sort$argument_0","rule.resolvedOptions.pluralCategories.sort.map$argument_0","PluralResolver#getSuffix","deepFindWithDefaults","regexSafe","Interpolator","Interpolator#constructor","<anonymous>","Interpolator#init","Interpolator#reset","Interpolator#resetRegExp","getOrResetRegExp","Interpolator#interpolate","handleFormat","safeValue","todos.forEach$argument_0","Interpolator#nest","handleHasOptions","match._.slice.split.map$argument_0","formatters.reduce$argument_0","parseFormatStr","opts.forEach$argument_0","createCachedFormatter","createNonCachedFormatter","Formatter","Formatter#constructor","Formatter#init","cf$argument_0","Formatter#add","Formatter#addCached","Formatter#format","formats.find$argument_0","formats.findIndex$argument_0","formats.reduce$argument_0","removePending","Connector","Connector#constructor","Connector#queueLoad","languages.forEach$argument_0","Connector#loaded","queue.forEach$argument_0","Object.keys.forEach$argument_0","loadedKeys.forEach$argument_0","queue.filter$argument_0","Connector#read","resolver","setTimeout$argument_0","r.then$argument_0","Connector#prepareLoading","toLoad.toLoad.forEach$argument_0","Connector#load","Connector#reload","Connector#loadOne","read$argument_5","Connector#saveMissing","get","overloadTranslationOptionHandler","interpolation.format","transformOptions","noop","bindMemberFunctions","mems.forEach$argument_0","I18n","I18n#constructor","I18n#init","createClassOnDemand","s.backendConnector.on$argument_1","translator.on$argument_1","modules.external.forEach$argument_0","storeApi.forEach$argument_0","fcName","storeApiChained.forEach$argument_0","load","finish","I18n#loadResources","append","fallbacks.forEach$argument_0","options.preload.forEach$argument_0","services.backendConnector.load$argument_2","I18n#reloadResources","services.backendConnector.reload$argument_2","I18n#use","I18n#setResolvedLanguage","I18n#changeLanguage","setLngProps","done","deferred.resolve$argument_0","callback$argument_1","setLng","loadResources$argument_1","I18n#getFixedT","fixedT","key.map$argument_0","I18n#t","I18n#exists","I18n#setDefaultNamespace","I18n#hasLoadedNamespace","loadNotPending","I18n#loadNamespaces","ns.forEach$argument_0","loadResources$argument_0","I18n#loadLanguages","lngs.filter$argument_0","I18n#dir","I18n.createInstance","I18n#cloneInstance","membersToCopy.forEach$argument_0","Object.keys.reduce$argument_0","clone.translator.on$argument_1","I18n#toJSON"],"mappings":"AAA,iBC,8BD;cEC;8BCG;GDG;CFI;mBIC;CJG;aKC;YCC;GDE;CLC;iBOE,yFP;6BQC,qCR;sBSC;CTmB;gBUC;CVqB;iBWC;CXO;gBYC;CZQ;4BaC;CbM;mBcC;Cde;oBeC,iEf;egBS;sCCE,kBD;ChBG;AkBC;ECC;GDI;EEC;GFY;ClBC;4BqBG;qCCG,8DD;2EEE,0BF;CrBS;iBwBC;CxB+B;uByBC,+BzB;E0BI;G1BE;E2BC;G3BE;E4BC;G5BE;E6BC;G7BE;A8BE;ECC;GDE;EEC;GFK;EGC;GHE;EIC;GJE;EKC;GLE;EMC;GNE;EOC;GPI;EQC;GRO;ESC;GTI;C9BC;AwCG;ECC;GDE;EEC;8BCC;KDI;GFE;EIC;GJO;EKC;qBCG;ODI;qBCI;ODI;GLE;CxCC;A+CE;ECC;GDa;EEC;GFI;EGC;GHK;EIC;GJ0B;EKC;GLc;EMC;GNS;EOC;GPwB;EQC;GRM;ESC;GTE;EUC;GVG;EWC;GXE;EYC;oBCG,+CD;GZC;EcC;GdE;C/CC;E8DI;G9DE;E+DC;uBCC;KDE;G/DE;AiEI;gBCI;GDM;CjEE;AmEC;CnEK;6BoEG,4EpE;AqEC;ECC;GDQ;EEC;GFE;EGC;GHS;EIC;GJuB;EKC;qBC8J;SDQ;yBEG;+BCK;eDE;aFC;GLoB;ESC;gECoC;ODM;GTe;EWC;iBCO;yBCW;sBCO;SDyC;ODC;KDC;GXQ;EeC;GfE;EgBC;GhBG;EiBC;GjBsB;EkBC;GlBQ;CrEC;AwFE;ECC;GDI;EEC;GFQ;EGC;GHK;EIC;GJgB;EKC;GLK;EMC;kBXG;KWI;oBXE;gDYM;SZK;OWC;GNI;EQC;GRY;ESC;oBCG;KDO;0BEQ;KFE;GTE;CxFC;UoGW,sCpG;mBqGC;IrGE;AsGE;ECC;GDK;EEC;GFE;EGC;GHE;EIC;GJ0B;EKC;GLI;EMC;+CCC,2BD;GNC;EQC;wDCI,qGD,ME,sHF;GRC;EWC;GXO;CtGC;6BkHE;ClHO;kBmHC,iCnH;AoHC;ECC;qDCG,cD;GDE;EGC;GHqC;EIC;GJE;EKC;6BCC;KDM;GLI;EOC;yBCK;KDiB;iBEM,qBF;iBEG,sEF;kBGE;KHkC;GPE;EWC;6BCI;KDwB;iFEW,mBF;kCGW;UHG;GXM;CpHC;uBmIE;mBCa;ODU;CnIO;8BqIC;SfE;Gee;CrIC;iCsIC,MhB,wCtH;AuIC;ECC;GDI;EEC;iBCM;epBI,4BoB;ODC;mBCC;epBK,4BoB;ODC;mBCC;epBI,4BoB;ODC;uBCC;epBI,gDoB;ODC;eCC;epBI,4BoB;ODC;GFE;EIC;GJE;EKC;GLE;EMC;yGCE,wBD;0CEC,wBF;kCGG;KHuB;GNE;CvIC;sBiJE;CjJK;AkJC;ECC;GDgB;EEC;sBCK;yBnEE;OmEa;KDE;GFgB;EIC;uBCa;sCCK;+BCI;aDE;SDE;KDQ;mCIE,YJ;GJC;ESC;qBCc;mBCO;SDE;KDI;iBGM,4BH;GTU;EaC;0BCY;KDE;GbC;EeC;GfE;EgBC;GhBI;EiBC;qDCI;KDI;GjBC;EmBC,oF/C,Q+C;mBPqB,uBO;GnBa;ClJC;YsKE;oCCiC;mCfO;OeE;GDG;YEG,cF;EtKY;yByKC;CzKS;a0KE,Q1K;4B2KC;eCE;GDI;C3KC;A6KC;ECC;iBjBc;OiBE;GDE;EEC;gCC6B;KDI;iCEqC;OFE;8BGU;OHE;oCIC;OJE;qBKY;qBCC,wCD;KLC;4BOE;qBDC;OCG;KPC;iBQE;qBCC;ODQ;KRG;GFO;EYC;qBCO;qB9GI;S8GG;ODC;0BEG,cF;sCGI,cH;mEIC;OJG;GZI;EiBC;oDCa;KDG;GjBE;EmBC;GnByB;EoBC;GpBe;EqBC;wBCI;KDK;iBEC;uBCY,4BD;kCEC,4BF;KFC;mBKC;4BCW;ODE;KLC;GrBa;E4BC;mBCC;4BCgB;SDM;KDS;G5BS;E+BC;G/BE;EgCC;GhCE;EiCC;GjCE;EkCC;2BCa;KDG;GlCS;EoCC;eCO;KDE;uBEC;KFG;GpCE;EuCC;gCCI,qFD;uBDM;KCG;GvCE;EyCC;GzCc;E0CC;G1CE;E2CC;0BCe;KDE;6DEQ;OFW;6BGK;KHE;G3CO;E+CC;G/CQ;C7KC"}},"type":"js/module"}]}