{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"]}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":26,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useVPNStore = void 0;\n  var _zustand = require(_dependencyMap[1], \"zustand\");\n  var _axios = _interopRequireDefault(require(_dependencyMap[2], \"axios\"));\n  const API_BASE_URL = process.env.EXPO_PUBLIC_BACKEND_URL + '/api';\n  const useVPNStore = exports.useVPNStore = (0, _zustand.create)((set, get) => ({\n    isConnected: false,\n    connectionStatus: 'disconnected',\n    selectedServer: null,\n    servers: [],\n    isLoadingServers: false,\n    connect: () => {\n      const {\n        selectedServer\n      } = get();\n      if (!selectedServer) return;\n      set({\n        connectionStatus: 'connecting'\n      });\n\n      // Simulate connection process\n      setTimeout(() => {\n        set({\n          isConnected: true,\n          connectionStatus: 'connected'\n        });\n      }, 2000);\n    },\n    disconnect: () => {\n      set({\n        connectionStatus: 'disconnecting'\n      });\n\n      // Simulate disconnection process\n      setTimeout(() => {\n        set({\n          isConnected: false,\n          connectionStatus: 'disconnected'\n        });\n      }, 1000);\n    },\n    selectServer: server => {\n      set({\n        selectedServer: server\n      });\n    },\n    fetchServers: async () => {\n      try {\n        set({\n          isLoadingServers: true\n        });\n\n        // Try guest endpoint first (no auth required), then fall back to authenticated endpoint\n        let response;\n        try {\n          response = await _axios.default.get(`${API_BASE_URL}/proxies/guest`);\n        } catch (error) {\n          // If guest endpoint fails, try authenticated endpoint\n          response = await _axios.default.get(`${API_BASE_URL}/proxies`);\n        }\n        const servers = response.data;\n        set({\n          servers,\n          isLoadingServers: false\n        });\n\n        // Auto-select first server if none selected\n        const {\n          selectedServer\n        } = get();\n        if (!selectedServer && servers.length > 0) {\n          set({\n            selectedServer: servers[0]\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch servers:', error);\n        set({\n          isLoadingServers: false\n        });\n      }\n    }\n  }));\n});","lineCount":88,"map":[[7,2,1,0],[7,6,1,0,"_zustand"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,6,2,0,"_axios"],[8,12,2,0],[8,15,2,0,"_interopRequireDefault"],[8,37,2,0],[8,38,2,0,"require"],[8,45,2,0],[8,46,2,0,"_dependencyMap"],[8,60,2,0],[9,2,4,0],[9,8,4,6,"API_BASE_URL"],[9,20,4,18],[9,23,4,21,"process"],[9,30,4,28],[9,31,4,29,"env"],[9,34,4,32],[9,35,4,33,"EXPO_PUBLIC_BACKEND_URL"],[9,58,4,56],[9,61,4,59],[9,67,4,65],[10,2,35,7],[10,8,35,13,"useVPNStore"],[10,19,35,24],[10,22,35,24,"exports"],[10,29,35,24],[10,30,35,24,"useVPNStore"],[10,41,35,24],[10,44,35,27],[10,48,35,27,"create"],[10,63,35,33],[10,65,35,44],[10,66,35,45,"set"],[10,69,35,48],[10,71,35,50,"get"],[10,74,35,53],[10,80,35,59],[11,4,36,2,"isConnected"],[11,15,36,13],[11,17,36,15],[11,22,36,20],[12,4,37,2,"connectionStatus"],[12,20,37,18],[12,22,37,20],[12,36,37,34],[13,4,38,2,"selectedServer"],[13,18,38,16],[13,20,38,18],[13,24,38,22],[14,4,39,2,"servers"],[14,11,39,9],[14,13,39,11],[14,15,39,13],[15,4,40,2,"isLoadingServers"],[15,20,40,18],[15,22,40,20],[15,27,40,25],[16,4,42,2,"connect"],[16,11,42,9],[16,13,42,11,"connect"],[16,14,42,11],[16,19,42,17],[17,6,43,4],[17,12,43,10],[18,8,43,12,"selectedServer"],[19,6,43,27],[19,7,43,28],[19,10,43,31,"get"],[19,13,43,34],[19,14,43,35],[19,15,43,36],[20,6,44,4],[20,10,44,8],[20,11,44,9,"selectedServer"],[20,25,44,23],[20,27,44,25],[21,6,46,4,"set"],[21,9,46,7],[21,10,46,8],[22,8,46,10,"connectionStatus"],[22,24,46,26],[22,26,46,28],[23,6,46,41],[23,7,46,42],[23,8,46,43],[25,6,48,4],[26,6,49,4,"setTimeout"],[26,16,49,14],[26,17,49,15],[26,23,49,21],[27,8,50,6,"set"],[27,11,50,9],[27,12,50,10],[28,10,51,8,"isConnected"],[28,21,51,19],[28,23,51,21],[28,27,51,25],[29,10,52,8,"connectionStatus"],[29,26,52,24],[29,28,52,26],[30,8,53,6],[30,9,53,7],[30,10,53,8],[31,6,54,4],[31,7,54,5],[31,9,54,7],[31,13,54,11],[31,14,54,12],[32,4,55,2],[32,5,55,3],[33,4,57,2,"disconnect"],[33,14,57,12],[33,16,57,14,"disconnect"],[33,17,57,14],[33,22,57,20],[34,6,58,4,"set"],[34,9,58,7],[34,10,58,8],[35,8,58,10,"connectionStatus"],[35,24,58,26],[35,26,58,28],[36,6,58,44],[36,7,58,45],[36,8,58,46],[38,6,60,4],[39,6,61,4,"setTimeout"],[39,16,61,14],[39,17,61,15],[39,23,61,21],[40,8,62,6,"set"],[40,11,62,9],[40,12,62,10],[41,10,63,8,"isConnected"],[41,21,63,19],[41,23,63,21],[41,28,63,26],[42,10,64,8,"connectionStatus"],[42,26,64,24],[42,28,64,26],[43,8,65,6],[43,9,65,7],[43,10,65,8],[44,6,66,4],[44,7,66,5],[44,9,66,7],[44,13,66,11],[44,14,66,12],[45,4,67,2],[45,5,67,3],[46,4,69,2,"selectServer"],[46,16,69,14],[46,18,69,17,"server"],[46,24,69,36],[46,28,69,41],[47,6,70,4,"set"],[47,9,70,7],[47,10,70,8],[48,8,70,10,"selectedServer"],[48,22,70,24],[48,24,70,26,"server"],[49,6,70,33],[49,7,70,34],[49,8,70,35],[50,4,71,2],[50,5,71,3],[51,4,73,2,"fetchServers"],[51,16,73,14],[51,18,73,16],[51,24,73,16,"fetchServers"],[51,25,73,16],[51,30,73,28],[52,6,74,4],[52,10,74,8],[53,8,75,6,"set"],[53,11,75,9],[53,12,75,10],[54,10,75,12,"isLoadingServers"],[54,26,75,28],[54,28,75,30],[55,8,75,35],[55,9,75,36],[55,10,75,37],[57,8,77,6],[58,8,78,6],[58,12,78,10,"response"],[58,20,78,18],[59,8,79,6],[59,12,79,10],[60,10,80,8,"response"],[60,18,80,16],[60,21,80,19],[60,27,80,25,"axios"],[60,41,80,30],[60,42,80,31,"get"],[60,45,80,34],[60,46,80,35],[60,49,80,38,"API_BASE_URL"],[60,61,80,50],[60,77,80,66],[60,78,80,67],[61,8,81,6],[61,9,81,7],[61,10,81,8],[61,17,81,15,"error"],[61,22,81,20],[61,24,81,22],[62,10,82,8],[63,10,83,8,"response"],[63,18,83,16],[63,21,83,19],[63,27,83,25,"axios"],[63,41,83,30],[63,42,83,31,"get"],[63,45,83,34],[63,46,83,35],[63,49,83,38,"API_BASE_URL"],[63,61,83,50],[63,71,83,60],[63,72,83,61],[64,8,84,6],[65,8,86,6],[65,14,86,12,"servers"],[65,21,86,19],[65,24,86,22,"response"],[65,32,86,30],[65,33,86,31,"data"],[65,37,86,35],[66,8,88,6,"set"],[66,11,88,9],[66,12,88,10],[67,10,89,8,"servers"],[67,17,89,15],[68,10,90,8,"isLoadingServers"],[68,26,90,24],[68,28,90,26],[69,8,91,6],[69,9,91,7],[69,10,91,8],[71,8,93,6],[72,8,94,6],[72,14,94,12],[73,10,94,14,"selectedServer"],[74,8,94,29],[74,9,94,30],[74,12,94,33,"get"],[74,15,94,36],[74,16,94,37],[74,17,94,38],[75,8,95,6],[75,12,95,10],[75,13,95,11,"selectedServer"],[75,27,95,25],[75,31,95,29,"servers"],[75,38,95,36],[75,39,95,37,"length"],[75,45,95,43],[75,48,95,46],[75,49,95,47],[75,51,95,49],[76,10,96,8,"set"],[76,13,96,11],[76,14,96,12],[77,12,96,14,"selectedServer"],[77,26,96,28],[77,28,96,30,"servers"],[77,35,96,37],[77,36,96,38],[77,37,96,39],[78,10,96,41],[78,11,96,42],[78,12,96,43],[79,8,97,6],[80,6,98,4],[80,7,98,5],[80,8,98,6],[80,15,98,13,"error"],[80,20,98,18],[80,22,98,20],[81,8,99,6,"console"],[81,15,99,13],[81,16,99,14,"error"],[81,21,99,19],[81,22,99,20],[81,48,99,46],[81,50,99,48,"error"],[81,55,99,53],[81,56,99,54],[82,8,100,6,"set"],[82,11,100,9],[82,12,100,10],[83,10,100,12,"isLoadingServers"],[83,26,100,28],[83,28,100,30],[84,8,100,36],[84,9,100,37],[84,10,100,38],[85,6,101,4],[86,4,102,2],[87,2,103,0],[87,3,103,1],[87,4,103,2],[87,5,103,3],[88,0,103,4],[88,3]],"functionMap":{"names":["<global>","create$argument_0","connect","setTimeout$argument_0","disconnect","selectServer","fetchServers"],"mappings":"AAA;4CCkC;WCO;eCO;KDK;GDC;cGE;eDI;KCK;GHC;gBIE;GJE;gBKE;GL6B;EDC"}},"type":"js/module"}]}