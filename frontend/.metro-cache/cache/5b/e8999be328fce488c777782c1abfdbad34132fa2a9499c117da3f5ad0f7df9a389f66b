{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":77,"index":77}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./context.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":78},"end":{"line":2,"column":83,"index":161}}],"key":"ciyJyVp8PjcMvRLY+pcKnPpy50E=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":162},"end":{"line":3,"column":109,"index":271}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useTranslation = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _context = require(_dependencyMap[1], \"./context.js\");\n  var _utils = require(_dependencyMap[2], \"./utils.js\");\n  const usePrevious = (value, ignore) => {\n    const ref = (0, _react.useRef)();\n    (0, _react.useEffect)(() => {\n      ref.current = ignore ? ref.current : value;\n    }, [value, ignore]);\n    return ref.current;\n  };\n  const alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\n  const useMemoizedT = (i18n, language, namespace, keyPrefix) => (0, _react.useCallback)(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n  const useTranslation = (ns, props = {}) => {\n    const {\n      i18n: i18nFromProps\n    } = props;\n    const {\n      i18n: i18nFromContext,\n      defaultNS: defaultNSFromContext\n    } = (0, _react.useContext)(_context.I18nContext) || {};\n    const i18n = i18nFromProps || i18nFromContext || (0, _context.getI18n)();\n    if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new _context.ReportNamespaces();\n    if (!i18n) {\n      (0, _utils.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n      const notReadyT = (k, optsOrDefaultValue) => {\n        if ((0, _utils.isString)(optsOrDefaultValue)) return optsOrDefaultValue;\n        if ((0, _utils.isObject)(optsOrDefaultValue) && (0, _utils.isString)(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n        return Array.isArray(k) ? k[k.length - 1] : k;\n      };\n      const retNotReady = [notReadyT, {}, false];\n      retNotReady.t = notReadyT;\n      retNotReady.i18n = {};\n      retNotReady.ready = false;\n      return retNotReady;\n    }\n    if (i18n.options.react?.wait) (0, _utils.warnOnce)(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n    const i18nOptions = Object.assign({}, (0, _context.getDefaults)(), i18n.options.react, props);\n    const {\n      useSuspense,\n      keyPrefix\n    } = i18nOptions;\n    let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n    namespaces = (0, _utils.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n    const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => (0, _utils.hasLoadedNamespace)(n, i18n, i18nOptions));\n    const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n    const getT = () => memoGetT;\n    const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n    const [t, setT] = (0, _react.useState)(getT);\n    let joinedNS = namespaces.join();\n    if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n    const previousJoinedNS = usePrevious(joinedNS);\n    const isMounted = (0, _react.useRef)(true);\n    (0, _react.useEffect)(() => {\n      const {\n        bindI18n,\n        bindI18nStore\n      } = i18nOptions;\n      isMounted.current = true;\n      if (!ready && !useSuspense) {\n        if (props.lng) {\n          (0, _utils.loadLanguages)(i18n, props.lng, namespaces, () => {\n            if (isMounted.current) setT(getNewT);\n          });\n        } else {\n          (0, _utils.loadNamespaces)(i18n, namespaces, () => {\n            if (isMounted.current) setT(getNewT);\n          });\n        }\n      }\n      if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n        setT(getNewT);\n      }\n      const boundReset = () => {\n        if (isMounted.current) setT(getNewT);\n      };\n      if (bindI18n) i18n?.on(bindI18n, boundReset);\n      if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n      return () => {\n        isMounted.current = false;\n        if (i18n && bindI18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n        if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n      };\n    }, [i18n, joinedNS]);\n    (0, _react.useEffect)(() => {\n      if (isMounted.current && ready) {\n        setT(getT);\n      }\n    }, [i18n, keyPrefix, ready]);\n    const ret = [t, i18n, ready];\n    ret.t = t;\n    ret.i18n = i18n;\n    ret.ready = ready;\n    if (ready) return ret;\n    if (!ready && !useSuspense) return ret;\n    throw new Promise(resolve => {\n      if (props.lng) {\n        (0, _utils.loadLanguages)(i18n, props.lng, namespaces, () => resolve());\n      } else {\n        (0, _utils.loadNamespaces)(i18n, namespaces, () => resolve());\n      }\n    });\n  };\n  exports.useTranslation = useTranslation;\n});","lineCount":110,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_context"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,3,0],[8,6,3,0,"_utils"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,4,0],[9,8,4,6,"usePrevious"],[9,19,4,17],[9,22,4,20,"usePrevious"],[9,23,4,21,"value"],[9,28,4,26],[9,30,4,28,"ignore"],[9,36,4,34],[9,41,4,39],[10,4,5,2],[10,10,5,8,"ref"],[10,13,5,11],[10,16,5,14],[10,20,5,14,"useRef"],[10,33,5,20],[10,35,5,21],[10,36,5,22],[11,4,6,2],[11,8,6,2,"useEffect"],[11,24,6,11],[11,26,6,12],[11,32,6,18],[12,6,7,4,"ref"],[12,9,7,7],[12,10,7,8,"current"],[12,17,7,15],[12,20,7,18,"ignore"],[12,26,7,24],[12,29,7,27,"ref"],[12,32,7,30],[12,33,7,31,"current"],[12,40,7,38],[12,43,7,41,"value"],[12,48,7,46],[13,4,8,2],[13,5,8,3],[13,7,8,5],[13,8,8,6,"value"],[13,13,8,11],[13,15,8,13,"ignore"],[13,21,8,19],[13,22,8,20],[13,23,8,21],[14,4,9,2],[14,11,9,9,"ref"],[14,14,9,12],[14,15,9,13,"current"],[14,22,9,20],[15,2,10,0],[15,3,10,1],[16,2,11,0],[16,8,11,6,"alwaysNewT"],[16,18,11,16],[16,21,11,19,"alwaysNewT"],[16,22,11,20,"i18n"],[16,26,11,24],[16,28,11,26,"language"],[16,36,11,34],[16,38,11,36,"namespace"],[16,47,11,45],[16,49,11,47,"keyPrefix"],[16,58,11,56],[16,63,11,61,"i18n"],[16,67,11,65],[16,68,11,66,"getFixedT"],[16,77,11,75],[16,78,11,76,"language"],[16,86,11,84],[16,88,11,86,"namespace"],[16,97,11,95],[16,99,11,97,"keyPrefix"],[16,108,11,106],[16,109,11,107],[17,2,12,0],[17,8,12,6,"useMemoizedT"],[17,20,12,18],[17,23,12,21,"useMemoizedT"],[17,24,12,22,"i18n"],[17,28,12,26],[17,30,12,28,"language"],[17,38,12,36],[17,40,12,38,"namespace"],[17,49,12,47],[17,51,12,49,"keyPrefix"],[17,60,12,58],[17,65,12,63],[17,69,12,63,"useCallback"],[17,87,12,74],[17,89,12,75,"alwaysNewT"],[17,99,12,85],[17,100,12,86,"i18n"],[17,104,12,90],[17,106,12,92,"language"],[17,114,12,100],[17,116,12,102,"namespace"],[17,125,12,111],[17,127,12,113,"keyPrefix"],[17,136,12,122],[17,137,12,123],[17,139,12,125],[17,140,12,126,"i18n"],[17,144,12,130],[17,146,12,132,"language"],[17,154,12,140],[17,156,12,142,"namespace"],[17,165,12,151],[17,167,12,153,"keyPrefix"],[17,176,12,162],[17,177,12,163],[17,178,12,164],[18,2,13,7],[18,8,13,13,"useTranslation"],[18,22,13,27],[18,25,13,30,"useTranslation"],[18,26,13,31,"ns"],[18,28,13,33],[18,30,13,35,"props"],[18,35,13,40],[18,38,13,43],[18,39,13,44],[18,40,13,45],[18,45,13,50],[19,4,14,2],[19,10,14,8],[20,6,15,4,"i18n"],[20,10,15,8],[20,12,15,10,"i18nFromProps"],[21,4,16,2],[21,5,16,3],[21,8,16,6,"props"],[21,13,16,11],[22,4,17,2],[22,10,17,8],[23,6,18,4,"i18n"],[23,10,18,8],[23,12,18,10,"i18nFromContext"],[23,27,18,25],[24,6,19,4,"defaultNS"],[24,15,19,13],[24,17,19,15,"defaultNSFromContext"],[25,4,20,2],[25,5,20,3],[25,8,20,6],[25,12,20,6,"useContext"],[25,29,20,16],[25,31,20,17,"I18nContext"],[25,51,20,28],[25,52,20,29],[25,56,20,33],[25,57,20,34],[25,58,20,35],[26,4,21,2],[26,10,21,8,"i18n"],[26,14,21,12],[26,17,21,15,"i18nFromProps"],[26,30,21,28],[26,34,21,32,"i18nFromContext"],[26,49,21,47],[26,53,21,51],[26,57,21,51,"getI18n"],[26,73,21,58],[26,75,21,59],[26,76,21,60],[27,4,22,2],[27,8,22,6,"i18n"],[27,12,22,10],[27,16,22,14],[27,17,22,15,"i18n"],[27,21,22,19],[27,22,22,20,"reportNamespaces"],[27,38,22,36],[27,40,22,38,"i18n"],[27,44,22,42],[27,45,22,43,"reportNamespaces"],[27,61,22,59],[27,64,22,62],[27,68,22,66,"ReportNamespaces"],[27,93,22,82],[27,94,22,83],[27,95,22,84],[28,4,23,2],[28,8,23,6],[28,9,23,7,"i18n"],[28,13,23,11],[28,15,23,13],[29,6,24,4],[29,10,24,4,"warnOnce"],[29,25,24,12],[29,27,24,13,"i18n"],[29,31,24,17],[29,33,24,19],[29,54,24,40],[29,56,24,42],[29,144,24,130],[29,145,24,131],[30,6,25,4],[30,12,25,10,"notReadyT"],[30,21,25,19],[30,24,25,22,"notReadyT"],[30,25,25,23,"k"],[30,26,25,24],[30,28,25,26,"optsOrDefaultValue"],[30,46,25,44],[30,51,25,49],[31,8,26,6],[31,12,26,10],[31,16,26,10,"isString"],[31,31,26,18],[31,33,26,19,"optsOrDefaultValue"],[31,51,26,37],[31,52,26,38],[31,54,26,40],[31,61,26,47,"optsOrDefaultValue"],[31,79,26,65],[32,8,27,6],[32,12,27,10],[32,16,27,10,"isObject"],[32,31,27,18],[32,33,27,19,"optsOrDefaultValue"],[32,51,27,37],[32,52,27,38],[32,56,27,42],[32,60,27,42,"isString"],[32,75,27,50],[32,77,27,51,"optsOrDefaultValue"],[32,95,27,69],[32,96,27,70,"defaultValue"],[32,108,27,82],[32,109,27,83],[32,111,27,85],[32,118,27,92,"optsOrDefaultValue"],[32,136,27,110],[32,137,27,111,"defaultValue"],[32,149,27,123],[33,8,28,6],[33,15,28,13,"Array"],[33,20,28,18],[33,21,28,19,"isArray"],[33,28,28,26],[33,29,28,27,"k"],[33,30,28,28],[33,31,28,29],[33,34,28,32,"k"],[33,35,28,33],[33,36,28,34,"k"],[33,37,28,35],[33,38,28,36,"length"],[33,44,28,42],[33,47,28,45],[33,48,28,46],[33,49,28,47],[33,52,28,50,"k"],[33,53,28,51],[34,6,29,4],[34,7,29,5],[35,6,30,4],[35,12,30,10,"retNotReady"],[35,23,30,21],[35,26,30,24],[35,27,30,25,"notReadyT"],[35,36,30,34],[35,38,30,36],[35,39,30,37],[35,40,30,38],[35,42,30,40],[35,47,30,45],[35,48,30,46],[36,6,31,4,"retNotReady"],[36,17,31,15],[36,18,31,16,"t"],[36,19,31,17],[36,22,31,20,"notReadyT"],[36,31,31,29],[37,6,32,4,"retNotReady"],[37,17,32,15],[37,18,32,16,"i18n"],[37,22,32,20],[37,25,32,23],[37,26,32,24],[37,27,32,25],[38,6,33,4,"retNotReady"],[38,17,33,15],[38,18,33,16,"ready"],[38,23,33,21],[38,26,33,24],[38,31,33,29],[39,6,34,4],[39,13,34,11,"retNotReady"],[39,24,34,22],[40,4,35,2],[41,4,36,2],[41,8,36,6,"i18n"],[41,12,36,10],[41,13,36,11,"options"],[41,20,36,18],[41,21,36,19,"react"],[41,26,36,24],[41,28,36,26,"wait"],[41,32,36,30],[41,34,36,32],[41,38,36,32,"warnOnce"],[41,53,36,40],[41,55,36,41,"i18n"],[41,59,36,45],[41,61,36,47],[41,80,36,66],[41,82,36,68],[41,199,36,185],[41,200,36,186],[42,4,37,2],[42,10,37,8,"i18nOptions"],[42,21,37,19],[42,24,37,19,"Object"],[42,30,37,19],[42,31,37,19,"assign"],[42,37,37,19],[42,42,38,7],[42,46,38,7,"getDefaults"],[42,66,38,18],[42,68,38,19],[42,69,38,20],[42,71,39,7,"i18n"],[42,75,39,11],[42,76,39,12,"options"],[42,83,39,19],[42,84,39,20,"react"],[42,89,39,25],[42,91,40,7,"props"],[42,96,40,12],[42,97,41,3],[43,4,42,2],[43,10,42,8],[44,6,43,4,"useSuspense"],[44,17,43,15],[45,6,44,4,"keyPrefix"],[46,4,45,2],[46,5,45,3],[46,8,45,6,"i18nOptions"],[46,19,45,17],[47,4,46,2],[47,8,46,6,"namespaces"],[47,18,46,16],[47,21,46,19,"ns"],[47,23,46,21],[47,27,46,25,"defaultNSFromContext"],[47,47,46,45],[47,51,46,49,"i18n"],[47,55,46,53],[47,56,46,54,"options"],[47,63,46,61],[47,65,46,63,"defaultNS"],[47,74,46,72],[48,4,47,2,"namespaces"],[48,14,47,12],[48,17,47,15],[48,21,47,15,"isString"],[48,36,47,23],[48,38,47,24,"namespaces"],[48,48,47,34],[48,49,47,35],[48,52,47,38],[48,53,47,39,"namespaces"],[48,63,47,49],[48,64,47,50],[48,67,47,53,"namespaces"],[48,77,47,63],[48,81,47,67],[48,82,47,68],[48,95,47,81],[48,96,47,82],[49,4,48,2,"i18n"],[49,8,48,6],[49,9,48,7,"reportNamespaces"],[49,25,48,23],[49,26,48,24,"addUsedNamespaces"],[49,43,48,41],[49,46,48,44,"namespaces"],[49,56,48,54],[49,57,48,55],[50,4,49,2],[50,10,49,8,"ready"],[50,15,49,13],[50,18,49,16],[50,19,49,17,"i18n"],[50,23,49,21],[50,24,49,22,"isInitialized"],[50,37,49,35],[50,41,49,39,"i18n"],[50,45,49,43],[50,46,49,44,"initializedStoreOnce"],[50,66,49,64],[50,71,49,69,"namespaces"],[50,81,49,79],[50,82,49,80,"every"],[50,87,49,85],[50,88,49,86,"n"],[50,89,49,87],[50,93,49,91],[50,97,49,91,"hasLoadedNamespace"],[50,122,49,109],[50,124,49,110,"n"],[50,125,49,111],[50,127,49,113,"i18n"],[50,131,49,117],[50,133,49,119,"i18nOptions"],[50,144,49,130],[50,145,49,131],[50,146,49,132],[51,4,50,2],[51,10,50,8,"memoGetT"],[51,18,50,16],[51,21,50,19,"useMemoizedT"],[51,33,50,31],[51,34,50,32,"i18n"],[51,38,50,36],[51,40,50,38,"props"],[51,45,50,43],[51,46,50,44,"lng"],[51,49,50,47],[51,53,50,51],[51,57,50,55],[51,59,50,57,"i18nOptions"],[51,70,50,68],[51,71,50,69,"nsMode"],[51,77,50,75],[51,82,50,80],[51,92,50,90],[51,95,50,93,"namespaces"],[51,105,50,103],[51,108,50,106,"namespaces"],[51,118,50,116],[51,119,50,117],[51,120,50,118],[51,121,50,119],[51,123,50,121,"keyPrefix"],[51,132,50,130],[51,133,50,131],[52,4,51,2],[52,10,51,8,"getT"],[52,14,51,12],[52,17,51,15,"getT"],[52,18,51,15],[52,23,51,21,"memoGetT"],[52,31,51,29],[53,4,52,2],[53,10,52,8,"getNewT"],[53,17,52,15],[53,20,52,18,"getNewT"],[53,21,52,18],[53,26,52,24,"alwaysNewT"],[53,36,52,34],[53,37,52,35,"i18n"],[53,41,52,39],[53,43,52,41,"props"],[53,48,52,46],[53,49,52,47,"lng"],[53,52,52,50],[53,56,52,54],[53,60,52,58],[53,62,52,60,"i18nOptions"],[53,73,52,71],[53,74,52,72,"nsMode"],[53,80,52,78],[53,85,52,83],[53,95,52,93],[53,98,52,96,"namespaces"],[53,108,52,106],[53,111,52,109,"namespaces"],[53,121,52,119],[53,122,52,120],[53,123,52,121],[53,124,52,122],[53,126,52,124,"keyPrefix"],[53,135,52,133],[53,136,52,134],[54,4,53,2],[54,10,53,8],[54,11,53,9,"t"],[54,12,53,10],[54,14,53,12,"setT"],[54,18,53,16],[54,19,53,17],[54,22,53,20],[54,26,53,20,"useState"],[54,41,53,28],[54,43,53,29,"getT"],[54,47,53,33],[54,48,53,34],[55,4,54,2],[55,8,54,6,"joinedNS"],[55,16,54,14],[55,19,54,17,"namespaces"],[55,29,54,27],[55,30,54,28,"join"],[55,34,54,32],[55,35,54,33],[55,36,54,34],[56,4,55,2],[56,8,55,6,"props"],[56,13,55,11],[56,14,55,12,"lng"],[56,17,55,15],[56,19,55,17,"joinedNS"],[56,27,55,25],[56,30,55,28],[56,33,55,31,"props"],[56,38,55,36],[56,39,55,37,"lng"],[56,42,55,40],[56,45,55,43,"joinedNS"],[56,53,55,51],[56,55,55,53],[57,4,56,2],[57,10,56,8,"previousJoinedNS"],[57,26,56,24],[57,29,56,27,"usePrevious"],[57,40,56,38],[57,41,56,39,"joinedNS"],[57,49,56,47],[57,50,56,48],[58,4,57,2],[58,10,57,8,"isMounted"],[58,19,57,17],[58,22,57,20],[58,26,57,20,"useRef"],[58,39,57,26],[58,41,57,27],[58,45,57,31],[58,46,57,32],[59,4,58,2],[59,8,58,2,"useEffect"],[59,24,58,11],[59,26,58,12],[59,32,58,18],[60,6,59,4],[60,12,59,10],[61,8,60,6,"bindI18n"],[61,16,60,14],[62,8,61,6,"bindI18nStore"],[63,6,62,4],[63,7,62,5],[63,10,62,8,"i18nOptions"],[63,21,62,19],[64,6,63,4,"isMounted"],[64,15,63,13],[64,16,63,14,"current"],[64,23,63,21],[64,26,63,24],[64,30,63,28],[65,6,64,4],[65,10,64,8],[65,11,64,9,"ready"],[65,16,64,14],[65,20,64,18],[65,21,64,19,"useSuspense"],[65,32,64,30],[65,34,64,32],[66,8,65,6],[66,12,65,10,"props"],[66,17,65,15],[66,18,65,16,"lng"],[66,21,65,19],[66,23,65,21],[67,10,66,8],[67,14,66,8,"loadLanguages"],[67,34,66,21],[67,36,66,22,"i18n"],[67,40,66,26],[67,42,66,28,"props"],[67,47,66,33],[67,48,66,34,"lng"],[67,51,66,37],[67,53,66,39,"namespaces"],[67,63,66,49],[67,65,66,51],[67,71,66,57],[68,12,67,10],[68,16,67,14,"isMounted"],[68,25,67,23],[68,26,67,24,"current"],[68,33,67,31],[68,35,67,33,"setT"],[68,39,67,37],[68,40,67,38,"getNewT"],[68,47,67,45],[68,48,67,46],[69,10,68,8],[69,11,68,9],[69,12,68,10],[70,8,69,6],[70,9,69,7],[70,15,69,13],[71,10,70,8],[71,14,70,8,"loadNamespaces"],[71,35,70,22],[71,37,70,23,"i18n"],[71,41,70,27],[71,43,70,29,"namespaces"],[71,53,70,39],[71,55,70,41],[71,61,70,47],[72,12,71,10],[72,16,71,14,"isMounted"],[72,25,71,23],[72,26,71,24,"current"],[72,33,71,31],[72,35,71,33,"setT"],[72,39,71,37],[72,40,71,38,"getNewT"],[72,47,71,45],[72,48,71,46],[73,10,72,8],[73,11,72,9],[73,12,72,10],[74,8,73,6],[75,6,74,4],[76,6,75,4],[76,10,75,8,"ready"],[76,15,75,13],[76,19,75,17,"previousJoinedNS"],[76,35,75,33],[76,39,75,37,"previousJoinedNS"],[76,55,75,53],[76,60,75,58,"joinedNS"],[76,68,75,66],[76,72,75,70,"isMounted"],[76,81,75,79],[76,82,75,80,"current"],[76,89,75,87],[76,91,75,89],[77,8,76,6,"setT"],[77,12,76,10],[77,13,76,11,"getNewT"],[77,20,76,18],[77,21,76,19],[78,6,77,4],[79,6,78,4],[79,12,78,10,"boundReset"],[79,22,78,20],[79,25,78,23,"boundReset"],[79,26,78,23],[79,31,78,29],[80,8,79,6],[80,12,79,10,"isMounted"],[80,21,79,19],[80,22,79,20,"current"],[80,29,79,27],[80,31,79,29,"setT"],[80,35,79,33],[80,36,79,34,"getNewT"],[80,43,79,41],[80,44,79,42],[81,6,80,4],[81,7,80,5],[82,6,81,4],[82,10,81,8,"bindI18n"],[82,18,81,16],[82,20,81,18,"i18n"],[82,24,81,22],[82,26,81,24,"on"],[82,28,81,26],[82,29,81,27,"bindI18n"],[82,37,81,35],[82,39,81,37,"boundReset"],[82,49,81,47],[82,50,81,48],[83,6,82,4],[83,10,82,8,"bindI18nStore"],[83,23,82,21],[83,25,82,23,"i18n"],[83,29,82,27],[83,31,82,29,"store"],[83,36,82,34],[83,37,82,35,"on"],[83,39,82,37],[83,40,82,38,"bindI18nStore"],[83,53,82,51],[83,55,82,53,"boundReset"],[83,65,82,63],[83,66,82,64],[84,6,83,4],[84,13,83,11],[84,19,83,17],[85,8,84,6,"isMounted"],[85,17,84,15],[85,18,84,16,"current"],[85,25,84,23],[85,28,84,26],[85,33,84,31],[86,8,85,6],[86,12,85,10,"i18n"],[86,16,85,14],[86,20,85,18,"bindI18n"],[86,28,85,26],[86,30,85,28,"bindI18n"],[86,38,85,36],[86,40,85,38,"split"],[86,45,85,43],[86,46,85,44],[86,49,85,47],[86,50,85,48],[86,51,85,49,"forEach"],[86,58,85,56],[86,59,85,57,"e"],[86,60,85,58],[86,64,85,62,"i18n"],[86,68,85,66],[86,69,85,67,"off"],[86,72,85,70],[86,73,85,71,"e"],[86,74,85,72],[86,76,85,74,"boundReset"],[86,86,85,84],[86,87,85,85],[86,88,85,86],[87,8,86,6],[87,12,86,10,"bindI18nStore"],[87,25,86,23],[87,29,86,27,"i18n"],[87,33,86,31],[87,35,86,33,"bindI18nStore"],[87,48,86,46],[87,49,86,47,"split"],[87,54,86,52],[87,55,86,53],[87,58,86,56],[87,59,86,57],[87,60,86,58,"forEach"],[87,67,86,65],[87,68,86,66,"e"],[87,69,86,67],[87,73,86,71,"i18n"],[87,77,86,75],[87,78,86,76,"store"],[87,83,86,81],[87,84,86,82,"off"],[87,87,86,85],[87,88,86,86,"e"],[87,89,86,87],[87,91,86,89,"boundReset"],[87,101,86,99],[87,102,86,100],[87,103,86,101],[88,6,87,4],[88,7,87,5],[89,4,88,2],[89,5,88,3],[89,7,88,5],[89,8,88,6,"i18n"],[89,12,88,10],[89,14,88,12,"joinedNS"],[89,22,88,20],[89,23,88,21],[89,24,88,22],[90,4,89,2],[90,8,89,2,"useEffect"],[90,24,89,11],[90,26,89,12],[90,32,89,18],[91,6,90,4],[91,10,90,8,"isMounted"],[91,19,90,17],[91,20,90,18,"current"],[91,27,90,25],[91,31,90,29,"ready"],[91,36,90,34],[91,38,90,36],[92,8,91,6,"setT"],[92,12,91,10],[92,13,91,11,"getT"],[92,17,91,15],[92,18,91,16],[93,6,92,4],[94,4,93,2],[94,5,93,3],[94,7,93,5],[94,8,93,6,"i18n"],[94,12,93,10],[94,14,93,12,"keyPrefix"],[94,23,93,21],[94,25,93,23,"ready"],[94,30,93,28],[94,31,93,29],[94,32,93,30],[95,4,94,2],[95,10,94,8,"ret"],[95,13,94,11],[95,16,94,14],[95,17,94,15,"t"],[95,18,94,16],[95,20,94,18,"i18n"],[95,24,94,22],[95,26,94,24,"ready"],[95,31,94,29],[95,32,94,30],[96,4,95,2,"ret"],[96,7,95,5],[96,8,95,6,"t"],[96,9,95,7],[96,12,95,10,"t"],[96,13,95,11],[97,4,96,2,"ret"],[97,7,96,5],[97,8,96,6,"i18n"],[97,12,96,10],[97,15,96,13,"i18n"],[97,19,96,17],[98,4,97,2,"ret"],[98,7,97,5],[98,8,97,6,"ready"],[98,13,97,11],[98,16,97,14,"ready"],[98,21,97,19],[99,4,98,2],[99,8,98,6,"ready"],[99,13,98,11],[99,15,98,13],[99,22,98,20,"ret"],[99,25,98,23],[100,4,99,2],[100,8,99,6],[100,9,99,7,"ready"],[100,14,99,12],[100,18,99,16],[100,19,99,17,"useSuspense"],[100,30,99,28],[100,32,99,30],[100,39,99,37,"ret"],[100,42,99,40],[101,4,100,2],[101,10,100,8],[101,14,100,12,"Promise"],[101,21,100,19],[101,22,100,20,"resolve"],[101,29,100,27],[101,33,100,31],[102,6,101,4],[102,10,101,8,"props"],[102,15,101,13],[102,16,101,14,"lng"],[102,19,101,17],[102,21,101,19],[103,8,102,6],[103,12,102,6,"loadLanguages"],[103,32,102,19],[103,34,102,20,"i18n"],[103,38,102,24],[103,40,102,26,"props"],[103,45,102,31],[103,46,102,32,"lng"],[103,49,102,35],[103,51,102,37,"namespaces"],[103,61,102,47],[103,63,102,49],[103,69,102,55,"resolve"],[103,76,102,62],[103,77,102,63],[103,78,102,64],[103,79,102,65],[104,6,103,4],[104,7,103,5],[104,13,103,11],[105,8,104,6],[105,12,104,6,"loadNamespaces"],[105,33,104,20],[105,35,104,21,"i18n"],[105,39,104,25],[105,41,104,27,"namespaces"],[105,51,104,37],[105,53,104,39],[105,59,104,45,"resolve"],[105,66,104,52],[105,67,104,53],[105,68,104,54],[105,69,104,55],[106,6,105,4],[107,4,106,2],[107,5,106,3],[107,6,106,4],[108,2,107,0],[108,3,107,1],[109,2,107,2,"exports"],[109,9,107,2],[109,10,107,2,"useTranslation"],[109,24,107,2],[109,27,107,2,"useTranslation"],[109,41,107,2],[110,0,107,2],[110,3]],"functionMap":{"names":["<global>","usePrevious","useEffect$argument_0","alwaysNewT","useMemoizedT","useTranslation","notReadyT","namespaces.every$argument_0","getT","getNewT","loadLanguages$argument_3","loadNamespaces$argument_2","boundReset","<anonymous>","bindI18n.split.forEach$argument_0","bindI18nStore.split.forEach$argument_0","Promise$argument_0"],"mappings":"AAA;oBCG;YCE;GDE;CDE;mBGC,wFH;qBIC,+IJ;8BKC;sBCY;KDI;sFEoB,6CF;eGE,cH;kBIC,oHJ;YHM;mDQQ;SRE;yCSE;STE;uBUM;KVE;WWG;yDCE,4BD;kEEC,kCF;KXC;GGC;YHC;GGI;oBWO;iDNE,eM;uCLE,eK;GXE;CLC"}},"type":"js/module"}]}