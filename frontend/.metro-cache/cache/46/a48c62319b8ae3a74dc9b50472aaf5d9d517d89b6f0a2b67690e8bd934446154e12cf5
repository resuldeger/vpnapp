{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"html-parse-stringify","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":40,"index":129}}],"key":"Dz5mG5jCySHyZi3eazCTCPjnQDg=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":64,"index":194}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}},{"name":"./defaults.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":195},"end":{"line":4,"column":44,"index":239}}],"key":"XCWKIxVkGmzpUvwhJx9c42EufEI=","exportNames":["*"]}},{"name":"./i18nInstance.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":240},"end":{"line":5,"column":44,"index":284}}],"key":"2DjoKlYcMulm3L6r09aRNQJwnCE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Trans = Trans;\n  exports.nodesToString = void 0;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _react = require(_dependencyMap[2], \"react\");\n  var _htmlParseStringify = _interopRequireDefault(require(_dependencyMap[3], \"html-parse-stringify\"));\n  var _utils = require(_dependencyMap[4], \"./utils.js\");\n  var _defaults = require(_dependencyMap[5], \"./defaults.js\");\n  var _i18nInstance = require(_dependencyMap[6], \"./i18nInstance.js\");\n  const _excluded = [\"format\"],\n    _excluded2 = [\"children\", \"count\", \"parent\", \"i18nKey\", \"context\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\", \"shouldUnescape\"];\n  const hasChildren = (node, checkLength) => {\n    if (!node) return false;\n    const base = node.props?.children ?? node.children;\n    if (checkLength) return base.length > 0;\n    return !!base;\n  };\n  const getChildren = node => {\n    if (!node) return [];\n    const children = node.props?.children ?? node.children;\n    return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n  };\n  const hasValidReactChildren = children => Array.isArray(children) && children.every(_react.isValidElement);\n  const getAsArray = data => Array.isArray(data) ? data : [data];\n  const mergeProps = (source, target) => {\n    const newTarget = Object.assign({}, target);\n    newTarget.props = Object.assign(source.props, target.props);\n    return newTarget;\n  };\n  const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n    if (!children) return '';\n    let stringNode = '';\n    const childrenArray = getAsArray(children);\n    const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n    childrenArray.forEach((child, childIndex) => {\n      if ((0, _utils.isString)(child)) {\n        stringNode += `${child}`;\n        return;\n      }\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) {\n        const {\n          props,\n          type\n        } = child;\n        const childPropsCount = Object.keys(props).length;\n        const shouldKeepChild = keepArray.indexOf(type) > -1;\n        const childChildren = props.children;\n        if (!childChildren && shouldKeepChild && !childPropsCount) {\n          stringNode += `<${type}/>`;\n          return;\n        }\n        if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n          stringNode += `<${childIndex}></${childIndex}>`;\n          return;\n        }\n        if (shouldKeepChild && childPropsCount === 1 && (0, _utils.isString)(childChildren)) {\n          stringNode += `<${type}>${childChildren}</${type}>`;\n          return;\n        }\n        const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n        return;\n      }\n      if (child === null) {\n        (0, _utils.warn)(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n          i18nKey\n        });\n        return;\n      }\n      if ((0, _utils.isObject)(child)) {\n        const {\n            format\n          } = child,\n          clone = (0, _objectWithoutPropertiesLoose2.default)(child, _excluded);\n        const keys = Object.keys(clone);\n        if (keys.length === 1) {\n          const value = format ? `${keys[0]}, ${format}` : keys[0];\n          stringNode += `{{${value}}}`;\n          return;\n        }\n        (0, _utils.warn)(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n          i18nKey,\n          child\n        });\n        return;\n      }\n      (0, _utils.warn)(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n        i18nKey,\n        child\n      });\n    });\n    return stringNode;\n  };\n  exports.nodesToString = nodesToString;\n  const renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n    if (targetString === '') return [];\n    const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n    const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n    if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n    const data = knownComponentsMap ?? {};\n    const getData = childs => {\n      const childrenArray = getAsArray(childs);\n      childrenArray.forEach(child => {\n        if ((0, _utils.isString)(child)) return;\n        if (hasChildren(child)) getData(getChildren(child));else if ((0, _utils.isObject)(child) && ! /*#__PURE__*/(0, _react.isValidElement)(child)) Object.assign(data, child);\n      });\n    };\n    getData(children);\n    const ast = _htmlParseStringify.default.parse(`<0>${targetString}</0>`);\n    const opts = Object.assign({}, data, combinedTOpts);\n    const renderInner = (child, node, rootReactNode) => {\n      const childs = getChildren(child);\n      const mappedChildren = mapAST(childs, node.children, rootReactNode);\n      return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n    };\n    const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n      if (child.dummy) {\n        child.children = inner;\n        mem.push(/*#__PURE__*/(0, _react.cloneElement)(child, {\n          key: i\n        }, isVoid ? undefined : inner));\n      } else {\n        mem.push(..._react.Children.map([child], c => {\n          const props = Object.assign({}, c.props);\n          delete props.i18nIsDynamicList;\n          return /*#__PURE__*/(0, _react.createElement)(c.type, Object.assign({}, props, {\n            key: i,\n            ref: c.props.ref ?? c.ref\n          }), isVoid ? null : inner);\n        }));\n      }\n    };\n    const mapAST = (reactNode, astNode, rootReactNode) => {\n      const reactNodes = getAsArray(reactNode);\n      const astNodes = getAsArray(astNode);\n      return astNodes.reduce((mem, node, i) => {\n        const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n        if (node.type === 'tag') {\n          let tmp = reactNodes[parseInt(node.name, 10)];\n          if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n          if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n          if (!tmp) tmp = {};\n          const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n            props: node.attrs\n          }, tmp) : tmp;\n          const isElement = /*#__PURE__*/(0, _react.isValidElement)(child);\n          const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n          const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0, _utils.isObject)(child) && child.dummy && !isElement;\n          const isKnownComponent = (0, _utils.isObject)(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n          if ((0, _utils.isString)(child)) {\n            const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n            mem.push(value);\n          } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (Number.isNaN(parseFloat(node.name))) {\n            if (isKnownComponent) {\n              const inner = renderInner(child, node, rootReactNode);\n              pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n            } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n              if (node.voidElement) {\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }));\n              } else {\n                const inner = mapAST(reactNodes, node.children, rootReactNode);\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }, inner));\n              }\n            } else if (node.voidElement) {\n              mem.push(`<${node.name} />`);\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(`<${node.name}>${inner}</${node.name}>`);\n            }\n          } else if ((0, _utils.isObject)(child) && !isElement) {\n            const content = node.children[0] ? translationContent : null;\n            if (content) mem.push(content);\n          } else {\n            pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n          }\n        } else if (node.type === 'text') {\n          const wrapTextNodes = i18nOptions.transWrapTextNodes;\n          const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n          if (wrapTextNodes) {\n            mem.push(/*#__PURE__*/(0, _react.createElement)(wrapTextNodes, {\n              key: `${node.name}-${i}`\n            }, content));\n          } else {\n            mem.push(content);\n          }\n        }\n        return mem;\n      }, []);\n    };\n    const result = mapAST([{\n      dummy: true,\n      children: children || []\n    }], ast, getAsArray(children || []));\n    return getChildren(result[0]);\n  };\n  const fixComponentProps = (component, index, translation) => {\n    const componentKey = component.key || index;\n    const comp = /*#__PURE__*/(0, _react.cloneElement)(component, {\n      key: componentKey\n    });\n    if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n      return comp;\n    }\n    function Componentized() {\n      return /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, comp);\n    }\n    return /*#__PURE__*/(0, _react.createElement)(Componentized, {\n      key: componentKey\n    });\n  };\n  const generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\n  const generateObjectComponents = (components, translation) => {\n    const componentMap = {};\n    Object.keys(components).forEach(c => {\n      Object.assign(componentMap, {\n        [c]: fixComponentProps(components[c], c, translation)\n      });\n    });\n    return componentMap;\n  };\n  const generateComponents = (components, translation, i18n, i18nKey) => {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      return generateArrayComponents(components, translation);\n    }\n    if ((0, _utils.isObject)(components)) {\n      return generateObjectComponents(components, translation);\n    }\n    (0, _utils.warnOnce)(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n      i18nKey\n    });\n    return null;\n  };\n  const isComponentsMap = object => {\n    if (!(0, _utils.isObject)(object)) return false;\n    if (Array.isArray(object)) return false;\n    return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n  };\n  function Trans(_ref) {\n    let {\n        children,\n        count,\n        parent,\n        i18nKey,\n        context,\n        tOptions = {},\n        values,\n        defaults,\n        components,\n        ns,\n        i18n: i18nFromProps,\n        t: tFromProps,\n        shouldUnescape\n      } = _ref,\n      additionalProps = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded2);\n    const i18n = i18nFromProps || (0, _i18nInstance.getI18n)();\n    if (!i18n) {\n      (0, _utils.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n        i18nKey\n      });\n      return children;\n    }\n    const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n    const reactI18nextOptions = Object.assign({}, (0, _defaults.getDefaults)(), i18n.options?.react);\n    let namespaces = ns || t.ns || i18n.options?.defaultNS;\n    namespaces = (0, _utils.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n    const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n    const {\n      hashTransKey\n    } = reactI18nextOptions;\n    const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n    if (i18n.options?.interpolation?.defaultVariables) {\n      values = values && Object.keys(values).length > 0 ? Object.assign({}, values, i18n.options.interpolation.defaultVariables) : Object.assign({}, i18n.options.interpolation.defaultVariables);\n    }\n    const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n      interpolation: Object.assign({}, tOptions.interpolation, {\n        prefix: '#$?',\n        suffix: '?$#'\n      })\n    };\n    const combinedTOpts = Object.assign({}, tOptions, {\n      context: context || tOptions.context,\n      count\n    }, values, interpolationOverride, {\n      defaultValue,\n      ns: namespaces\n    });\n    const translation = key ? t(key, combinedTOpts) : defaultValue;\n    const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n    let indexedChildren = generatedComponents || children;\n    let componentsMap = null;\n    if (isComponentsMap(generatedComponents)) {\n      componentsMap = generatedComponents;\n      indexedChildren = children;\n    }\n    const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n    const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n    return useAsParent ? /*#__PURE__*/(0, _react.createElement)(useAsParent, additionalProps, content) : content;\n  }\n});","lineCount":315,"map":[[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"require"],[9,22,1,0],[9,23,1,0,"_dependencyMap"],[9,37,1,0],[10,2,2,0],[10,6,2,0,"_htmlParseStringify"],[10,25,2,0],[10,28,2,0,"_interopRequireDefault"],[10,50,2,0],[10,51,2,0,"require"],[10,58,2,0],[10,59,2,0,"_dependencyMap"],[10,73,2,0],[11,2,3,0],[11,6,3,0,"_utils"],[11,12,3,0],[11,15,3,0,"require"],[11,22,3,0],[11,23,3,0,"_dependencyMap"],[11,37,3,0],[12,2,4,0],[12,6,4,0,"_defaults"],[12,15,4,0],[12,18,4,0,"require"],[12,25,4,0],[12,26,4,0,"_dependencyMap"],[12,40,4,0],[13,2,5,0],[13,6,5,0,"_i18nInstance"],[13,19,5,0],[13,22,5,0,"require"],[13,29,5,0],[13,30,5,0,"_dependencyMap"],[13,44,5,0],[14,2,5,44],[14,8,5,44,"_excluded"],[14,17,5,44],[15,4,5,44,"_excluded2"],[15,14,5,44],[16,2,6,0],[16,8,6,6,"hasChildren"],[16,19,6,17],[16,22,6,20,"hasChildren"],[16,23,6,21,"node"],[16,27,6,25],[16,29,6,27,"checkLength"],[16,40,6,38],[16,45,6,43],[17,4,7,2],[17,8,7,6],[17,9,7,7,"node"],[17,13,7,11],[17,15,7,13],[17,22,7,20],[17,27,7,25],[18,4,8,2],[18,10,8,8,"base"],[18,14,8,12],[18,17,8,15,"node"],[18,21,8,19],[18,22,8,20,"props"],[18,27,8,25],[18,29,8,27,"children"],[18,37,8,35],[18,41,8,39,"node"],[18,45,8,43],[18,46,8,44,"children"],[18,54,8,52],[19,4,9,2],[19,8,9,6,"checkLength"],[19,19,9,17],[19,21,9,19],[19,28,9,26,"base"],[19,32,9,30],[19,33,9,31,"length"],[19,39,9,37],[19,42,9,40],[19,43,9,41],[20,4,10,2],[20,11,10,9],[20,12,10,10],[20,13,10,11,"base"],[20,17,10,15],[21,2,11,0],[21,3,11,1],[22,2,12,0],[22,8,12,6,"getChildren"],[22,19,12,17],[22,22,12,20,"node"],[22,26,12,24],[22,30,12,28],[23,4,13,2],[23,8,13,6],[23,9,13,7,"node"],[23,13,13,11],[23,15,13,13],[23,22,13,20],[23,24,13,22],[24,4,14,2],[24,10,14,8,"children"],[24,18,14,16],[24,21,14,19,"node"],[24,25,14,23],[24,26,14,24,"props"],[24,31,14,29],[24,33,14,31,"children"],[24,41,14,39],[24,45,14,43,"node"],[24,49,14,47],[24,50,14,48,"children"],[24,58,14,56],[25,4,15,2],[25,11,15,9,"node"],[25,15,15,13],[25,16,15,14,"props"],[25,21,15,19],[25,23,15,21,"i18nIsDynamicList"],[25,40,15,38],[25,43,15,41,"getAsArray"],[25,53,15,51],[25,54,15,52,"children"],[25,62,15,60],[25,63,15,61],[25,66,15,64,"children"],[25,74,15,72],[26,2,16,0],[26,3,16,1],[27,2,17,0],[27,8,17,6,"hasValidReactChildren"],[27,29,17,27],[27,32,17,30,"children"],[27,40,17,38],[27,44,17,42,"Array"],[27,49,17,47],[27,50,17,48,"isArray"],[27,57,17,55],[27,58,17,56,"children"],[27,66,17,64],[27,67,17,65],[27,71,17,69,"children"],[27,79,17,77],[27,80,17,78,"every"],[27,85,17,83],[27,86,17,84,"isValidElement"],[27,107,17,98],[27,108,17,99],[28,2,18,0],[28,8,18,6,"getAsArray"],[28,18,18,16],[28,21,18,19,"data"],[28,25,18,23],[28,29,18,27,"Array"],[28,34,18,32],[28,35,18,33,"isArray"],[28,42,18,40],[28,43,18,41,"data"],[28,47,18,45],[28,48,18,46],[28,51,18,49,"data"],[28,55,18,53],[28,58,18,56],[28,59,18,57,"data"],[28,63,18,61],[28,64,18,62],[29,2,19,0],[29,8,19,6,"mergeProps"],[29,18,19,16],[29,21,19,19,"mergeProps"],[29,22,19,20,"source"],[29,28,19,26],[29,30,19,28,"target"],[29,36,19,34],[29,41,19,39],[30,4,20,2],[30,10,20,8,"newTarget"],[30,19,20,17],[30,22,20,17,"Object"],[30,28,20,17],[30,29,20,17,"assign"],[30,35,20,17],[30,40,21,7,"target"],[30,46,21,13],[30,47,22,3],[31,4,23,2,"newTarget"],[31,13,23,11],[31,14,23,12,"props"],[31,19,23,17],[31,22,23,20,"Object"],[31,28,23,26],[31,29,23,27,"assign"],[31,35,23,33],[31,36,23,34,"source"],[31,42,23,40],[31,43,23,41,"props"],[31,48,23,46],[31,50,23,48,"target"],[31,56,23,54],[31,57,23,55,"props"],[31,62,23,60],[31,63,23,61],[32,4,24,2],[32,11,24,9,"newTarget"],[32,20,24,18],[33,2,25,0],[33,3,25,1],[34,2,26,7],[34,8,26,13,"nodesToString"],[34,21,26,26],[34,24,26,29,"nodesToString"],[34,25,26,30,"children"],[34,33,26,38],[34,35,26,40,"i18nOptions"],[34,46,26,51],[34,48,26,53,"i18n"],[34,52,26,57],[34,54,26,59,"i18nKey"],[34,61,26,66],[34,66,26,71],[35,4,27,2],[35,8,27,6],[35,9,27,7,"children"],[35,17,27,15],[35,19,27,17],[35,26,27,24],[35,28,27,26],[36,4,28,2],[36,8,28,6,"stringNode"],[36,18,28,16],[36,21,28,19],[36,23,28,21],[37,4,29,2],[37,10,29,8,"childrenArray"],[37,23,29,21],[37,26,29,24,"getAsArray"],[37,36,29,34],[37,37,29,35,"children"],[37,45,29,43],[37,46,29,44],[38,4,30,2],[38,10,30,8,"keepArray"],[38,19,30,17],[38,22,30,20,"i18nOptions"],[38,33,30,31],[38,35,30,33,"transSupportBasicHtmlNodes"],[38,61,30,59],[38,64,30,62,"i18nOptions"],[38,75,30,73],[38,76,30,74,"transKeepBasicHtmlNodesFor"],[38,102,30,100],[38,106,30,104],[38,108,30,106],[38,111,30,109],[38,113,30,111],[39,4,31,2,"childrenArray"],[39,17,31,15],[39,18,31,16,"forEach"],[39,25,31,23],[39,26,31,24],[39,27,31,25,"child"],[39,32,31,30],[39,34,31,32,"childIndex"],[39,44,31,42],[39,49,31,47],[40,6,32,4],[40,10,32,8],[40,14,32,8,"isString"],[40,29,32,16],[40,31,32,17,"child"],[40,36,32,22],[40,37,32,23],[40,39,32,25],[41,8,33,6,"stringNode"],[41,18,33,16],[41,22,33,20],[41,25,33,23,"child"],[41,30,33,28],[41,32,33,30],[42,8,34,6],[43,6,35,4],[44,6,36,4],[44,23,36,8],[44,27,36,8,"isValidElement"],[44,48,36,22],[44,50,36,23,"child"],[44,55,36,28],[44,56,36,29],[44,58,36,31],[45,8,37,6],[45,14,37,12],[46,10,38,8,"props"],[46,15,38,13],[47,10,39,8,"type"],[48,8,40,6],[48,9,40,7],[48,12,40,10,"child"],[48,17,40,15],[49,8,41,6],[49,14,41,12,"childPropsCount"],[49,29,41,27],[49,32,41,30,"Object"],[49,38,41,36],[49,39,41,37,"keys"],[49,43,41,41],[49,44,41,42,"props"],[49,49,41,47],[49,50,41,48],[49,51,41,49,"length"],[49,57,41,55],[50,8,42,6],[50,14,42,12,"shouldKeepChild"],[50,29,42,27],[50,32,42,30,"keepArray"],[50,41,42,39],[50,42,42,40,"indexOf"],[50,49,42,47],[50,50,42,48,"type"],[50,54,42,52],[50,55,42,53],[50,58,42,56],[50,59,42,57],[50,60,42,58],[51,8,43,6],[51,14,43,12,"childChildren"],[51,27,43,25],[51,30,43,28,"props"],[51,35,43,33],[51,36,43,34,"children"],[51,44,43,42],[52,8,44,6],[52,12,44,10],[52,13,44,11,"childChildren"],[52,26,44,24],[52,30,44,28,"shouldKeepChild"],[52,45,44,43],[52,49,44,47],[52,50,44,48,"childPropsCount"],[52,65,44,63],[52,67,44,65],[53,10,45,8,"stringNode"],[53,20,45,18],[53,24,45,22],[53,28,45,26,"type"],[53,32,45,30],[53,36,45,34],[54,10,46,8],[55,8,47,6],[56,8,48,6],[56,12,48,10],[56,13,48,11,"childChildren"],[56,26,48,24],[56,31,48,29],[56,32,48,30,"shouldKeepChild"],[56,47,48,45],[56,51,48,49,"childPropsCount"],[56,66,48,64],[56,67,48,65],[56,71,48,69,"props"],[56,76,48,74],[56,77,48,75,"i18nIsDynamicList"],[56,94,48,92],[56,96,48,94],[57,10,49,8,"stringNode"],[57,20,49,18],[57,24,49,22],[57,28,49,26,"childIndex"],[57,38,49,36],[57,44,49,42,"childIndex"],[57,54,49,52],[57,57,49,55],[58,10,50,8],[59,8,51,6],[60,8,52,6],[60,12,52,10,"shouldKeepChild"],[60,27,52,25],[60,31,52,29,"childPropsCount"],[60,46,52,44],[60,51,52,49],[60,52,52,50],[60,56,52,54],[60,60,52,54,"isString"],[60,75,52,62],[60,77,52,63,"childChildren"],[60,90,52,76],[60,91,52,77],[60,93,52,79],[61,10,53,8,"stringNode"],[61,20,53,18],[61,24,53,22],[61,28,53,26,"type"],[61,32,53,30],[61,36,53,34,"childChildren"],[61,49,53,47],[61,54,53,52,"type"],[61,58,53,56],[61,61,53,59],[62,10,54,8],[63,8,55,6],[64,8,56,6],[64,14,56,12,"content"],[64,21,56,19],[64,24,56,22,"nodesToString"],[64,37,56,35],[64,38,56,36,"childChildren"],[64,51,56,49],[64,53,56,51,"i18nOptions"],[64,64,56,62],[64,66,56,64,"i18n"],[64,70,56,68],[64,72,56,70,"i18nKey"],[64,79,56,77],[64,80,56,78],[65,8,57,6,"stringNode"],[65,18,57,16],[65,22,57,20],[65,26,57,24,"childIndex"],[65,36,57,34],[65,40,57,38,"content"],[65,47,57,45],[65,52,57,50,"childIndex"],[65,62,57,60],[65,65,57,63],[66,8,58,6],[67,6,59,4],[68,6,60,4],[68,10,60,8,"child"],[68,15,60,13],[68,20,60,18],[68,24,60,22],[68,26,60,24],[69,8,61,6],[69,12,61,6,"warn"],[69,23,61,10],[69,25,61,11,"i18n"],[69,29,61,15],[69,31,61,17],[69,49,61,35],[69,51,61,37],[69,84,61,70],[69,86,61,72],[70,10,62,8,"i18nKey"],[71,8,63,6],[71,9,63,7],[71,10,63,8],[72,8,64,6],[73,6,65,4],[74,6,66,4],[74,10,66,8],[74,14,66,8,"isObject"],[74,29,66,16],[74,31,66,17,"child"],[74,36,66,22],[74,37,66,23],[74,39,66,25],[75,8,67,6],[75,14,67,12],[76,12,68,8,"format"],[77,10,70,6],[77,11,70,7],[77,14,70,10,"child"],[77,19,70,15],[78,10,69,11,"clone"],[78,15,69,16],[78,22,69,16,"_objectWithoutPropertiesLoose2"],[78,52,69,16],[78,53,69,16,"default"],[78,60,69,16],[78,62,70,10,"child"],[78,67,70,15],[78,69,70,15,"_excluded"],[78,78,70,15],[79,8,71,6],[79,14,71,12,"keys"],[79,18,71,16],[79,21,71,19,"Object"],[79,27,71,25],[79,28,71,26,"keys"],[79,32,71,30],[79,33,71,31,"clone"],[79,38,71,36],[79,39,71,37],[80,8,72,6],[80,12,72,10,"keys"],[80,16,72,14],[80,17,72,15,"length"],[80,23,72,21],[80,28,72,26],[80,29,72,27],[80,31,72,29],[81,10,73,8],[81,16,73,14,"value"],[81,21,73,19],[81,24,73,22,"format"],[81,30,73,28],[81,33,73,31],[81,36,73,34,"keys"],[81,40,73,38],[81,41,73,39],[81,42,73,40],[81,43,73,41],[81,48,73,46,"format"],[81,54,73,52],[81,56,73,54],[81,59,73,57,"keys"],[81,63,73,61],[81,64,73,62],[81,65,73,63],[81,66,73,64],[82,10,74,8,"stringNode"],[82,20,74,18],[82,24,74,22],[82,29,74,27,"value"],[82,34,74,32],[82,38,74,36],[83,10,75,8],[84,8,76,6],[85,8,77,6],[85,12,77,6,"warn"],[85,23,77,10],[85,25,77,11,"i18n"],[85,29,77,15],[85,31,77,17],[85,50,77,36],[85,52,77,38],[85,140,77,126],[85,142,77,128],[86,10,78,8,"i18nKey"],[86,17,78,15],[87,10,79,8,"child"],[88,8,80,6],[88,9,80,7],[88,10,80,8],[89,8,81,6],[90,6,82,4],[91,6,83,4],[91,10,83,4,"warn"],[91,21,83,8],[91,23,83,9,"i18n"],[91,27,83,13],[91,29,83,15],[91,48,83,34],[91,50,83,36],[91,154,83,140],[91,156,83,142],[92,8,84,6,"i18nKey"],[92,15,84,13],[93,8,85,6,"child"],[94,6,86,4],[94,7,86,5],[94,8,86,6],[95,4,87,2],[95,5,87,3],[95,6,87,4],[96,4,88,2],[96,11,88,9,"stringNode"],[96,21,88,19],[97,2,89,0],[97,3,89,1],[98,2,89,2,"exports"],[98,9,89,2],[98,10,89,2,"nodesToString"],[98,23,89,2],[98,26,89,2,"nodesToString"],[98,39,89,2],[99,2,90,0],[99,8,90,6,"renderNodes"],[99,19,90,17],[99,22,90,20,"renderNodes"],[99,23,90,21,"children"],[99,31,90,29],[99,33,90,31,"knownComponentsMap"],[99,51,90,49],[99,53,90,51,"targetString"],[99,65,90,63],[99,67,90,65,"i18n"],[99,71,90,69],[99,73,90,71,"i18nOptions"],[99,84,90,82],[99,86,90,84,"combinedTOpts"],[99,99,90,97],[99,101,90,99,"shouldUnescape"],[99,115,90,113],[99,120,90,118],[100,4,91,2],[100,8,91,6,"targetString"],[100,20,91,18],[100,25,91,23],[100,27,91,25],[100,29,91,27],[100,36,91,34],[100,38,91,36],[101,4,92,2],[101,10,92,8,"keepArray"],[101,19,92,17],[101,22,92,20,"i18nOptions"],[101,33,92,31],[101,34,92,32,"transKeepBasicHtmlNodesFor"],[101,60,92,58],[101,64,92,62],[101,66,92,64],[102,4,93,2],[102,10,93,8,"emptyChildrenButNeedsHandling"],[102,39,93,37],[102,42,93,40,"targetString"],[102,54,93,52],[102,58,93,56],[102,62,93,60,"RegExp"],[102,68,93,66],[102,69,93,67,"keepArray"],[102,78,93,76],[102,79,93,77,"map"],[102,82,93,80],[102,83,93,81,"keep"],[102,87,93,85],[102,91,93,89],[102,95,93,93,"keep"],[102,99,93,97],[102,101,93,99],[102,102,93,100],[102,103,93,101,"join"],[102,107,93,105],[102,108,93,106],[102,111,93,109],[102,112,93,110],[102,113,93,111],[102,114,93,112,"test"],[102,118,93,116],[102,119,93,117,"targetString"],[102,131,93,129],[102,132,93,130],[103,4,94,2],[103,8,94,6],[103,9,94,7,"children"],[103,17,94,15],[103,21,94,19],[103,22,94,20,"knownComponentsMap"],[103,40,94,38],[103,44,94,42],[103,45,94,43,"emptyChildrenButNeedsHandling"],[103,74,94,72],[103,78,94,76],[103,79,94,77,"shouldUnescape"],[103,93,94,91],[103,95,94,93],[103,102,94,100],[103,103,94,101,"targetString"],[103,115,94,113],[103,116,94,114],[104,4,95,2],[104,10,95,8,"data"],[104,14,95,12],[104,17,95,15,"knownComponentsMap"],[104,35,95,33],[104,39,95,37],[104,40,95,38],[104,41,95,39],[105,4,96,2],[105,10,96,8,"getData"],[105,17,96,15],[105,20,96,18,"childs"],[105,26,96,24],[105,30,96,28],[106,6,97,4],[106,12,97,10,"childrenArray"],[106,25,97,23],[106,28,97,26,"getAsArray"],[106,38,97,36],[106,39,97,37,"childs"],[106,45,97,43],[106,46,97,44],[107,6,98,4,"childrenArray"],[107,19,98,17],[107,20,98,18,"forEach"],[107,27,98,25],[107,28,98,26,"child"],[107,33,98,31],[107,37,98,35],[108,8,99,6],[108,12,99,10],[108,16,99,10,"isString"],[108,31,99,18],[108,33,99,19,"child"],[108,38,99,24],[108,39,99,25],[108,41,99,27],[109,8,100,6],[109,12,100,10,"hasChildren"],[109,23,100,21],[109,24,100,22,"child"],[109,29,100,27],[109,30,100,28],[109,32,100,30,"getData"],[109,39,100,37],[109,40,100,38,"getChildren"],[109,51,100,49],[109,52,100,50,"child"],[109,57,100,55],[109,58,100,56],[109,59,100,57],[109,60,100,58],[109,65,100,63],[109,69,100,67],[109,73,100,67,"isObject"],[109,88,100,75],[109,90,100,76,"child"],[109,95,100,81],[109,96,100,82],[109,100,100,86],[109,115,100,87],[109,119,100,87,"isValidElement"],[109,140,100,101],[109,142,100,102,"child"],[109,147,100,107],[109,148,100,108],[109,150,100,110,"Object"],[109,156,100,116],[109,157,100,117,"assign"],[109,163,100,123],[109,164,100,124,"data"],[109,168,100,128],[109,170,100,130,"child"],[109,175,100,135],[109,176,100,136],[110,6,101,4],[110,7,101,5],[110,8,101,6],[111,4,102,2],[111,5,102,3],[112,4,103,2,"getData"],[112,11,103,9],[112,12,103,10,"children"],[112,20,103,18],[112,21,103,19],[113,4,104,2],[113,10,104,8,"ast"],[113,13,104,11],[113,16,104,14,"HTML"],[113,43,104,18],[113,44,104,19,"parse"],[113,49,104,24],[113,50,104,25],[113,56,104,31,"targetString"],[113,68,104,43],[113,74,104,49],[113,75,104,50],[114,4,105,2],[114,10,105,8,"opts"],[114,14,105,12],[114,17,105,12,"Object"],[114,23,105,12],[114,24,105,12,"assign"],[114,30,105,12],[114,35,106,7,"data"],[114,39,106,11],[114,41,107,7,"combinedTOpts"],[114,54,107,20],[114,55,108,3],[115,4,109,2],[115,10,109,8,"renderInner"],[115,21,109,19],[115,24,109,22,"renderInner"],[115,25,109,23,"child"],[115,30,109,28],[115,32,109,30,"node"],[115,36,109,34],[115,38,109,36,"rootReactNode"],[115,51,109,49],[115,56,109,54],[116,6,110,4],[116,12,110,10,"childs"],[116,18,110,16],[116,21,110,19,"getChildren"],[116,32,110,30],[116,33,110,31,"child"],[116,38,110,36],[116,39,110,37],[117,6,111,4],[117,12,111,10,"mappedChildren"],[117,26,111,24],[117,29,111,27,"mapAST"],[117,35,111,33],[117,36,111,34,"childs"],[117,42,111,40],[117,44,111,42,"node"],[117,48,111,46],[117,49,111,47,"children"],[117,57,111,55],[117,59,111,57,"rootReactNode"],[117,72,111,70],[117,73,111,71],[118,6,112,4],[118,13,112,11,"hasValidReactChildren"],[118,34,112,32],[118,35,112,33,"childs"],[118,41,112,39],[118,42,112,40],[118,46,112,44,"mappedChildren"],[118,60,112,58],[118,61,112,59,"length"],[118,67,112,65],[118,72,112,70],[118,73,112,71],[118,77,112,75,"child"],[118,82,112,80],[118,83,112,81,"props"],[118,88,112,86],[118,90,112,88,"i18nIsDynamicList"],[118,107,112,105],[118,110,112,108,"childs"],[118,116,112,114],[118,119,112,117,"mappedChildren"],[118,133,112,131],[119,4,113,2],[119,5,113,3],[120,4,114,2],[120,10,114,8,"pushTranslatedJSX"],[120,27,114,25],[120,30,114,28,"pushTranslatedJSX"],[120,31,114,29,"child"],[120,36,114,34],[120,38,114,36,"inner"],[120,43,114,41],[120,45,114,43,"mem"],[120,48,114,46],[120,50,114,48,"i"],[120,51,114,49],[120,53,114,51,"isVoid"],[120,59,114,57],[120,64,114,62],[121,6,115,4],[121,10,115,8,"child"],[121,15,115,13],[121,16,115,14,"dummy"],[121,21,115,19],[121,23,115,21],[122,8,116,6,"child"],[122,13,116,11],[122,14,116,12,"children"],[122,22,116,20],[122,25,116,23,"inner"],[122,30,116,28],[123,8,117,6,"mem"],[123,11,117,9],[123,12,117,10,"push"],[123,16,117,14],[123,30,117,15],[123,34,117,15,"cloneElement"],[123,53,117,27],[123,55,117,28,"child"],[123,60,117,33],[123,62,117,35],[124,10,118,8,"key"],[124,13,118,11],[124,15,118,13,"i"],[125,8,119,6],[125,9,119,7],[125,11,119,9,"isVoid"],[125,17,119,15],[125,20,119,18,"undefined"],[125,29,119,27],[125,32,119,30,"inner"],[125,37,119,35],[125,38,119,36],[125,39,119,37],[126,6,120,4],[126,7,120,5],[126,13,120,11],[127,8,121,6,"mem"],[127,11,121,9],[127,12,121,10,"push"],[127,16,121,14],[127,17,121,15],[127,20,121,18,"Children"],[127,35,121,26],[127,36,121,27,"map"],[127,39,121,30],[127,40,121,31],[127,41,121,32,"child"],[127,46,121,37],[127,47,121,38],[127,49,121,40,"c"],[127,50,121,41],[127,54,121,45],[128,10,122,8],[128,16,122,14,"props"],[128,21,122,19],[128,24,122,19,"Object"],[128,30,122,19],[128,31,122,19,"assign"],[128,37,122,19],[128,42,123,13,"c"],[128,43,123,14],[128,44,123,15,"props"],[128,49,123,20],[128,50,124,9],[129,10,125,8],[129,17,125,15,"props"],[129,22,125,20],[129,23,125,21,"i18nIsDynamicList"],[129,40,125,38],[130,10,126,8],[130,30,126,15],[130,34,126,15,"createElement"],[130,54,126,28],[130,56,126,29,"c"],[130,57,126,30],[130,58,126,31,"type"],[130,62,126,35],[130,64,126,35,"Object"],[130,70,126,35],[130,71,126,35,"assign"],[130,77,126,35],[130,82,127,13,"props"],[130,87,127,18],[131,12,128,10,"key"],[131,15,128,13],[131,17,128,15,"i"],[131,18,128,16],[132,12,129,10,"ref"],[132,15,129,13],[132,17,129,15,"c"],[132,18,129,16],[132,19,129,17,"props"],[132,24,129,22],[132,25,129,23,"ref"],[132,28,129,26],[132,32,129,30,"c"],[132,33,129,31],[132,34,129,32,"ref"],[133,10,129,35],[133,14,130,11,"isVoid"],[133,20,130,17],[133,23,130,20],[133,27,130,24],[133,30,130,27,"inner"],[133,35,130,32],[133,36,130,33],[134,8,131,6],[134,9,131,7],[134,10,131,8],[134,11,131,9],[135,6,132,4],[136,4,133,2],[136,5,133,3],[137,4,134,2],[137,10,134,8,"mapAST"],[137,16,134,14],[137,19,134,17,"mapAST"],[137,20,134,18,"reactNode"],[137,29,134,27],[137,31,134,29,"astNode"],[137,38,134,36],[137,40,134,38,"rootReactNode"],[137,53,134,51],[137,58,134,56],[138,6,135,4],[138,12,135,10,"reactNodes"],[138,22,135,20],[138,25,135,23,"getAsArray"],[138,35,135,33],[138,36,135,34,"reactNode"],[138,45,135,43],[138,46,135,44],[139,6,136,4],[139,12,136,10,"astNodes"],[139,20,136,18],[139,23,136,21,"getAsArray"],[139,33,136,31],[139,34,136,32,"astNode"],[139,41,136,39],[139,42,136,40],[140,6,137,4],[140,13,137,11,"astNodes"],[140,21,137,19],[140,22,137,20,"reduce"],[140,28,137,26],[140,29,137,27],[140,30,137,28,"mem"],[140,33,137,31],[140,35,137,33,"node"],[140,39,137,37],[140,41,137,39,"i"],[140,42,137,40],[140,47,137,45],[141,8,138,6],[141,14,138,12,"translationContent"],[141,32,138,30],[141,35,138,33,"node"],[141,39,138,37],[141,40,138,38,"children"],[141,48,138,46],[141,51,138,49],[141,52,138,50],[141,53,138,51],[141,55,138,53,"content"],[141,62,138,60],[141,66,138,64,"i18n"],[141,70,138,68],[141,71,138,69,"services"],[141,79,138,77],[141,80,138,78,"interpolator"],[141,92,138,90],[141,93,138,91,"interpolate"],[141,104,138,102],[141,105,138,103,"node"],[141,109,138,107],[141,110,138,108,"children"],[141,118,138,116],[141,119,138,117],[141,120,138,118],[141,121,138,119],[141,122,138,120,"content"],[141,129,138,127],[141,131,138,129,"opts"],[141,135,138,133],[141,137,138,135,"i18n"],[141,141,138,139],[141,142,138,140,"language"],[141,150,138,148],[141,151,138,149],[142,8,139,6],[142,12,139,10,"node"],[142,16,139,14],[142,17,139,15,"type"],[142,21,139,19],[142,26,139,24],[142,31,139,29],[142,33,139,31],[143,10,140,8],[143,14,140,12,"tmp"],[143,17,140,15],[143,20,140,18,"reactNodes"],[143,30,140,28],[143,31,140,29,"parseInt"],[143,39,140,37],[143,40,140,38,"node"],[143,44,140,42],[143,45,140,43,"name"],[143,49,140,47],[143,51,140,49],[143,53,140,51],[143,54,140,52],[143,55,140,53],[144,10,141,8],[144,14,141,12],[144,15,141,13,"tmp"],[144,18,141,16],[144,22,141,20,"knownComponentsMap"],[144,40,141,38],[144,42,141,40,"tmp"],[144,45,141,43],[144,48,141,46,"knownComponentsMap"],[144,66,141,64],[144,67,141,65,"node"],[144,71,141,69],[144,72,141,70,"name"],[144,76,141,74],[144,77,141,75],[145,10,142,8],[145,14,142,12,"rootReactNode"],[145,27,142,25],[145,28,142,26,"length"],[145,34,142,32],[145,39,142,37],[145,40,142,38],[145,44,142,42],[145,45,142,43,"tmp"],[145,48,142,46],[145,50,142,48,"tmp"],[145,53,142,51],[145,56,142,54,"rootReactNode"],[145,69,142,67],[145,70,142,68],[145,71,142,69],[145,72,142,70],[145,73,142,71,"node"],[145,77,142,75],[145,78,142,76,"name"],[145,82,142,80],[145,83,142,81],[146,10,143,8],[146,14,143,12],[146,15,143,13,"tmp"],[146,18,143,16],[146,20,143,18,"tmp"],[146,23,143,21],[146,26,143,24],[146,27,143,25],[146,28,143,26],[147,10,144,8],[147,16,144,14,"child"],[147,21,144,19],[147,24,144,22,"Object"],[147,30,144,28],[147,31,144,29,"keys"],[147,35,144,33],[147,36,144,34,"node"],[147,40,144,38],[147,41,144,39,"attrs"],[147,46,144,44],[147,47,144,45],[147,48,144,46,"length"],[147,54,144,52],[147,59,144,57],[147,60,144,58],[147,63,144,61,"mergeProps"],[147,73,144,71],[147,74,144,72],[148,12,145,10,"props"],[148,17,145,15],[148,19,145,17,"node"],[148,23,145,21],[148,24,145,22,"attrs"],[149,10,146,8],[149,11,146,9],[149,13,146,11,"tmp"],[149,16,146,14],[149,17,146,15],[149,20,146,18,"tmp"],[149,23,146,21],[150,10,147,8],[150,16,147,14,"isElement"],[150,25,147,23],[150,41,147,26],[150,45,147,26,"isValidElement"],[150,66,147,40],[150,68,147,41,"child"],[150,73,147,46],[150,74,147,47],[151,10,148,8],[151,16,148,14,"isValidTranslationWithChildren"],[151,46,148,44],[151,49,148,47,"isElement"],[151,58,148,56],[151,62,148,60,"hasChildren"],[151,73,148,71],[151,74,148,72,"node"],[151,78,148,76],[151,80,148,78],[151,84,148,82],[151,85,148,83],[151,89,148,87],[151,90,148,88,"node"],[151,94,148,92],[151,95,148,93,"voidElement"],[151,106,148,104],[152,10,149,8],[152,16,149,14,"isEmptyTransWithHTML"],[152,36,149,34],[152,39,149,37,"emptyChildrenButNeedsHandling"],[152,68,149,66],[152,72,149,70],[152,76,149,70,"isObject"],[152,91,149,78],[152,93,149,79,"child"],[152,98,149,84],[152,99,149,85],[152,103,149,89,"child"],[152,108,149,94],[152,109,149,95,"dummy"],[152,114,149,100],[152,118,149,104],[152,119,149,105,"isElement"],[152,128,149,114],[153,10,150,8],[153,16,150,14,"isKnownComponent"],[153,32,150,30],[153,35,150,33],[153,39,150,33,"isObject"],[153,54,150,41],[153,56,150,42,"knownComponentsMap"],[153,74,150,60],[153,75,150,61],[153,79,150,65,"Object"],[153,85,150,71],[153,86,150,72,"hasOwnProperty"],[153,100,150,86],[153,101,150,87,"call"],[153,105,150,91],[153,106,150,92,"knownComponentsMap"],[153,124,150,110],[153,126,150,112,"node"],[153,130,150,116],[153,131,150,117,"name"],[153,135,150,121],[153,136,150,122],[154,10,151,8],[154,14,151,12],[154,18,151,12,"isString"],[154,33,151,20],[154,35,151,21,"child"],[154,40,151,26],[154,41,151,27],[154,43,151,29],[155,12,152,10],[155,18,152,16,"value"],[155,23,152,21],[155,26,152,24,"i18n"],[155,30,152,28],[155,31,152,29,"services"],[155,39,152,37],[155,40,152,38,"interpolator"],[155,52,152,50],[155,53,152,51,"interpolate"],[155,64,152,62],[155,65,152,63,"child"],[155,70,152,68],[155,72,152,70,"opts"],[155,76,152,74],[155,78,152,76,"i18n"],[155,82,152,80],[155,83,152,81,"language"],[155,91,152,89],[155,92,152,90],[156,12,153,10,"mem"],[156,15,153,13],[156,16,153,14,"push"],[156,20,153,18],[156,21,153,19,"value"],[156,26,153,24],[156,27,153,25],[157,10,154,8],[157,11,154,9],[157,17,154,15],[157,21,154,19,"hasChildren"],[157,32,154,30],[157,33,154,31,"child"],[157,38,154,36],[157,39,154,37],[157,43,154,41,"isValidTranslationWithChildren"],[157,73,154,71],[157,75,154,73],[158,12,155,10],[158,18,155,16,"inner"],[158,23,155,21],[158,26,155,24,"renderInner"],[158,37,155,35],[158,38,155,36,"child"],[158,43,155,41],[158,45,155,43,"node"],[158,49,155,47],[158,51,155,49,"rootReactNode"],[158,64,155,62],[158,65,155,63],[159,12,156,10,"pushTranslatedJSX"],[159,29,156,27],[159,30,156,28,"child"],[159,35,156,33],[159,37,156,35,"inner"],[159,42,156,40],[159,44,156,42,"mem"],[159,47,156,45],[159,49,156,47,"i"],[159,50,156,48],[159,51,156,49],[160,10,157,8],[160,11,157,9],[160,17,157,15],[160,21,157,19,"isEmptyTransWithHTML"],[160,41,157,39],[160,43,157,41],[161,12,158,10],[161,18,158,16,"inner"],[161,23,158,21],[161,26,158,24,"mapAST"],[161,32,158,30],[161,33,158,31,"reactNodes"],[161,43,158,41],[161,45,158,43,"node"],[161,49,158,47],[161,50,158,48,"children"],[161,58,158,56],[161,60,158,58,"rootReactNode"],[161,73,158,71],[161,74,158,72],[162,12,159,10,"pushTranslatedJSX"],[162,29,159,27],[162,30,159,28,"child"],[162,35,159,33],[162,37,159,35,"inner"],[162,42,159,40],[162,44,159,42,"mem"],[162,47,159,45],[162,49,159,47,"i"],[162,50,159,48],[162,51,159,49],[163,10,160,8],[163,11,160,9],[163,17,160,15],[163,21,160,19,"Number"],[163,27,160,25],[163,28,160,26,"isNaN"],[163,33,160,31],[163,34,160,32,"parseFloat"],[163,44,160,42],[163,45,160,43,"node"],[163,49,160,47],[163,50,160,48,"name"],[163,54,160,52],[163,55,160,53],[163,56,160,54],[163,58,160,56],[164,12,161,10],[164,16,161,14,"isKnownComponent"],[164,32,161,30],[164,34,161,32],[165,14,162,12],[165,20,162,18,"inner"],[165,25,162,23],[165,28,162,26,"renderInner"],[165,39,162,37],[165,40,162,38,"child"],[165,45,162,43],[165,47,162,45,"node"],[165,51,162,49],[165,53,162,51,"rootReactNode"],[165,66,162,64],[165,67,162,65],[166,14,163,12,"pushTranslatedJSX"],[166,31,163,29],[166,32,163,30,"child"],[166,37,163,35],[166,39,163,37,"inner"],[166,44,163,42],[166,46,163,44,"mem"],[166,49,163,47],[166,51,163,49,"i"],[166,52,163,50],[166,54,163,52,"node"],[166,58,163,56],[166,59,163,57,"voidElement"],[166,70,163,68],[166,71,163,69],[167,12,164,10],[167,13,164,11],[167,19,164,17],[167,23,164,21,"i18nOptions"],[167,34,164,32],[167,35,164,33,"transSupportBasicHtmlNodes"],[167,61,164,59],[167,65,164,63,"keepArray"],[167,74,164,72],[167,75,164,73,"indexOf"],[167,82,164,80],[167,83,164,81,"node"],[167,87,164,85],[167,88,164,86,"name"],[167,92,164,90],[167,93,164,91],[167,96,164,94],[167,97,164,95],[167,98,164,96],[167,100,164,98],[168,14,165,12],[168,18,165,16,"node"],[168,22,165,20],[168,23,165,21,"voidElement"],[168,34,165,32],[168,36,165,34],[169,16,166,14,"mem"],[169,19,166,17],[169,20,166,18,"push"],[169,24,166,22],[169,38,166,23],[169,42,166,23,"createElement"],[169,62,166,36],[169,64,166,37,"node"],[169,68,166,41],[169,69,166,42,"name"],[169,73,166,46],[169,75,166,48],[170,18,167,16,"key"],[170,21,167,19],[170,23,167,21],[170,26,167,24,"node"],[170,30,167,28],[170,31,167,29,"name"],[170,35,167,33],[170,39,167,37,"i"],[170,40,167,38],[171,16,168,14],[171,17,168,15],[171,18,168,16],[171,19,168,17],[172,14,169,12],[172,15,169,13],[172,21,169,19],[173,16,170,14],[173,22,170,20,"inner"],[173,27,170,25],[173,30,170,28,"mapAST"],[173,36,170,34],[173,37,170,35,"reactNodes"],[173,47,170,45],[173,49,170,47,"node"],[173,53,170,51],[173,54,170,52,"children"],[173,62,170,60],[173,64,170,62,"rootReactNode"],[173,77,170,75],[173,78,170,76],[174,16,171,14,"mem"],[174,19,171,17],[174,20,171,18,"push"],[174,24,171,22],[174,38,171,23],[174,42,171,23,"createElement"],[174,62,171,36],[174,64,171,37,"node"],[174,68,171,41],[174,69,171,42,"name"],[174,73,171,46],[174,75,171,48],[175,18,172,16,"key"],[175,21,172,19],[175,23,172,21],[175,26,172,24,"node"],[175,30,172,28],[175,31,172,29,"name"],[175,35,172,33],[175,39,172,37,"i"],[175,40,172,38],[176,16,173,14],[176,17,173,15],[176,19,173,17,"inner"],[176,24,173,22],[176,25,173,23],[176,26,173,24],[177,14,174,12],[178,12,175,10],[178,13,175,11],[178,19,175,17],[178,23,175,21,"node"],[178,27,175,25],[178,28,175,26,"voidElement"],[178,39,175,37],[178,41,175,39],[179,14,176,12,"mem"],[179,17,176,15],[179,18,176,16,"push"],[179,22,176,20],[179,23,176,21],[179,27,176,25,"node"],[179,31,176,29],[179,32,176,30,"name"],[179,36,176,34],[179,41,176,39],[179,42,176,40],[180,12,177,10],[180,13,177,11],[180,19,177,17],[181,14,178,12],[181,20,178,18,"inner"],[181,25,178,23],[181,28,178,26,"mapAST"],[181,34,178,32],[181,35,178,33,"reactNodes"],[181,45,178,43],[181,47,178,45,"node"],[181,51,178,49],[181,52,178,50,"children"],[181,60,178,58],[181,62,178,60,"rootReactNode"],[181,75,178,73],[181,76,178,74],[182,14,179,12,"mem"],[182,17,179,15],[182,18,179,16,"push"],[182,22,179,20],[182,23,179,21],[182,27,179,25,"node"],[182,31,179,29],[182,32,179,30,"name"],[182,36,179,34],[182,40,179,38,"inner"],[182,45,179,43],[182,50,179,48,"node"],[182,54,179,52],[182,55,179,53,"name"],[182,59,179,57],[182,62,179,60],[182,63,179,61],[183,12,180,10],[184,10,181,8],[184,11,181,9],[184,17,181,15],[184,21,181,19],[184,25,181,19,"isObject"],[184,40,181,27],[184,42,181,28,"child"],[184,47,181,33],[184,48,181,34],[184,52,181,38],[184,53,181,39,"isElement"],[184,62,181,48],[184,64,181,50],[185,12,182,10],[185,18,182,16,"content"],[185,25,182,23],[185,28,182,26,"node"],[185,32,182,30],[185,33,182,31,"children"],[185,41,182,39],[185,42,182,40],[185,43,182,41],[185,44,182,42],[185,47,182,45,"translationContent"],[185,65,182,63],[185,68,182,66],[185,72,182,70],[186,12,183,10],[186,16,183,14,"content"],[186,23,183,21],[186,25,183,23,"mem"],[186,28,183,26],[186,29,183,27,"push"],[186,33,183,31],[186,34,183,32,"content"],[186,41,183,39],[186,42,183,40],[187,10,184,8],[187,11,184,9],[187,17,184,15],[188,12,185,10,"pushTranslatedJSX"],[188,29,185,27],[188,30,185,28,"child"],[188,35,185,33],[188,37,185,35,"translationContent"],[188,55,185,53],[188,57,185,55,"mem"],[188,60,185,58],[188,62,185,60,"i"],[188,63,185,61],[188,65,185,63,"node"],[188,69,185,67],[188,70,185,68,"children"],[188,78,185,76],[188,79,185,77,"length"],[188,85,185,83],[188,90,185,88],[188,91,185,89],[188,95,185,93],[188,96,185,94,"translationContent"],[188,114,185,112],[188,115,185,113],[189,10,186,8],[190,8,187,6],[190,9,187,7],[190,15,187,13],[190,19,187,17,"node"],[190,23,187,21],[190,24,187,22,"type"],[190,28,187,26],[190,33,187,31],[190,39,187,37],[190,41,187,39],[191,10,188,8],[191,16,188,14,"wrapTextNodes"],[191,29,188,27],[191,32,188,30,"i18nOptions"],[191,43,188,41],[191,44,188,42,"transWrapTextNodes"],[191,62,188,60],[192,10,189,8],[192,16,189,14,"content"],[192,23,189,21],[192,26,189,24,"shouldUnescape"],[192,40,189,38],[192,43,189,41,"i18nOptions"],[192,54,189,52],[192,55,189,53,"unescape"],[192,63,189,61],[192,64,189,62,"i18n"],[192,68,189,66],[192,69,189,67,"services"],[192,77,189,75],[192,78,189,76,"interpolator"],[192,90,189,88],[192,91,189,89,"interpolate"],[192,102,189,100],[192,103,189,101,"node"],[192,107,189,105],[192,108,189,106,"content"],[192,115,189,113],[192,117,189,115,"opts"],[192,121,189,119],[192,123,189,121,"i18n"],[192,127,189,125],[192,128,189,126,"language"],[192,136,189,134],[192,137,189,135],[192,138,189,136],[192,141,189,139,"i18n"],[192,145,189,143],[192,146,189,144,"services"],[192,154,189,152],[192,155,189,153,"interpolator"],[192,167,189,165],[192,168,189,166,"interpolate"],[192,179,189,177],[192,180,189,178,"node"],[192,184,189,182],[192,185,189,183,"content"],[192,192,189,190],[192,194,189,192,"opts"],[192,198,189,196],[192,200,189,198,"i18n"],[192,204,189,202],[192,205,189,203,"language"],[192,213,189,211],[192,214,189,212],[193,10,190,8],[193,14,190,12,"wrapTextNodes"],[193,27,190,25],[193,29,190,27],[194,12,191,10,"mem"],[194,15,191,13],[194,16,191,14,"push"],[194,20,191,18],[194,34,191,19],[194,38,191,19,"createElement"],[194,58,191,32],[194,60,191,33,"wrapTextNodes"],[194,73,191,46],[194,75,191,48],[195,14,192,12,"key"],[195,17,192,15],[195,19,192,17],[195,22,192,20,"node"],[195,26,192,24],[195,27,192,25,"name"],[195,31,192,29],[195,35,192,33,"i"],[195,36,192,34],[196,12,193,10],[196,13,193,11],[196,15,193,13,"content"],[196,22,193,20],[196,23,193,21],[196,24,193,22],[197,10,194,8],[197,11,194,9],[197,17,194,15],[198,12,195,10,"mem"],[198,15,195,13],[198,16,195,14,"push"],[198,20,195,18],[198,21,195,19,"content"],[198,28,195,26],[198,29,195,27],[199,10,196,8],[200,8,197,6],[201,8,198,6],[201,15,198,13,"mem"],[201,18,198,16],[202,6,199,4],[202,7,199,5],[202,9,199,7],[202,11,199,9],[202,12,199,10],[203,4,200,2],[203,5,200,3],[204,4,201,2],[204,10,201,8,"result"],[204,16,201,14],[204,19,201,17,"mapAST"],[204,25,201,23],[204,26,201,24],[204,27,201,25],[205,6,202,4,"dummy"],[205,11,202,9],[205,13,202,11],[205,17,202,15],[206,6,203,4,"children"],[206,14,203,12],[206,16,203,14,"children"],[206,24,203,22],[206,28,203,26],[207,4,204,2],[207,5,204,3],[207,6,204,4],[207,8,204,6,"ast"],[207,11,204,9],[207,13,204,11,"getAsArray"],[207,23,204,21],[207,24,204,22,"children"],[207,32,204,30],[207,36,204,34],[207,38,204,36],[207,39,204,37],[207,40,204,38],[208,4,205,2],[208,11,205,9,"getChildren"],[208,22,205,20],[208,23,205,21,"result"],[208,29,205,27],[208,30,205,28],[208,31,205,29],[208,32,205,30],[208,33,205,31],[209,2,206,0],[209,3,206,1],[210,2,207,0],[210,8,207,6,"fixComponentProps"],[210,25,207,23],[210,28,207,26,"fixComponentProps"],[210,29,207,27,"component"],[210,38,207,36],[210,40,207,38,"index"],[210,45,207,43],[210,47,207,45,"translation"],[210,58,207,56],[210,63,207,61],[211,4,208,2],[211,10,208,8,"componentKey"],[211,22,208,20],[211,25,208,23,"component"],[211,34,208,32],[211,35,208,33,"key"],[211,38,208,36],[211,42,208,40,"index"],[211,47,208,45],[212,4,209,2],[212,10,209,8,"comp"],[212,14,209,12],[212,30,209,15],[212,34,209,15,"cloneElement"],[212,53,209,27],[212,55,209,28,"component"],[212,64,209,37],[212,66,209,39],[213,6,210,4,"key"],[213,9,210,7],[213,11,210,9,"componentKey"],[214,4,211,2],[214,5,211,3],[214,6,211,4],[215,4,212,2],[215,8,212,6],[215,9,212,7,"comp"],[215,13,212,11],[215,14,212,12,"props"],[215,19,212,17],[215,23,212,21],[215,24,212,22,"comp"],[215,28,212,26],[215,29,212,27,"props"],[215,34,212,32],[215,35,212,33,"children"],[215,43,212,41],[215,47,212,45,"translation"],[215,58,212,56],[215,59,212,57,"indexOf"],[215,66,212,64],[215,67,212,65],[215,70,212,68,"index"],[215,75,212,73],[215,79,212,77],[215,80,212,78],[215,83,212,81],[215,84,212,82],[215,88,212,86,"translation"],[215,99,212,97],[215,100,212,98,"indexOf"],[215,107,212,105],[215,108,212,106],[215,111,212,109,"index"],[215,116,212,114],[215,121,212,119],[215,122,212,120],[215,125,212,123],[215,126,212,124],[215,128,212,126],[216,6,213,4],[216,13,213,11,"comp"],[216,17,213,15],[217,4,214,2],[218,4,215,2],[218,13,215,11,"Componentized"],[218,26,215,24,"Componentized"],[218,27,215,24],[218,29,215,27],[219,6,216,4],[219,26,216,11],[219,30,216,11,"createElement"],[219,50,216,24],[219,52,216,25,"Fragment"],[219,67,216,33],[219,69,216,35],[219,73,216,39],[219,75,216,41,"comp"],[219,79,216,45],[219,80,216,46],[220,4,217,2],[221,4,218,2],[221,24,218,9],[221,28,218,9,"createElement"],[221,48,218,22],[221,50,218,23,"Componentized"],[221,63,218,36],[221,65,218,38],[222,6,219,4,"key"],[222,9,219,7],[222,11,219,9,"componentKey"],[223,4,220,2],[223,5,220,3],[223,6,220,4],[224,2,221,0],[224,3,221,1],[225,2,222,0],[225,8,222,6,"generateArrayComponents"],[225,31,222,29],[225,34,222,32,"generateArrayComponents"],[225,35,222,33,"components"],[225,45,222,43],[225,47,222,45,"translation"],[225,58,222,56],[225,63,222,61,"components"],[225,73,222,71],[225,74,222,72,"map"],[225,77,222,75],[225,78,222,76],[225,79,222,77,"c"],[225,80,222,78],[225,82,222,80,"index"],[225,87,222,85],[225,92,222,90,"fixComponentProps"],[225,109,222,107],[225,110,222,108,"c"],[225,111,222,109],[225,113,222,111,"index"],[225,118,222,116],[225,120,222,118,"translation"],[225,131,222,129],[225,132,222,130],[225,133,222,131],[226,2,223,0],[226,8,223,6,"generateObjectComponents"],[226,32,223,30],[226,35,223,33,"generateObjectComponents"],[226,36,223,34,"components"],[226,46,223,44],[226,48,223,46,"translation"],[226,59,223,57],[226,64,223,62],[227,4,224,2],[227,10,224,8,"componentMap"],[227,22,224,20],[227,25,224,23],[227,26,224,24],[227,27,224,25],[228,4,225,2,"Object"],[228,10,225,8],[228,11,225,9,"keys"],[228,15,225,13],[228,16,225,14,"components"],[228,26,225,24],[228,27,225,25],[228,28,225,26,"forEach"],[228,35,225,33],[228,36,225,34,"c"],[228,37,225,35],[228,41,225,39],[229,6,226,4,"Object"],[229,12,226,10],[229,13,226,11,"assign"],[229,19,226,17],[229,20,226,18,"componentMap"],[229,32,226,30],[229,34,226,32],[230,8,227,6],[230,9,227,7,"c"],[230,10,227,8],[230,13,227,11,"fixComponentProps"],[230,30,227,28],[230,31,227,29,"components"],[230,41,227,39],[230,42,227,40,"c"],[230,43,227,41],[230,44,227,42],[230,46,227,44,"c"],[230,47,227,45],[230,49,227,47,"translation"],[230,60,227,58],[231,6,228,4],[231,7,228,5],[231,8,228,6],[232,4,229,2],[232,5,229,3],[232,6,229,4],[233,4,230,2],[233,11,230,9,"componentMap"],[233,23,230,21],[234,2,231,0],[234,3,231,1],[235,2,232,0],[235,8,232,6,"generateComponents"],[235,26,232,24],[235,29,232,27,"generateComponents"],[235,30,232,28,"components"],[235,40,232,38],[235,42,232,40,"translation"],[235,53,232,51],[235,55,232,53,"i18n"],[235,59,232,57],[235,61,232,59,"i18nKey"],[235,68,232,66],[235,73,232,71],[236,4,233,2],[236,8,233,6],[236,9,233,7,"components"],[236,19,233,17],[236,21,233,19],[236,28,233,26],[236,32,233,30],[237,4,234,2],[237,8,234,6,"Array"],[237,13,234,11],[237,14,234,12,"isArray"],[237,21,234,19],[237,22,234,20,"components"],[237,32,234,30],[237,33,234,31],[237,35,234,33],[238,6,235,4],[238,13,235,11,"generateArrayComponents"],[238,36,235,34],[238,37,235,35,"components"],[238,47,235,45],[238,49,235,47,"translation"],[238,60,235,58],[238,61,235,59],[239,4,236,2],[240,4,237,2],[240,8,237,6],[240,12,237,6,"isObject"],[240,27,237,14],[240,29,237,15,"components"],[240,39,237,25],[240,40,237,26],[240,42,237,28],[241,6,238,4],[241,13,238,11,"generateObjectComponents"],[241,37,238,35],[241,38,238,36,"components"],[241,48,238,46],[241,50,238,48,"translation"],[241,61,238,59],[241,62,238,60],[242,4,239,2],[243,4,240,2],[243,8,240,2,"warnOnce"],[243,23,240,10],[243,25,240,11,"i18n"],[243,29,240,15],[243,31,240,17],[243,57,240,43],[243,59,240,45],[243,115,240,101],[243,117,240,103],[244,6,241,4,"i18nKey"],[245,4,242,2],[245,5,242,3],[245,6,242,4],[246,4,243,2],[246,11,243,9],[246,15,243,13],[247,2,244,0],[247,3,244,1],[248,2,245,0],[248,8,245,6,"isComponentsMap"],[248,23,245,21],[248,26,245,24,"object"],[248,32,245,30],[248,36,245,34],[249,4,246,2],[249,8,246,6],[249,9,246,7],[249,13,246,7,"isObject"],[249,28,246,15],[249,30,246,16,"object"],[249,36,246,22],[249,37,246,23],[249,39,246,25],[249,46,246,32],[249,51,246,37],[250,4,247,2],[250,8,247,6,"Array"],[250,13,247,11],[250,14,247,12,"isArray"],[250,21,247,19],[250,22,247,20,"object"],[250,28,247,26],[250,29,247,27],[250,31,247,29],[250,38,247,36],[250,43,247,41],[251,4,248,2],[251,11,248,9,"Object"],[251,17,248,15],[251,18,248,16,"keys"],[251,22,248,20],[251,23,248,21,"object"],[251,29,248,27],[251,30,248,28],[251,31,248,29,"reduce"],[251,37,248,35],[251,38,248,36],[251,39,248,37,"acc"],[251,42,248,40],[251,44,248,42,"key"],[251,47,248,45],[251,52,248,50,"acc"],[251,55,248,53],[251,59,248,57,"Number"],[251,65,248,63],[251,66,248,64,"isNaN"],[251,71,248,69],[251,72,248,70,"Number"],[251,78,248,76],[251,79,248,77,"parseFloat"],[251,89,248,87],[251,90,248,88,"key"],[251,93,248,91],[251,94,248,92],[251,95,248,93],[251,97,248,95],[251,101,248,99],[251,102,248,100],[252,2,249,0],[252,3,249,1],[253,2,250,7],[253,11,250,16,"Trans"],[253,16,250,21,"Trans"],[253,17,250,21,"_ref"],[253,21,250,21],[253,23,265,3],[254,4,265,3],[254,8,250,22],[255,8,251,2,"children"],[255,16,251,10],[256,8,252,2,"count"],[256,13,252,7],[257,8,253,2,"parent"],[257,14,253,8],[258,8,254,2,"i18nKey"],[258,15,254,9],[259,8,255,2,"context"],[259,15,255,9],[260,8,256,2,"tOptions"],[260,16,256,10],[260,19,256,13],[260,20,256,14],[260,21,256,15],[261,8,257,2,"values"],[261,14,257,8],[262,8,258,2,"defaults"],[262,16,258,10],[263,8,259,2,"components"],[263,18,259,12],[264,8,260,2,"ns"],[264,10,260,4],[265,8,261,2,"i18n"],[265,12,261,6],[265,14,261,8,"i18nFromProps"],[265,27,261,21],[266,8,262,2,"t"],[266,9,262,3],[266,11,262,5,"tFromProps"],[266,21,262,15],[267,8,263,2,"shouldUnescape"],[268,6,265,0],[268,7,265,1],[268,10,265,1,"_ref"],[268,14,265,1],[269,6,264,5,"additionalProps"],[269,21,264,20],[269,28,264,20,"_objectWithoutPropertiesLoose2"],[269,58,264,20],[269,59,264,20,"default"],[269,66,264,20],[269,68,264,20,"_ref"],[269,72,264,20],[269,74,264,20,"_excluded2"],[269,84,264,20],[270,4,266,2],[270,10,266,8,"i18n"],[270,14,266,12],[270,17,266,15,"i18nFromProps"],[270,30,266,28],[270,34,266,32],[270,38,266,32,"getI18n"],[270,59,266,39],[270,61,266,40],[270,62,266,41],[271,4,267,2],[271,8,267,6],[271,9,267,7,"i18n"],[271,13,267,11],[271,15,267,13],[272,6,268,4],[272,10,268,4,"warnOnce"],[272,25,268,12],[272,27,268,13,"i18n"],[272,31,268,17],[272,33,268,19],[272,54,268,40],[272,56,268,42],[272,129,268,115],[272,131,268,117],[273,8,269,6,"i18nKey"],[274,6,270,4],[274,7,270,5],[274,8,270,6],[275,6,271,4],[275,13,271,11,"children"],[275,21,271,19],[276,4,272,2],[277,4,273,2],[277,10,273,8,"t"],[277,11,273,9],[277,14,273,12,"tFromProps"],[277,24,273,22],[277,28,273,26,"i18n"],[277,32,273,30],[277,33,273,31,"t"],[277,34,273,32],[277,35,273,33,"bind"],[277,39,273,37],[277,40,273,38,"i18n"],[277,44,273,42],[277,45,273,43],[277,50,273,48,"k"],[277,51,273,49],[277,55,273,53,"k"],[277,56,273,54],[277,57,273,55],[278,4,274,2],[278,10,274,8,"reactI18nextOptions"],[278,29,274,27],[278,32,274,27,"Object"],[278,38,274,27],[278,39,274,27,"assign"],[278,45,274,27],[278,50,275,7],[278,54,275,7,"getDefaults"],[278,75,275,18],[278,77,275,19],[278,78,275,20],[278,80,276,7,"i18n"],[278,84,276,11],[278,85,276,12,"options"],[278,92,276,19],[278,94,276,21,"react"],[278,99,276,26],[278,100,277,3],[279,4,278,2],[279,8,278,6,"namespaces"],[279,18,278,16],[279,21,278,19,"ns"],[279,23,278,21],[279,27,278,25,"t"],[279,28,278,26],[279,29,278,27,"ns"],[279,31,278,29],[279,35,278,33,"i18n"],[279,39,278,37],[279,40,278,38,"options"],[279,47,278,45],[279,49,278,47,"defaultNS"],[279,58,278,56],[280,4,279,2,"namespaces"],[280,14,279,12],[280,17,279,15],[280,21,279,15,"isString"],[280,36,279,23],[280,38,279,24,"namespaces"],[280,48,279,34],[280,49,279,35],[280,52,279,38],[280,53,279,39,"namespaces"],[280,63,279,49],[280,64,279,50],[280,67,279,53,"namespaces"],[280,77,279,63],[280,81,279,67],[280,82,279,68],[280,95,279,81],[280,96,279,82],[281,4,280,2],[281,10,280,8,"nodeAsString"],[281,22,280,20],[281,25,280,23,"nodesToString"],[281,38,280,36],[281,39,280,37,"children"],[281,47,280,45],[281,49,280,47,"reactI18nextOptions"],[281,68,280,66],[281,70,280,68,"i18n"],[281,74,280,72],[281,76,280,74,"i18nKey"],[281,83,280,81],[281,84,280,82],[282,4,281,2],[282,10,281,8,"defaultValue"],[282,22,281,20],[282,25,281,23,"defaults"],[282,33,281,31],[282,37,281,35,"nodeAsString"],[282,49,281,47],[282,53,281,51,"reactI18nextOptions"],[282,72,281,70],[282,73,281,71,"transEmptyNodeValue"],[282,92,281,90],[282,96,281,94,"i18nKey"],[282,103,281,101],[283,4,282,2],[283,10,282,8],[284,6,283,4,"hashTransKey"],[285,4,284,2],[285,5,284,3],[285,8,284,6,"reactI18nextOptions"],[285,27,284,25],[286,4,285,2],[286,10,285,8,"key"],[286,13,285,11],[286,16,285,14,"i18nKey"],[286,23,285,21],[286,28,285,26,"hashTransKey"],[286,40,285,38],[286,43,285,41,"hashTransKey"],[286,55,285,53],[286,56,285,54,"nodeAsString"],[286,68,285,66],[286,72,285,70,"defaultValue"],[286,84,285,82],[286,85,285,83],[286,88,285,86,"nodeAsString"],[286,100,285,98],[286,104,285,102,"defaultValue"],[286,116,285,114],[286,117,285,115],[287,4,286,2],[287,8,286,6,"i18n"],[287,12,286,10],[287,13,286,11,"options"],[287,20,286,18],[287,22,286,20,"interpolation"],[287,35,286,33],[287,37,286,35,"defaultVariables"],[287,53,286,51],[287,55,286,53],[288,6,287,4,"values"],[288,12,287,10],[288,15,287,13,"values"],[288,21,287,19],[288,25,287,23,"Object"],[288,31,287,29],[288,32,287,30,"keys"],[288,36,287,34],[288,37,287,35,"values"],[288,43,287,41],[288,44,287,42],[288,45,287,43,"length"],[288,51,287,49],[288,54,287,52],[288,55,287,53],[288,58,287,53,"Object"],[288,64,287,53],[288,65,287,53,"assign"],[288,71,287,53],[288,76,288,9,"values"],[288,82,288,15],[288,84,289,9,"i18n"],[288,88,289,13],[288,89,289,14,"options"],[288,96,289,21],[288,97,289,22,"interpolation"],[288,110,289,35],[288,111,289,36,"defaultVariables"],[288,127,289,52],[288,131,289,52,"Object"],[288,137,289,52],[288,138,289,52,"assign"],[288,144,289,52],[288,149,291,9,"i18n"],[288,153,291,13],[288,154,291,14,"options"],[288,161,291,21],[288,162,291,22,"interpolation"],[288,175,291,35],[288,176,291,36,"defaultVariables"],[288,192,291,52],[288,193,292,5],[289,4,293,2],[290,4,294,2],[290,10,294,8,"interpolationOverride"],[290,31,294,29],[290,34,294,32,"values"],[290,40,294,38],[290,44,294,42,"count"],[290,49,294,47],[290,54,294,52,"undefined"],[290,63,294,61],[290,67,294,65],[290,68,294,66,"i18n"],[290,72,294,70],[290,73,294,71,"options"],[290,80,294,78],[290,82,294,80,"interpolation"],[290,95,294,93],[290,97,294,95,"alwaysFormat"],[290,109,294,107],[290,113,294,111],[290,114,294,112,"children"],[290,122,294,120],[290,125,294,123,"tOptions"],[290,133,294,131],[290,134,294,132,"interpolation"],[290,147,294,145],[290,150,294,148],[291,6,295,4,"interpolation"],[291,19,295,17],[291,21,295,17,"Object"],[291,27,295,17],[291,28,295,17,"assign"],[291,34,295,17],[291,39,296,9,"tOptions"],[291,47,296,17],[291,48,296,18,"interpolation"],[291,61,296,31],[292,8,297,6,"prefix"],[292,14,297,12],[292,16,297,14],[292,21,297,19],[293,8,298,6,"suffix"],[293,14,298,12],[293,16,298,14],[294,6,298,19],[295,4,300,2],[295,5,300,3],[296,4,301,2],[296,10,301,8,"combinedTOpts"],[296,23,301,21],[296,26,301,21,"Object"],[296,32,301,21],[296,33,301,21,"assign"],[296,39,301,21],[296,44,302,7,"tOptions"],[296,52,302,15],[297,6,303,4,"context"],[297,13,303,11],[297,15,303,13,"context"],[297,22,303,20],[297,26,303,24,"tOptions"],[297,34,303,32],[297,35,303,33,"context"],[297,42,303,40],[298,6,304,4,"count"],[299,4,304,9],[299,7,305,7,"values"],[299,13,305,13],[299,15,306,7,"interpolationOverride"],[299,36,306,28],[300,6,307,4,"defaultValue"],[300,18,307,16],[301,6,308,4,"ns"],[301,8,308,6],[301,10,308,8,"namespaces"],[302,4,308,18],[302,6,309,3],[303,4,310,2],[303,10,310,8,"translation"],[303,21,310,19],[303,24,310,22,"key"],[303,27,310,25],[303,30,310,28,"t"],[303,31,310,29],[303,32,310,30,"key"],[303,35,310,33],[303,37,310,35,"combinedTOpts"],[303,50,310,48],[303,51,310,49],[303,54,310,52,"defaultValue"],[303,66,310,64],[304,4,311,2],[304,10,311,8,"generatedComponents"],[304,29,311,27],[304,32,311,30,"generateComponents"],[304,50,311,48],[304,51,311,49,"components"],[304,61,311,59],[304,63,311,61,"translation"],[304,74,311,72],[304,76,311,74,"i18n"],[304,80,311,78],[304,82,311,80,"i18nKey"],[304,89,311,87],[304,90,311,88],[305,4,312,2],[305,8,312,6,"indexedChildren"],[305,23,312,21],[305,26,312,24,"generatedComponents"],[305,45,312,43],[305,49,312,47,"children"],[305,57,312,55],[306,4,313,2],[306,8,313,6,"componentsMap"],[306,21,313,19],[306,24,313,22],[306,28,313,26],[307,4,314,2],[307,8,314,6,"isComponentsMap"],[307,23,314,21],[307,24,314,22,"generatedComponents"],[307,43,314,41],[307,44,314,42],[307,46,314,44],[308,6,315,4,"componentsMap"],[308,19,315,17],[308,22,315,20,"generatedComponents"],[308,41,315,39],[309,6,316,4,"indexedChildren"],[309,21,316,19],[309,24,316,22,"children"],[309,32,316,30],[310,4,317,2],[311,4,318,2],[311,10,318,8,"content"],[311,17,318,15],[311,20,318,18,"renderNodes"],[311,31,318,29],[311,32,318,30,"indexedChildren"],[311,47,318,45],[311,49,318,47,"componentsMap"],[311,62,318,60],[311,64,318,62,"translation"],[311,75,318,73],[311,77,318,75,"i18n"],[311,81,318,79],[311,83,318,81,"reactI18nextOptions"],[311,102,318,100],[311,104,318,102,"combinedTOpts"],[311,117,318,115],[311,119,318,117,"shouldUnescape"],[311,133,318,131],[311,134,318,132],[312,4,319,2],[312,10,319,8,"useAsParent"],[312,21,319,19],[312,24,319,22,"parent"],[312,30,319,28],[312,34,319,32,"reactI18nextOptions"],[312,53,319,51],[312,54,319,52,"defaultTransParent"],[312,72,319,70],[313,4,320,2],[313,11,320,9,"useAsParent"],[313,22,320,20],[313,38,320,23],[313,42,320,23,"createElement"],[313,62,320,36],[313,64,320,37,"useAsParent"],[313,75,320,48],[313,77,320,50,"additionalProps"],[313,92,320,65],[313,94,320,67,"content"],[313,101,320,74],[313,102,320,75],[313,105,320,78,"content"],[313,112,320,85],[314,2,321,0],[315,0,321,1],[315,3]],"functionMap":{"names":["<global>","hasChildren","getChildren","hasValidReactChildren","getAsArray","mergeProps","nodesToString","childrenArray.forEach$argument_0","renderNodes","keepArray.map$argument_0","getData","renderInner","pushTranslatedJSX","Children.map$argument_1","mapAST","astNodes.reduce$argument_0","fixComponentProps","Componentized","generateArrayComponents","components.map$argument_0","generateObjectComponents","Object.keys.forEach$argument_0","generateComponents","isComponentsMap","Object.keys.reduce$argument_0","Trans","<anonymous>"],"mappings":"AAA;oBCK;CDK;oBEC;CFI;8BGC,qEH;mBIC,2CJ;mBKC;CLM;6BMC;wBCK;GDwD;CNE;oBQC;iFCG,kBD;kBEG;0BHE;KGG;GFC;sBGO;GHI;4BIC;wCCO;ODU;GJE;iBMC;2BCG;KD8D;GNC;CRM;0BgBC;ECQ;GDE;ChBI;gCkBC,4CC,sDD,ClB;iCoBC;kCCE;GDI;CpBE;2BsBC;CtBY;wBuBC;oCCG,yDD;CvBC;OyBC;gDCuB,MD"}},"type":"js/module"}]}