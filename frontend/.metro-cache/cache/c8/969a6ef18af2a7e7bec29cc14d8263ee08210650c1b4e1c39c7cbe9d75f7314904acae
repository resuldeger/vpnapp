{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"../env/data.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":39,"index":54}}],"key":"bnbbKmgE2t+r+Ul/Q7AWCkgNRRM=","exportNames":["*"]}},{"name":"../core/AxiosError.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":55},"end":{"line":4,"column":47,"index":102}}],"key":"hOxld1Hs3dl/ep5YdqPz+tKeqSo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _data = require(_dependencyMap[1], \"../env/data.js\");\n  var _AxiosError = _interopRequireDefault(require(_dependencyMap[2], \"../core/AxiosError.js\"));\n  const validators = {};\n\n  // eslint-disable-next-line func-names\n  ['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n    validators[type] = function validator(thing) {\n      return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n    };\n  });\n  const deprecatedWarnings = {};\n\n  /**\n   * Transitional option validator\n   *\n   * @param {function|boolean?} validator - set to false if the transitional option has been removed\n   * @param {string?} version - deprecated version / removed since version\n   * @param {string?} message - some message with additional info\n   *\n   * @returns {function}\n   */\n  validators.transitional = function transitional(validator, version, message) {\n    function formatMessage(opt, desc) {\n      return '[Axios v' + _data.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n    }\n\n    // eslint-disable-next-line func-names\n    return (value, opt, opts) => {\n      if (validator === false) {\n        throw new _AxiosError.default(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), _AxiosError.default.ERR_DEPRECATED);\n      }\n      if (version && !deprecatedWarnings[opt]) {\n        deprecatedWarnings[opt] = true;\n        // eslint-disable-next-line no-console\n        console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));\n      }\n      return validator ? validator(value, opt, opts) : true;\n    };\n  };\n  validators.spelling = function spelling(correctSpelling) {\n    return (value, opt) => {\n      // eslint-disable-next-line no-console\n      console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n      return true;\n    };\n  };\n\n  /**\n   * Assert object's properties type\n   *\n   * @param {object} options\n   * @param {object} schema\n   * @param {boolean?} allowUnknown\n   *\n   * @returns {object}\n   */\n\n  function assertOptions(options, schema, allowUnknown) {\n    if (typeof options !== 'object') {\n      throw new _AxiosError.default('options must be an object', _AxiosError.default.ERR_BAD_OPTION_VALUE);\n    }\n    const keys = Object.keys(options);\n    let i = keys.length;\n    while (i-- > 0) {\n      const opt = keys[i];\n      const validator = schema[opt];\n      if (validator) {\n        const value = options[opt];\n        const result = value === undefined || validator(value, opt, options);\n        if (result !== true) {\n          throw new _AxiosError.default('option ' + opt + ' must be ' + result, _AxiosError.default.ERR_BAD_OPTION_VALUE);\n        }\n        continue;\n      }\n      if (allowUnknown !== true) {\n        throw new _AxiosError.default('Unknown option ' + opt, _AxiosError.default.ERR_BAD_OPTION);\n      }\n    }\n  }\n  var _default = exports.default = {\n    assertOptions,\n    validators\n  };\n});","lineCount":92,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_data"],[9,11,3,0],[9,14,3,0,"require"],[9,21,3,0],[9,22,3,0,"_dependencyMap"],[9,36,3,0],[10,2,4,0],[10,6,4,0,"_AxiosError"],[10,17,4,0],[10,20,4,0,"_interopRequireDefault"],[10,42,4,0],[10,43,4,0,"require"],[10,50,4,0],[10,51,4,0,"_dependencyMap"],[10,65,4,0],[11,2,6,0],[11,8,6,6,"validators"],[11,18,6,16],[11,21,6,19],[11,22,6,20],[11,23,6,21],[13,2,8,0],[14,2,9,0],[14,3,9,1],[14,11,9,9],[14,13,9,11],[14,22,9,20],[14,24,9,22],[14,32,9,30],[14,34,9,32],[14,44,9,42],[14,46,9,44],[14,54,9,52],[14,56,9,54],[14,64,9,62],[14,65,9,63],[14,66,9,64,"forEach"],[14,73,9,71],[14,74,9,72],[14,75,9,73,"type"],[14,79,9,77],[14,81,9,79,"i"],[14,82,9,80],[14,87,9,85],[15,4,10,2,"validators"],[15,14,10,12],[15,15,10,13,"type"],[15,19,10,17],[15,20,10,18],[15,23,10,21],[15,32,10,30,"validator"],[15,41,10,39,"validator"],[15,42,10,40,"thing"],[15,47,10,45],[15,49,10,47],[16,6,11,4],[16,13,11,11],[16,20,11,18,"thing"],[16,25,11,23],[16,30,11,28,"type"],[16,34,11,32],[16,38,11,36],[16,41,11,39],[16,45,11,43,"i"],[16,46,11,44],[16,49,11,47],[16,50,11,48],[16,53,11,51],[16,57,11,55],[16,60,11,58],[16,63,11,61],[16,64,11,62],[16,67,11,65,"type"],[16,71,11,69],[17,4,12,2],[17,5,12,3],[18,2,13,0],[18,3,13,1],[18,4,13,2],[19,2,15,0],[19,8,15,6,"deprecatedWarnings"],[19,26,15,24],[19,29,15,27],[19,30,15,28],[19,31,15,29],[21,2,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,2,26,0,"validators"],[30,12,26,10],[30,13,26,11,"transitional"],[30,25,26,23],[30,28,26,26],[30,37,26,35,"transitional"],[30,49,26,47,"transitional"],[30,50,26,48,"validator"],[30,59,26,57],[30,61,26,59,"version"],[30,68,26,66],[30,70,26,68,"message"],[30,77,26,75],[30,79,26,77],[31,4,27,2],[31,13,27,11,"formatMessage"],[31,26,27,24,"formatMessage"],[31,27,27,25,"opt"],[31,30,27,28],[31,32,27,30,"desc"],[31,36,27,34],[31,38,27,36],[32,6,28,4],[32,13,28,11],[32,23,28,21],[32,26,28,24,"VERSION"],[32,39,28,31],[32,42,28,34],[32,68,28,60],[32,71,28,63,"opt"],[32,74,28,66],[32,77,28,69],[32,81,28,73],[32,84,28,76,"desc"],[32,88,28,80],[32,92,28,84,"message"],[32,99,28,91],[32,102,28,94],[32,106,28,98],[32,109,28,101,"message"],[32,116,28,108],[32,119,28,111],[32,121,28,113],[32,122,28,114],[33,4,29,2],[35,4,31,2],[36,4,32,2],[36,11,32,9],[36,12,32,10,"value"],[36,17,32,15],[36,19,32,17,"opt"],[36,22,32,20],[36,24,32,22,"opts"],[36,28,32,26],[36,33,32,31],[37,6,33,4],[37,10,33,8,"validator"],[37,19,33,17],[37,24,33,22],[37,29,33,27],[37,31,33,29],[38,8,34,6],[38,14,34,12],[38,18,34,16,"AxiosError"],[38,37,34,26],[38,38,35,8,"formatMessage"],[38,51,35,21],[38,52,35,22,"opt"],[38,55,35,25],[38,57,35,27],[38,76,35,46],[38,80,35,50,"version"],[38,87,35,57],[38,90,35,60],[38,96,35,66],[38,99,35,69,"version"],[38,106,35,76],[38,109,35,79],[38,111,35,81],[38,112,35,82],[38,113,35,83],[38,115,36,8,"AxiosError"],[38,134,36,18],[38,135,36,19,"ERR_DEPRECATED"],[38,149,37,6],[38,150,37,7],[39,6,38,4],[40,6,40,4],[40,10,40,8,"version"],[40,17,40,15],[40,21,40,19],[40,22,40,20,"deprecatedWarnings"],[40,40,40,38],[40,41,40,39,"opt"],[40,44,40,42],[40,45,40,43],[40,47,40,45],[41,8,41,6,"deprecatedWarnings"],[41,26,41,24],[41,27,41,25,"opt"],[41,30,41,28],[41,31,41,29],[41,34,41,32],[41,38,41,36],[42,8,42,6],[43,8,43,6,"console"],[43,15,43,13],[43,16,43,14,"warn"],[43,20,43,18],[43,21,44,8,"formatMessage"],[43,34,44,21],[43,35,45,10,"opt"],[43,38,45,13],[43,40,46,10],[43,70,46,40],[43,73,46,43,"version"],[43,80,46,50],[43,83,46,53],[43,124,47,8],[43,125,48,6],[43,126,48,7],[44,6,49,4],[45,6,51,4],[45,13,51,11,"validator"],[45,22,51,20],[45,25,51,23,"validator"],[45,34,51,32],[45,35,51,33,"value"],[45,40,51,38],[45,42,51,40,"opt"],[45,45,51,43],[45,47,51,45,"opts"],[45,51,51,49],[45,52,51,50],[45,55,51,53],[45,59,51,57],[46,4,52,2],[46,5,52,3],[47,2,53,0],[47,3,53,1],[48,2,55,0,"validators"],[48,12,55,10],[48,13,55,11,"spelling"],[48,21,55,19],[48,24,55,22],[48,33,55,31,"spelling"],[48,41,55,39,"spelling"],[48,42,55,40,"correctSpelling"],[48,57,55,55],[48,59,55,57],[49,4,56,2],[49,11,56,9],[49,12,56,10,"value"],[49,17,56,15],[49,19,56,17,"opt"],[49,22,56,20],[49,27,56,25],[50,6,57,4],[51,6,58,4,"console"],[51,13,58,11],[51,14,58,12,"warn"],[51,18,58,16],[51,19,58,17],[51,22,58,20,"opt"],[51,25,58,23],[51,56,58,54,"correctSpelling"],[51,71,58,69],[51,73,58,71],[51,74,58,72],[52,6,59,4],[52,13,59,11],[52,17,59,15],[53,4,60,2],[53,5,60,3],[54,2,61,0],[54,3,61,1],[56,2,63,0],[57,0,64,0],[58,0,65,0],[59,0,66,0],[60,0,67,0],[61,0,68,0],[62,0,69,0],[63,0,70,0],[64,0,71,0],[66,2,73,0],[66,11,73,9,"assertOptions"],[66,24,73,22,"assertOptions"],[66,25,73,23,"options"],[66,32,73,30],[66,34,73,32,"schema"],[66,40,73,38],[66,42,73,40,"allowUnknown"],[66,54,73,52],[66,56,73,54],[67,4,74,2],[67,8,74,6],[67,15,74,13,"options"],[67,22,74,20],[67,27,74,25],[67,35,74,33],[67,37,74,35],[68,6,75,4],[68,12,75,10],[68,16,75,14,"AxiosError"],[68,35,75,24],[68,36,75,25],[68,63,75,52],[68,65,75,54,"AxiosError"],[68,84,75,64],[68,85,75,65,"ERR_BAD_OPTION_VALUE"],[68,105,75,85],[68,106,75,86],[69,4,76,2],[70,4,77,2],[70,10,77,8,"keys"],[70,14,77,12],[70,17,77,15,"Object"],[70,23,77,21],[70,24,77,22,"keys"],[70,28,77,26],[70,29,77,27,"options"],[70,36,77,34],[70,37,77,35],[71,4,78,2],[71,8,78,6,"i"],[71,9,78,7],[71,12,78,10,"keys"],[71,16,78,14],[71,17,78,15,"length"],[71,23,78,21],[72,4,79,2],[72,11,79,9,"i"],[72,12,79,10],[72,14,79,12],[72,17,79,15],[72,18,79,16],[72,20,79,18],[73,6,80,4],[73,12,80,10,"opt"],[73,15,80,13],[73,18,80,16,"keys"],[73,22,80,20],[73,23,80,21,"i"],[73,24,80,22],[73,25,80,23],[74,6,81,4],[74,12,81,10,"validator"],[74,21,81,19],[74,24,81,22,"schema"],[74,30,81,28],[74,31,81,29,"opt"],[74,34,81,32],[74,35,81,33],[75,6,82,4],[75,10,82,8,"validator"],[75,19,82,17],[75,21,82,19],[76,8,83,6],[76,14,83,12,"value"],[76,19,83,17],[76,22,83,20,"options"],[76,29,83,27],[76,30,83,28,"opt"],[76,33,83,31],[76,34,83,32],[77,8,84,6],[77,14,84,12,"result"],[77,20,84,18],[77,23,84,21,"value"],[77,28,84,26],[77,33,84,31,"undefined"],[77,42,84,40],[77,46,84,44,"validator"],[77,55,84,53],[77,56,84,54,"value"],[77,61,84,59],[77,63,84,61,"opt"],[77,66,84,64],[77,68,84,66,"options"],[77,75,84,73],[77,76,84,74],[78,8,85,6],[78,12,85,10,"result"],[78,18,85,16],[78,23,85,21],[78,27,85,25],[78,29,85,27],[79,10,86,8],[79,16,86,14],[79,20,86,18,"AxiosError"],[79,39,86,28],[79,40,86,29],[79,49,86,38],[79,52,86,41,"opt"],[79,55,86,44],[79,58,86,47],[79,69,86,58],[79,72,86,61,"result"],[79,78,86,67],[79,80,86,69,"AxiosError"],[79,99,86,79],[79,100,86,80,"ERR_BAD_OPTION_VALUE"],[79,120,86,100],[79,121,86,101],[80,8,87,6],[81,8,88,6],[82,6,89,4],[83,6,90,4],[83,10,90,8,"allowUnknown"],[83,22,90,20],[83,27,90,25],[83,31,90,29],[83,33,90,31],[84,8,91,6],[84,14,91,12],[84,18,91,16,"AxiosError"],[84,37,91,26],[84,38,91,27],[84,55,91,44],[84,58,91,47,"opt"],[84,61,91,50],[84,63,91,52,"AxiosError"],[84,82,91,62],[84,83,91,63,"ERR_BAD_OPTION"],[84,97,91,77],[84,98,91,78],[85,6,92,4],[86,4,93,2],[87,2,94,0],[88,2,94,1],[88,6,94,1,"_default"],[88,14,94,1],[88,17,94,1,"exports"],[88,24,94,1],[88,25,94,1,"default"],[88,32,94,1],[88,35,96,15],[89,4,97,2,"assertOptions"],[89,17,97,15],[90,4,98,2,"validators"],[91,2,99,0],[91,3,99,1],[92,0,99,1],[92,3]],"functionMap":{"names":["<global>","forEach$argument_0","validator","transitional","formatMessage","<anonymous>","spelling","assertOptions"],"mappings":"AAA;wECQ;qBCC;GDE;CDC;0BGa;ECC;GDE;SEG;GFoB;CHC;sBME;SDC;GCI;CNC;AOY;CPqB"}},"type":"js/module"}]}