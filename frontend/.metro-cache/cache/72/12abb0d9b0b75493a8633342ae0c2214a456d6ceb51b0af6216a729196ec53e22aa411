{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"]}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":26,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useVPNStore = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _env2 = require(_dependencyMap[2], \"expo/virtual/env\");\n  var _zustand = require(_dependencyMap[3], \"zustand\");\n  var _axios = _interopRequireDefault(require(_dependencyMap[4], \"axios\"));\n  var API_BASE_URL = _env2.env.EXPO_PUBLIC_BACKEND_URL + '/api';\n  var useVPNStore = exports.useVPNStore = (0, _zustand.create)((set, get) => ({\n    isConnected: false,\n    connectionStatus: 'disconnected',\n    selectedServer: null,\n    servers: [],\n    isLoadingServers: false,\n    connect: () => {\n      var _get = get(),\n        selectedServer = _get.selectedServer;\n      if (!selectedServer) return;\n      set({\n        connectionStatus: 'connecting'\n      });\n\n      // Simulate connection process\n      setTimeout(() => {\n        set({\n          isConnected: true,\n          connectionStatus: 'connected'\n        });\n      }, 2000);\n    },\n    disconnect: () => {\n      set({\n        connectionStatus: 'disconnecting'\n      });\n\n      // Simulate disconnection process\n      setTimeout(() => {\n        set({\n          isConnected: false,\n          connectionStatus: 'disconnected'\n        });\n      }, 1000);\n    },\n    selectServer: server => {\n      set({\n        selectedServer: server\n      });\n    },\n    fetchServers: function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          set({\n            isLoadingServers: true\n          });\n\n          // Try guest endpoint first (no auth required), then fall back to authenticated endpoint\n          var response;\n          try {\n            response = yield _axios.default.get(`${API_BASE_URL}/proxies/guest`);\n          } catch (error) {\n            // If guest endpoint fails, try authenticated endpoint\n            response = yield _axios.default.get(`${API_BASE_URL}/proxies`);\n          }\n          var servers = response.data;\n          set({\n            servers,\n            isLoadingServers: false\n          });\n\n          // Auto-select first server if none selected\n          var _get2 = get(),\n            selectedServer = _get2.selectedServer;\n          if (!selectedServer && servers.length > 0) {\n            set({\n              selectedServer: servers[0]\n            });\n          }\n        } catch (error) {\n          console.error('Failed to fetch servers:', error);\n          set({\n            isLoadingServers: false\n          });\n        }\n      });\n      return function fetchServers() {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  }));\n});","lineCount":93,"map":[[9,2,1,0],[9,6,1,0,"_zustand"],[9,14,1,0],[9,17,1,0,"require"],[9,24,1,0],[9,25,1,0,"_dependencyMap"],[9,39,1,0],[10,2,2,0],[10,6,2,0,"_axios"],[10,12,2,0],[10,15,2,0,"_interopRequireDefault"],[10,37,2,0],[10,38,2,0,"require"],[10,45,2,0],[10,46,2,0,"_dependencyMap"],[10,60,2,0],[11,2,4,0],[11,6,4,6,"API_BASE_URL"],[11,18,4,18],[11,21,4,21,"_env2"],[11,26,4,21],[11,27,4,21,"env"],[11,30,4,21],[11,31,4,21,"EXPO_PUBLIC_BACKEND_URL"],[11,54,4,21],[11,57,4,59],[11,63,4,65],[12,2,35,7],[12,6,35,13,"useVPNStore"],[12,17,35,24],[12,20,35,24,"exports"],[12,27,35,24],[12,28,35,24,"useVPNStore"],[12,39,35,24],[12,42,35,27],[12,46,35,27,"create"],[12,61,35,33],[12,63,35,44],[12,64,35,45,"set"],[12,67,35,48],[12,69,35,50,"get"],[12,72,35,53],[12,78,35,59],[13,4,36,2,"isConnected"],[13,15,36,13],[13,17,36,15],[13,22,36,20],[14,4,37,2,"connectionStatus"],[14,20,37,18],[14,22,37,20],[14,36,37,34],[15,4,38,2,"selectedServer"],[15,18,38,16],[15,20,38,18],[15,24,38,22],[16,4,39,2,"servers"],[16,11,39,9],[16,13,39,11],[16,15,39,13],[17,4,40,2,"isLoadingServers"],[17,20,40,18],[17,22,40,20],[17,27,40,25],[18,4,42,2,"connect"],[18,11,42,9],[18,13,42,11,"connect"],[18,14,42,11],[18,19,42,17],[19,6,43,4],[19,10,43,4,"_get"],[19,14,43,4],[19,17,43,31,"get"],[19,20,43,34],[19,21,43,35],[19,22,43,36],[20,8,43,12,"selectedServer"],[20,22,43,26],[20,25,43,26,"_get"],[20,29,43,26],[20,30,43,12,"selectedServer"],[20,44,43,26],[21,6,44,4],[21,10,44,8],[21,11,44,9,"selectedServer"],[21,25,44,23],[21,27,44,25],[22,6,46,4,"set"],[22,9,46,7],[22,10,46,8],[23,8,46,10,"connectionStatus"],[23,24,46,26],[23,26,46,28],[24,6,46,41],[24,7,46,42],[24,8,46,43],[26,6,48,4],[27,6,49,4,"setTimeout"],[27,16,49,14],[27,17,49,15],[27,23,49,21],[28,8,50,6,"set"],[28,11,50,9],[28,12,50,10],[29,10,51,8,"isConnected"],[29,21,51,19],[29,23,51,21],[29,27,51,25],[30,10,52,8,"connectionStatus"],[30,26,52,24],[30,28,52,26],[31,8,53,6],[31,9,53,7],[31,10,53,8],[32,6,54,4],[32,7,54,5],[32,9,54,7],[32,13,54,11],[32,14,54,12],[33,4,55,2],[33,5,55,3],[34,4,57,2,"disconnect"],[34,14,57,12],[34,16,57,14,"disconnect"],[34,17,57,14],[34,22,57,20],[35,6,58,4,"set"],[35,9,58,7],[35,10,58,8],[36,8,58,10,"connectionStatus"],[36,24,58,26],[36,26,58,28],[37,6,58,44],[37,7,58,45],[37,8,58,46],[39,6,60,4],[40,6,61,4,"setTimeout"],[40,16,61,14],[40,17,61,15],[40,23,61,21],[41,8,62,6,"set"],[41,11,62,9],[41,12,62,10],[42,10,63,8,"isConnected"],[42,21,63,19],[42,23,63,21],[42,28,63,26],[43,10,64,8,"connectionStatus"],[43,26,64,24],[43,28,64,26],[44,8,65,6],[44,9,65,7],[44,10,65,8],[45,6,66,4],[45,7,66,5],[45,9,66,7],[45,13,66,11],[45,14,66,12],[46,4,67,2],[46,5,67,3],[47,4,69,2,"selectServer"],[47,16,69,14],[47,18,69,17,"server"],[47,24,69,36],[47,28,69,41],[48,6,70,4,"set"],[48,9,70,7],[48,10,70,8],[49,8,70,10,"selectedServer"],[49,22,70,24],[49,24,70,26,"server"],[50,6,70,33],[50,7,70,34],[50,8,70,35],[51,4,71,2],[51,5,71,3],[52,4,73,2,"fetchServers"],[52,16,73,14],[53,6,73,14],[53,10,73,14,"_ref"],[53,14,73,14],[53,21,73,14,"_asyncToGenerator2"],[53,39,73,14],[53,40,73,14,"default"],[53,47,73,14],[53,49,73,16],[53,62,73,28],[54,8,74,4],[54,12,74,8],[55,10,75,6,"set"],[55,13,75,9],[55,14,75,10],[56,12,75,12,"isLoadingServers"],[56,28,75,28],[56,30,75,30],[57,10,75,35],[57,11,75,36],[57,12,75,37],[59,10,77,6],[60,10,78,6],[60,14,78,10,"response"],[60,22,78,18],[61,10,79,6],[61,14,79,10],[62,12,80,8,"response"],[62,20,80,16],[62,29,80,25,"axios"],[62,43,80,30],[62,44,80,31,"get"],[62,47,80,34],[62,48,80,35],[62,51,80,38,"API_BASE_URL"],[62,63,80,50],[62,79,80,66],[62,80,80,67],[63,10,81,6],[63,11,81,7],[63,12,81,8],[63,19,81,15,"error"],[63,24,81,20],[63,26,81,22],[64,12,82,8],[65,12,83,8,"response"],[65,20,83,16],[65,29,83,25,"axios"],[65,43,83,30],[65,44,83,31,"get"],[65,47,83,34],[65,48,83,35],[65,51,83,38,"API_BASE_URL"],[65,63,83,50],[65,73,83,60],[65,74,83,61],[66,10,84,6],[67,10,86,6],[67,14,86,12,"servers"],[67,21,86,19],[67,24,86,22,"response"],[67,32,86,30],[67,33,86,31,"data"],[67,37,86,35],[68,10,88,6,"set"],[68,13,88,9],[68,14,88,10],[69,12,89,8,"servers"],[69,19,89,15],[70,12,90,8,"isLoadingServers"],[70,28,90,24],[70,30,90,26],[71,10,91,6],[71,11,91,7],[71,12,91,8],[73,10,93,6],[74,10,94,6],[74,14,94,6,"_get2"],[74,19,94,6],[74,22,94,33,"get"],[74,25,94,36],[74,26,94,37],[74,27,94,38],[75,12,94,14,"selectedServer"],[75,26,94,28],[75,29,94,28,"_get2"],[75,34,94,28],[75,35,94,14,"selectedServer"],[75,49,94,28],[76,10,95,6],[76,14,95,10],[76,15,95,11,"selectedServer"],[76,29,95,25],[76,33,95,29,"servers"],[76,40,95,36],[76,41,95,37,"length"],[76,47,95,43],[76,50,95,46],[76,51,95,47],[76,53,95,49],[77,12,96,8,"set"],[77,15,96,11],[77,16,96,12],[78,14,96,14,"selectedServer"],[78,28,96,28],[78,30,96,30,"servers"],[78,37,96,37],[78,38,96,38],[78,39,96,39],[79,12,96,41],[79,13,96,42],[79,14,96,43],[80,10,97,6],[81,8,98,4],[81,9,98,5],[81,10,98,6],[81,17,98,13,"error"],[81,22,98,18],[81,24,98,20],[82,10,99,6,"console"],[82,17,99,13],[82,18,99,14,"error"],[82,23,99,19],[82,24,99,20],[82,50,99,46],[82,52,99,48,"error"],[82,57,99,53],[82,58,99,54],[83,10,100,6,"set"],[83,13,100,9],[83,14,100,10],[84,12,100,12,"isLoadingServers"],[84,28,100,28],[84,30,100,30],[85,10,100,36],[85,11,100,37],[85,12,100,38],[86,8,101,4],[87,6,102,2],[87,7,102,3],[88,6,102,3],[88,22,73,2,"fetchServers"],[88,34,73,14,"fetchServers"],[88,35,73,14],[89,8,73,14],[89,15,73,14,"_ref"],[89,19,73,14],[89,20,73,14,"apply"],[89,25,73,14],[89,32,73,14,"arguments"],[89,41,73,14],[90,6,73,14],[91,4,73,14],[92,2,103,0],[92,3,103,1],[92,4,103,2],[92,5,103,3],[93,0,103,4],[93,3]],"functionMap":{"names":["<global>","create$argument_0","connect","setTimeout$argument_0","disconnect","selectServer","fetchServers"],"mappings":"AAA;4CCkC;WCO;eCO;KDK;GDC;cGE;eDI;KCK;GHC;gBIE;GJE;gBKE;GL6B;EDC"}},"type":"js/module"}]}